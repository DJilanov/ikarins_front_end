{"version":3,"sources":["webpack:///main.e5a5c345fc4eae1bd939.bundle.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/@agm/core/services/google-maps-api-wrapper.js","webpack:///./src/app/dictionary/dictionary.service.ts","webpack:///./src/app/services/event.emiter.service.ts","webpack:///./~/ng2-webstorage/dist/enums/storage.js","webpack:///./src/app/services/pages.service.ts","webpack:///./src/app/services/pages.data.service.ts","webpack:///./~/@agm/core/services/managers/marker-manager.js","webpack:///./~/@agm/core/services/maps-api-loader/maps-api-loader.js","webpack:///./src/app/config.ts","webpack:///./~/ng2-webstorage/dist/constants/lib.js","webpack:///./~/@agm/core/directives/info-window.js","webpack:///./~/@agm/core/directives/polyline-point.js","webpack:///./~/@agm/core/services/managers/circle-manager.js","webpack:///./~/@agm/core/services/managers/data-layer-manager.js","webpack:///./~/@agm/core/services/managers/info-window-manager.js","webpack:///./~/@agm/core/services/managers/kml-layer-manager.js","webpack:///./~/@agm/core/services/managers/polygon-manager.js","webpack:///./~/@agm/core/services/managers/polyline-manager.js","webpack:///./~/@agm/core/services/maps-api-loader/lazy-maps-api-loader.js","webpack:///./~/@angular/animations/@angular/animations.es5.js","webpack:///./src/app/services/fetcher.service.ts","webpack:///./~/ng2-webstorage/dist/decorators/webStorage.js","webpack:///./~/ng2-webstorage/dist/helpers/keyStorage.js","webpack:///./~/ng2-webstorage/dist/services/webStorage.js","webpack:///./~/@agm/core/directives/circle.js","webpack:///./~/@agm/core/directives/data-layer.js","webpack:///./~/@agm/core/directives/kml-layer.js","webpack:///./~/@agm/core/directives/map.js","webpack:///./~/@agm/core/directives/marker.js","webpack:///./~/@agm/core/directives/polygon.js","webpack:///./~/@agm/core/directives/polyline.js","webpack:///./~/@agm/core/utils/browser-globals.js","webpack:///./src/app/cache/cache.ts","webpack:///./src/app/cache/pages.ts","webpack:///./src/app/components/contacts/contacts.component.ts","webpack:///./src/app/components/details/details.component.ts","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/page/page.component.ts","webpack:///./src/app/components/page_not_found/page_not_found.component.ts","webpack:///./src/app/dictionary/bg.dictionary.ts","webpack:///./src/app/dictionary/en.dictionary.ts","webpack:///./src/app/services/error.handler.service.ts","webpack:///./~/ng2-webstorage/dist/helpers/storageObserver.js","webpack:///./~/ng2-webstorage/dist/helpers/webStorage.js","webpack:///./~/ng2-webstorage/dist/interfaces/config.js","webpack:///./src/app/app.module.ts","webpack:///./~/@agm/core/core.module.js","webpack:///./~/@agm/core/index.js","webpack:///./~/@agm/core/services/maps-api-loader/noop-maps-api-loader.js","webpack:///./~/@angular/animations/@angular/animations/browser.es5.js","webpack:///./~/@angular/material/@angular/material.es5.js","webpack:///./~/@angular/platform-browser/@angular/platform-browser/animations.es5.js","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/basic_components/header/header.component.ts","webpack:///./src/app/basic_components/image/image.component.ts","webpack:///./src/app/basic_components/notification/notification.component.ts","webpack:///./src/app/basic_components/price/price.component.ts","webpack:///./src/app/components/search/search.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/basic_components/header/header.component.css","webpack:///./src/app/basic_components/image/image.component.css","webpack:///./src/app/basic_components/notification/notification.component.css","webpack:///./src/app/basic_components/price/price.component.css","webpack:///./src/app/components/contacts/contacts.component.css","webpack:///./src/app/components/details/details.component.css","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/page/page.component.css","webpack:///./src/app/components/page_not_found/page_not_found.component.css","webpack:///./src/app/components/search/search.component.css","webpack:///./src/app/grid.css","webpack:///./src/app/theme.css","webpack:///./~/hammerjs/hammer.js","webpack:///./~/ng2-webstorage/dist/app.js","webpack:///./~/ng2-webstorage/dist/decorators/localStorage.js","webpack:///./~/ng2-webstorage/dist/decorators/sessionStorage.js","webpack:///./~/ng2-webstorage/dist/helpers/mockStorage.js","webpack:///./~/ng2-webstorage/dist/services/localStorage.js","webpack:///./~/ng2-webstorage/dist/services/sessionStorage.js","webpack:///./~/ngx-rating/index.js","webpack:///./src/app/app.component.html","webpack:///./src/app/basic_components/header/header.component.html","webpack:///./src/app/basic_components/image/image.component.html","webpack:///./src/app/basic_components/notification/notification.component.html","webpack:///./src/app/basic_components/price/price.component.html","webpack:///./src/app/components/contacts/contacts.component.html","webpack:///./src/app/components/details/details.component.html","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/page/page.component.html","webpack:///./src/app/components/page_not_found/page_not_found.component.html","webpack:///./src/app/components/search/search.component.html","webpack:///./~/rxjs/Scheduler.js","webpack:///./~/rxjs/add/observable/forkJoin.js","webpack:///./~/rxjs/add/observable/fromEvent.js","webpack:///./~/rxjs/add/observable/merge.js","webpack:///./~/rxjs/add/observable/of.js","webpack:///./~/rxjs/add/observable/throw.js","webpack:///./~/rxjs/add/operator/auditTime.js","webpack:///./~/rxjs/add/operator/catch.js","webpack:///./~/rxjs/add/operator/do.js","webpack:///./~/rxjs/add/operator/filter.js","webpack:///./~/rxjs/add/operator/finally.js","webpack:///./~/rxjs/add/operator/first.js","webpack:///./~/rxjs/add/operator/share.js","webpack:///./~/rxjs/add/operator/startWith.js","webpack:///./~/rxjs/add/operator/switchMap.js","webpack:///./~/rxjs/observable/ErrorObservable.js","webpack:///./~/rxjs/observable/FromEventObservable.js","webpack:///./~/rxjs/observable/fromEvent.js","webpack:///./~/rxjs/observable/throw.js","webpack:///./~/rxjs/operator/auditTime.js","webpack:///./~/rxjs/operator/concat.js","webpack:///./~/rxjs/operator/do.js","webpack:///./~/rxjs/operator/finally.js","webpack:///./~/rxjs/operator/startWith.js","webpack:///./~/rxjs/operator/switchMap.js","webpack:///./~/rxjs/scheduler/Action.js","webpack:///./~/rxjs/scheduler/AsyncAction.js","webpack:///./~/rxjs/scheduler/AsyncScheduler.js","webpack:///./~/rxjs/scheduler/async.js","webpack:///./src/app/app.component.css?fcd8","webpack:///./src/app/basic_components/header/header.component.css?9d4e","webpack:///./src/app/basic_components/image/image.component.css?05a3","webpack:///./src/app/basic_components/notification/notification.component.css?962a","webpack:///./src/app/basic_components/price/price.component.css?552d","webpack:///./src/app/components/contacts/contacts.component.css?a398","webpack:///./src/app/components/details/details.component.css?c31d","webpack:///./src/app/components/home/home.component.css?7ca9","webpack:///./src/app/components/page/page.component.css?e21a","webpack:///./src/app/components/page_not_found/page_not_found.component.css?dcc3","webpack:///./src/app/components/search/search.component.css?b1ef","webpack:///./src/app/grid.css?8ec6","webpack:///./src/app/theme.css?9316","webpack:///./src/main.ts"],"names":["webpackJsonp","module","exports","list","toString","result","i","this","length","item","push","join","modules","mediaQuery","alreadyImportedModules","id","__webpack_exports__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0__angular_core__","__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__","__WEBPACK_IMPORTED_MODULE_2__maps_api_loader_maps_api_loader__","n","d","GoogleMapsAPIWrapper","_loader","_zone","_this","_map","Promise","resolve","_mapResolver","prototype","createMap","el","mapOptions","load","then","map","google","maps","Map","setMapOptions","options","m","setOptions","createMarker","Marker","createInfoWindow","InfoWindow","createCircle","Circle","createPolyline","getNativeMap","line","Polyline","setMap","createPolygon","polygon","Polygon","containsLocation","latLng","geometry","poly","subscribeToMapEvent","eventName","create","observer","addListener","arg","run","next","setCenter","getZoom","getBounds","setZoom","zoom","getCenter","panTo","fitBounds","panToBounds","triggerMapEvent","event","trigger","decorators","type","ctorParameters","Object","defineProperty","value","core_1","config_1","en_dictionary_1","bg_dictionary_1","Dictionary","en","bg","language","Config","defaultLang","getTexts","text","setLanguage","nextLanguage","index","indexOf","languages","changeLanguage","__decorate","Injectable","__metadata","EnglishDictionary","BulgarianDictionary","EventEmiterService","loggedIn","EventEmitter","formSubmit","dataFetched","formComplete","emitFetchedData","data","emit","emitFormSubmit","formData","emitFormComplete","response","success","STORAGE","PagesService","pages","Array","getPages","setPages","products","PagesDataService","pagesData","getPagesData","setPagesData","__WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__","MarkerManager","_mapsWrapper","_markers","deleteMarker","marker","get","delete","updateMarkerPosition","setPosition","lat","latitude","lng","longitude","updateTitle","setTitle","title","updateLabel","setLabel","label","updateDraggable","setDraggable","draggable","updateIcon","setIcon","iconUrl","updateOpacity","setOpacity","opacity","updateVisible","setVisible","visible","updateZIndex","setZIndex","zIndex","addMarker","markerPromise","position","icon","set","getNativeMarker","createEventObservable","e","MapsAPILoader","enumerable","configurable","__WEBPACK_IMPORTED_MODULE_0__enums_storage__","LIB_KEY","LIB_KEY_SEPARATOR","STORAGE_NAMES","_a","local","session","__WEBPACK_IMPORTED_MODULE_1__services_managers_info_window_manager__","AgmInfoWindow","infoWindowId","_infoWindowManager","_el","isOpen","infoWindowClose","_infoWindowAddedToManager","_id","ngOnInit","content","nativeElement","querySelector","addInfoWindow","_updateOpenState","_registerEventListeners","ngOnChanges","changes","_setInfoWindowOptions","subscribe","open","close","keys","filter","k","_infoWindowOptionsInputs","forEach","currentValue","ngOnDestroy","deleteInfoWindow","args","selector","inputs","outputs","template","AgmPolylinePoint","positionChanged","propDecorators","CircleManager","_apiWrapper","_circles","addCircle","circle","center","clickable","editable","fillColor","fillOpacity","radius","strokeColor","strokeOpacity","strokePosition","strokeWeight","removeCircle","c","getRadius","setEditable","setRadius","listener","remove","DataLayerManager","_wrapper","_layers","addDataLayer","layer","newLayer","dataLayer","Data","style","geoJson","features","addGeoJson","deleteDataLayer","l","updateGeoJson","feature","splice","setDataOptions","setControlPosition","controlPosition","setControls","controls","setDrawingMode","drawingMode","setStyle","__WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__","__WEBPACK_IMPORTED_MODULE_1__angular_core__","__WEBPACK_IMPORTED_MODULE_3__marker_manager__","InfoWindowManager","_markerManager","_infoWindows","infoWindow","iWindow","w","hostMarker","maxWidth","infoWindowPromise","KmlLayerManager","addKmlLayer","KmlLayer","preserveViewport","screenOverlays","suppressInfoWindows","url","deleteKmlLayer","PolygonManager","_polygons","addPolygon","path","polygonPromise","geodesic","paths","updatePolygon","setPaths","setPolygonOptions","deletePolygon","PolylineManager","_polylines","_convertPoints","_getPoints","point","addPolyline","polylinePromise","updatePolylinePoints","setPath","setPolylineOptions","deletePolyline","__WEBPACK_IMPORTED_MODULE_1__utils_browser_globals__","__WEBPACK_IMPORTED_MODULE_2__maps_api_loader__","GoogleMapsScriptProtocol","LAZY_MAPS_API_CONFIG","LazyMapsAPILoader","__extends","extendStatics","setPrototypeOf","__proto__","b","p","hasOwnProperty","__","constructor","_super","config","call","_config","_windowRef","_documentRef","_scriptLoadingPromise","script","getNativeDocument","createElement","async","defer","callbackName","src","_getScriptSrc","reject","getNativeWindow","onerror","error","body","appendChild","protocol","protocolType","HTTPS","AUTO","HTTP","hostAndPath","queryParams","v","apiVersion","callback","key","apiKey","client","clientId","channel","libraries","region","isArray","entry","undefined","name","definitions","animate","timings","styles","sequence","steps","tokens","offset","state","transition","stateChangeExpr","expr","animation","scheduleMicroTask","cb","AnimationBuilder","AnimationFactory","AUTO_STYLE","NoopAnimationPlayer","AnimationGroupPlayer","ɵPRE_STYLE","build","element","_onDoneFns","_onStartFns","_onDestroyFns","_started","_destroyed","_finished","parentPlayer","totalTime","_onFinish","fn","onStart","onDone","onDestroy","hasStarted","init","play","triggerMicrotask","_onStart","pause","restart","finish","destroy","reset","getPosition","_players","doneCount","destroyCount","startCount","total","player","_onDestroy","reduce","time","Math","max","timeAtPosition","min","http_1","FetcherService","http","pagesUrl","Http","WebStorage","webSKey","sType","targetedClass","raw","WebStorageDecorator","__WEBPACK_IMPORTED_MODULE_1__enums_storage__","sKey","__WEBPACK_IMPORTED_MODULE_0__helpers_index__","genKey","retrieve","store","isManagedKey","CUSTOM_LIB_KEY","CUSTOM_LIB_KEY_SEPARATOR","__WEBPACK_IMPORTED_MODULE_0__constants_lib__","KeyStorageHelper","retrieveKeysFromStorage","storage","Error","toLowerCase","setStorageKeyPrefix","setStorageKeySeparator","separator","WebStorageService","clear","clearAll","observe","__WEBPACK_IMPORTED_MODULE_1__services_managers_circle_manager__","AgmCircle","_manager","centerChange","circleClick","circleDblClick","drag","dragEnd","dragStart","mouseDown","mouseMove","mouseOut","mouseOver","mouseUp","radiusChange","rightClick","_circleAddedToManager","_eventSubscriptions","_updateCircleOptionsChanges","optionKeys","_mapOptions","events","eventEmitter","coords","s","unsubscribe","__WEBPACK_IMPORTED_MODULE_1__services_managers_data_layer_manager__","AgmDataLayer","layerId","_addedToManager","_subscriptions","layerClick","_addEventListeners","handler","ev","obj","os","geoJsonChange","dataOptions","_dataOptionsAttributes","__WEBPACK_IMPORTED_MODULE_1__services_managers_kml_layer_manager__","AgmKmlLayer","defaultViewportChange","statusChange","_updatePolygonOptions","_kmlLayerOptions","__WEBPACK_IMPORTED_MODULE_1__services_google_maps_api_wrapper__","__WEBPACK_IMPORTED_MODULE_2__services_managers_circle_manager__","__WEBPACK_IMPORTED_MODULE_3__services_managers_info_window_manager__","__WEBPACK_IMPORTED_MODULE_4__services_managers_marker_manager__","__WEBPACK_IMPORTED_MODULE_5__services_managers_polygon_manager__","__WEBPACK_IMPORTED_MODULE_6__services_managers_polyline_manager__","__WEBPACK_IMPORTED_MODULE_7__services_managers_kml_layer_manager__","__WEBPACK_IMPORTED_MODULE_8__services_managers_data_layer_manager__","AgmMap","_elem","disableDoubleClickZoom","disableDefaultUI","scrollwheel","keyboardShortcuts","zoomControl","usePanning","streetViewControl","scaleControl","mapTypeControl","panControl","rotateControl","fullscreenControl","mapTypeId","clickableIcons","gestureHandling","_observableSubscriptions","mapClick","mapRightClick","mapDblClick","boundsChange","idle","zoomChange","mapReady","container","_initMapInstance","minZoom","maxZoom","backgroundColor","draggableCursor","draggingCursor","zoomControlOptions","streetViewControlOptions","scaleControlOptions","mapTypeControlOptions","panControlOptions","rotateControlOptions","fullscreenControlOptions","_handleMapCenterChange","_handleMapZoomChange","_handleMapMouseEvents","_handleBoundsChange","_handleIdleEvent","_updateMapOptionsChanges","_updatePosition","_mapOptionsAttributes","triggerResize","setTimeout","_fitBounds","newCenter","bounds","z","emitter","providers","host","[class.sebm-google-map-container]","__WEBPACK_IMPORTED_MODULE_1__services_managers_marker_manager__","__WEBPACK_IMPORTED_MODULE_2__info_window__","AgmMarker","markerId","openInfoWindow","markerClick","_markerAddedToManger","ngAfterContentInit","handleInfoWindowUpdate","cs","ds","mover","mout","__WEBPACK_IMPORTED_MODULE_1__services_managers_polygon_manager__","AgmPolygon","_polygonManager","polyClick","polyDblClick","polyDrag","polyDragEnd","polyDragStart","polyMouseDown","polyMouseMove","polyMouseOut","polyMouseOver","polyMouseUp","polyRightClick","_polygonAddedToManager","_init","_polygonOptionsAttributes","__WEBPACK_IMPORTED_MODULE_1__services_managers_polyline_manager__","__WEBPACK_IMPORTED_MODULE_2__polyline_point__","AgmPolyline","polylineId","_polylineManager","lineClick","lineDblClick","lineDrag","lineDragEnd","lineDragStart","lineMouseDown","lineMouseMove","lineMouseOut","lineMouseOver","lineMouseUp","lineRightClick","_polylineAddedToManager","points","_polylineOptionsAttributes","toArray","WindowRef","DocumentRef","BROWSER_GLOBALS_PROVIDERS","window","document","pages_1","Cache","cache","Pages","owner","image","html","link","subCategories","dictionary_service_1","fetcher_service_1","event_emiter_service_1","ContactsComponent","dictionary","fetcherService","eventEmiterService","mapCoordinates","starsCount","Component","pages_service_1","pages_data_service_1","DetailsComponent","pagesService","pagesDataService","onFetchedData","categories","router_1","HomeComponent","router","icons","pageInfo","pagesCounter","buildSrc","Router","PageComponent","routeParams","pageData","page","subPages","pageType","insuranseLink","params","setParams","insurance","getPageData","ActivatedRoute","PageNotFoundComponent","checkForSimilarRouter","currentUrl","split","partsOfUrl","match","partsEquals","routeCounter","fill","chunksCounter","sort","navigate","Input","homePage","services","contactPage","companyAddress","contactPhone1","contactPhone2","contactPhone3","contactPhone4","contactPhone5","contactPhone3viber","contactPhone4viber","contactPhone5viber","ErrorHandlerService","errorEmitter","handleError","err","emitError","__WEBPACK_IMPORTED_MODULE_0__keyStorage__","__WEBPACK_IMPORTED_MODULE_1__storageObserver__","__WEBPACK_IMPORTED_MODULE_2__webStorage__","StorageObserverHelper","oKey","genObserverKey","observers","__WEBPACK_IMPORTED_MODULE_2__keyStorage__","__WEBPACK_IMPORTED_MODULE_3__mockStorage__","__WEBPACK_IMPORTED_MODULE_4__constants_lib__","WebStorageHelper","_b","CACHED","STORAGEAVAILABILITY","getStorage","setItem","JSON","stringify","retrieveFromStorage","parse","getItem","console","warn","refresh","removeItem","isStorageAvailable","getWStorage","localStorage","sessionStorage","isAvailable","WebstorageConfig","prefix","__WEBPACK_IMPORTED_MODULE_0__webStorage__","__WEBPACK_IMPORTED_MODULE_1__localStorage__","__WEBPACK_IMPORTED_MODULE_2__sessionStorage__","material_1","ng2_webstorage_1","core_2","ngx_rating_1","platform_browser_1","animations_1","forms_1","app_routing_1","price_component_1","image_component_1","header_component_1","notification_component_1","app_component_1","home_component_1","page_component_1","search_component_1","details_component_1","contacts_component_1","page_not_found_component_1","cache_1","error_handler_service_1","AppModule","NgModule","imports","routing","HttpModule","FormsModule","RatingModule","BrowserModule","Ng2Webstorage","MaterialModule","ReactiveFormsModule","BrowserAnimationsModule","AgmCoreModule","forRoot","declarations","AppComponent","ImageComponent","PriceComponent","HeaderComponent","NotificationComponent","SearchComponent","bootstrap","appRoutingProviders","coreDirectives","__WEBPACK_IMPORTED_MODULE_1__directives_map__","__WEBPACK_IMPORTED_MODULE_4__directives_marker__","__WEBPACK_IMPORTED_MODULE_3__directives_info_window__","__WEBPACK_IMPORTED_MODULE_2__directives_circle__","__WEBPACK_IMPORTED_MODULE_5__directives_polygon__","__WEBPACK_IMPORTED_MODULE_6__directives_polyline__","__WEBPACK_IMPORTED_MODULE_7__directives_polyline_point__","__WEBPACK_IMPORTED_MODULE_8__directives_kml_layer__","__WEBPACK_IMPORTED_MODULE_9__directives_data_layer__","__WEBPACK_IMPORTED_MODULE_10__services_maps_api_loader_lazy_maps_api_loader__","__WEBPACK_IMPORTED_MODULE_11__services_maps_api_loader_maps_api_loader__","__WEBPACK_IMPORTED_MODULE_12__utils_browser_globals__","lazyMapsAPILoaderConfig","ngModule","concat","provide","useClass","useValue","__WEBPACK_IMPORTED_MODULE_0__directives_map__","__WEBPACK_IMPORTED_MODULE_1__directives_circle__","__WEBPACK_IMPORTED_MODULE_2__directives_info_window__","__WEBPACK_IMPORTED_MODULE_3__directives_kml_layer__","__WEBPACK_IMPORTED_MODULE_4__directives_data_layer__","__WEBPACK_IMPORTED_MODULE_5__directives_marker__","__WEBPACK_IMPORTED_MODULE_6__directives_polygon__","__WEBPACK_IMPORTED_MODULE_7__directives_polyline__","__WEBPACK_IMPORTED_MODULE_8__directives_polyline_point__","__WEBPACK_IMPORTED_MODULE_0__directives__","__WEBPACK_IMPORTED_MODULE_1__services__","__WEBPACK_IMPORTED_MODULE_2__core_module__","__WEBPACK_IMPORTED_MODULE_0__services_google_maps_api_wrapper__","__WEBPACK_IMPORTED_MODULE_2__services_managers_info_window_manager__","__WEBPACK_IMPORTED_MODULE_3__services_managers_marker_manager__","__WEBPACK_IMPORTED_MODULE_4__services_managers_polygon_manager__","__WEBPACK_IMPORTED_MODULE_5__services_managers_polyline_manager__","__WEBPACK_IMPORTED_MODULE_6__services_managers_kml_layer_manager__","__WEBPACK_IMPORTED_MODULE_7__services_managers_data_layer_manager__","__WEBPACK_IMPORTED_MODULE_8__services_maps_api_loader_lazy_maps_api_loader__","__WEBPACK_IMPORTED_MODULE_9__services_maps_api_loader_maps_api_loader__","__WEBPACK_IMPORTED_MODULE_10__services_maps_api_loader_noop_maps_api_loader__","NoOpMapsAPILoader","optimizeGroupPlayer","players","__WEBPACK_IMPORTED_MODULE_1__angular_animations__","normalizeKeyframes","driver","normalizer","keyframes","preStyles","postStyles","errors","normalizedKeyframes","previousOffset","previousKeyframe","kf","isSameOffset","normalizedKeyframe","prop","normalizedProp","normalizedValue","normalizePropertyName","normalizeStyleValue","LINE_START","listenOnPlayer","copyAnimationEvent","phaseName","makeAnimationEvent","triggerName","fromState","toState","getOrSetAsInMap","defaultValue","parseTimelineCommand","command","separatorPos","substring","substr","resolveTimingValue","matches","_convertTimeValueToMS","parseFloat","unit","ONE_SECOND","resolveTiming","allowNegativeValues","parseTimeExpression","exp","duration","regex","delay","easing","delayMatch","floor","easingVal","containsErrors","startIndex","copyObj","destination","normalizeStyles","normalizedStyles","copyStyles","readPrototype","setStyles","camelProp","dashCaseToCamelCase","eraseStyles","normalizeAnimationEntry","validateStyleParams","PARAM_REGEX","varName","interpolateParams","original","str","replace","_","localVal","iteratorToArray","iterator","arr","done","mergeAnimationOptions","source","p0_1","p1_1","param","input","DASH_CASE_REGEXP","_i","arguments","toUpperCase","visitAnimationNode","visitor","node","context","visitTrigger","visitState","visitTransition","visitSequence","visitGroup","visitAnimate","visitKeyframes","visitStyle","visitReference","visitAnimateChild","visitAnimateRef","visitQuery","visitStagger","parseTransitionExpr","transitionValue","expressions","parseInnerTransitionStr","eventStr","parseAnimationAlias","makeLambdaFromStates","isFullAnyStateExpr","ANY_STATE","alias","lhs","rhs","lhsMatch","rhsMatch","buildAnimationAst","metadata","AnimationAstBuilderVisitor","normalizeSelector","hasAmpersand","find","token","SELF_TOKEN","SELF_TOKEN_REGEX","ENTER_TOKEN_REGEX","ENTER_SELECTOR","LEAVE_TOKEN_REGEX","LEAVE_SELECTOR","NG_TRIGGER_SELECTOR","NG_ANIMATING_SELECTOR","normalizeParams","consumeOffset","styleTuple","isObject","constructTimingAst","TimingAst","strValue","some","charAt","DynamicTimingAst","normalizeAnimationOptions","createTimelineInstruction","preStyleProps","postStyleProps","subTimeline","buildAnimationTimelines","rootElement","ast","startingStyles","finalStyles","subInstructions","AnimationTimelineBuilderVisitor","buildKeyframes","roundOffset","decimalPoints","mult","pow","round","flattenStyles","allStyles","allProperties","makeBooleanMap","createTransitionInstruction","isRemovalTransition","fromStyles","toStyles","timelines","queriedElements","oneOrMoreTransitionsMatch","matchFns","currentState","nextState","buildTrigger","AnimationTrigger","createFallbackTransition","states","matchers","SequenceAst","TransitionAst","AnimationTransitionFactory","balanceProperties","key1","key2","deleteOrUnsetInMap","currentValues","normalizeTriggerValue","isElementNode","isTriggerEventValid","cloakElement","oldValue","display","filterNodeClasses","rootElements","cursor","nextCursor","potentialCursorStack","query","justQueried","nextPotentialCursor","pop","parentElement","nextElementSibling","matchesElement","cloakAndComputeStyles","elements","elementPropsMap","defaultStyle","cloakVals","valuesMap","props","computeStyle","REMOVAL_FLAG","NULL_REMOVED_QUERIED_STATE","collectEnterElements","allEnterNodes","addClass","POTENTIAL_ENTER_CLASSNAME","enterNodes","getBodyNode","POTENTIAL_ENTER_SELECTOR","ENTER_CLASSNAME","removeClass","containsClass","className","classList","contains","classes","CLASSES_CACHE_KEY","add","removeNodesAfterAnimationDone","engine","processLeaveNode","_computeStyle","getComputedStyle","supportsWebAnimations","Element","__WEBPACK_IMPORTED_MODULE_0_tslib__","AnimationDriver","AnimationStyleNormalizer","WebAnimationsStyleNormalizer","NoopAnimationDriver","AnimationEngine","WebAnimationsDriver","_contains","elm1","elm2","_matches","_query","multi","proto","fn_1","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","apply","results","querySelectorAll","elm","containsElement","invokeQuery","previousPlayers","NOOP","LEAVE_CLASSNAME","NG_TRIGGER_CLASSNAME","NG_ANIMATING_CLASSNAME","EMPTY_ANIMATION_OPTIONS","Ast","visit","TriggerAst","transitions","queryCount","depCount","StateAst","style$$1","GroupAst","AnimateAst","StyleAst","isEmptyStep","KeyframesAst","ReferenceAst","AnimateChildAst","AnimateRefAst","QueryAst","limit","optional","includeSelf","StaggerAst","visitTiming","RegExp","LEAVE_TOKEN","ENTER_TOKEN","ROOT_SELECTOR","AnimationAstBuilderContext","_resetContextStyleTimingState","currentQuerySelector","collectedStyles","currentTime","def","stateDef_1","furthestTime","step","innerAst","timingAst","currentAnimateTimings","styleMetadata","styleMetadata_1","isEmpty","newStyleData","styleAst","_makeStyleAst","_validateStyleAst","collectedEasing","styleData","styleMap","endTime","startTime","tuple","collectedEntry","updateCollectedStyle","MAX_KEYFRAME_OFFSET","totalKeyframesWithOffsets","offsets","offsetsOutOfOrder","keyframesOutOfRange","offsetVal","generatedOffset","animateDuration","durationUpToThisFrame","parentSelector","currentQuery","originalSelector","currentTransition","ElementInstructionMap","consume","instructions","append","existingInstructions","has","ONE_FRAME_IN_MILLISECONDS","AnimationTimelineContext","currentTimeline","timeline","containsAnimation","tl","allowOnlyTimelineStyles","elementInstructions","innerContext","createSubContext","_visitSubInstructions","transformIntoNewTimeline","previousNode","instruction","instructionTimings","appendInstructionToTimeline","updateOptions","subContextCount","ctx","snapshotCurrentStyles","DEFAULT_NOOP_PREVIOUS_NODE","delayNextStep","applyStylesToKeyframe","innerTimelines","mergeTimelineCollectedStyles","incrementTime","getCurrentStyleProperties","forwardFrame","applyEmptyStep","innerTimeline","forwardTime","elms","currentQueryTotal","sameElementTimeline","currentQueryIndex","parentContext","abs","maxTime","currentStaggerTime","startingTime","_driver","initialTimeline","TimelineBuilder","skipIfExists","newOptions","optionsToUpdate","newParams","paramsToUpdate_1","_copyOptions","oldParams_1","params_1","newTime","target","fork","updatedTimings","builder","SubTimelineBuilder","stretchStartingKeyframe","_elementTimelineStylesLookup","_previousKeyframe","_currentKeyframe","_keyframes","_styleSummary","_pendingStyles","_backFill","_currentEmptyStepKeyframe","_localTimelineStyles","_globalTimelineStyles","_loadKeyframe","size","_updateStyle","val","getFinalKeyframe","properties","details0","details1","Set","finalKeyframes","keyframe","finalKeyframe","preProps","values","postProps","kf0","kf1","_stretchStartingKeyframe","newKeyframes","startingGap","newFirstKeyframe","oldFirstKeyframe","oldOffset","timeAtKeyframe","Animation","errorMessage","_animationAst","buildTimelines","destinationStyles","start","dest","NoopAnimationStyleNormalizer","propertyName","userProvidedProperty","normalizedProperty","strVal","trim","DIMENSIONAL_PROP_MAP","valAndSuffixMatch","_triggerName","_stateStyles","animationOptions","backupStateStyles","currentStateStyles","nextStateStyles","preStyleMap","postStyleMap","queriedElementsList","transitionFactories","fallbackTransition","matchTransition","f","EMPTY_INSTRUCTION_MAP","TimelineAnimationEngine","_normalizer","_animations","_playersById","register","_buildPlayer","autoStylesMap","inst","_getPlayer","listen","baseEvent","EMPTY_PLAYER_ARRAY","NULL_REMOVAL_STATE","namespaceId","setForRemoval","hasAnimation","removedBeforeQueried","StateValue","isObj","absorbOptions","oldParams_2","VOID_VALUE","DEFAULT_STATE_VALUE","DELETED_STATE_VALUE","AnimationTransitionNamespace","hostElement","_engine","_triggers","_queue","_elementListeners","_hostClassName","phase","listeners","triggersWithStates","statesByElement","afterFlush","_getTrigger","defaultToFallback","TransitionAnimationPlayer","playersOnElement","playersByElement","queued","isFallbackTransition","totalQueuedPlayers","index_1","deregister","stateMap","clearElementCache","elementPlayers","_destroyInnerNodes","innerNs","namespacesByHostElement","removeNode","doNotRecurse","childElementCount","triggerStates","players_1","markElementAsRemoved","containsPotentialParentTransition","totalAnimations","currentPlayers","playersByQueriedElement","parent","parentNode","triggers","visitedTriggers_1","elementStates","destroyInnerAnimations","_onRemovalComplete","insertNode","drainQueuedTransitions","microtaskId","destroyed","markedForDestroy","a","d0","d1","elementContainsData","containsData","TransitionAnimationEngine","newHostElements","_namespaceLookup","_namespaceList","_flushFns","_whenQuietFns","collectedEnterElements","collectedLeaveElements","onRemovalComplete","ns","createNamespace","_balanceNamespaceList","collectEnterElement","found","nextNamespace","registerTrigger","_fetchNamespace","afterFlushAnimationsDone","insertBefore","details","_buildInstruction","subTimelines","containerElement","whenRenderingDone","flush","_flushAnimations","quietFns_1","skippedPlayers","skippedPlayersMap","queuedInstructions","allPreStyleElements","allPostStyleElements","bodyNode","allLeaveNodes","leaveNodesWithoutAnimations","stringMap","setVal_1","setVal","enterNodesWithoutAnimations","allPreviousPlayersMap","sortedParentElements","unshift","_beforeAnimationBuild","_getPreviousPlayers","prevPlayer","preStylesMap","postStylesMap","rootPlayers","subPlayers","innerPlayer","_buildAnimation","setRealPlayer","parentHasPriority","parentPlayers","playersForElement","isQueriedElement","toStateValue","queriedElementPlayers","isRemovalAnimation_1","targetNameSpaceId","targetTriggerName","timelineInstruction","realPlayer","getRealPlayer","beforeDestroy","allQueriedPlayers","allConsumedElements","allSubElements","allNewPlayers","_previousPlayers","wrappedPlayer","_player","_containsRealPlayer","_queuedCallbacks","_queueEvent","_triggerCache","_transitionEngine","_timelineEngine","componentId","cacheKey","onInsert","onRemove","setProperty","property","action","eventPhase","WebAnimationsPlayer","_initialized","currentSnapshot","_duration","_delay","previousStyles","_preparePlayerBeforeStart","previousStyleProps","startingKeyframe_1","missingStyleProps_1","self_1","_loop_1","_triggerWebAnimation","_finalKeyframe","addEventListener","_resetDomPlayerState","cancel","playerOptions","previousWebAnimationPlayers","coerceBooleanProperty","enforceStyleRecalculation","getPropertyValue","distanceToFurthestCorner","x","y","rect","distX","left","right","distY","top","bottom","sqrt","SCROLL_DISPATCHER_PROVIDER_FACTORY","parentDispatcher","ngZone","ScrollDispatcher","VIEWPORT_RULER_PROVIDER_FACTORY","parentRuler","scrollDispatcher","ViewportRuler","formatCssUnit","OVERLAY_CONTAINER_PROVIDER_FACTORY","parentContainer","OverlayContainer","hasGeometry","offsetWidth","offsetHeight","getClientRects","isNativeFormElement","nodeName","isHiddenInput","isInputElement","isAnchorWithHref","isAnchorElement","hasAttribute","hasValidTabIndex","tabIndex","getAttribute","isNaN","parseInt","getTabIndexValue","isPotentiallyTabbableIOS","inputType","isPotentiallyFocusable","getWindow","ownerDocument","defaultView","LIVE_ANNOUNCER_PROVIDER_FACTORY","liveElement","LiveAnnouncer","getSupportedInputTypes","supportedInputTypes","featureTestInput_1","setAttribute","isFakeMousedownFromScreenReader","buttons","UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY","UniqueSelectionDispatcher","FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY","FocusOriginMonitor","applyCssTransform","transformValue","transform","webkitTransform","coerceNumberProperty","fallbackValue","Number","clampValue","coerceToString","coerceToNumber","calc","normalizeUnits","cloneSvg","svg","cloneNode","ICON_REGISTRY_PROVIDER_FACTORY","parentRegistry","sanitizer","MdIconRegistry","clamp","polarToCartesian","pathRadius","angleInDegrees","angleInRadians","DEGREE_IN_RADIANS","cos","sin","linearEase","startValue","changeInValue","materialEase","timeCubed","timeQuad","getSvgArc","rotation","largeArcFlag","startPoint","startAngle","MAX_ANGLE","endAngle","end","arcSweep","clamp$1","extendObject","sources","TypeError","sources_1","_applyConfigDefaults","MdSnackBarConfig","_applyConfigDefaults$1","MdDialogConfig","__WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__","__WEBPACK_IMPORTED_MODULE_2__angular_common__","__WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__","__WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__","__WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_fromEvent__","__WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_merge__","__WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_auditTime__","__WEBPACK_IMPORTED_MODULE_8__angular_forms__","__WEBPACK_IMPORTED_MODULE_9__angular_animations__","__WEBPACK_IMPORTED_MODULE_10_rxjs_add_operator_startWith__","__WEBPACK_IMPORTED_MODULE_11_rxjs_add_operator_first__","__WEBPACK_IMPORTED_MODULE_12__angular_http__","__WEBPACK_IMPORTED_MODULE_13_rxjs_add_observable_forkJoin__","__WEBPACK_IMPORTED_MODULE_14_rxjs_add_observable_of__","__WEBPACK_IMPORTED_MODULE_15_rxjs_add_operator_map__","__WEBPACK_IMPORTED_MODULE_16_rxjs_add_operator_filter__","__WEBPACK_IMPORTED_MODULE_17_rxjs_add_operator_do__","__WEBPACK_IMPORTED_MODULE_18_rxjs_add_operator_share__","__WEBPACK_IMPORTED_MODULE_19_rxjs_add_operator_finally__","__WEBPACK_IMPORTED_MODULE_20_rxjs_add_operator_catch__","__WEBPACK_IMPORTED_MODULE_21_rxjs_add_observable_throw__","__WEBPACK_IMPORTED_MODULE_22_rxjs_add_operator_switchMap__","Dir","RtlModule","ObserveContentModule","ObserveContent","MdOptionModule","MdOption","Portal","BasePortalHost","ComponentPortal","TemplatePortal","PortalHostDirective","TemplatePortalDirective","PortalModule","DomPortalHost","Overlay","OVERLAY_PROVIDERS","FullscreenOverlayContainer","OverlayRef","OverlayState","ConnectedOverlayDirective","OverlayOrigin","OverlayModule","GestureConfig","LIVE_ANNOUNCER_ELEMENT_TOKEN","LIVE_ANNOUNCER_PROVIDER","InteractivityChecker","A11yModule","UNIQUE_SELECTION_DISPATCHER_PROVIDER","MdLineModule","MdLine","MdLineSetter","MdError","CompatibilityModule","NoConflictStyleCompatibilityMode","MdCoreModule","PlatformModule","Platform","GlobalPositionStrategy","ConnectedPositionStrategy","ConnectionPositionPair","ScrollableViewProperties","ConnectedOverlayPositionChange","MdRipple","MD_RIPPLE_GLOBAL_OPTIONS","RippleRef","RippleState","RIPPLE_FADE_IN_DURATION","RIPPLE_FADE_OUT_DURATION","MdRippleModule","SelectionModel","SelectionChange","FocusTrap","FocusTrapFactory","FocusTrapDeprecatedDirective","FocusTrapDirective","StyleModule","TOUCH_BUFFER_MS","CdkMonitorFocus","FOCUS_ORIGIN_MONITOR_PROVIDER","UP_ARROW","DOWN_ARROW","RIGHT_ARROW","LEFT_ARROW","PAGE_UP","PAGE_DOWN","HOME","END","ENTER","SPACE","TAB","ESCAPE","BACKSPACE","DELETE","MATERIAL_COMPATIBILITY_MODE","MAT_ELEMENTS_SELECTOR","MD_ELEMENTS_SELECTOR","MatPrefixRejector","MdPrefixRejector","AnimationCurves","AnimationDurations","MdSelectionModule","MdPseudoCheckbox","MaterialRootModule","MdAutocompleteModule","MdAutocomplete","AUTOCOMPLETE_OPTION_HEIGHT","AUTOCOMPLETE_PANEL_HEIGHT","MD_AUTOCOMPLETE_VALUE_ACCESSOR","MdAutocompleteTrigger","MdButtonModule","MdButtonCssMatStyler","MdRaisedButtonCssMatStyler","MdIconButtonCssMatStyler","MdFabCssMatStyler","MdMiniFabCssMatStyler","MdButton","MdAnchor","MdButtonToggleModule","MD_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR","MdButtonToggleChange","MdButtonToggleGroup","MdButtonToggleGroupMultiple","MdButtonToggle","MdCardModule","MdCardContent","MdCardTitle","MdCardSubtitle","MdCardActions","MdCardFooter","MdCardSmImage","MdCardMdImage","MdCardLgImage","MdCardImage","MdCardXlImage","MdCardAvatar","MdCard","MdCardHeader","MdCardTitleGroup","MdChipsModule","MdChipList","MdChip","MdCheckboxModule","MD_CHECKBOX_CONTROL_VALUE_ACCESSOR","TransitionCheckState","MdCheckboxChange","MdCheckbox","MdDialogModule","MD_DIALOG_DATA","MdDialog","MdDialogContainer","MdDialogClose","MdDialogTitle","MdDialogContent","MdDialogActions","MdDialogRef","MdGridListModule","MdGridList","MdIconModule","MdIconInvalidNameError","MdIcon","ICON_REGISTRY_PROVIDER","MdInputModule","MdTextareaAutosize","MdPlaceholder","MdHint","MdErrorDirective","MdPrefix","MdSuffix","MdInputDirective","MdInputContainer","MdInputContainerPlaceholderConflictError","MdInputContainerUnsupportedTypeError","MdInputContainerDuplicatedHintError","MdInputContainerMissingMdInputError","MdListModule","MdListDivider","LIST_TYPE_TOKEN","MdList","MdListCssMatStyler","MdNavListCssMatStyler","MdNavListTokenSetter","MdDividerCssMatStyler","MdListAvatarCssMatStyler","MdListIconCssMatStyler","MdListSubheaderCssMatStyler","MdListItem","MdMenuModule","fadeInItems","transformMenu","MdMenu","MdMenuItem","MdMenuTrigger","MdProgressBarModule","MdProgressBar","MdProgressSpinnerModule","MdProgressSpinnerCssMatStyler","MdProgressSpinner","MdSpinner","MdRadioModule","MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","MdRadioChange","MdRadioGroup","MdRadioButton","MdSelectModule","fadeInContent","transformPanel","transformPlaceholder","SELECT_OPTION_HEIGHT","SELECT_PANEL_MAX_HEIGHT","SELECT_MAX_OPTIONS_DISPLAYED","SELECT_TRIGGER_HEIGHT","SELECT_OPTION_HEIGHT_ADJUSTMENT","SELECT_PANEL_PADDING_X","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_PADDING_Y","SELECT_PANEL_VIEWPORT_PADDING","MdSelectChange","MdSelect","MdSidenavModule","MdDuplicatedSidenavError","MdSidenavToggleResult","MdSidenav","MdSidenavContainer","MdSliderModule","MD_SLIDER_VALUE_ACCESSOR","MdSliderChange","MdSlider","SliderRenderer","MdSlideToggleModule","MD_SLIDE_TOGGLE_VALUE_ACCESSOR","MdSlideToggleChange","MdSlideToggle","MdSnackBarModule","MdSnackBar","SHOW_ANIMATION","HIDE_ANIMATION","MdSnackBarContainer","MdSnackBarRef","SimpleSnackBar","MdTabsModule","MdInkBar","MdTabBody","MdTabHeader","MdTabLabelWrapper","MdTab","MdTabLabel","MdTabChangeEvent","MdTabGroup","MdTabNavBar","MdTabLink","MdTabLinkRipple","MdToolbarModule","MdToolbarRow","MdToolbar","MdTooltipModule","TOUCHEND_HIDE_DELAY","SCROLL_THROTTLE_MS","MdTooltip","TooltipComponent","OVERLAY_CONTAINER_PROVIDER","OverlayPositionBuilder","VIEWPORT_RULER_PROVIDER","SCROLL_DISPATCHER_PROVIDER","Scrollable","RippleRenderer","MdGridAvatarCssMatStyler","MdGridTile","MdGridTileFooterCssMatStyler","MdGridTileHeaderCssMatStyler","MdGridTileText","hasDoneGlobalChecks","isCompatibilityMode","_document","_checkDoctype","_checkTheme","doctype","testElement","removeChild","[class.mat-line]","_lines","_renderer","_element","_setLineClass","count","_resetClasses","_setClass","bool","setElementClass","_dir","dirChange","old","dir","exportAs","_elementRef","_observer","MutationObserver","mutations","characterData","childList","subtree","disconnect","FADING_IN","VISIBLE","FADING_OUT","HIDDEN","fadeOut","fadeOutRipple","_ngZone","_ruler","_isMousedown","_triggerEvents","_activeRipples","rippleConfig","rippleDisabled","_containerElement","onMousedown","bind","onMouseup","onMouseLeave","setTriggerElement","fadeInRipple","pageX","pageY","containerRect","getBoundingClientRect","centered","width","height","scrollPosition","getViewportScrollPosition","speedFactor","offsetX","offsetY","ripple","color","transitionDuration","rippleRef","runTimeoutOutsideZone","persistent","rippleEl","fadeOutAll","_triggerElement","removeEventListener","runOutsideAngular","DEFAULT_SCROLL_TIME","_scrolled","_globalSubscription","_scrolledCount","scrollableReferences","scrollable","scrollSubscription","elementScrolled","_notify","scrolled","auditTimeInMs","observable","asObservable","auditTime","merge","fromEvent","subscription","getScrollContainers","elementRef","scrollingContainers","scrollableContainsElement","scrollableElement","getElementRef","deps","useFactory","_cacheViewportGeometry","getViewportRect","documentRect","_documentRect","innerHeight","innerWidth","scrollTop","scrollY","scrollLeft","scrollX","documentElement","ruler","globalOptions","_rippleRenderer","_globalOptions","disabled","launch","baseSpeedFactor","[class.mat-ripple]","[class.mat-ripple-unbounded]","unbounded","_color","encapsulation","None","[class.mat-pseudo-checkbox]","[class.mat-pseudo-checkbox-indeterminate]","[class.mat-pseudo-checkbox-checked]","[class.mat-pseudo-checkbox-disabled]","_uniqueIdCounter","MdOptionSelectionChange","isUserInput","_isCompatibilityMode","_selected","_active","_disabled","multiple","onSelectionChange","_getHostElement","textContent","select","_emitSelectionChangeEvent","deselect","focus","invokeElementMethod","setActiveStyles","setInactiveStyles","_handleKeydown","keyCode","_selectViaInteraction","_getTabIndex","role","[attr.tabindex]","[class.mat-selected]","[class.mat-option-multiple]","[class.mat-active]","[id]","[attr.aria-selected]","[attr.aria-disabled]","[class.mat-option-disabled]","(click)","(keydown)","[class.mat-option]","message","NullPortalError","PortalAlreadyAttachedError","PortalHostAlreadyDisposedError","UnknownPortalTypeError","NullPortalHostError","NoPortalAttachedError","attach","hasAttached","_attachedHost","detach","setAttachedHost","component","viewContainerRef","injector","locals","templateRef","_isDisposed","_attachedPortal","portal","attachComponentPortal","attachTemplatePortal","_invokeDisposeFn","dispose","setDisposeFn","_disposeFn","_componentFactoryResolver","_viewContainerRef","_portal","componentFactory","resolveComponentFactory","ref","createComponent","parentInjector","createEmbeddedView","_deprecatedPortal","hasBackdrop","backdropClass","direction","_hostDomElement","_appRef","_defaultInjector","componentRef","attachView","hostView","detachView","_getComponentRootNode","viewContainer","viewRef","rootNodes","rootNode","_portalHost","_pane","_state","_backdropElement","_backdropClick","attachResult","_updateStackingOrder","updateSize","updateDirection","updatePosition","_togglePointerEvents","_attachBackdrop","detachBackdrop","positionStrategy","backdropClick","getState","minWidth","minHeight","enablePointer","pointerEvents","requestAnimationFrame","nextSibling","backdropToDetach","finishDetach_1","origin","overlay","originX","originY","overlayX","overlayY","connectionPair","scrollableViewProperties","_connectedTo","_originPos","_overlayPos","_viewportRuler","_offsetX","_offsetY","scrollables","_preferredPositions","_onPositionChange","_origin","withFallbackPosition","originRect","overlayRect","viewportRect","fallbackPoint","pos","originPoint","_getOriginConnectionPoint","overlayPoint","_getOverlayPoint","fitsInViewport","_setElementPosition","_lastConnectedPosition","getScrollableViewProperties","positionChange","visibleArea","recalculateLastPosition","lastPosition","withScrollableContainers","originPos","overlayPos","withDirection","withOffsetX","withOffsetY","_getStartX","_isRtl","_getEndX","originStartX","originEndX","overlayStartX","overlayStartY","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","originBounds","_getElementBounds","overlayBounds","scrollContainerBounds","isOriginClipped","isElementClipped","isOriginOutsideView","isElementOutsideView","isOverlayClipped","isOverlayOutsideView","elementBounds","containersBounds","containerBounds","outsideAbove","outsideBelow","outsideLeft","outsideRight","clippedAbove","clippedBelow","clippedLeft","clippedRight","boundingClientRect","overflows","currentOverflow","_cssPosition","_topOffset","_bottomOffset","_leftOffset","_rightOffset","_alignItems","_justifyContent","_width","_height","centerHorizontally","centerVertically","parentStyles","marginTop","marginLeft","marginBottom","marginRight","justifyContent","alignItems","global","connectedTo","_themeClass","getContainerElement","_createContainer","nextUniqueId","defaultState","_overlayContainer","_positionBuilder","_injector","state$$1","_createOverlayRef","_createPaneElement","pane","_createPortalHost","_scroll","_elementScrolled","_scrollListener","defaultPositionList","_overlay","_open","_hasBackdrop","_templatePortal","_position","_attachOverlay","_detachOverlay","_overlayRef","_destroyOverlay","_createOverlay","positions","_buildConfig","overlayConfig","_createPositionStrategy","strategy","_handlePositionChanges","_positionSubscription","onPositionChange","_backdropSubscription","hasV8BreakIterator","Intl","v8BreakIterator","EDGE","test","navigator","userAgent","TRIDENT","BLINK","chrome","CSS","WEBKIT","IOS","MSStream","FIREFOX","ANDROID","_platform","isDisabled","isVisible","visibility","isTabbable","frameElement","frameType","tabIndexValue","isFocusable","_checker","deferAnchors","_enabled","attachAnchors","_startAnchor","_endAnchor","_createAnchor","focusLastTabbableElement","focusFirstTabbableElement","focusFirstTabbableElementWhenReady","onMicrotaskEmpty","first","focusLastTabbableElementWhenReady","redirectToElement","_getFirstTabbableElement","focusTargets","_getLastTabbableElement","root","children","childNodes","tabbableChild","nodeType","Node","ELEMENT_NODE","anchor","_focusTrapFactory","focusTrap","enabled","elementToken","_liveElement","_createLiveElement","announce","politeness","_removeLiveElement","liveEl","_adjustParentForFullscreenChange","_addFullscreenChangeListener","getFullscreenElement","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","_hammer","Hammer","buildHammer","mc","pan","Pan","swipe","Swipe","press","Press","slide","_createRecognizer","threshold","longpress","recognizeWith","base","inheritances","recognizer","_isMulti","initiallySelectedValues","_emitChanges","_selection","_deselectedToEmit","_selectedToEmit","onChange","_markSelected","from","_emitChangeEvent","_unmarkSelected","toggle","isSelected","_unmarkAll","hasValue","predicate","selected","eventData","added","removed","_listeners","notify","_windowFocused","_elementInfo","WeakMap","_registerDocumentEvents","monitor","renderer","checkChildren","info_1","subject","info","unlisten","focusListener","_onFocus","blurListener","_onBlur","stopMonitoring","elementInfo","complete","_setClasses","focusVia","_setOriginForCurrentEventQueue","_lastTouchTarget","_touchTimeout","clearTimeout","_wasCausedByTouch","focusTarget","_lastFocusOrigin","relatedTarget","_focusOriginMonitor","cdkFocusChange","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","COMPLEX","ENTERING","EXITING","useExisting","_uniqueIdCounter$1","_value","_name","_vertical","_isInitialized","_controlValueAccessorChangeFn","onTouched","_buttonToggles","_change","ngAfterViewInit","_updateButtonToggleNames","newValue","_updateSelectedButtonToggleFromValue","checked","isAlreadySelected","matchingButtonToggle","buttonToggle","writeValue","registerOnChange","registerOnTouched","setDisabledState","[class.mat-button-toggle-group]","[class.mat-button-toggle-vertical]","vertical","change","toggleGroup","toggleGroupMultiple","_buttonToggleDispatcher","_checked","_isSingleSelector","buttonToggleGroup","buttonToggleGroupMultiple","_type","newCheckedState","_inputElement","_toggle","_onInputChange","stopPropagation","_onInputClick","[class.mat-button-toggle]","[class.mat-button]","[class.mat-raised-button]","[class.mat-icon-button]","[class.mat-fab]","[class.mat-mini-fab]","_isRoundButton","_hasAttributeWithPrefix","_isIconButton","_disableRipple","_updateColor","newColor","_setElementColor","isAdd","_isRippleDisabled","disableRipple","unprefixedAttributeNames","suffix","[disabled]","changeDetection","OnPush","focusOriginMonitor","_haltDisabledEvents","preventDefault","stopImmediatePropagation","[attr.disabled]","nextId","Init","Checked","Unchecked","Indeterminate","_changeDetectorRef","ariaLabel","ariaLabelledby","labelPosition","indeterminateChange","_currentAnimationClass","_currentCheckState","_indeterminate","_required","_focusedSubscription","focusOrigin","_focusedRipple","_ripple","markForCheck","indeterminate","changed","_transitionCheckState","newState","oldState","_getAnimationClassForCheckStateTransition","_onInputBlur","_removeFocusedRipple","_onInteractionEvent","animSuffix","[class.mat-checkbox]","[class.mat-checkbox-indeterminate]","[class.mat-checkbox-checked]","[class.mat-checkbox-disabled]","[class.mat-checkbox-label-before]","required","align","_uniqueIdCounter$2","_radios","_updateRadioButtonNames","_updateSelectedRadioFromValue","_checkSelectedRadioButton","_touch","radio","[class.mat-radio-group]","radioGroup","_radioDispatcher","_labelPosition","_focusOriginMonitorSubscription","_focusedRippleRef","groupValueChanged","[class.mat-radio-button]","[class.mat-radio-checked]","[class.mat-radio-disabled]","[attr.id]","ListKeyManager","_items","_activeItemIndex","_tabOut","_wrap","withWrap","setActiveItem","_activeItem","onKeydown","setNextItemActive","setPreviousItemActive","setFirstItemActive","setLastItemActive","_setActiveItemByIndex","_setActiveItemByDelta","updateActiveItemIndex","delta","items","_setActiveInWrapMode","_setActiveInDefaultMode","fallbackDelta","FocusKeyManager","activeItem","MdSelectDynamicMultipleError","MdSelectNonArrayValueError","_control","_panelOpen","_scrollTop","_multiple","_placeholderState","_onChange","_onTouched","_optionIds","_transformOrigin","_panelDoneAnimating","_positions","_floatPlaceholder","onOpen","onClose","valueAccessor","_tabIndex","_placeholder","_triggerWidth","_getWidth","_selectionModel","option","_initKeyManager","_changeSubscription","startWith","_resetOptions","_setSelectionByValue","_dropSubscriptions","_tabSubscription","panelOpen","_calculateOverlayPosition","_floatPlaceholderState","_focusHost","selectedOptions","viewValue","reverse","_getTriggerRect","_onPanelDone","_focusCorrectOption","_onFadeInDone","_setScrollTop","overlayDir","overlayRef","overlayElement","_clearSelection","_selectValue","_sortValues","_setValueWidth","correspondingOption","skip","_keyManager","tabOut","_listenToOptions","_setOptionIds","_setOptionMultiple","_optionSubscription","optionSelectionChanges","_onSelect","wasSelected","_propagateChanges","valueToEmit","_selectedValueWidth","_getOptionIndex","current","panelHeight","scrollContainerHeight","maxScroll","selectedIndex","scrollBuffer","_calculateOverlayScroll","_calculateOverlayOffset","_checkOverlayWithinViewport","_getPlaceholderAnimationState","floatPlaceholder","_getPlaceholderVisibility","placeholder","optionOffsetFromPanelTop","firstDisplayedIndex","selectedDisplayIndex","triggerRect","topSpaceAvailable","bottomSpaceAvailable","panelHeightTop","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","[attr.aria-label]","[attr.aria-labelledby]","[attr.aria-required]","[attr.aria-invalid]","[attr.aria-owns]","[class.mat-select-disabled]","[class.mat-select]","(blur)","animations","nextId$1","_uniqueId","_slideRenderer","SlideToggleRenderer","_onInputFocusChange","_onChangeEvent","dragging","_setMousedown","_focusRipple","_onDragStart","startThumbDrag","_onDrag","updateThumbPosition","deltaX","_onDragEnd","_previousChecked","dragPercentage","stopThumbDrag","[class.mat-slide-toggle]","[class.mat-checked]","[class.mat-disabled]","[class.mat-slide-toggle-label-before]","(mousedown)","_thumbEl","_thumbBarEl","_thumbBarWidth","clientWidth","distance","_getDragPercentage","dragX","percentage","MIN_AUTO_TICK_SEPARATION","DISABLED_THUMB_GAP","MIN_VALUE_NONACTIVE_THUMB_GAP","MIN_VALUE_ACTIVE_THUMB_GAP","_invert","_max","_min","_step","_thumbLabel","_tickInterval","_percent","_isSliding","_isActive","_tickIntervalPercent","_sliderDimensions","_lastChangeValue","_lastInputValue","_calculatePercentage","_roundLabelTo","tickInterval","toFixed","_clamp","invert","percent","_isMinValue","thumbLabel","axis","_invertMouseCoords","_thumbGap","_direction","tickSize","backgroundSize","sign","rotate","_invertAxis","_onMouseenter","getSliderDimensions","_updateTickIntervalPercent","_onClick","addFocus","_updateValueFromPosition","clientX","clientY","_emitInputEvent","_emitValueIfChanged","_onSlide","_onSlideStart","_onSlideEnd","_onKeydown","_increment","_onKeyup","numSteps","posComponent","exactValue","_calculateValue","closestValue","_createChangeEvent","trackSize","pixelsPerStep","stepsPerTick","ceil","pixelsPerTick","[class.mat-slider]","(focus)","(keyup)","(mouseenter)","(slide)","(slideend)","(slidestart)","tabindex","[attr.aria-valuemax]","[attr.aria-valuemin]","[attr.aria-valuenow]","[class.mat-primary]","[class.mat-accent]","[class.mat-warn]","[class.mat-slider-disabled]","[class.mat-slider-has-ticks]","[class.mat-slider-horizontal]","[class.mat-slider-axis-inverted]","[class.mat-slider-sliding]","[class.mat-slider-thumb-label-showing]","[class.mat-slider-vertical]","[class.mat-slider-min-value]","[class.mat-slider-hide-last-tick]","_thumbLabelDeprecated","_tickIntervalDeprecated","_sliderElement","animationFinished","_align","mode","_disableClose","_opened","onOpenStart","onCloseStart","onAlignChanged","_toggleAnimationPromise","_resolveToggleAnimationPromise","_elementFocusedBeforeSidenavWasOpened","activeElement","isFocusTrapEnabled","_focusTrap","HTMLElement","opened","handleKeydown","disableClose","_onTransitionEnd","transitionEvent","endsWith","[class.mat-sidenav]","(transitionend)","[attr.align]","[class.mat-sidenav-closed]","[class.mat-sidenav-closing]","[class.mat-sidenav-end]","[class.mat-sidenav-opened]","[class.mat-sidenav-opening]","[class.mat-sidenav-over]","[class.mat-sidenav-push]","[class.mat-sidenav-side]","_enableTransitions","_validateDrawers","_start","_end","_sidenavs","sidenav","_watchSidenavToggle","_watchSidenavAlign","_setContainerClass","_right","_left","_onBackdropClicked","_closeModalSidenav","_isShowingBackdrop","_isSidenavOpen","side","_getSidenavEffectiveWidth","_getMarginLeft","_getMarginRight","_getPositionLeft","_getPositionRight","_getPositionOffset","_getStyles","[class.mat-sidenav-container]","[class.mat-sidenav-transition]","NAV_LIST_TYPE","[class.mat-list]","[class.mat-nav-list]","[class.mat-divider]","[class.mat-list-avatar]","[class.mat-list-icon]","[class.mat-subheader]","_listType","_hasFocus","avatar","_lineSetter","isRippleEnabled","_handleFocus","_handleBlur","[class.mat-list-item]","_hasAvatar","_rowspan","_colspan","_setStyle","setElementStyle","[class.mat-grid-tile]","rowspan","colspan","[class.mat-grid-avatar]","[class.mat-grid-tile-header]","[class.mat-grid-tile-footer]","MdGridListColsError","MdGridTileTooWideError","cols","listLength","MdGridListBadRatioError","TileCoordinator","numColumns","tiles","columnIndex","rowIndex","tracker","tile","_trackTile","lastRowMax","rowCount","gapStartIndex","_findMatchingGap","_markTilePosition","TilePosition","tileCols","gapEndIndex","_nextRow","_findGapEndIndex","row","col","TileStyler","_rows","gutterSize","_gutterSize","_cols","getBaseTileSize","sizePercent","gutterFraction","getTilePosition","baseSize","getTileSize","span","colIndex","percentWidthPerTile","gutterWidthFractionPerTile","setColStyles","setRowStyles","percentWidth","gutterWidth","baseTileWidth","getGutterSpan","getTileSpan","tileHeight","getComputedHeight","FixedTileStyler","fixedRowHeight","RatioTileStyler","_parseRatio","percentHeightPerTile","rowHeightRatio","baseTileHeight","ratioParts","FitTileStyler","gutterHeightPerTile","MD_FIT_MODE","_gutter","_rowHeight","_setTileStyler","_checkCols","_checkRowHeight","ngAfterContentChecked","_layoutTiles","_tileStyler","_tiles","_setListStyle","[class.mat-grid-list]","rowHeight","[class.mat-card-content]","[class.mat-card-title]","[class.mat-card-subtitle]","[class.mat-card-actions]","[class.mat-card-footer]","[class.mat-card-sm-image]","[class.mat-card-md-image]","class.mat-card-lg-image","[class.mat-card-image]","[class.mat-card-xl-image]","[class.mat-card-avatar]","[class.mat-card]","[class.mat-card-header]","[class.mat-card-title-group]","onFocus","_addDefaultCSSClass","chip","String","toggleSelected","_handleClick","[class.mat-chip]","[class.mat-chip-selected]","_subscribed","_selectable","chips","_subscribeChips","_keydown","selectable","_toggleSelectOnFocusedChip","focusedIndex","activeItemIndex","_isValidIndex","focusedChip","_addChip","chipIndex","[class.mat-chip-list]","queries","MdIconNameNotFoundError","iconName","MdIconSvgTagNotFoundError","SvgIconConfig","svgElement","iconKey","namespace","_http","_sanitizer","_svgIconConfigs","_iconSetConfigs","_cachedIconsByUrl","_inProgressUrlFetches","_fontCssClassesByAlias","_defaultFontSetClass","addSvgIcon","addSvgIconInNamespace","addSvgIconSet","addSvgIconSetInNamespace","registerFontClassAlias","classNameForFontAlias","setDefaultFontSetClass","getDefaultFontSetClass","getSvgIconFromUrl","safeUrl","sanitize","RESOURCE_URL","of","_loadSvgIconFromConfig","do","getNamedSvgIcon","_getSvgFromConfig","iconSetConfigs","_getSvgFromIconSetConfigs","throw","namedIcon","_extractIconWithNameFromAnySet","iconSetFetchRequests","iconSetConfig","_loadSvgIconSetFromConfig","catch","caught","log","forkJoin","ignoredResults","foundIcon","_extractSvgIconFromSet","_fetchUrl","svgText","_createSvgElementForSingleIcon","_svgElementFromString","responseText","_setSvgAttributes","iconSet","iconNode","tagName","div","innerHTML","req","finally","share","_mdIconRegistry","hostAriaLabel","_splitIconName","parts","changedInputs","svgIcon","_setSvgElement","_usingFontIcon","_updateFontIconClasses","_updateAriaLabel","ngAfterViewChecked","_getAriaLabel","_previousAriaLabel","setElementAttribute","alt","fontIcon","layoutElement","projectNodes","elem","fontSetClass","fontSet","_previousFontSetClass","_previousFontIconClass","[class.mat-icon]","PI","DURATION_INDETERMINATE","DURATION_DETERMINATE","startIndeterminate","endIndeterminate","[class.mat-progress-spinner]","_lastAnimationId","_mode","_interdeterminateInterval","interval","clearInterval","_cleanupIndeterminateAnimation","_animateCircle","_startIndeterminateAnimation","animateFrom","animateTo","ease","Date","now","_renderArc","animation_1","elapsedTime","rotationStartPoint","animate$$1","temp","interdeterminateInterval","setInterval","_path","[class.mat-spinner]","_bufferValue","_primaryTransform","_bufferTransform","bufferValue","aria-valuemin","aria-valuemax","[class.mat-progress-bar]","MD_INPUT_INVALID_TYPES","nextUniqueId$1","[class.mat-hint]","[class.mat-right]","[class.mat-input-error]","_ngControl","focused","_placeholderChange","_neverEmptyInputTypes","t","_uid","_validateType","_isTextarea","setElementProperty","_isNeverEmpty","_isBadInput","_cachedUid","_onInput","validity","badInput","[class.mat-input-element]","[placeholder]","[required]","[attr.aria-describedby]","(input)","_parentForm","_parentFormGroup","_subscriptAnimationState","_hintLabel","_hintLabelId","_processHints","_mdInputChild","_validatePlaceholders","_hintChildren","detectChanges","_shouldForward","control","_hasPlaceholder","_placeholderChild","_focusInput","_isErrorState","isInvalid","invalid","isTouched","touched","isSubmitted","submitted","_getDisplayedMessages","_errorChildren","_validateHints","_syncAriaDescribedby","startHint_1","endHint_1","hint","hintLabel","ids","startHint","endHint","ariaDescribedby","[class.mat-input-container]","[class.mat-input-invalid]","[class.mat-focused]","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","dividerColor","_prefixChildren","_suffixChildren","minRows","maxRows","_cachedLineHeight","_cacheTextareaLineHeight","resizeToFitContent","textarea","textareaClone","rows","border","padding","maxHeight","scrollHeight","[style.min-height]","[style.max-height]","mdAutosizeMinRows","mdAutosizeMaxRows","announcementMessage","instance","containerInstance","_afterClosed","_onAction","_instance","onAction","dismiss","_onExit","_finishDismiss","closed","exit","_action","_afterOpened","afterDismissed","afterOpened","_onEnter","MdSnackBarContentAlreadyAttached","onExit","onEnter","animationState","snackBarConfig","extraClasses","cssClass","onAnimationEnd","_completeExit","enter","[@state]","(@state.done)","snackBarRef","[class.mat-simple-snackbar]","_live","_parentSnackBar","_openedSnackBarRef","_snackBarRefAtThisLevel","openFromComponent","snackBarContainer","_attachSnackBarContainer","_attachSnackbarContent","simpleSnackBarRef","containerPortal","containerRef","contentRef","entryComponents","textLabel","_contentPortal","_content","templateLabel","nextId$2","_indexToSelect","_tabBodyWrapperHeight","_dynamicHeight","_selectedIndex","headerPosition","_onFocusChange","_onSelectChange","_groupId","selectChange","_tabs","tab","_focusChanged","_getTabLabelId","_getTabContentId","_setTabBodyWrapperHeight","tabHeight","_tabBodyWrapper","_removeTabBodyWrapperHeight","clientHeight","[class.mat-tab-group]","[class.mat-tab-group-dynamic-height]","[class.mat-tab-group-inverted-header]","dynamicHeight","_dynamicHeightDeprecated","selectedIndexChange","focusChange","getOffsetLeft","offsetLeft","getOffsetWidth","[class.mat-tab-disabled]","alignToElement","show","_getLeftPosition","_getElementWidth","hide","[class.mat-ink-bar]","_directionChange","_alignInkBar","updateActiveLink","_activeLinkChanged","_activeLinkElement","_inkBar","[class.mat-tab-nav-bar]","_mdTabNavBar","[class.mat-tab-link]","active","onCentering","onCentered","_canBeAnimated","_getLayoutDirection","_isCenterPosition","_onTranslateTabStarted","_onTranslateTabComplete","[class.mat-tab-body]","EXAGGERATED_OVERSCROLL","_focusIndex","_scrollDistance","_selectedIndexChanged","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","selectFocusedIndex","indexFocused","_tabLabelCount","_labelWrappers","_updatePagination","_scrollToLabel","_checkScrollingControls","_alignInkBarToSelectedTab","_scrollDistanceChanged","_updateTabScrollPosition","_focusNextTab","_focusPreviousTab","focusIndex","_onContentChanges","_checkPaginationEnabled","_setTabFocus","containerEl","_tabListContainer","scrollWidth","_moveFocus","tabs","translateX","scrollDistance","_tabList","_getMaxScrollDistance","_scrollHeader","scrollDir","viewLength","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","selectedLabelWrapper","class","[class.mat-tab-header-pagination-controls-enabled]","[class.mat-tab-header-rtl]","[class.mat-toolbar-row]","[class.mat-toolbar]","MdTooltipInvalidPositionError","_scrollDispatcher","showDelay","hideDelay","_tooltipInstance","_disposeTooltip","_message","_setTooltipMessage","_createTooltip","_isTooltipVisible","afterHidden","_getOrigin","_getOverlayPosition","isDirectionLtr","isLtr","(longpress)","(touchend)","_positionDeprecated","_deprecatedMessage","_matMessage","_matPosition","_matDisabled","_matHideDelay","_matShowDelay","_visibility","_closeOnInteraction","_onHide","_hideTimeoutId","_setTransformOrigin","_showTimeoutId","_afterVisibilityAnimation","_handleBodyInteraction","(body:click)","MdMenuMissingError","MdMenuInvalidPositionX","MdMenuInvalidPositionY","_getDisabledAttr","_checkDisabled","[class.mat-menu-item]","posX","posY","deprecatedPosX","deprecatedPosY","_classList","positionX","positionY","overlapTrigger","_setPositionX","_setPositionY","setPositionClasses","_emitCloseEvent","focusFirstItem","_menuOpen","_openedByMouse","onMenuOpen","onMenuClose","menu","_checkMenu","closeMenu","destroyMenu","toggleMenu","openMenu","_subscribeToBackdrop","_initMenu","_resetMenu","_cleanUpSubscriptions","_setIsMenuOpen","_getOverlayConfig","_subscribeToPositions","overlayState","_getPosition","fallbackX","fallbackOverlayY","fallbackOriginY","_handleMousedown","aria-haspopup","_deprecatedMdMenuTriggerFor","_deprecatedMatMenuTriggerFor","_matMenuTriggerFor","_containerInstance","_onAnimationStateChange","_result","componentInstance","dialogResult","_exit","afterClosed","_getPositionStrategy","DialogInjector","_parentInjector","_dialogRef","_data","notFoundValue","MdDialogContentAlreadyAttachedError","_elementFocusedBeforeDialogWasOpened","_trapFocus","_onAnimationDone","toFocus","animationStream","[class.mat-dialog-container]","[attr.role]","[@slideDialog]","(@slideDialog.done)","_parentDialog","_openDialogsAtThisLevel","_afterAllClosedAtThisLevel","_afterOpenAtThisLevel","_boundKeydown","afterOpen","_afterOpen","afterAllClosed","_afterAllClosed","_openDialogs","componentOrTemplateRef","dialogContainer","_attachDialogContainer","dialogRef","_attachDialogContent","_removeOpenDialog","closeAll","_getOverlayState","dialogConfig","userInjector","dialogInjector","topDialog","[class.mat-dialog-title]","[class.mat-dialog-content]","[class.mat-dialog-actions]","ActiveDescendantKeyManager","_uniqueAutocompleteIdCounter","showPanel","panel","_setVisibility","_getClassList","mat-autocomplete-panel-below","mat-autocomplete-panel-above","mat-autocomplete-visible","mat-autocomplete-hidden","[class.mat-autocomplete]","displayWith","_inputContainer","_blurStream","_manuallyFloatingPlaceholder","autocomplete","_panelPositionSubscription","_destroyPanel","openPanel","_getHostWidth","_subscribeToClosingActions","closePanel","_resetPlaceholder","optionSelections","_setTriggerValue","activeOption","_scrollToOption","_handleInput","newlyFocusedTag","optionOffset","newScrollTop","onStable","switchMap","_resetPanel","panelClosingActions","_setValueAndClose","toDisplay","_clearPreviousSelectedOption","_positionStrategy","_subscribeToPositionChanges","_resetActiveItem","aria-autocomplete","aria-multiline","[attr.aria-activedescendant]","[attr.aria-expanded]","_matAutocomplete","MATERIAL_MODULES","issueAnimationCommand","resolveElementFromTarget","parseTriggerCallbackName","dotIndex","instantiateSupportedAnimationDriver","__WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__","instantiateDefaultStyleNormalizer","instantiateRendererFactory","zone","AnimationRendererFactory","__WEBPACK_IMPORTED_MODULE_2__angular_platform_browser__","__WEBPACK_IMPORTED_MODULE_3__angular_animations__","NoopAnimationsModule","BrowserAnimationBuilder","BrowserAnimationFactory","AnimationRenderer","BaseAnimationRenderer","BROWSER_ANIMATIONS_PROVIDERS","BROWSER_NOOP_ANIMATIONS_PROVIDERS","InjectableAnimationEngine","rootRenderer","_nextAnimationId","typeData","createRenderer","RendererAnimationPlayer","_command","_listen","delegate","_currentId","_microtaskId","_animationCallbacksBuffer","_rendererCache","begin","_scheduleCountTask","Zone","scheduleListenerCallback","destroyNode","createComment","createText","newChild","refChild","oldChild","selectRootElement","selectorOrNode","removeAttribute","flags","removeStyle","setValue","factory","countId","SHARED_ANIMATION_PROVIDERS","fetcher","errorHandlerService","setData","json","ViewEncapsulation","appRoutes","meta","description","RouterModule","updatePagesIndex","array","getSubCategories","subCategoriesArray","subs","categoriesCounter","getPageByLink","onLinkSelect","valueCtrl","timeoutEvent","getElementsByClassName","blankImage","cPayChanged","showOverlay","Output","__WEBPACK_AMD_DEFINE_RESULT__","exportName","setTimeoutContext","timeout","bindFn","invokeArrayArg","each","deprecate","method","deprecationMessage","stack","inherit","child","childP","baseP","assign","boolOrFn","TYPE_FUNCTION","ifUndefined","val1","val2","addEventListeners","types","splitStr","removeEventListeners","hasParent","inStr","inArray","findByKey","slice","uniqueArray","prefixed","VENDOR_PREFIXES","uniqueId","getWindowForElement","doc","parentWindow","manager","self","inputTarget","domHandler","enable","createInputInstance","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","SUPPORT_ONLY_TOUCH","TouchInput","SUPPORT_TOUCH","TouchMouseInput","MouseInput","inputHandler","eventType","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","INPUT_START","isFinal","INPUT_END","INPUT_CANCEL","computeInputData","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","timeStamp","deltaTime","angle","getAngle","getDistance","computeDeltaXY","offsetDirection","getDirection","deltaY","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","scale","getScale","getRotation","maxPointers","computeIntervalInputData","srcEvent","offsetDelta","prevDelta","velocity","velocityX","velocityY","last","lastInterval","COMPUTE_INTERVAL","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","p1","p2","PROPS_XY","atan2","PROPS_CLIENT_XY","evEl","MOUSE_ELEMENT_EVENTS","evWin","MOUSE_WINDOW_EVENTS","pressed","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","SingleTouchInput","evTarget","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","started","normalizeSingleTouches","all","touches","changedTouches","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","INPUT_MOVE","identifier","targetTouches","changedTargetTouches","touch","mouse","primaryTouch","lastTouches","recordTouches","setLastTouch","lastTouch","lts","removeLastTouch","DEDUP_TIMEOUT","isSyntheticEvent","dx","dy","DEDUP_DISTANCE","TouchAction","cleanTouchActions","actions","TOUCH_ACTION_NONE","hasPanX","TOUCH_ACTION_PAN_X","hasPanY","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_AUTO","getTouchActionProps","NATIVE_TOUCH_ACTION","touchMap","cssSupports","supports","Recognizer","defaults","STATE_POSSIBLE","simultaneous","requireFail","stateStr","STATE_CANCELLED","STATE_ENDED","STATE_CHANGED","STATE_BEGAN","directionStr","getRecognizerByNameIfManager","otherRecognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","recognizers","preset","Manager","handlers","oldCssProps","touchAction","toggleCssProps","requireFailure","cssProps","triggerDomEvent","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","TEST_ELEMENT","output","nextKey","extend","MOBILE_REGEX","INPUT_TYPE_TOUCH","INPUT_TYPE_PEN","INPUT_TYPE_MOUSE","INPUT_TYPE_KINECT","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","isTouch","storeIndex","pointerId","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","TOUCH_INPUT_MAP","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_MAP","compute","update","getTouchAction","preventDefaults","prevented","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_RECOGNIZED","STATE_FAILED","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","process","attrTest","optionPointers","isRecognized","isValid","directionTest","hasMoved","inOut","validPointers","validMovement","validTime","taps","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","FORCED_STOP","stop","force","stopped","curRecognizer","existing","on","off","Tap","Pinch","Rotate","provideConfig","__WEBPACK_IMPORTED_MODULE_5__interfaces_config__","configure","__WEBPACK_IMPORTED_MODULE_1__constants_lib__","__WEBPACK_IMPORTED_MODULE_6__helpers_keyStorage__","__WEBPACK_IMPORTED_MODULE_2__enums_storage__","__WEBPACK_IMPORTED_MODULE_3__services_index__","__WEBPACK_IMPORTED_MODULE_4__helpers_webStorage__","__WEBPACK_IMPORTED_MODULE_7__interfaces_index__","__WEBPACK_IMPORTED_MODULE_8__decorators_index__","WEBSTORAGE_CONFIG","initStorageListener","storageArea","__WEBPACK_IMPORTED_MODULE_0__localStorage__","__WEBPACK_IMPORTED_MODULE_1__sessionStorage__","LocalStorage","SessionStorage","MockStorageHelper","isSecuredField","field","securedFields","mockStorages","generateStorage","defineProperties","writable","__WEBPACK_IMPORTED_MODULE_0__config__","LocalStorageService","SessionStorageService","desc","r","getOwnPropertyDescriptor","Reflect","decorate","common_1","Rating","Rating_1","iconClass","fullIcon","emptyIcon","titles","onHover","onLeave","hovered","hoveredPercent","buildRanges","model","validate","increment","float","rate","calculateWidth","setHovered","readonly","changeHovered","relativeX","resetHovered","ratingRange","range","foo","Boolean","HostListener","Function","KeyboardEvent","NG_VALUE_ACCESSOR","forwardRef","NG_VALIDATORS","CommonModule","Scheduler","SchedulerAction","schedule","work","Observable_1","forkJoin_1","Observable","fromEvent_1","merge_1","of_1","throw_1","_throw","auditTime_1","catch_1","_catch","do_1","_do","filter_1","finally_1","_finally","first_1","share_1","startWith_1","switchMap_1","ErrorObservable","scheduler","dispatch","subscriber","_subscribe","isNodeStyleEventEmmitter","sourceObj","removeListener","isJQueryStyleEventEmitter","isNodeList","isHTMLCollection","isEventTarget","tryCatch_1","isFunction_1","errorObject_1","Subscription_1","FromEventObservable","isFunction","setupSubscription","len","source_1","source_2","source_3","Subscription","tryCatch","errorObject","FromEventObservable_1","ErrorObservable_1","async_1","lift","AuditTimeOperator","dispatchNext","clearThrottle","Subscriber_1","AuditTimeSubscriber","_next","throttled","Subscriber","observables","concatStatic","isScheduler_1","isScheduler","ArrayObservable_1","ArrayObservable","mergeAll_1","MergeAllOperator","nextOrObserver","DoOperator","DoSubscriber","safeSubscriber","syncErrorThrowable","syncErrorThrown","syncErrorValue","_error","_complete","FinallyOperator","FinallySubscriber","concat_1","ScalarObservable_1","ScalarObservable","EmptyObservable_1","EmptyObservable","project","resultSelector","SwitchMapOperator","OuterSubscriber_1","subscribeToResult_1","SwitchMapSubscriber","_innerSub","innerSubscription","subscribeToResult","_unsubscribe","notifyComplete","innerSub","isStopped","notifyNext","outerValue","innerValue","outerIndex","innerIndex","_tryNotifyNext","OuterSubscriber","Action","root_1","Action_1","AsyncAction","pending","recycleAsyncId","requestAsyncId","execute","_execute","errored","errorValue","Scheduler_1","AsyncScheduler","scheduled","shift","AsyncAction_1","AsyncScheduler_1","platform_browser_dynamic_1","app_module_1","enableProdMode","platformBrowserDynamic","bootstrapModule"],"mappings":"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","file":"main.e5a5c345fc4eae1bd939.bundle.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */,\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */\n/***/ (function(module, exports) {\n\n/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n/***/ }),\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */,\n/* 24 */,\n/* 25 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__maps_api_loader_maps_api_loader__ = __webpack_require__(68);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return GoogleMapsAPIWrapper; });\n\n\n\n/**\n * Wrapper class that handles the communication with the Google Maps Javascript\n * API v3\n */\nvar GoogleMapsAPIWrapper = (function () {\n    function GoogleMapsAPIWrapper(_loader, _zone) {\n        var _this = this;\n        this._loader = _loader;\n        this._zone = _zone;\n        this._map =\n            new Promise(function (resolve) { _this._mapResolver = resolve; });\n    }\n    GoogleMapsAPIWrapper.prototype.createMap = function (el, mapOptions) {\n        var _this = this;\n        return this._loader.load().then(function () {\n            var map = new google.maps.Map(el, mapOptions);\n            _this._mapResolver(map);\n            return;\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.setMapOptions = function (options) {\n        this._map.then(function (m) { m.setOptions(options); });\n    };\n    /**\n     * Creates a google map marker with the map context\n     */\n    GoogleMapsAPIWrapper.prototype.createMarker = function (options) {\n        if (options === void 0) { options = {}; }\n        return this._map.then(function (map) {\n            options.map = map;\n            return new google.maps.Marker(options);\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.createInfoWindow = function (options) {\n        return this._map.then(function () { return new google.maps.InfoWindow(options); });\n    };\n    /**\n     * Creates a google.map.Circle for the current map.\n     */\n    GoogleMapsAPIWrapper.prototype.createCircle = function (options) {\n        return this._map.then(function (map) {\n            options.map = map;\n            return new google.maps.Circle(options);\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.createPolyline = function (options) {\n        return this.getNativeMap().then(function (map) {\n            var line = new google.maps.Polyline(options);\n            line.setMap(map);\n            return line;\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.createPolygon = function (options) {\n        return this.getNativeMap().then(function (map) {\n            var polygon = new google.maps.Polygon(options);\n            polygon.setMap(map);\n            return polygon;\n        });\n    };\n    /**\n     * Determines if given coordinates are insite a Polygon path.\n     */\n    GoogleMapsAPIWrapper.prototype.containsLocation = function (latLng, polygon) {\n        return google.maps.geometry.poly.containsLocation(latLng, polygon);\n    };\n    GoogleMapsAPIWrapper.prototype.subscribeToMapEvent = function (eventName) {\n        var _this = this;\n        return __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__[\"Observable\"].create(function (observer) {\n            _this._map.then(function (m) {\n                m.addListener(eventName, function (arg) { _this._zone.run(function () { return observer.next(arg); }); });\n            });\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.setCenter = function (latLng) {\n        return this._map.then(function (map) { return map.setCenter(latLng); });\n    };\n    GoogleMapsAPIWrapper.prototype.getZoom = function () { return this._map.then(function (map) { return map.getZoom(); }); };\n    GoogleMapsAPIWrapper.prototype.getBounds = function () {\n        return this._map.then(function (map) { return map.getBounds(); });\n    };\n    GoogleMapsAPIWrapper.prototype.setZoom = function (zoom) {\n        return this._map.then(function (map) { return map.setZoom(zoom); });\n    };\n    GoogleMapsAPIWrapper.prototype.getCenter = function () {\n        return this._map.then(function (map) { return map.getCenter(); });\n    };\n    GoogleMapsAPIWrapper.prototype.panTo = function (latLng) {\n        return this._map.then(function (map) { return map.panTo(latLng); });\n    };\n    GoogleMapsAPIWrapper.prototype.fitBounds = function (latLng) {\n        return this._map.then(function (map) { return map.fitBounds(latLng); });\n    };\n    GoogleMapsAPIWrapper.prototype.panToBounds = function (latLng) {\n        return this._map.then(function (map) { return map.panToBounds(latLng); });\n    };\n    /**\n     * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n     */\n    GoogleMapsAPIWrapper.prototype.getNativeMap = function () { return this._map; };\n    /**\n     * Triggers the given event name on the map instance.\n     */\n    GoogleMapsAPIWrapper.prototype.triggerMapEvent = function (eventName) {\n        return this._map.then(function (m) { return google.maps.event.trigger(m, eventName); });\n    };\n    return GoogleMapsAPIWrapper;\n}());\n\nGoogleMapsAPIWrapper.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n];\n/** @nocollapse */\nGoogleMapsAPIWrapper.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_2__maps_api_loader_maps_api_loader__[\"a\" /* MapsAPILoader */], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n]; };\n//# sourceMappingURL=google-maps-api-wrapper.js.map\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar config_1 = __webpack_require__(69);\r\nvar en_dictionary_1 = __webpack_require__(149);\r\nvar bg_dictionary_1 = __webpack_require__(148);\r\nvar Dictionary = (function () {\r\n    function Dictionary(en, bg) {\r\n        this.en = en;\r\n        this.bg = bg;\r\n        // the variables containing the language jsons\r\n        // will contain the default language\r\n        this.language = '';\r\n        this.language = config_1.Config.defaultLang;\r\n    }\r\n    // will return the texts from witch we fill our forms\r\n    Dictionary.prototype.getTexts = function (text) {\r\n        return this[this.language].language[text];\r\n    };\r\n    ;\r\n    Dictionary.prototype.setLanguage = function (language) {\r\n        this.language = language;\r\n    };\r\n    Dictionary.prototype.nextLanguage = function () {\r\n        var index = config_1.Config.defaultLang.indexOf(this.language);\r\n        if (index == config_1.Config.languages.length - 1) {\r\n            return config_1.Config.languages[0];\r\n        }\r\n        else {\r\n            return config_1.Config.languages[index + 1];\r\n        }\r\n    };\r\n    Dictionary.prototype.changeLanguage = function () {\r\n        this.language = this.nextLanguage();\r\n    };\r\n    ;\r\n    Dictionary = __decorate([\r\n        core_1.Injectable(),\r\n        __metadata(\"design:paramtypes\", [en_dictionary_1.EnglishDictionary, bg_dictionary_1.BulgarianDictionary])\r\n    ], Dictionary);\r\n    return Dictionary;\r\n}());\r\nexports.Dictionary = Dictionary;\r\n\n\n/***/ }),\n/* 27 */,\n/* 28 */,\n/* 29 */,\n/* 30 */,\n/* 31 */,\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar EventEmiterService = (function () {\r\n    function EventEmiterService() {\r\n        this.loggedIn = new core_1.EventEmitter();\r\n        this.formSubmit = new core_1.EventEmitter();\r\n        this.dataFetched = new core_1.EventEmitter();\r\n        this.formComplete = new core_1.EventEmitter();\r\n    }\r\n    EventEmiterService.prototype.emitFetchedData = function (data) {\r\n        this.dataFetched.emit(data);\r\n    };\r\n    EventEmiterService.prototype.emitFormSubmit = function (formData, type) {\r\n        this.formSubmit.emit({\r\n            type: type,\r\n            formData: formData\r\n        });\r\n    };\r\n    EventEmiterService.prototype.emitFormComplete = function (response, success) {\r\n        this.formComplete.emit({\r\n            success: success,\r\n            response: response\r\n        });\r\n    };\r\n    EventEmiterService = __decorate([\r\n        core_1.Injectable()\r\n        /**\r\n         * @DriverService used on all connections to the back-end for the drivers\r\n         */\r\n        ,\r\n        __metadata(\"design:paramtypes\", [])\r\n    ], EventEmiterService);\r\n    return EventEmiterService;\r\n}());\r\nexports.EventEmiterService = EventEmiterService;\r\n\n\n/***/ }),\n/* 33 */,\n/* 34 */,\n/* 35 */,\n/* 36 */,\n/* 37 */,\n/* 38 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return STORAGE; });\nvar STORAGE;\r\n(function (STORAGE) {\r\n    STORAGE[STORAGE[\"local\"] = 0] = \"local\";\r\n    STORAGE[STORAGE[\"session\"] = 1] = \"session\";\r\n})(STORAGE || (STORAGE = {}));\r\n//# sourceMappingURL=storage.js.map\n\n/***/ }),\n/* 39 */,\n/* 40 */,\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar PagesService = (function () {\r\n    function PagesService() {\r\n        this.pages = Array();\r\n    }\r\n    /**\r\n    * @getPages get all pages\r\n    * @return {Array} all pages\r\n    */\r\n    PagesService.prototype.getPages = function () {\r\n        return this.pages;\r\n    };\r\n    PagesService.prototype.setPages = function (products) {\r\n        this.pages = products;\r\n        // todo: emit that pages are changed\r\n    };\r\n    PagesService = __decorate([\r\n        core_1.Injectable()\r\n        /**\r\n         * @DriverService used on all connections to the back-end for the drivers\r\n         */\r\n        ,\r\n        __metadata(\"design:paramtypes\", [])\r\n    ], PagesService);\r\n    return PagesService;\r\n}());\r\nexports.PagesService = PagesService;\r\n\n\n/***/ }),\n/* 42 */,\n/* 43 */,\n/* 44 */,\n/* 45 */,\n/* 46 */,\n/* 47 */,\n/* 48 */,\n/* 49 */,\n/* 50 */,\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar PagesDataService = (function () {\r\n    function PagesDataService() {\r\n        this.pagesData = Array();\r\n    }\r\n    /**\r\n    * @getPagesData get all pages\r\n    * @return {Array} all pages\r\n    */\r\n    PagesDataService.prototype.getPagesData = function () {\r\n        return this.pagesData;\r\n    };\r\n    PagesDataService.prototype.setPagesData = function (pagesData) {\r\n        this.pagesData = pagesData;\r\n        // todo: emit that pagesData are changed\r\n    };\r\n    PagesDataService = __decorate([\r\n        core_1.Injectable(),\r\n        __metadata(\"design:paramtypes\", [])\r\n    ], PagesDataService);\r\n    return PagesDataService;\r\n}());\r\nexports.PagesDataService = PagesDataService;\r\n\n\n/***/ }),\n/* 52 */,\n/* 53 */,\n/* 54 */,\n/* 55 */,\n/* 56 */,\n/* 57 */,\n/* 58 */,\n/* 59 */,\n/* 60 */,\n/* 61 */,\n/* 62 */,\n/* 63 */,\n/* 64 */,\n/* 65 */,\n/* 66 */,\n/* 67 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__ = __webpack_require__(25);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MarkerManager; });\n\n\n\nvar MarkerManager = (function () {\n    function MarkerManager(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._markers = new Map();\n    }\n    MarkerManager.prototype.deleteMarker = function (marker) {\n        var _this = this;\n        var m = this._markers.get(marker);\n        if (m == null) {\n            // marker already deleted\n            return Promise.resolve();\n        }\n        return m.then(function (m) {\n            return _this._zone.run(function () {\n                m.setMap(null);\n                _this._markers.delete(marker);\n            });\n        });\n    };\n    MarkerManager.prototype.updateMarkerPosition = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setPosition({ lat: marker.latitude, lng: marker.longitude }); });\n    };\n    MarkerManager.prototype.updateTitle = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setTitle(marker.title); });\n    };\n    MarkerManager.prototype.updateLabel = function (marker) {\n        return this._markers.get(marker).then(function (m) { m.setLabel(marker.label); });\n    };\n    MarkerManager.prototype.updateDraggable = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setDraggable(marker.draggable); });\n    };\n    MarkerManager.prototype.updateIcon = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setIcon(marker.iconUrl); });\n    };\n    MarkerManager.prototype.updateOpacity = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setOpacity(marker.opacity); });\n    };\n    MarkerManager.prototype.updateVisible = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setVisible(marker.visible); });\n    };\n    MarkerManager.prototype.updateZIndex = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setZIndex(marker.zIndex); });\n    };\n    MarkerManager.prototype.addMarker = function (marker) {\n        var markerPromise = this._mapsWrapper.createMarker({\n            position: { lat: marker.latitude, lng: marker.longitude },\n            label: marker.label,\n            draggable: marker.draggable,\n            icon: marker.iconUrl,\n            opacity: marker.opacity,\n            visible: marker.visible,\n            zIndex: marker.zIndex,\n            title: marker.title\n        });\n        this._markers.set(marker, markerPromise);\n    };\n    MarkerManager.prototype.getNativeMarker = function (marker) {\n        return this._markers.get(marker);\n    };\n    MarkerManager.prototype.createEventObservable = function (eventName, marker) {\n        var _this = this;\n        return __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__[\"Observable\"].create(function (observer) {\n            _this._markers.get(marker).then(function (m) {\n                m.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    return MarkerManager;\n}());\n\nMarkerManager.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n];\n/** @nocollapse */\nMarkerManager.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__[\"a\" /* GoogleMapsAPIWrapper */], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n]; };\n//# sourceMappingURL=marker-manager.js.map\n\n/***/ }),\n/* 68 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MapsAPILoader; });\n\nvar MapsAPILoader = (function () {\n    function MapsAPILoader() {\n    }\n    return MapsAPILoader;\n}());\n\nMapsAPILoader.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n];\n/** @nocollapse */\nMapsAPILoader.ctorParameters = function () { return []; };\n//# sourceMappingURL=maps-api-loader.js.map\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar Config = (function () {\r\n    // Will contain all of the urls and constants of the app\r\n    function Config() {\r\n    }\r\n    Object.defineProperty(Config, \"defaultLang\", {\r\n        // language\r\n        get: function () { return 'bg'; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Config, \"languages\", {\r\n        get: function () { return ['bg', 'en']; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Config, \"pagesUrl\", {\r\n        // urls\r\n        // public static get pagesUrl():string { return \"http://61148759.ngrok.io/api/pages\"; }\r\n        get: function () { return \"http://http://194.79.15.200/api/pages\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Config, \"mapCoordinates\", {\r\n        // production\r\n        // public static get productsAndCategoriesUrl():string { return \"http://194.79.15.134:8080/api/productsAndCategories\"; }\r\n        // public static get categoriesUrl():string { return \"http://194.79.15.134:8080/api/categories\"; }\r\n        // public static get productsUrl():string { return \"http://194.79.15.134:8080/api/products\"; }\r\n        // public static get messageUrl():string { return \"http://194.79.15.134:8080/api/message\"; }\r\n        // public static get orderUrl():string { return \"http://194.79.15.134:8080/api/order\"; }\r\n        // public static get adminLoginUrl():string { return \"http://194.79.15.134:8080/api/admin/login\"; }\r\n        get: function () { return { lat: 42.7003, lng: 23.3366024, zoom: 15 }; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Config = __decorate([\r\n        core_1.Injectable()\r\n        // Will contain all of the urls and constants of the app\r\n    ], Config);\r\n    return Config;\r\n}());\r\nexports.Config = Config;\r\n\n\n/***/ }),\n/* 70 */,\n/* 71 */,\n/* 72 */,\n/* 73 */,\n/* 74 */,\n/* 75 */,\n/* 76 */,\n/* 77 */,\n/* 78 */,\n/* 79 */,\n/* 80 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__enums_storage__ = __webpack_require__(38);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return LIB_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return LIB_KEY_SEPARATOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return STORAGE_NAMES; });\n\r\nvar LIB_KEY = 'ng2-webstorage';\r\nvar LIB_KEY_SEPARATOR = '|';\r\nvar STORAGE_NAMES = (_a = {},\r\n    _a[__WEBPACK_IMPORTED_MODULE_0__enums_storage__[\"a\" /* STORAGE */].local] = 'local',\r\n    _a[__WEBPACK_IMPORTED_MODULE_0__enums_storage__[\"a\" /* STORAGE */].session] = 'session',\r\n    _a);\r\nvar _a;\r\n//# sourceMappingURL=lib.js.map\n\n/***/ }),\n/* 81 */,\n/* 82 */,\n/* 83 */,\n/* 84 */,\n/* 85 */,\n/* 86 */,\n/* 87 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_managers_info_window_manager__ = __webpack_require__(91);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AgmInfoWindow; });\n\n\nvar infoWindowId = 0;\n/**\n * AgmInfoWindow renders a info window inside a {@link AgmMarker} or standalone.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *        <agm-info-window [disableAutoPan]=\"true\">\n *          Hi, this is the content of the <strong>info window</strong>\n *        </agm-info-window>\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nvar AgmInfoWindow = (function () {\n    function AgmInfoWindow(_infoWindowManager, _el) {\n        this._infoWindowManager = _infoWindowManager;\n        this._el = _el;\n        /**\n         * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n         */\n        this.isOpen = false;\n        /**\n         * Emits an event when the info window is closed.\n         */\n        this.infoWindowClose = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this._infoWindowAddedToManager = false;\n        this._id = (infoWindowId++).toString();\n    }\n    AgmInfoWindow.prototype.ngOnInit = function () {\n        this.content = this._el.nativeElement.querySelector('.agm-info-window-content');\n        this._infoWindowManager.addInfoWindow(this);\n        this._infoWindowAddedToManager = true;\n        this._updateOpenState();\n        this._registerEventListeners();\n    };\n    /** @internal */\n    AgmInfoWindow.prototype.ngOnChanges = function (changes) {\n        if (!this._infoWindowAddedToManager) {\n            return;\n        }\n        if ((changes['latitude'] || changes['longitude']) && typeof this.latitude === 'number' &&\n            typeof this.longitude === 'number') {\n            this._infoWindowManager.setPosition(this);\n        }\n        if (changes['zIndex']) {\n            this._infoWindowManager.setZIndex(this);\n        }\n        if (changes['isOpen']) {\n            this._updateOpenState();\n        }\n        this._setInfoWindowOptions(changes);\n    };\n    AgmInfoWindow.prototype._registerEventListeners = function () {\n        var _this = this;\n        this._infoWindowManager.createEventObservable('closeclick', this).subscribe(function () {\n            _this.isOpen = false;\n            _this.infoWindowClose.emit();\n        });\n    };\n    AgmInfoWindow.prototype._updateOpenState = function () {\n        this.isOpen ? this.open() : this.close();\n    };\n    AgmInfoWindow.prototype._setInfoWindowOptions = function (changes) {\n        var options = {};\n        var optionKeys = Object.keys(changes).filter(function (k) { return AgmInfoWindow._infoWindowOptionsInputs.indexOf(k) !== -1; });\n        optionKeys.forEach(function (k) { options[k] = changes[k].currentValue; });\n        this._infoWindowManager.setOptions(this, options);\n    };\n    /**\n     * Opens the info window.\n     */\n    AgmInfoWindow.prototype.open = function () { return this._infoWindowManager.open(this); };\n    /**\n     * Closes the info window.\n     */\n    AgmInfoWindow.prototype.close = function () {\n        var _this = this;\n        return this._infoWindowManager.close(this).then(function () { _this.infoWindowClose.emit(); });\n    };\n    /** @internal */\n    AgmInfoWindow.prototype.id = function () { return this._id; };\n    /** @internal */\n    AgmInfoWindow.prototype.toString = function () { return 'AgmInfoWindow-' + this._id.toString(); };\n    /** @internal */\n    AgmInfoWindow.prototype.ngOnDestroy = function () { this._infoWindowManager.deleteInfoWindow(this); };\n    return AgmInfoWindow;\n}());\n\nAgmInfoWindow._infoWindowOptionsInputs = ['disableAutoPan', 'maxWidth'];\nAgmInfoWindow.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{\n                selector: 'agm-info-window',\n                inputs: ['latitude', 'longitude', 'disableAutoPan', 'isOpen', 'zIndex', 'maxWidth'],\n                outputs: ['infoWindowClose'],\n                template: \"<div class='agm-info-window-content'>\\n      <ng-content></ng-content>\\n    </div>\\n  \"\n            },] },\n];\n/** @nocollapse */\nAgmInfoWindow.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_1__services_managers_info_window_manager__[\"a\" /* InfoWindowManager */], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n]; };\n//# sourceMappingURL=info-window.js.map\n\n/***/ }),\n/* 88 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AgmPolylinePoint; });\n\n/**\n * AgmPolylinePoint represents one element of a polyline within a  {@link\n * SembGoogleMapPolyline}\n */\nvar AgmPolylinePoint = (function () {\n    function AgmPolylinePoint() {\n        /**\n         * This event emitter gets emitted when the position of the point changed.\n         */\n        this.positionChanged = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n    }\n    AgmPolylinePoint.prototype.ngOnChanges = function (changes) {\n        if (changes['latitude'] || changes['longitude']) {\n            var position = {\n                lat: changes['latitude'].currentValue,\n                lng: changes['longitude'].currentValue\n            };\n            this.positionChanged.emit(position);\n        }\n    };\n    return AgmPolylinePoint;\n}());\n\nAgmPolylinePoint.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{ selector: 'agm-polyline-point' },] },\n];\n/** @nocollapse */\nAgmPolylinePoint.ctorParameters = function () { return []; };\nAgmPolylinePoint.propDecorators = {\n    'latitude': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'longitude': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'positionChanged': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n};\n//# sourceMappingURL=polyline-point.js.map\n\n/***/ }),\n/* 89 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__ = __webpack_require__(25);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CircleManager; });\n\n\n\nvar CircleManager = (function () {\n    function CircleManager(_apiWrapper, _zone) {\n        this._apiWrapper = _apiWrapper;\n        this._zone = _zone;\n        this._circles = new Map();\n    }\n    CircleManager.prototype.addCircle = function (circle) {\n        this._circles.set(circle, this._apiWrapper.createCircle({\n            center: { lat: circle.latitude, lng: circle.longitude },\n            clickable: circle.clickable,\n            draggable: circle.draggable,\n            editable: circle.editable,\n            fillColor: circle.fillColor,\n            fillOpacity: circle.fillOpacity,\n            radius: circle.radius,\n            strokeColor: circle.strokeColor,\n            strokeOpacity: circle.strokeOpacity,\n            strokePosition: circle.strokePosition,\n            strokeWeight: circle.strokeWeight,\n            visible: circle.visible,\n            zIndex: circle.zIndex\n        }));\n    };\n    ;\n    /**\n     * Removes the given circle from the map.\n     */\n    CircleManager.prototype.removeCircle = function (circle) {\n        var _this = this;\n        return this._circles.get(circle).then(function (c) {\n            c.setMap(null);\n            _this._circles.delete(circle);\n        });\n    };\n    CircleManager.prototype.setOptions = function (circle, options) {\n        return this._circles.get(circle).then(function (c) { return c.setOptions(options); });\n    };\n    ;\n    CircleManager.prototype.getBounds = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.getBounds(); });\n    };\n    ;\n    CircleManager.prototype.getCenter = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.getCenter(); });\n    };\n    ;\n    CircleManager.prototype.getRadius = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.getRadius(); });\n    };\n    CircleManager.prototype.setCenter = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setCenter({ lat: circle.latitude, lng: circle.longitude }); });\n    };\n    ;\n    CircleManager.prototype.setEditable = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setEditable(circle.editable); });\n    };\n    ;\n    CircleManager.prototype.setDraggable = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setDraggable(circle.draggable); });\n    };\n    ;\n    CircleManager.prototype.setVisible = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setVisible(circle.visible); });\n    };\n    ;\n    CircleManager.prototype.setRadius = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setRadius(circle.radius); });\n    };\n    ;\n    CircleManager.prototype.createEventObservable = function (eventName, circle) {\n        var _this = this;\n        return __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__[\"Observable\"].create(function (observer) {\n            var listener = null;\n            _this._circles.get(circle).then(function (c) {\n                listener = c.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n            return function () {\n                if (listener !== null) {\n                    listener.remove();\n                }\n            };\n        });\n    };\n    return CircleManager;\n}());\n\nCircleManager.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n];\n/** @nocollapse */\nCircleManager.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__[\"a\" /* GoogleMapsAPIWrapper */], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n]; };\n//# sourceMappingURL=circle-manager.js.map\n\n/***/ }),\n/* 90 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__ = __webpack_require__(25);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return DataLayerManager; });\n\n\n\n/**\n * Manages all Data Layers for a Google Map instance.\n */\nvar DataLayerManager = (function () {\n    function DataLayerManager(_wrapper, _zone) {\n        this._wrapper = _wrapper;\n        this._zone = _zone;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a new Data Layer to the map.\n     */\n    DataLayerManager.prototype.addDataLayer = function (layer) {\n        var newLayer = this._wrapper.getNativeMap().then(function (m) {\n            var dataLayer = new google.maps.Data({\n                map: m,\n                style: layer.style\n            });\n            if (layer.geoJson) {\n                dataLayer.features = dataLayer.addGeoJson(layer.geoJson);\n            }\n            return dataLayer;\n        });\n        this._layers.set(layer, newLayer);\n    };\n    DataLayerManager.prototype.deleteDataLayer = function (layer) {\n        var _this = this;\n        this._layers.get(layer).then(function (l) {\n            l.setMap(null);\n            _this._layers.delete(layer);\n        });\n    };\n    DataLayerManager.prototype.updateGeoJson = function (layer, geoJson) {\n        this._layers.get(layer).then(function (l) {\n            l.forEach(function (feature) {\n                l.remove(feature);\n                var index = l.features.indexOf(feature, 0);\n                if (index > -1) {\n                    l.features.splice(index, 1);\n                }\n            });\n            l.features = l.addGeoJson(geoJson);\n        });\n    };\n    DataLayerManager.prototype.setDataOptions = function (layer, options) {\n        this._layers.get(layer).then(function (l) {\n            l.setControlPosition(options.controlPosition);\n            l.setControls(options.controls);\n            l.setDrawingMode(options.drawingMode);\n            l.setStyle(options.style);\n        });\n    };\n    /**\n     * Creates a Google Maps event listener for the given DataLayer as an Observable\n     */\n    DataLayerManager.prototype.createEventObservable = function (eventName, layer) {\n        var _this = this;\n        return __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__[\"Observable\"].create(function (observer) {\n            _this._layers.get(layer).then(function (d) {\n                d.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    return DataLayerManager;\n}());\n\nDataLayerManager.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n];\n/** @nocollapse */\nDataLayerManager.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__[\"a\" /* GoogleMapsAPIWrapper */], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n]; };\n//# sourceMappingURL=data-layer-manager.js.map\n\n/***/ }),\n/* 91 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__marker_manager__ = __webpack_require__(67);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return InfoWindowManager; });\n\n\n\n\nvar InfoWindowManager = (function () {\n    function InfoWindowManager(_mapsWrapper, _zone, _markerManager) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._markerManager = _markerManager;\n        this._infoWindows = new Map();\n    }\n    InfoWindowManager.prototype.deleteInfoWindow = function (infoWindow) {\n        var _this = this;\n        var iWindow = this._infoWindows.get(infoWindow);\n        if (iWindow == null) {\n            // info window already deleted\n            return Promise.resolve();\n        }\n        return iWindow.then(function (i) {\n            return _this._zone.run(function () {\n                i.close();\n                _this._infoWindows.delete(infoWindow);\n            });\n        });\n    };\n    InfoWindowManager.prototype.setPosition = function (infoWindow) {\n        return this._infoWindows.get(infoWindow).then(function (i) { return i.setPosition({\n            lat: infoWindow.latitude,\n            lng: infoWindow.longitude\n        }); });\n    };\n    InfoWindowManager.prototype.setZIndex = function (infoWindow) {\n        return this._infoWindows.get(infoWindow)\n            .then(function (i) { return i.setZIndex(infoWindow.zIndex); });\n    };\n    InfoWindowManager.prototype.open = function (infoWindow) {\n        var _this = this;\n        return this._infoWindows.get(infoWindow).then(function (w) {\n            if (infoWindow.hostMarker != null) {\n                return _this._markerManager.getNativeMarker(infoWindow.hostMarker).then(function (marker) {\n                    return _this._mapsWrapper.getNativeMap().then(function (map) { return w.open(map, marker); });\n                });\n            }\n            return _this._mapsWrapper.getNativeMap().then(function (map) { return w.open(map); });\n        });\n    };\n    InfoWindowManager.prototype.close = function (infoWindow) {\n        return this._infoWindows.get(infoWindow).then(function (w) { return w.close(); });\n    };\n    InfoWindowManager.prototype.setOptions = function (infoWindow, options) {\n        return this._infoWindows.get(infoWindow).then(function (i) { return i.setOptions(options); });\n    };\n    InfoWindowManager.prototype.addInfoWindow = function (infoWindow) {\n        var options = {\n            content: infoWindow.content,\n            maxWidth: infoWindow.maxWidth,\n            zIndex: infoWindow.zIndex,\n        };\n        if (typeof infoWindow.latitude === 'number' && typeof infoWindow.longitude === 'number') {\n            options.position = { lat: infoWindow.latitude, lng: infoWindow.longitude };\n        }\n        var infoWindowPromise = this._mapsWrapper.createInfoWindow(options);\n        this._infoWindows.set(infoWindow, infoWindowPromise);\n    };\n    /**\n     * Creates a Google Maps event listener for the given InfoWindow as an Observable\n     */\n    InfoWindowManager.prototype.createEventObservable = function (eventName, infoWindow) {\n        var _this = this;\n        return __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__[\"Observable\"].create(function (observer) {\n            _this._infoWindows.get(infoWindow).then(function (i) {\n                i.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    return InfoWindowManager;\n}());\n\nInfoWindowManager.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/** @nocollapse */\nInfoWindowManager.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__[\"a\" /* GoogleMapsAPIWrapper */], },\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgZone\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_3__marker_manager__[\"a\" /* MarkerManager */], },\n]; };\n//# sourceMappingURL=info-window-manager.js.map\n\n/***/ }),\n/* 92 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__ = __webpack_require__(25);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return KmlLayerManager; });\n\n\n\n/**\n * Manages all KML Layers for a Google Map instance.\n */\nvar KmlLayerManager = (function () {\n    function KmlLayerManager(_wrapper, _zone) {\n        this._wrapper = _wrapper;\n        this._zone = _zone;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a new KML Layer to the map.\n     */\n    KmlLayerManager.prototype.addKmlLayer = function (layer) {\n        var newLayer = this._wrapper.getNativeMap().then(function (m) {\n            return new google.maps.KmlLayer({\n                clickable: layer.clickable,\n                map: m,\n                preserveViewport: layer.preserveViewport,\n                screenOverlays: layer.screenOverlays,\n                suppressInfoWindows: layer.suppressInfoWindows,\n                url: layer.url,\n                zIndex: layer.zIndex\n            });\n        });\n        this._layers.set(layer, newLayer);\n    };\n    KmlLayerManager.prototype.setOptions = function (layer, options) {\n        this._layers.get(layer).then(function (l) { return l.setOptions(options); });\n    };\n    KmlLayerManager.prototype.deleteKmlLayer = function (layer) {\n        var _this = this;\n        this._layers.get(layer).then(function (l) {\n            l.setMap(null);\n            _this._layers.delete(layer);\n        });\n    };\n    /**\n     * Creates a Google Maps event listener for the given KmlLayer as an Observable\n     */\n    KmlLayerManager.prototype.createEventObservable = function (eventName, layer) {\n        var _this = this;\n        return __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__[\"Observable\"].create(function (observer) {\n            _this._layers.get(layer).then(function (m) {\n                m.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    return KmlLayerManager;\n}());\n\nKmlLayerManager.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n];\n/** @nocollapse */\nKmlLayerManager.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__[\"a\" /* GoogleMapsAPIWrapper */], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n]; };\n//# sourceMappingURL=kml-layer-manager.js.map\n\n/***/ }),\n/* 93 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__ = __webpack_require__(25);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return PolygonManager; });\n\n\n\nvar PolygonManager = (function () {\n    function PolygonManager(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._polygons = new Map();\n    }\n    PolygonManager.prototype.addPolygon = function (path) {\n        var polygonPromise = this._mapsWrapper.createPolygon({\n            clickable: path.clickable,\n            draggable: path.draggable,\n            editable: path.editable,\n            fillColor: path.fillColor,\n            fillOpacity: path.fillOpacity,\n            geodesic: path.geodesic,\n            paths: path.paths,\n            strokeColor: path.strokeColor,\n            strokeOpacity: path.strokeOpacity,\n            strokeWeight: path.strokeWeight,\n            visible: path.visible,\n            zIndex: path.zIndex,\n        });\n        this._polygons.set(path, polygonPromise);\n    };\n    PolygonManager.prototype.updatePolygon = function (polygon) {\n        var _this = this;\n        var m = this._polygons.get(polygon);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then(function (l) { return _this._zone.run(function () { l.setPaths(polygon.paths); }); });\n    };\n    PolygonManager.prototype.setPolygonOptions = function (path, options) {\n        return this._polygons.get(path).then(function (l) { l.setOptions(options); });\n    };\n    PolygonManager.prototype.deletePolygon = function (paths) {\n        var _this = this;\n        var m = this._polygons.get(paths);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then(function (l) {\n            return _this._zone.run(function () {\n                l.setMap(null);\n                _this._polygons.delete(paths);\n            });\n        });\n    };\n    PolygonManager.prototype.createEventObservable = function (eventName, path) {\n        var _this = this;\n        return __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__[\"Observable\"].create(function (observer) {\n            _this._polygons.get(path).then(function (l) {\n                l.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    return PolygonManager;\n}());\n\nPolygonManager.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n];\n/** @nocollapse */\nPolygonManager.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__[\"a\" /* GoogleMapsAPIWrapper */], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n]; };\n//# sourceMappingURL=polygon-manager.js.map\n\n/***/ }),\n/* 94 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__ = __webpack_require__(25);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return PolylineManager; });\n\n\n\nvar PolylineManager = (function () {\n    function PolylineManager(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._polylines = new Map();\n    }\n    PolylineManager._convertPoints = function (line) {\n        var path = line._getPoints().map(function (point) {\n            return { lat: point.latitude, lng: point.longitude };\n        });\n        return path;\n    };\n    PolylineManager.prototype.addPolyline = function (line) {\n        var path = PolylineManager._convertPoints(line);\n        var polylinePromise = this._mapsWrapper.createPolyline({\n            clickable: line.clickable,\n            draggable: line.draggable,\n            editable: line.editable,\n            geodesic: line.geodesic,\n            strokeColor: line.strokeColor,\n            strokeOpacity: line.strokeOpacity,\n            strokeWeight: line.strokeWeight,\n            visible: line.visible,\n            zIndex: line.zIndex,\n            path: path\n        });\n        this._polylines.set(line, polylinePromise);\n    };\n    PolylineManager.prototype.updatePolylinePoints = function (line) {\n        var _this = this;\n        var path = PolylineManager._convertPoints(line);\n        var m = this._polylines.get(line);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then(function (l) { return _this._zone.run(function () { l.setPath(path); }); });\n    };\n    PolylineManager.prototype.setPolylineOptions = function (line, options) {\n        return this._polylines.get(line).then(function (l) { l.setOptions(options); });\n    };\n    PolylineManager.prototype.deletePolyline = function (line) {\n        var _this = this;\n        var m = this._polylines.get(line);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then(function (l) {\n            return _this._zone.run(function () {\n                l.setMap(null);\n                _this._polylines.delete(line);\n            });\n        });\n    };\n    PolylineManager.prototype.createEventObservable = function (eventName, line) {\n        var _this = this;\n        return __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__[\"Observable\"].create(function (observer) {\n            _this._polylines.get(line).then(function (l) {\n                l.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    return PolylineManager;\n}());\n\nPolylineManager.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n];\n/** @nocollapse */\nPolylineManager.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_2__google_maps_api_wrapper__[\"a\" /* GoogleMapsAPIWrapper */], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n]; };\n//# sourceMappingURL=polyline-manager.js.map\n\n/***/ }),\n/* 95 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_browser_globals__ = __webpack_require__(139);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__maps_api_loader__ = __webpack_require__(68);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return GoogleMapsScriptProtocol; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return LAZY_MAPS_API_CONFIG; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return LazyMapsAPILoader; });\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar GoogleMapsScriptProtocol;\n(function (GoogleMapsScriptProtocol) {\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTP\"] = 1] = \"HTTP\";\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTPS\"] = 2] = \"HTTPS\";\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"AUTO\"] = 3] = \"AUTO\";\n})(GoogleMapsScriptProtocol || (GoogleMapsScriptProtocol = {}));\n/**\n * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link\n * LazyMapsAPILoaderConfig}.\n */\nvar LAZY_MAPS_API_CONFIG = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"OpaqueToken\"]('angular-google-maps LAZY_MAPS_API_CONFIG');\nvar LazyMapsAPILoader = (function (_super) {\n    __extends(LazyMapsAPILoader, _super);\n    function LazyMapsAPILoader(config, w, d) {\n        var _this = _super.call(this) || this;\n        _this._config = config || {};\n        _this._windowRef = w;\n        _this._documentRef = d;\n        return _this;\n    }\n    LazyMapsAPILoader.prototype.load = function () {\n        var _this = this;\n        if (this._scriptLoadingPromise) {\n            return this._scriptLoadingPromise;\n        }\n        var script = this._documentRef.getNativeDocument().createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n        script.defer = true;\n        var callbackName = \"angular2GoogleMapsLazyMapsAPILoader\";\n        script.src = this._getScriptSrc(callbackName);\n        this._scriptLoadingPromise = new Promise(function (resolve, reject) {\n            _this._windowRef.getNativeWindow()[callbackName] = function () { resolve(); };\n            script.onerror = function (error) { reject(error); };\n        });\n        this._documentRef.getNativeDocument().body.appendChild(script);\n        return this._scriptLoadingPromise;\n    };\n    LazyMapsAPILoader.prototype._getScriptSrc = function (callbackName) {\n        var protocolType = (this._config && this._config.protocol) || GoogleMapsScriptProtocol.HTTPS;\n        var protocol;\n        switch (protocolType) {\n            case GoogleMapsScriptProtocol.AUTO:\n                protocol = '';\n                break;\n            case GoogleMapsScriptProtocol.HTTP:\n                protocol = 'http:';\n                break;\n            case GoogleMapsScriptProtocol.HTTPS:\n                protocol = 'https:';\n                break;\n        }\n        var hostAndPath = this._config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n        var queryParams = {\n            v: this._config.apiVersion || '3',\n            callback: callbackName,\n            key: this._config.apiKey,\n            client: this._config.clientId,\n            channel: this._config.channel,\n            libraries: this._config.libraries,\n            region: this._config.region,\n            language: this._config.language\n        };\n        var params = Object.keys(queryParams)\n            .filter(function (k) { return queryParams[k] != null; })\n            .filter(function (k) {\n            // remove empty arrays\n            return !Array.isArray(queryParams[k]) ||\n                (Array.isArray(queryParams[k]) && queryParams[k].length > 0);\n        })\n            .map(function (k) {\n            // join arrays as comma seperated strings\n            var i = queryParams[k];\n            if (Array.isArray(i)) {\n                return { key: k, value: i.join(',') };\n            }\n            return { key: k, value: queryParams[k] };\n        })\n            .map(function (entry) { return entry.key + \"=\" + entry.value; })\n            .join('&');\n        return protocol + \"//\" + hostAndPath + \"?\" + params;\n    };\n    return LazyMapsAPILoader;\n}(__WEBPACK_IMPORTED_MODULE_2__maps_api_loader__[\"a\" /* MapsAPILoader */]));\n\nLazyMapsAPILoader.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n];\n/** @nocollapse */\nLazyMapsAPILoader.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [LAZY_MAPS_API_CONFIG,] },] },\n    { type: __WEBPACK_IMPORTED_MODULE_1__utils_browser_globals__[\"b\" /* WindowRef */], },\n    { type: __WEBPACK_IMPORTED_MODULE_1__utils_browser_globals__[\"c\" /* DocumentRef */], },\n]; };\n//# sourceMappingURL=lazy-maps-api-loader.js.map\n\n/***/ }),\n/* 96 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return AnimationBuilder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return AnimationFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return AUTO_STYLE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return animate; });\n/* unused harmony export animateChild */\n/* unused harmony export animation */\n/* unused harmony export group */\n/* unused harmony export keyframes */\n/* unused harmony export query */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return sequence; });\n/* unused harmony export stagger */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return state; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return style; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return transition; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return trigger; });\n/* unused harmony export useAnimation */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return NoopAnimationPlayer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return AnimationGroupPlayer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return ɵPRE_STYLE; });\n/**\n * @license Angular v4.2.3\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * AnimationBuilder is an injectable service that is available when the {\\@link\n * BrowserAnimationsModule BrowserAnimationsModule} or {\\@link NoopAnimationsModule\n * NoopAnimationsModule} modules are used within an application.\n *\n * The purpose if this service is to produce an animation sequence programmatically within an\n * angular component or directive.\n *\n * Programmatic animations are first built and then a player is created when the build animation is\n * attached to an element.\n *\n * ```ts\n * // remember to include the BrowserAnimationsModule module for this to work...\n * import {AnimationBuilder} from '\\@angular/animations';\n *\n * class MyCmp {\n *   constructor(private _builder: AnimationBuilder) {}\n *\n *   makeAnimation(element: any) {\n *     // first build the animation\n *     const myAnimation = this._builder.build([\n *       style({ width: 0 }),\n *       animate(1000, style({ width: '100px' }))\n *     ]);\n *\n *     // then create a player from it\n *     const player = myAnimation.create(element);\n *\n *     player.play();\n *   }\n * }\n * ```\n *\n * When an animation is built an instance of {\\@link AnimationFactory AnimationFactory} will be\n * returned. Using that an {\\@link AnimationPlayer AnimationPlayer} can be created which can then be\n * used to start the animation.\n *\n * \\@experimental Animation support is experimental.\n * @abstract\n */\nvar AnimationBuilder = (function () {\n    function AnimationBuilder() {\n    }\n    /**\n     * @abstract\n     * @param {?} animation\n     * @return {?}\n     */\n    AnimationBuilder.prototype.build = function (animation) { };\n    return AnimationBuilder;\n}());\n/**\n * An instance of `AnimationFactory` is returned from {\\@link AnimationBuilder#build\n * AnimationBuilder.build}.\n *\n * \\@experimental Animation support is experimental.\n * @abstract\n */\nvar AnimationFactory = (function () {\n    function AnimationFactory() {\n    }\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?=} options\n     * @return {?}\n     */\n    AnimationFactory.prototype.create = function (element, options) { };\n    return AnimationFactory;\n}());\n/**\n * \\@experimental Animation support is experimental.\n */\nvar AUTO_STYLE = '*';\n/**\n * `trigger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `trigger` Creates an animation trigger which will a list of {\\@link state state} and {\\@link\n * transition transition} entries that will be evaluated when the expression bound to the trigger\n * changes.\n *\n * Triggers are registered within the component annotation data under the {\\@link\n * Component#animations animations section}. An animation trigger can be placed on an element\n * within a template by referencing the name of the trigger followed by the expression value that the\n * trigger is bound to (in the form of `[\\@triggerName]=\"expression\"`.\n *\n * ### Usage\n *\n * `trigger` will create an animation trigger reference based on the provided `name` value. The\n * provided `animation` value is expected to be an array consisting of {\\@link state state} and {\\@link\n * transition transition} declarations.\n *\n * ```typescript\n * \\@Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * tools/gulp-tasks/validate-commit-message.js ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger(name, definitions) {\n    return { type: 7 /* Trigger */, name: name, definitions: definitions, options: {} };\n}\n/**\n * `animate` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `animate` specifies an animation step that will apply the provided `styles` data for a given\n * amount of time based on the provided `timing` expression value. Calls to `animate` are expected\n * to be used within {\\@link sequence an animation sequence}, {\\@link group group}, or {\\@link\n * transition transition}.\n *\n * ### Usage\n *\n * The `animate` function accepts two input parameters: `timing` and `styles`:\n *\n * - `timing` is a string based value that can be a combination of a duration with optional delay\n * and easing values. The format for the expression breaks down to `duration delay easing`\n * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n * delay=100, easing=ease-out`. If a numeric value is provided then that will be used as the\n * `duration` value in millisecond form.\n * - `styles` is the style input data which can either be a call to {\\@link style style} or {\\@link\n * keyframes keyframes}. If left empty then the styles from the destination state will be collected\n * and used (this is useful when describing an animation step that will complete an animation by\n * {\\@link transition#the-final-animate-call animating to the final state}).\n *\n * ```typescript\n * // various functions for specifying timing data\n * animate(500, style(...))\n * animate(\"1s\", style(...))\n * animate(\"100ms 0.5s\", style(...))\n * animate(\"5s ease\", style(...))\n * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n *\n * // either style() of keyframes() can be used\n * animate(500, style({ background: \"red\" }))\n * animate(500, keyframes([\n *   style({ background: \"blue\" })),\n *   style({ background: \"red\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate(timings, styles) {\n    if (styles === void 0) { styles = null; }\n    return { type: 4 /* Animate */, styles: styles, timings: timings };\n}\n/**\n * `group` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `group` specifies a list of animation steps that are all run in parallel. Grouped animations are\n * useful when a series of styles must be animated/closed off at different statrting/ending times.\n *\n * The `group` function can either be used within a {\\@link sequence sequence} or a {\\@link transition\n * transition} and it will only continue to the next instruction once all of the inner animation\n * steps have completed.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `group` animation function can either consist of {\\@link\n * style style} or {\\@link animate animate} function calls. Each call to `style()` or `animate()`\n * within a group will be executed instantly (use {\\@link keyframes keyframes} or a {\\@link\n * animate#usage animate() with a delay value} to offset styles to be applied at a later time).\n *\n * ```typescript\n * group([\n *   animate(\"1s\", { background: \"black\" }))\n *   animate(\"2s\", { color: \"white\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction group(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 3 /* Group */, steps: steps, options: options };\n}\n/**\n * `sequence` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used by\n * default when an array is passed as animation data into {\\@link transition transition}.)\n *\n * The `sequence` function can either be used within a {\\@link group group} or a {\\@link transition\n * transition} and it will only continue to the next instruction once each of the inner animation\n * steps have completed.\n *\n * To perform animation styling in parallel with other animation steps then have a look at the\n * {\\@link group group} animation function.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `sequence` animation function can either consist of\n * {\\@link style style} or {\\@link animate animate} function calls. A call to `style()` will apply the\n * provided styling data immediately while a call to `animate()` will apply its styling data over a\n * given time depending on its timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 })),\n *   animate(\"1s\", { opacity: 1 }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction sequence(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 2 /* Sequence */, steps: steps, options: options };\n}\n/**\n * `style` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `style` declares a key/value object containing CSS properties/styles that can then be used for\n * {\\@link state animation states}, within an {\\@link sequence animation sequence}, or as styling data\n * for both {\\@link animate animate} and {\\@link keyframes keyframes}.\n *\n * ### Usage\n *\n * `style` takes in a key/value string map as data and expects one or more CSS property/value pairs\n * to be defined.\n *\n * ```typescript\n * // string values are used for css properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical (pixel) values are also supported\n * style({ width: 100, height: 0 })\n * ```\n *\n * #### Auto-styles (using `*`)\n *\n * When an asterix (`*`) character is used as a value then it will be detected from the element\n * being animated and applied as animation data when the animation starts.\n *\n * This feature proves useful for a state depending on layout and/or environment factors; in such\n * cases the styles are calculated just before the animation starts.\n *\n * ```typescript\n * // the steps below will animate from 0 to the\n * // actual height of the element\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} tokens\n * @return {?}\n */\nfunction style(tokens) {\n    return { type: 6 /* Style */, styles: tokens, offset: null };\n}\n/**\n * `state` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `state` declares an animation state within the given trigger. When a state is active within a\n * component then its associated styles will persist on the element that the trigger is attached to\n * (even when the animation ends).\n *\n * To animate between states, have a look at the animation {\\@link transition transition} DSL\n * function. To register states to an animation trigger please have a look at the {\\@link trigger\n * trigger} function.\n *\n * #### The `void` state\n *\n * The `void` state value is a reserved word that angular uses to determine when the element is not\n * apart of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n * associated element is void).\n *\n * #### The `*` (default) state\n *\n * The `*` state (when styled) is a fallback state that will be used if the state that is being\n * animated is not declared within the trigger.\n *\n * ### Usage\n *\n * `state` will declare an animation state with its associated styles\n * within the given trigger.\n *\n * - `stateNameExpr` can be one or more state names separated by commas.\n * - `styles` refers to the {\\@link style styling data} that will be persisted on the element once\n * the state has been reached.\n *\n * ```typescript\n * // \"void\" is a reserved name for a state and is used to represent\n * // the state in which an element is detached from from the application.\n * state(\"void\", style({ height: 0 }))\n *\n * // user-defined states\n * state(\"closed\", style({ height: 0 }))\n * state(\"open, visible\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} styles\n * @return {?}\n */\nfunction state(name, styles) {\n    return { type: 0 /* State */, name: name, styles: styles };\n}\n/**\n * `keyframes` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `keyframes` specifies a collection of {\\@link style style} entries each optionally characterized\n * by an `offset` value.\n *\n * ### Usage\n *\n * The `keyframes` animation function is designed to be used alongside the {\\@link animate animate}\n * animation function. Instead of applying animations from where they are currently to their\n * destination, keyframes can describe how each style entry is applied and at what point within the\n * animation arc (much like CSS Keyframe Animations do).\n *\n * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at what\n * percentage of the animate time the styles will be applied.\n *\n * ```typescript\n * // the provided offset values describe when each backgroundColor value is applied.\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * Alternatively, if there are no `offset` values used within the style entries then the offsets\n * will be calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes(steps) {\n    return { type: 5 /* Keyframes */, steps: steps };\n}\n/**\n * `transition` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `transition` declares the {\\@link sequence sequence of animation steps} that will be run when the\n * provided `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 =>\n * state2` which consists of two known states (use an asterix (`*`) to refer to a dynamic starting\n * and/or ending state).\n *\n * A function can also be provided as the `stateChangeExpr` argument for a transition and this\n * function will be executed each time a state change occurs. If the value returned within the\n * function is true then the associated animation will be run.\n *\n * Animation transitions are placed within an {\\@link trigger animation trigger}. For an transition\n * to animate to a state value and persist its styles then one or more {\\@link state animation\n * states} is expected to be defined.\n *\n * ### Usage\n *\n * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n * what the previous state is and what the current state has become. In other words, if a transition\n * is defined that matches the old/current state criteria then the associated animation will be\n * triggered.\n *\n * ```typescript\n * // all transition/state changes are defined within an animation trigger\n * trigger(\"myAnimationTrigger\", [\n *   // if a state is defined then its styles will be persisted when the\n *   // animation has fully completed itself\n *   state(\"on\", style({ background: \"green\" })),\n *   state(\"off\", style({ background: \"grey\" })),\n *\n *   // a transition animation that will be kicked off when the state value\n *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n *   transition(\"on => off\", animate(500)),\n *\n *   // it is also possible to do run the same animation for both directions\n *   transition(\"on <=> off\", animate(500)),\n *\n *   // or to define multiple states pairs separated by commas\n *   transition(\"on => off, off => void\", animate(500)),\n *\n *   // this is a catch-all state change for when an element is inserted into\n *   // the page and the destination state is unknown\n *   transition(\"void => *\", [\n *     style({ opacity: 0 }),\n *     animate(500)\n *   ]),\n *\n *   // this will capture a state change between any states\n *   transition(\"* => *\", animate(\"1s 0s\")),\n *\n *   // you can also go full out and include a function\n *   transition((fromState, toState) => {\n *     // when `true` then it will allow the animation below to be invoked\n *     return fromState == \"off\" && toState == \"on\";\n *   }, animate(\"1s 0s\"))\n * ])\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * #### The final `animate` call\n *\n * If the final step within the transition steps is a call to `animate()` that **only** uses a\n * timing value with **no style data** then it will be automatically used as the final animation arc\n * for the element to animate itself to the final state. This involves an automatic mix of\n * adding/removing CSS styles so that the element will be in the exact state it should be for the\n * applied state to be presented correctly.\n *\n * ```\n * // start off by hiding the element, but make sure that it animates properly to whatever state\n * // is currently active for \"myAnimationTrigger\"\n * transition(\"void => *\", [\n *   style({ opacity: 0 }),\n *   animate(500)\n * ])\n * ```\n *\n * ### Transition Aliases (`:enter` and `:leave`)\n *\n * Given that enter (insertion) and leave (removal) animations are so common, the `transition`\n * function accepts both `:enter` and `:leave` values which are aliases for the `void => *` and `*\n * => void` state changes.\n *\n * ```\n * transition(\":enter\", [\n *   style({ opacity: 0 }),\n *   animate(500, style({ opacity: 1 }))\n * ])\n * transition(\":leave\", [\n *   animate(500, style({ opacity: 0 }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction transition(stateChangeExpr, steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 1 /* Transition */, expr: stateChangeExpr, animation: steps, options: options };\n}\n/**\n * `animation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * `var myAnimation = animation(...)` is designed to produce a reusable animation that can be later\n * invoked in another animation or sequence. Reusable animations are designed to make use of\n * animation parameters and the produced animation can be used via the `useAnimation` method.\n *\n * ```\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *     style({ opacity: '{{ end }}'))\n * ], { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * If parameters are attached to an animation then they act as **default parameter values**. When an\n * animation is invoked via `useAnimation` then parameter values are allowed to be passed in\n * directly. If any of the passed in parameter values are missing then the default values will be\n * used.\n *\n * ```\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If one or more parameter values are missing before animated then an error will be thrown.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction animation(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 8 /* Reference */, animation: steps, options: options };\n}\n/**\n * `animateChild` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It works by allowing a queried element to execute its own\n * animation within the animation sequence.\n *\n * Each time an animation is triggered in angular, the parent animation\n * will always get priority and any child animations will be blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations and then allow the animations to run using `animateChild`.\n *\n * The example HTML code below shows both parent and child elements that have animation\n * triggers that will execute at the same time.\n *\n * ```html\n * <!-- parent-child.component.html -->\n * <button (click)=\"exp =! exp\">Toggle</button>\n * <hr>\n *\n * <div [\\@parentAnimation]=\"exp\">\n *   <header>Hello</header>\n *   <div [\\@childAnimation]=\"exp\">\n *       one\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       two\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       three\n *   </div>\n * </div>\n * ```\n *\n * Now when the `exp` value changes to true, only the `parentAnimation` animation will animate\n * because it has priority. However, using `query` and `animateChild` each of the inner animations\n * can also fire:\n *\n * ```ts\n * // parent-child.component.ts\n * import {trigger, transition, animate, style, query, animateChild} from '\\@angular/animations';\n * \\@Component({\n *   selector: 'parent-child-component',\n *   animations: [\n *     trigger('parentAnimation', [\n *       transition('false => true', [\n *         query('header', [\n *           style({ opacity: 0 }),\n *           animate(500, style({ opacity: 1 }))\n *         ]),\n *         query('\\@childAnimation', [\n *           animateChild()\n *         ])\n *       ])\n *     ]),\n *     trigger('childAnimation', [\n *       transition('false => true', [\n *         style({ opacity: 0 }),\n *         animate(500, style({ opacity: 1 }))\n *       ])\n *     ])\n *   ]\n * })\n * class ParentChildCmp {\n *   exp: boolean = false;\n * }\n * ```\n *\n * In the animation code above, when the `parentAnimation` transition kicks off it first queries to\n * find the header element and fades it in. It then finds each of the sub elements that contain the\n * `\\@childAnimation` trigger and then allows for their animations to fire.\n *\n * This example can be further extended by using stagger:\n *\n * ```ts\n * query('\\@childAnimation', stagger(100, [\n *   animateChild()\n * ]))\n * ```\n *\n * Now each of the sub animations start off with respect to the `100ms` staggering step.\n *\n * ## The first frame of child animations\n * When sub animations are executed using `animateChild` the animation engine will always apply the\n * first frame of every sub animation immediately at the start of the animation sequence. This way\n * the parent animation does not need to set any initial styling data on the sub elements before the\n * sub animations kick off.\n *\n * In the example above the first frame of the `childAnimation`'s `false => true` transition\n * consists of a style of `opacity: 0`. This is applied immediately when the `parentAnimation`\n * animation transition sequence starts. Only then when the `\\@childAnimation` is queried and called\n * with `animateChild` will it then animate to its destination of `opacity: 1`.\n *\n * Note that this feature designed to be used alongside {\\@link query query()} and it will only work\n * with animations that are assigned using the Angular animation DSL (this means that CSS keyframes\n * and transitions are not handled by this API).\n *\n * \\@experimental Animation support is experimental.\n * @param {?=} options\n * @return {?}\n */\nfunction animateChild(options) {\n    if (options === void 0) { options = null; }\n    return { type: 9 /* AnimateChild */, options: options };\n}\n/**\n * `useAnimation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is used to kick off a reusable animation that is created using {\\@link\n * animation animation()}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\nfunction useAnimation(animation, options) {\n    if (options === void 0) { options = null; }\n    return { type: 10 /* AnimateRef */, animation: animation, options: options };\n}\n/**\n * `query` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * query() is used to find one or more inner elements within the current element that is\n * being animated within the sequence. The provided animation steps are applied\n * to the queried element (by default, an array is provided, then this will be\n * treated as an animation sequence).\n *\n * ### Usage\n *\n * query() is designed to collect mutiple elements and works internally by using\n * `element.querySelectorAll`. An additional options object can be provided which\n * can be used to limit the total amount of items to be collected.\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * query(), by default, will throw an error when zero items are found. If a query\n * has the `optional` flag set to true then this error will be ignored.\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Special Selector Values\n *\n * The selector value within a query can collect elements that contain angular-specific\n * characteristics\n * using special pseudo-selectors tokens.\n *\n * These include:\n *\n *  - Querying for newly inserted/removed elements using `query(\":enter\")`/`query(\":leave\")`\n *  - Querying all currently animating elements using `query(\":animating\")`\n *  - Querying elements that contain an animation trigger using `query(\"\\@triggerName\")`\n *  - Querying all elements that contain an animation triggers using `query(\"\\@*\")`\n *  - Including the current element into the animation sequence using `query(\":self\")`\n *\n *\n *  Each of these pseudo-selector tokens can be merged together into a combined query selector\n * string:\n *\n *  ```\n *  query(':self, .record:enter, .record:leave, \\@subTrigger', [...])\n *  ```\n *\n * ### Demo\n *\n * ```\n * \\@Component({\n *   selector: 'inner',\n *   template: `\n *     <div [\\@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 })),\n *        query('.content', animate(1000, style({ opacity: 1 })),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * \\@experimental Animation support is experimental.\n * @param {?} selector\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\nfunction query(selector, animation, options) {\n    if (options === void 0) { options = null; }\n    return { type: 11 /* Query */, selector: selector, animation: animation, options: options };\n}\n/**\n * `stagger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is designed to be used inside of an animation {\\@link query query()}\n * and works by issuing a timing gap between after each queried item is animated.\n *\n * ### Usage\n *\n * In the example below there is a container element that wraps a list of items stamped out\n * by an ngFor. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [\\@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * The component code for this looks as such:\n *\n * ```ts\n * import {trigger, transition, style, animate, query, stagger} from '\\@angular/animations';\n * \\@Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *        //...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *   }\n * }\n * ```\n *\n * And now for the animation trigger code:\n *\n * ```ts\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * Now each time the items are added/removed then either the opacity\n * fade-in animation will run or each removed item will be faded out.\n * When either of these animations occur then a stagger effect will be\n * applied after each item's animation is started.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?} animation\n * @return {?}\n */\nfunction stagger(timings, animation) {\n    return { type: 12 /* Stagger */, timings: timings, animation: animation };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @param {?} cb\n * @return {?}\n */\nfunction scheduleMicroTask(cb) {\n    Promise.resolve(null).then(cb);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental Animation support is experimental.\n */\nvar NoopAnimationPlayer = (function () {\n    function NoopAnimationPlayer() {\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._onDestroyFns = [];\n        this._started = false;\n        this._destroyed = false;\n        this._finished = false;\n        this.parentPlayer = null;\n        this.totalTime = 0;\n    }\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype._onFinish = function () {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(function (fn) { return fn(); });\n            this._onDoneFns = [];\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.onDestroy = function (fn) { this._onDestroyFns.push(fn); };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.hasStarted = function () { return this._started; };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.init = function () { };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.play = function () {\n        if (!this.hasStarted()) {\n            this.triggerMicrotask();\n            this._onStart();\n        }\n        this._started = true;\n    };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.triggerMicrotask = function () {\n        var _this = this;\n        scheduleMicroTask(function () { return _this._onFinish(); });\n    };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype._onStart = function () {\n        this._onStartFns.forEach(function (fn) { return fn(); });\n        this._onStartFns = [];\n    };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.pause = function () { };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.restart = function () { };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.finish = function () { this._onFinish(); };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.destroy = function () {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            if (!this.hasStarted()) {\n                this._onStart();\n            }\n            this.finish();\n            this._onDestroyFns.forEach(function (fn) { return fn(); });\n            this._onDestroyFns = [];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.reset = function () { };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.setPosition = function (p) { };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.getPosition = function () { return 0; };\n    return NoopAnimationPlayer;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AnimationGroupPlayer = (function () {\n    /**\n     * @param {?} _players\n     */\n    function AnimationGroupPlayer(_players) {\n        var _this = this;\n        this._players = _players;\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._finished = false;\n        this._started = false;\n        this._destroyed = false;\n        this._onDestroyFns = [];\n        this.parentPlayer = null;\n        this.totalTime = 0;\n        var doneCount = 0;\n        var destroyCount = 0;\n        var startCount = 0;\n        var total = this._players.length;\n        if (total == 0) {\n            scheduleMicroTask(function () { return _this._onFinish(); });\n        }\n        else {\n            this._players.forEach(function (player) {\n                player.parentPlayer = _this;\n                player.onDone(function () {\n                    if (++doneCount >= total) {\n                        _this._onFinish();\n                    }\n                });\n                player.onDestroy(function () {\n                    if (++destroyCount >= total) {\n                        _this._onDestroy();\n                    }\n                });\n                player.onStart(function () {\n                    if (++startCount >= total) {\n                        _this._onStart();\n                    }\n                });\n            });\n        }\n        this.totalTime = this._players.reduce(function (time, player) { return Math.max(time, player.totalTime); }, 0);\n    }\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype._onFinish = function () {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(function (fn) { return fn(); });\n            this._onDoneFns = [];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.init = function () { this._players.forEach(function (player) { return player.init(); }); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype._onStart = function () {\n        if (!this.hasStarted()) {\n            this._onStartFns.forEach(function (fn) { return fn(); });\n            this._onStartFns = [];\n            this._started = true;\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.onDestroy = function (fn) { this._onDestroyFns.push(fn); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.hasStarted = function () { return this._started; };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.play = function () {\n        if (!this.parentPlayer) {\n            this.init();\n        }\n        this._onStart();\n        this._players.forEach(function (player) { return player.play(); });\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.pause = function () { this._players.forEach(function (player) { return player.pause(); }); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.restart = function () { this._players.forEach(function (player) { return player.restart(); }); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.finish = function () {\n        this._onFinish();\n        this._players.forEach(function (player) { return player.finish(); });\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.destroy = function () { this._onDestroy(); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype._onDestroy = function () {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            this._onFinish();\n            this._players.forEach(function (player) { return player.destroy(); });\n            this._onDestroyFns.forEach(function (fn) { return fn(); });\n            this._onDestroyFns = [];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.reset = function () {\n        this._players.forEach(function (player) { return player.reset(); });\n        this._destroyed = false;\n        this._finished = false;\n        this._started = false;\n    };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.setPosition = function (p) {\n        var /** @type {?} */ timeAtPosition = p * this.totalTime;\n        this._players.forEach(function (player) {\n            var /** @type {?} */ position = player.totalTime ? Math.min(1, timeAtPosition / player.totalTime) : 1;\n            player.setPosition(position);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.getPosition = function () {\n        var /** @type {?} */ min = 0;\n        this._players.forEach(function (player) {\n            var /** @type {?} */ p = player.getPosition();\n            min = Math.min(p, min);\n        });\n        return min;\n    };\n    Object.defineProperty(AnimationGroupPlayer.prototype, \"players\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._players; },\n        enumerable: true,\n        configurable: true\n    });\n    return AnimationGroupPlayer;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ɵPRE_STYLE = '!';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation package.\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the animation package.\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=animations.es5.js.map\n\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar http_1 = __webpack_require__(66);\r\nvar config_1 = __webpack_require__(69);\r\nvar FetcherService = (function () {\r\n    function FetcherService(http) {\r\n        this.http = http;\r\n    }\r\n    FetcherService.prototype.getPages = function () {\r\n        return this.http.get(config_1.Config.pagesUrl);\r\n    };\r\n    FetcherService = __decorate([\r\n        core_1.Injectable()\r\n        /**\r\n         * @DriverService used on all connections to the back-end\r\n         */\r\n        ,\r\n        __metadata(\"design:paramtypes\", [http_1.Http])\r\n    ], FetcherService);\r\n    return FetcherService;\r\n}());\r\nexports.FetcherService = FetcherService;\r\n\n\n/***/ }),\n/* 98 */,\n/* 99 */,\n/* 100 */,\n/* 101 */,\n/* 102 */,\n/* 103 */,\n/* 104 */,\n/* 105 */,\n/* 106 */,\n/* 107 */,\n/* 108 */,\n/* 109 */,\n/* 110 */,\n/* 111 */,\n/* 112 */,\n/* 113 */,\n/* 114 */,\n/* 115 */,\n/* 116 */,\n/* 117 */,\n/* 118 */,\n/* 119 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__helpers_index__ = __webpack_require__(186);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__enums_storage__ = __webpack_require__(38);\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = WebStorage;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = WebStorageDecorator;\n\r\n\r\nfunction WebStorage(webSKey, sType) {\r\n    return function (targetedClass, raw) {\r\n        WebStorageDecorator(webSKey, __WEBPACK_IMPORTED_MODULE_1__enums_storage__[\"a\" /* STORAGE */].local, targetedClass, raw);\r\n    };\r\n}\r\nfunction WebStorageDecorator(webSKey, sType, targetedClass, raw) {\r\n    var key = webSKey || raw;\r\n    Object.defineProperty(targetedClass, raw, {\r\n        get: function () {\r\n            var sKey = __WEBPACK_IMPORTED_MODULE_0__helpers_index__[\"a\" /* KeyStorageHelper */].genKey(key);\r\n            return __WEBPACK_IMPORTED_MODULE_0__helpers_index__[\"b\" /* WebStorageHelper */].retrieve(sType, sKey);\r\n        },\r\n        set: function (value) {\r\n            var sKey = __WEBPACK_IMPORTED_MODULE_0__helpers_index__[\"a\" /* KeyStorageHelper */].genKey(key);\r\n            this[sKey] = value;\r\n            __WEBPACK_IMPORTED_MODULE_0__helpers_index__[\"b\" /* WebStorageHelper */].store(sType, sKey, value);\r\n        }\r\n    });\r\n}\r\n//# sourceMappingURL=webStorage.js.map\n\n/***/ }),\n/* 120 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__constants_lib__ = __webpack_require__(80);\n/* unused harmony export isManagedKey */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return KeyStorageHelper; });\n\r\nvar CUSTOM_LIB_KEY = __WEBPACK_IMPORTED_MODULE_0__constants_lib__[\"a\" /* LIB_KEY */];\r\nvar CUSTOM_LIB_KEY_SEPARATOR = __WEBPACK_IMPORTED_MODULE_0__constants_lib__[\"b\" /* LIB_KEY_SEPARATOR */];\r\nfunction isManagedKey(sKey) {\r\n    return sKey.indexOf(CUSTOM_LIB_KEY + CUSTOM_LIB_KEY_SEPARATOR) === 0;\r\n}\r\nvar KeyStorageHelper = (function () {\r\n    function KeyStorageHelper() {\r\n    }\r\n    KeyStorageHelper.isManagedKey = function (sKey) {\r\n        return sKey.indexOf(CUSTOM_LIB_KEY + CUSTOM_LIB_KEY_SEPARATOR) === 0;\r\n    };\r\n    KeyStorageHelper.retrieveKeysFromStorage = function (storage) {\r\n        return Object.keys(storage).filter(isManagedKey);\r\n    };\r\n    KeyStorageHelper.genKey = function (raw) {\r\n        if (typeof raw !== 'string')\r\n            throw Error('attempt to generate a storage key with a non string value');\r\n        return \"\" + CUSTOM_LIB_KEY + CUSTOM_LIB_KEY_SEPARATOR + raw.toString().toLowerCase();\r\n    };\r\n    KeyStorageHelper.setStorageKeyPrefix = function (key) {\r\n        if (key === void 0) { key = __WEBPACK_IMPORTED_MODULE_0__constants_lib__[\"a\" /* LIB_KEY */]; }\r\n        CUSTOM_LIB_KEY = key;\r\n    };\r\n    KeyStorageHelper.setStorageKeySeparator = function (separator) {\r\n        if (separator === void 0) { separator = __WEBPACK_IMPORTED_MODULE_0__constants_lib__[\"b\" /* LIB_KEY_SEPARATOR */]; }\r\n        CUSTOM_LIB_KEY_SEPARATOR = separator;\r\n    };\r\n    return KeyStorageHelper;\r\n}());\r\n\r\n//# sourceMappingURL=keyStorage.js.map\n\n/***/ }),\n/* 121 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__helpers_index__ = __webpack_require__(186);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return WebStorageService; });\n\r\nvar WebStorageService = (function () {\r\n    function WebStorageService(sType) {\r\n        if (sType === void 0) { sType = null; }\r\n        this.sType = sType;\r\n        this.sType = sType;\r\n    }\r\n    WebStorageService.prototype.store = function (raw, value) {\r\n        var sKey = __WEBPACK_IMPORTED_MODULE_0__helpers_index__[\"a\" /* KeyStorageHelper */].genKey(raw);\r\n        __WEBPACK_IMPORTED_MODULE_0__helpers_index__[\"b\" /* WebStorageHelper */].store(this.sType, sKey, value);\r\n    };\r\n    WebStorageService.prototype.retrieve = function (raw) {\r\n        var sKey = __WEBPACK_IMPORTED_MODULE_0__helpers_index__[\"a\" /* KeyStorageHelper */].genKey(raw);\r\n        return __WEBPACK_IMPORTED_MODULE_0__helpers_index__[\"b\" /* WebStorageHelper */].retrieve(this.sType, sKey);\r\n    };\r\n    WebStorageService.prototype.clear = function (raw) {\r\n        if (raw)\r\n            __WEBPACK_IMPORTED_MODULE_0__helpers_index__[\"b\" /* WebStorageHelper */].clear(this.sType, __WEBPACK_IMPORTED_MODULE_0__helpers_index__[\"a\" /* KeyStorageHelper */].genKey(raw));\r\n        else\r\n            __WEBPACK_IMPORTED_MODULE_0__helpers_index__[\"b\" /* WebStorageHelper */].clearAll(this.sType);\r\n    };\r\n    WebStorageService.prototype.observe = function (raw) {\r\n        var sKey = __WEBPACK_IMPORTED_MODULE_0__helpers_index__[\"a\" /* KeyStorageHelper */].genKey(raw);\r\n        return __WEBPACK_IMPORTED_MODULE_0__helpers_index__[\"c\" /* StorageObserverHelper */].observe(this.sType, sKey);\r\n    };\r\n    return WebStorageService;\r\n}());\r\n\r\n//# sourceMappingURL=webStorage.js.map\n\n/***/ }),\n/* 122 */,\n/* 123 */,\n/* 124 */,\n/* 125 */,\n/* 126 */,\n/* 127 */,\n/* 128 */,\n/* 129 */,\n/* 130 */,\n/* 131 */,\n/* 132 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_managers_circle_manager__ = __webpack_require__(89);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AgmCircle; });\n\n\nvar AgmCircle = (function () {\n    function AgmCircle(_manager) {\n        this._manager = _manager;\n        /**\n         * Indicates whether this Circle handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this circle over the map. Defaults to false.\n         */\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this circle by dragging the control points shown at\n         * the center and around the circumference of the circle. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * The radius in meters on the Earth's surface.\n         */\n        this.radius = 0;\n        /**\n         * The stroke position. Defaults to CENTER.\n         * This property is not supported on Internet Explorer 8 and earlier.\n         */\n        this.strokePosition = 'CENTER';\n        /**\n         * The stroke width in pixels.\n         */\n        this.strokeWeight = 0;\n        /**\n         * Whether this circle is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the circle's center is changed.\n         */\n        this.centerChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event emitter gets emitted when the user clicks on the circle.\n         */\n        this.circleClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event emitter gets emitted when the user clicks on the circle.\n         */\n        this.circleDblClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is repeatedly fired while the user drags the circle.\n         */\n        this.drag = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the user stops dragging the circle.\n         */\n        this.dragEnd = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the user starts dragging the circle.\n         */\n        this.dragStart = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the circle.\n         */\n        this.mouseDown = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the circle.\n         */\n        this.mouseMove = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired on circle mouseout.\n         */\n        this.mouseOut = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired on circle mouseover.\n         */\n        this.mouseOver = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the DOM mouseup event is fired on the circle.\n         */\n        this.mouseUp = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the circle's radius is changed.\n         */\n        this.radiusChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the circle is right-clicked on.\n         */\n        this.rightClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this._circleAddedToManager = false;\n        this._eventSubscriptions = [];\n    }\n    /** @internal */\n    AgmCircle.prototype.ngOnInit = function () {\n        this._manager.addCircle(this);\n        this._circleAddedToManager = true;\n        this._registerEventListeners();\n    };\n    /** @internal */\n    AgmCircle.prototype.ngOnChanges = function (changes) {\n        if (!this._circleAddedToManager) {\n            return;\n        }\n        if (changes['latitude'] || changes['longitude']) {\n            this._manager.setCenter(this);\n        }\n        if (changes['editable']) {\n            this._manager.setEditable(this);\n        }\n        if (changes['draggable']) {\n            this._manager.setDraggable(this);\n        }\n        if (changes['visible']) {\n            this._manager.setVisible(this);\n        }\n        if (changes['radius']) {\n            this._manager.setRadius(this);\n        }\n        this._updateCircleOptionsChanges(changes);\n    };\n    AgmCircle.prototype._updateCircleOptionsChanges = function (changes) {\n        var options = {};\n        var optionKeys = Object.keys(changes).filter(function (k) { return AgmCircle._mapOptions.indexOf(k) !== -1; });\n        optionKeys.forEach(function (k) { options[k] = changes[k].currentValue; });\n        if (optionKeys.length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    };\n    AgmCircle.prototype._registerEventListeners = function () {\n        var _this = this;\n        var events = new Map();\n        events.set('center_changed', this.centerChange);\n        events.set('click', this.circleClick);\n        events.set('dblclick', this.circleDblClick);\n        events.set('drag', this.drag);\n        events.set('dragend', this.dragEnd);\n        events.set('dragStart', this.dragStart);\n        events.set('mousedown', this.mouseDown);\n        events.set('mousemove', this.mouseMove);\n        events.set('mouseout', this.mouseOut);\n        events.set('mouseover', this.mouseOver);\n        events.set('mouseup', this.mouseUp);\n        events.set('radius_changed', this.radiusChange);\n        events.set('rightclick', this.rightClick);\n        events.forEach(function (eventEmitter, eventName) {\n            _this._eventSubscriptions.push(_this._manager.createEventObservable(eventName, _this).subscribe(function (value) {\n                switch (eventName) {\n                    case 'radius_changed':\n                        _this._manager.getRadius(_this).then(function (radius) { return eventEmitter.emit(radius); });\n                        break;\n                    case 'center_changed':\n                        _this._manager.getCenter(_this).then(function (center) {\n                            return eventEmitter.emit({ lat: center.lat(), lng: center.lng() });\n                        });\n                        break;\n                    default:\n                        eventEmitter.emit({ coords: { lat: value.latLng.lat(), lng: value.latLng.lng() } });\n                }\n            }));\n        });\n    };\n    /** @internal */\n    AgmCircle.prototype.ngOnDestroy = function () {\n        this._eventSubscriptions.forEach(function (s) { s.unsubscribe(); });\n        this._eventSubscriptions = null;\n        this._manager.removeCircle(this);\n    };\n    /**\n     * Gets the LatLngBounds of this Circle.\n     */\n    AgmCircle.prototype.getBounds = function () { return this._manager.getBounds(this); };\n    AgmCircle.prototype.getCenter = function () { return this._manager.getCenter(this); };\n    return AgmCircle;\n}());\n\nAgmCircle._mapOptions = [\n    'fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight',\n    'visible', 'zIndex'\n];\nAgmCircle.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'agm-circle',\n                inputs: [\n                    'latitude', 'longitude', 'clickable', 'draggable: circleDraggable', 'editable', 'fillColor',\n                    'fillOpacity', 'radius', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight',\n                    'visible', 'zIndex'\n                ],\n                outputs: [\n                    'centerChange', 'circleClick', 'circleDblClick', 'drag', 'dragEnd', 'dragStart', 'mouseDown',\n                    'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'radiusChange', 'rightClick'\n                ]\n            },] },\n];\n/** @nocollapse */\nAgmCircle.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_1__services_managers_circle_manager__[\"a\" /* CircleManager */], },\n]; };\n//# sourceMappingURL=circle.js.map\n\n/***/ }),\n/* 133 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_managers_data_layer_manager__ = __webpack_require__(90);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AgmDataLayer; });\n\n\nvar layerId = 0;\n/**\n * AgmDataLayer enables the user to add data layers to the map.\n *\n * ### Example\n * ```typescript\n * import { Component } from 'angular2/core';\n * import { AgmMap, AgmDataLayer } from\n * 'angular-google-maps/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  directives: [AgmMap, AgmDataLayer],\n *  styles: [`\n *    .agm-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n * <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n * \t  <agm-data-layer [geoJson]=\"geoJsonObject\" (layerClick)=\"clicked($event)\" [style]=\"styleFunc\">\n * \t  </agm-data-layer>\n * </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = -25.274449;\n *   lng: number = 133.775060;\n *   zoom: number = 5;\n *\n * clicked(clickEvent) {\n *    console.log(clickEvent);\n *  }\n *\n *  styleFunc(feature) {\n *    return ({\n *      clickable: false,\n *      fillColor: feature.getProperty('color'),\n *      strokeWeight: 1\n *    });\n *  }\n *\n *  geoJsonObject: Object = {\n *    \"type\": \"FeatureCollection\",\n *    \"features\": [\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"G\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"71\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [123.61, -22.14], [122.38, -21.73], [121.06, -21.69], [119.66, -22.22], [119.00, -23.40],\n *              [118.65, -24.76], [118.43, -26.07], [118.78, -27.56], [119.22, -28.57], [120.23, -29.49],\n *              [121.77, -29.87], [123.57, -29.64], [124.45, -29.03], [124.71, -27.95], [124.80, -26.70],\n *              [124.80, -25.60], [123.61, -25.64], [122.56, -25.64], [121.72, -25.72], [121.81, -26.62],\n *              [121.86, -26.98], [122.60, -26.90], [123.57, -27.05], [123.57, -27.68], [123.35, -28.18],\n *              [122.51, -28.38], [121.77, -28.26], [121.02, -27.91], [120.49, -27.21], [120.14, -26.50],\n *              [120.10, -25.64], [120.27, -24.52], [120.67, -23.68], [121.72, -23.32], [122.43, -23.48],\n *              [123.04, -24.04], [124.54, -24.28], [124.58, -23.20], [123.61, -22.14]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"red\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [128.84, -25.76], [128.18, -25.60], [127.96, -25.52], [127.88, -25.52], [127.70, -25.60],\n *              [127.26, -25.79], [126.60, -26.11], [126.16, -26.78], [126.12, -27.68], [126.21, -28.42],\n *              [126.69, -29.49], [127.74, -29.80], [128.80, -29.72], [129.41, -29.03], [129.72, -27.95],\n *              [129.68, -27.21], [129.33, -26.23], [128.84, -25.76]\n *            ],\n *            [\n *              [128.45, -27.44], [128.32, -26.94], [127.70, -26.82], [127.35, -27.05], [127.17, -27.80],\n *              [127.57, -28.22], [128.10, -28.42], [128.49, -27.80], [128.45, -27.44]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"yellow\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [131.87, -25.76], [131.35, -26.07], [130.95, -26.78], [130.82, -27.64], [130.86, -28.53],\n *              [131.26, -29.22], [131.92, -29.76], [132.45, -29.87], [133.06, -29.76], [133.72, -29.34],\n *              [134.07, -28.80], [134.20, -27.91], [134.07, -27.21], [133.81, -26.31], [133.37, -25.83],\n *              [132.71, -25.64], [131.87, -25.76]\n *            ],\n *            [\n *              [133.15, -27.17], [132.71, -26.86], [132.09, -26.90], [131.74, -27.56], [131.79, -28.26],\n *              [132.36, -28.45], [132.93, -28.34], [133.15, -27.76], [133.15, -27.17]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"g\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"103\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [138.12, -25.04], [136.84, -25.16], [135.96, -25.36], [135.26, -25.99], [135, -26.90],\n *              [135.04, -27.91], [135.26, -28.88], [136.05, -29.45], [137.02, -29.49], [137.81, -29.49],\n *              [137.94, -29.99], [137.90, -31.20], [137.85, -32.24], [136.88, -32.69], [136.45, -32.36],\n *              [136.27, -31.80], [134.95, -31.84], [135.17, -32.99], [135.52, -33.43], [136.14, -33.76],\n *              [137.06, -33.83], [138.12, -33.65], [138.86, -33.21], [139.30, -32.28], [139.30, -31.24],\n *              [139.30, -30.14], [139.21, -28.96], [139.17, -28.22], [139.08, -27.41], [139.08, -26.47],\n *              [138.99, -25.40], [138.73, -25.00], [138.12, -25.04]\n *            ],\n *            [\n *              [137.50, -26.54], [136.97, -26.47], [136.49, -26.58], [136.31, -27.13], [136.31, -27.72],\n *              [136.58, -27.99], [137.50, -28.03], [137.68, -27.68], [137.59, -26.78], [137.50, -26.54]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"l\",\n *          \"color\": \"green\",\n *          \"rank\": \"12\",\n *          \"ascii\": \"108\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [140.14, -21.04], [140.31, -29.42], [141.67, -29.49], [141.59, -20.92], [140.14, -21.04]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"e\",\n *          \"color\": \"red\",\n *          \"rank\": \"5\",\n *          \"ascii\": \"101\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [144.14, -27.41], [145.67, -27.52], [146.86, -27.09], [146.82, -25.64], [146.25, -25.04],\n *              [145.45, -24.68], [144.66, -24.60], [144.09, -24.76], [143.43, -25.08], [142.99, -25.40],\n *              [142.64, -26.03], [142.64, -27.05], [142.64, -28.26], [143.30, -29.11], [144.18, -29.57],\n *              [145.41, -29.64], [146.46, -29.19], [146.64, -28.72], [146.82, -28.14], [144.84, -28.42],\n *              [144.31, -28.26], [144.14, -27.41]\n *            ],\n *            [\n *              [144.18, -26.39], [144.53, -26.58], [145.19, -26.62], [145.72, -26.35], [145.81, -25.91],\n *              [145.41, -25.68], [144.97, -25.68], [144.49, -25.64], [144, -25.99], [144.18, -26.39]\n *            ]\n *          ]\n *        }\n *      }\n *    ]\n *  };\n * }\n * ```\n */\nvar AgmDataLayer = (function () {\n    function AgmDataLayer(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId++).toString();\n        this._subscriptions = [];\n        /**\n         * This event is fired when a feature in the layer is clicked.\n         */\n        this.layerClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * The geoJson to be displayed\n         */\n        this.geoJson = null;\n    }\n    AgmDataLayer.prototype.ngOnInit = function () {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addDataLayer(this);\n        this._addedToManager = true;\n        this._addEventListeners();\n    };\n    AgmDataLayer.prototype._addEventListeners = function () {\n        var _this = this;\n        var listeners = [\n            { name: 'click', handler: function (ev) { return _this.layerClick.emit(ev); } },\n        ];\n        listeners.forEach(function (obj) {\n            var os = _this._manager.createEventObservable(obj.name, _this).subscribe(obj.handler);\n            _this._subscriptions.push(os);\n        });\n    };\n    /** @internal */\n    AgmDataLayer.prototype.id = function () { return this._id; };\n    /** @internal */\n    AgmDataLayer.prototype.toString = function () { return \"AgmDataLayer-\" + this._id.toString(); };\n    /** @internal */\n    AgmDataLayer.prototype.ngOnDestroy = function () {\n        this._manager.deleteDataLayer(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    /** @internal */\n    AgmDataLayer.prototype.ngOnChanges = function (changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        var geoJsonChange = changes['geoJson'];\n        if (geoJsonChange) {\n            this._manager.updateGeoJson(this, geoJsonChange.currentValue);\n        }\n        var dataOptions = {};\n        var optionKeys = Object.keys(changes).filter(function (k) { return AgmDataLayer._dataOptionsAttributes.indexOf(k) !== -1; });\n        optionKeys.forEach(function (k) { return dataOptions[k] = changes[k].currentValue; });\n        this._manager.setDataOptions(this, dataOptions);\n    };\n    return AgmDataLayer;\n}());\n\nAgmDataLayer._dataOptionsAttributes = ['style'];\nAgmDataLayer.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'agm-data-layer',\n                inputs: ['geoJson', 'style'],\n                outputs: ['layerClick']\n            },] },\n];\n/** @nocollapse */\nAgmDataLayer.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_1__services_managers_data_layer_manager__[\"a\" /* DataLayerManager */], },\n]; };\n//# sourceMappingURL=data-layer.js.map\n\n/***/ }),\n/* 134 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_managers_kml_layer_manager__ = __webpack_require__(92);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AgmKmlLayer; });\n\n\nvar layerId = 0;\nvar AgmKmlLayer = (function () {\n    function AgmKmlLayer(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId++).toString();\n        this._subscriptions = [];\n        /**\n         * If true, the layer receives mouse events. Default value is true.\n         */\n        this.clickable = true;\n        /**\n         * By default, the input map is centered and zoomed to the bounding box of the contents of the\n         * layer.\n         * If this option is set to true, the viewport is left unchanged, unless the map's center and zoom\n         * were never set.\n         */\n        this.preserveViewport = false;\n        /**\n         * Whether to render the screen overlays. Default true.\n         */\n        this.screenOverlays = true;\n        /**\n         * Suppress the rendering of info windows when layer features are clicked.\n         */\n        this.suppressInfoWindows = false;\n        /**\n         * The URL of the KML document to display.\n         */\n        this.url = null;\n        /**\n         * The z-index of the layer.\n         */\n        this.zIndex = null;\n        /**\n         * This event is fired when a feature in the layer is clicked.\n         */\n        this.layerClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the KML layers default viewport has changed.\n         */\n        this.defaultViewportChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the KML layer has finished loading.\n         * At this point it is safe to read the status property to determine if the layer loaded\n         * successfully.\n         */\n        this.statusChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n    }\n    AgmKmlLayer.prototype.ngOnInit = function () {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addKmlLayer(this);\n        this._addedToManager = true;\n        this._addEventListeners();\n    };\n    AgmKmlLayer.prototype.ngOnChanges = function (changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        this._updatePolygonOptions(changes);\n    };\n    AgmKmlLayer.prototype._updatePolygonOptions = function (changes) {\n        var options = Object.keys(changes)\n            .filter(function (k) { return AgmKmlLayer._kmlLayerOptions.indexOf(k) !== -1; })\n            .reduce(function (obj, k) {\n            obj[k] = changes[k].currentValue;\n            return obj;\n        }, {});\n        if (Object.keys(options).length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    };\n    AgmKmlLayer.prototype._addEventListeners = function () {\n        var _this = this;\n        var listeners = [\n            { name: 'click', handler: function (ev) { return _this.layerClick.emit(ev); } },\n            { name: 'defaultviewport_changed', handler: function () { return _this.defaultViewportChange.emit(); } },\n            { name: 'status_changed', handler: function () { return _this.statusChange.emit(); } },\n        ];\n        listeners.forEach(function (obj) {\n            var os = _this._manager.createEventObservable(obj.name, _this).subscribe(obj.handler);\n            _this._subscriptions.push(os);\n        });\n    };\n    /** @internal */\n    AgmKmlLayer.prototype.id = function () { return this._id; };\n    /** @internal */\n    AgmKmlLayer.prototype.toString = function () { return \"AgmKmlLayer-\" + this._id.toString(); };\n    /** @internal */\n    AgmKmlLayer.prototype.ngOnDestroy = function () {\n        this._manager.deleteKmlLayer(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    return AgmKmlLayer;\n}());\n\nAgmKmlLayer._kmlLayerOptions = ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex'];\nAgmKmlLayer.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'agm-kml-layer',\n                inputs: ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex'],\n                outputs: ['layerClick', 'defaultViewportChange', 'statusChange']\n            },] },\n];\n/** @nocollapse */\nAgmKmlLayer.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_1__services_managers_kml_layer_manager__[\"a\" /* KmlLayerManager */], },\n]; };\n//# sourceMappingURL=kml-layer.js.map\n\n/***/ }),\n/* 135 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_google_maps_api_wrapper__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_managers_circle_manager__ = __webpack_require__(89);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_managers_info_window_manager__ = __webpack_require__(91);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_managers_marker_manager__ = __webpack_require__(67);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_managers_polygon_manager__ = __webpack_require__(93);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_managers_polyline_manager__ = __webpack_require__(94);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_managers_kml_layer_manager__ = __webpack_require__(92);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_managers_data_layer_manager__ = __webpack_require__(90);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AgmMap; });\n\n\n\n\n\n\n\n\n\n/**\n * AgmMap renders a Google Map.\n * **Important note**: To be able see a map in the browser, you have to define a height for the\n * element `agm-map`.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *    </agm-map>\n *  `\n * })\n * ```\n */\nvar AgmMap = (function () {\n    function AgmMap(_elem, _mapsWrapper) {\n        this._elem = _elem;\n        this._mapsWrapper = _mapsWrapper;\n        /**\n         * The longitude that defines the center of the map.\n         */\n        this.longitude = 0;\n        /**\n         * The latitude that defines the center of the map.\n         */\n        this.latitude = 0;\n        /**\n         * The zoom level of the map. The default zoom level is 8.\n         */\n        this.zoom = 8;\n        /**\n         * Enables/disables if map is draggable.\n         */\n        this.draggable = true;\n        /**\n         * Enables/disables zoom and center on double click. Enabled by default.\n         */\n        this.disableDoubleClickZoom = false;\n        /**\n         * Enables/disables all default UI of the Google map. Please note: When the map is created, this\n         * value cannot get updated.\n         */\n        this.disableDefaultUI = false;\n        /**\n         * If false, disables scrollwheel zooming on the map. The scrollwheel is enabled by default.\n         */\n        this.scrollwheel = true;\n        /**\n         * If false, prevents the map from being controlled by the keyboard. Keyboard shortcuts are\n         * enabled by default.\n         */\n        this.keyboardShortcuts = true;\n        /**\n         * The enabled/disabled state of the Zoom control.\n         */\n        this.zoomControl = true;\n        /**\n         * Styles to apply to each of the default map types. Note that for Satellite/Hybrid and Terrain\n         * modes, these styles will only apply to labels and geometry.\n         */\n        this.styles = [];\n        /**\n         * When true and the latitude and/or longitude values changes, the Google Maps panTo method is\n         * used to\n         * center the map. See: https://developers.google.com/maps/documentation/javascript/reference#Map\n         */\n        this.usePanning = false;\n        /**\n         * The initial enabled/disabled state of the Street View Pegman control.\n         * This control is part of the default UI, and should be set to false when displaying a map type\n         * on which the Street View road overlay should not appear (e.g. a non-Earth map type).\n         */\n        this.streetViewControl = true;\n        /**\n         * Sets the viewport to contain the given bounds.\n         */\n        this.fitBounds = null;\n        /**\n         * The initial enabled/disabled state of the Scale control. This is disabled by default.\n         */\n        this.scaleControl = false;\n        /**\n         * The initial enabled/disabled state of the Map type control.\n         */\n        this.mapTypeControl = false;\n        /**\n         * The initial enabled/disabled state of the Pan control.\n         */\n        this.panControl = false;\n        /**\n         * The initial enabled/disabled state of the Rotate control.\n         */\n        this.rotateControl = false;\n        /**\n         * The initial enabled/disabled state of the Fullscreen control.\n         */\n        this.fullscreenControl = false;\n        /**\n         * The map mapTypeId. Defaults to 'roadmap'.\n         */\n        this.mapTypeId = 'roadmap';\n        /**\n         * When false, map icons are not clickable. A map icon represents a point of interest,\n         * also known as a POI. By default map icons are clickable.\n         */\n        this.clickableIcons = true;\n        /**\n         * This setting controls how gestures on the map are handled.\n         * Allowed values:\n         * - 'cooperative' (Two-finger touch gestures pan and zoom the map. One-finger touch gestures are not handled by the map.)\n         * - 'greedy'      (All touch gestures pan or zoom the map.)\n         * - 'none'        (The map cannot be panned or zoomed by user gestures.)\n         * - 'auto'        [default] (Gesture handling is either cooperative or greedy, depending on whether the page is scrollable or not.\n         */\n        this.gestureHandling = 'auto';\n        this._observableSubscriptions = [];\n        /**\n         * This event emitter gets emitted when the user clicks on the map (but not when they click on a\n         * marker or infoWindow).\n         */\n        this.mapClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event emitter gets emitted when the user right-clicks on the map (but not when they click\n         * on a marker or infoWindow).\n         */\n        this.mapRightClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event emitter gets emitted when the user double-clicks on the map (but not when they click\n         * on a marker or infoWindow).\n         */\n        this.mapDblClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event emitter is fired when the map center changes.\n         */\n        this.centerChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the viewport bounds have changed.\n         */\n        this.boundsChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the map becomes idle after panning or zooming.\n         */\n        this.idle = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the zoom level has changed.\n         */\n        this.zoomChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the google map is fully initialized.\n         * You get the google.maps.Map instance as a result of this EventEmitter.\n         */\n        this.mapReady = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n    }\n    /** @internal */\n    AgmMap.prototype.ngOnInit = function () {\n        // todo: this should be solved with a new component and a viewChild decorator\n        var container = this._elem.nativeElement.querySelector('.agm-map-container-inner');\n        this._initMapInstance(container);\n    };\n    AgmMap.prototype._initMapInstance = function (el) {\n        var _this = this;\n        this._mapsWrapper.createMap(el, {\n            center: { lat: this.latitude || 0, lng: this.longitude || 0 },\n            zoom: this.zoom,\n            minZoom: this.minZoom,\n            maxZoom: this.maxZoom,\n            disableDefaultUI: this.disableDefaultUI,\n            disableDoubleClickZoom: this.disableDoubleClickZoom,\n            scrollwheel: this.scrollwheel,\n            backgroundColor: this.backgroundColor,\n            draggable: this.draggable,\n            draggableCursor: this.draggableCursor,\n            draggingCursor: this.draggingCursor,\n            keyboardShortcuts: this.keyboardShortcuts,\n            styles: this.styles,\n            zoomControl: this.zoomControl,\n            zoomControlOptions: this.zoomControlOptions,\n            streetViewControl: this.streetViewControl,\n            streetViewControlOptions: this.streetViewControlOptions,\n            scaleControl: this.scaleControl,\n            scaleControlOptions: this.scaleControlOptions,\n            mapTypeControl: this.mapTypeControl,\n            mapTypeControlOptions: this.mapTypeControlOptions,\n            panControl: this.panControl,\n            panControlOptions: this.panControlOptions,\n            rotateControl: this.rotateControl,\n            rotateControlOptions: this.rotateControlOptions,\n            fullscreenControl: this.fullscreenControl,\n            fullscreenControlOptions: this.fullscreenControlOptions,\n            mapTypeId: this.mapTypeId,\n            clickableIcons: this.clickableIcons,\n            gestureHandling: this.gestureHandling\n        })\n            .then(function () { return _this._mapsWrapper.getNativeMap(); })\n            .then(function (map) { return _this.mapReady.emit(map); });\n        // register event listeners\n        this._handleMapCenterChange();\n        this._handleMapZoomChange();\n        this._handleMapMouseEvents();\n        this._handleBoundsChange();\n        this._handleIdleEvent();\n    };\n    /** @internal */\n    AgmMap.prototype.ngOnDestroy = function () {\n        // unsubscribe all registered observable subscriptions\n        this._observableSubscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    /* @internal */\n    AgmMap.prototype.ngOnChanges = function (changes) {\n        this._updateMapOptionsChanges(changes);\n        this._updatePosition(changes);\n    };\n    AgmMap.prototype._updateMapOptionsChanges = function (changes) {\n        var options = {};\n        var optionKeys = Object.keys(changes).filter(function (k) { return AgmMap._mapOptionsAttributes.indexOf(k) !== -1; });\n        optionKeys.forEach(function (k) { options[k] = changes[k].currentValue; });\n        this._mapsWrapper.setMapOptions(options);\n    };\n    /**\n     * Triggers a resize event on the google map instance.\n     * Returns a promise that gets resolved after the event was triggered.\n     */\n    AgmMap.prototype.triggerResize = function () {\n        var _this = this;\n        // Note: When we would trigger the resize event and show the map in the same turn (which is a\n        // common case for triggering a resize event), then the resize event would not\n        // work (to show the map), so we trigger the event in a timeout.\n        return new Promise(function (resolve) {\n            setTimeout(function () { return _this._mapsWrapper.triggerMapEvent('resize').then(function () { return resolve(); }); });\n        });\n    };\n    AgmMap.prototype._updatePosition = function (changes) {\n        if (changes['latitude'] == null && changes['longitude'] == null &&\n            changes['fitBounds'] == null) {\n            // no position update needed\n            return;\n        }\n        // we prefer fitBounds in changes\n        if (changes['fitBounds'] && this.fitBounds != null) {\n            this._fitBounds();\n            return;\n        }\n        if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n            return;\n        }\n        var newCenter = {\n            lat: this.latitude,\n            lng: this.longitude,\n        };\n        if (this.usePanning) {\n            this._mapsWrapper.panTo(newCenter);\n        }\n        else {\n            this._mapsWrapper.setCenter(newCenter);\n        }\n    };\n    AgmMap.prototype._fitBounds = function () {\n        if (this.usePanning) {\n            this._mapsWrapper.panToBounds(this.fitBounds);\n            return;\n        }\n        this._mapsWrapper.fitBounds(this.fitBounds);\n    };\n    AgmMap.prototype._handleMapCenterChange = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('center_changed').subscribe(function () {\n            _this._mapsWrapper.getCenter().then(function (center) {\n                _this.latitude = center.lat();\n                _this.longitude = center.lng();\n                _this.centerChange.emit({ lat: _this.latitude, lng: _this.longitude });\n            });\n        });\n        this._observableSubscriptions.push(s);\n    };\n    AgmMap.prototype._handleBoundsChange = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('bounds_changed').subscribe(function () {\n            _this._mapsWrapper.getBounds().then(function (bounds) { _this.boundsChange.emit(bounds); });\n        });\n        this._observableSubscriptions.push(s);\n    };\n    AgmMap.prototype._handleMapZoomChange = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('zoom_changed').subscribe(function () {\n            _this._mapsWrapper.getZoom().then(function (z) {\n                _this.zoom = z;\n                _this.zoomChange.emit(z);\n            });\n        });\n        this._observableSubscriptions.push(s);\n    };\n    AgmMap.prototype._handleIdleEvent = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('idle').subscribe(function () { _this.idle.emit(void 0); });\n        this._observableSubscriptions.push(s);\n    };\n    AgmMap.prototype._handleMapMouseEvents = function () {\n        var _this = this;\n        var events = [\n            { name: 'click', emitter: this.mapClick },\n            { name: 'rightclick', emitter: this.mapRightClick },\n            { name: 'dblclick', emitter: this.mapDblClick },\n        ];\n        events.forEach(function (e) {\n            var s = _this._mapsWrapper.subscribeToMapEvent(e.name).subscribe(function (event) {\n                var value = { coords: { lat: event.latLng.lat(), lng: event.latLng.lng() } };\n                e.emitter.emit(value);\n            });\n            _this._observableSubscriptions.push(s);\n        });\n    };\n    return AgmMap;\n}());\n\n/**\n * Map option attributes that can change over time\n */\nAgmMap._mapOptionsAttributes = [\n    'disableDoubleClickZoom', 'scrollwheel', 'draggable', 'draggableCursor', 'draggingCursor',\n    'keyboardShortcuts', 'zoomControl', 'zoomControlOptions', 'styles', 'streetViewControl',\n    'streetViewControlOptions', 'zoom', 'mapTypeControl', 'mapTypeControlOptions', 'minZoom',\n    'maxZoom', 'panControl', 'panControlOptions', 'rotateControl', 'rotateControlOptions',\n    'fullscreenControl', 'fullscreenControlOptions', 'scaleControl', 'scaleControlOptions',\n    'mapTypeId', 'clickableIcons', 'gestureHandling'\n];\nAgmMap.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{\n                selector: 'agm-map',\n                providers: [\n                    __WEBPACK_IMPORTED_MODULE_1__services_google_maps_api_wrapper__[\"a\" /* GoogleMapsAPIWrapper */], __WEBPACK_IMPORTED_MODULE_4__services_managers_marker_manager__[\"a\" /* MarkerManager */], __WEBPACK_IMPORTED_MODULE_3__services_managers_info_window_manager__[\"a\" /* InfoWindowManager */], __WEBPACK_IMPORTED_MODULE_2__services_managers_circle_manager__[\"a\" /* CircleManager */], __WEBPACK_IMPORTED_MODULE_6__services_managers_polyline_manager__[\"a\" /* PolylineManager */],\n                    __WEBPACK_IMPORTED_MODULE_5__services_managers_polygon_manager__[\"a\" /* PolygonManager */], __WEBPACK_IMPORTED_MODULE_7__services_managers_kml_layer_manager__[\"a\" /* KmlLayerManager */], __WEBPACK_IMPORTED_MODULE_8__services_managers_data_layer_manager__[\"a\" /* DataLayerManager */]\n                ],\n                inputs: [\n                    'longitude', 'latitude', 'zoom', 'minZoom', 'maxZoom', 'draggable: mapDraggable',\n                    'disableDoubleClickZoom', 'disableDefaultUI', 'scrollwheel', 'backgroundColor', 'draggableCursor',\n                    'draggingCursor', 'keyboardShortcuts', 'zoomControl', 'zoomControlOptions', 'styles', 'usePanning',\n                    'streetViewControl', 'streetViewControlOptions', 'fitBounds', 'mapTypeControl', 'mapTypeControlOptions',\n                    'panControlOptions', 'rotateControl', 'rotateControlOptions', 'fullscreenControl', 'fullscreenControlOptions',\n                    'scaleControl', 'scaleControlOptions', 'mapTypeId', 'clickableIcons', 'gestureHandling'\n                ],\n                outputs: [\n                    'mapClick', 'mapRightClick', 'mapDblClick', 'centerChange', 'idle', 'boundsChange', 'zoomChange', 'mapReady'\n                ],\n                host: {\n                    // todo: deprecated - we will remove it with the next version\n                    '[class.sebm-google-map-container]': 'true'\n                },\n                styles: [\"\\n    .agm-map-container-inner {\\n      width: inherit;\\n      height: inherit;\\n    }\\n    .agm-map-content {\\n      display:none;\\n    }\\n  \"],\n                template: \"\\n    <div class='agm-map-container-inner sebm-google-map-container-inner'></div>\\n    <div class='agm-map-content'>\\n      <ng-content></ng-content>\\n    </div>\\n  \"\n            },] },\n];\n/** @nocollapse */\nAgmMap.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_1__services_google_maps_api_wrapper__[\"a\" /* GoogleMapsAPIWrapper */], },\n]; };\n//# sourceMappingURL=map.js.map\n\n/***/ }),\n/* 136 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_managers_marker_manager__ = __webpack_require__(67);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__info_window__ = __webpack_require__(87);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AgmMarker; });\n\n\n\nvar markerId = 0;\n/**\n * AgmMarker renders a map marker inside a {@link AgmMap}.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nvar AgmMarker = (function () {\n    function AgmMarker(_markerManager) {\n        this._markerManager = _markerManager;\n        /**\n         * If true, the marker can be dragged. Default value is false.\n         */\n        this.draggable = false;\n        /**\n         * If true, the marker is visible\n         */\n        this.visible = true;\n        /**\n         * Whether to automatically open the child info window when the marker is clicked.\n         */\n        this.openInfoWindow = true;\n        /**\n         * The marker's opacity between 0.0 and 1.0.\n         */\n        this.opacity = 1;\n        /**\n         * All markers are displayed on the map in order of their zIndex, with higher values displaying in\n         * front of markers with lower values. By default, markers are displayed according to their\n         * vertical position on screen, with lower markers appearing in front of markers further up the\n         * screen.\n         */\n        this.zIndex = 1;\n        /**\n         * This event emitter gets emitted when the user clicks on the marker.\n         */\n        this.markerClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the user stops dragging the marker.\n         */\n        this.dragEnd = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the user mouses over the marker.\n         */\n        this.mouseOver = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the user mouses outside the marker.\n         */\n        this.mouseOut = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * @internal\n         */\n        this.infoWindow = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"QueryList\"]();\n        this._markerAddedToManger = false;\n        this._observableSubscriptions = [];\n        this._id = (markerId++).toString();\n    }\n    /* @internal */\n    AgmMarker.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.handleInfoWindowUpdate();\n        this.infoWindow.changes.subscribe(function () { return _this.handleInfoWindowUpdate(); });\n    };\n    AgmMarker.prototype.handleInfoWindowUpdate = function () {\n        var _this = this;\n        if (this.infoWindow.length > 1) {\n            throw new Error('Expected no more than one info window.');\n        }\n        this.infoWindow.forEach(function (marker) {\n            marker.hostMarker = _this;\n        });\n    };\n    /** @internal */\n    AgmMarker.prototype.ngOnChanges = function (changes) {\n        if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n            return;\n        }\n        if (!this._markerAddedToManger) {\n            this._markerManager.addMarker(this);\n            this._markerAddedToManger = true;\n            this._addEventListeners();\n            return;\n        }\n        if (changes['latitude'] || changes['longitude']) {\n            this._markerManager.updateMarkerPosition(this);\n        }\n        if (changes['title']) {\n            this._markerManager.updateTitle(this);\n        }\n        if (changes['label']) {\n            this._markerManager.updateLabel(this);\n        }\n        if (changes['draggable']) {\n            this._markerManager.updateDraggable(this);\n        }\n        if (changes['iconUrl']) {\n            this._markerManager.updateIcon(this);\n        }\n        if (changes['opacity']) {\n            this._markerManager.updateOpacity(this);\n        }\n        if (changes['visible']) {\n            this._markerManager.updateVisible(this);\n        }\n        if (changes['zIndex']) {\n            this._markerManager.updateZIndex(this);\n        }\n    };\n    AgmMarker.prototype._addEventListeners = function () {\n        var _this = this;\n        var cs = this._markerManager.createEventObservable('click', this).subscribe(function () {\n            if (_this.openInfoWindow) {\n                _this.infoWindow.forEach(function (infoWindow) { return infoWindow.open(); });\n            }\n            _this.markerClick.emit(null);\n        });\n        this._observableSubscriptions.push(cs);\n        var ds = this._markerManager.createEventObservable('dragend', this)\n            .subscribe(function (e) {\n            _this.dragEnd.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(ds);\n        var mover = this._markerManager.createEventObservable('mouseover', this)\n            .subscribe(function (e) {\n            _this.mouseOver.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(mover);\n        var mout = this._markerManager.createEventObservable('mouseout', this)\n            .subscribe(function (e) {\n            _this.mouseOut.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(mout);\n    };\n    /** @internal */\n    AgmMarker.prototype.id = function () { return this._id; };\n    /** @internal */\n    AgmMarker.prototype.toString = function () { return 'AgmMarker-' + this._id.toString(); };\n    /** @internal */\n    AgmMarker.prototype.ngOnDestroy = function () {\n        this._markerManager.deleteMarker(this);\n        // unsubscribe all registered observable subscriptions\n        this._observableSubscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    return AgmMarker;\n}());\n\nAgmMarker.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'agm-marker',\n                inputs: [\n                    'latitude', 'longitude', 'title', 'label', 'draggable: markerDraggable', 'iconUrl',\n                    'openInfoWindow', 'opacity', 'visible', 'zIndex'\n                ],\n                outputs: ['markerClick', 'dragEnd', 'mouseOver', 'mouseOut']\n            },] },\n];\n/** @nocollapse */\nAgmMarker.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_1__services_managers_marker_manager__[\"a\" /* MarkerManager */], },\n]; };\nAgmMarker.propDecorators = {\n    'infoWindow': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChildren\"], args: [__WEBPACK_IMPORTED_MODULE_2__info_window__[\"a\" /* AgmInfoWindow */],] },],\n};\n//# sourceMappingURL=marker.js.map\n\n/***/ }),\n/* 137 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_managers_polygon_manager__ = __webpack_require__(93);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AgmPolygon; });\n\n\n/**\n * AgmPolygon renders a polygon on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polygon [paths]=\"paths\">\n *      </agm-polygon>\n *    </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = 0;\n *   lng: number = 0;\n *   zoom: number = 10;\n *   paths: Array<LatLngLiteral> = [\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ]\n *   // Nesting paths will create a hole where they overlap;\n *   nestedPaths: Array<Array<LatLngLiteral>> = [[\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ], [\n *     { lat: 0, lng: 15 },\n *     { lat: 0, lng: 20 },\n *     { lat: 5, lng: 20 },\n *     { lat: 5, lng: 15 },\n *     { lat: 0, lng: 15 }\n *   ]]\n * }\n * ```\n */\nvar AgmPolygon = (function () {\n    function AgmPolygon(_polygonManager) {\n        this._polygonManager = _polygonManager;\n        /**\n         * Indicates whether this Polygon handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this shape over the map. The geodesic\n         * property defines the mode of dragging. Defaults to false.\n         */\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this shape by dragging the control\n         * points shown at the vertices and on each segment. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * When true, edges of the polygon are interpreted as geodesic and will\n         * follow the curvature of the Earth. When false, edges of the polygon are\n         * rendered as straight lines in screen space. Note that the shape of a\n         * geodesic polygon may appear to change when dragged, as the dimensions\n         * are maintained relative to the surface of the earth. Defaults to false.\n         */\n        this.geodesic = false;\n        /**\n         * The ordered sequence of coordinates that designates a closed loop.\n         * Unlike polylines, a polygon may consist of one or more paths.\n         *  As a result, the paths property may specify one or more arrays of\n         * LatLng coordinates. Paths are closed automatically; do not repeat the\n         * first vertex of the path as the last vertex. Simple polygons may be\n         * defined using a single array of LatLngs. More complex polygons may\n         * specify an array of arrays. Any simple arrays are converted into Arrays.\n         * Inserting or removing LatLngs from the Array will automatically update\n         * the polygon on the map.\n         */\n        this.paths = [];\n        /**\n         * This event is fired when the DOM click event is fired on the Polygon.\n         */\n        this.polyClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the DOM dblclick event is fired on the Polygon.\n         */\n        this.polyDblClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is repeatedly fired while the user drags the polygon.\n         */\n        this.polyDrag = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the user stops dragging the polygon.\n         */\n        this.polyDragEnd = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the user starts dragging the polygon.\n         */\n        this.polyDragStart = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the Polygon.\n         */\n        this.polyMouseDown = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the Polygon.\n         */\n        this.polyMouseMove = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired on Polygon mouseout.\n         */\n        this.polyMouseOut = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired on Polygon mouseover.\n         */\n        this.polyMouseOver = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired whe the DOM mouseup event is fired on the Polygon\n         */\n        this.polyMouseUp = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This even is fired when the Polygon is right-clicked on.\n         */\n        this.polyRightClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this._polygonAddedToManager = false;\n        this._subscriptions = [];\n    }\n    /** @internal */\n    AgmPolygon.prototype.ngAfterContentInit = function () {\n        if (!this._polygonAddedToManager) {\n            this._init();\n        }\n    };\n    AgmPolygon.prototype.ngOnChanges = function (changes) {\n        if (!this._polygonAddedToManager) {\n            this._init();\n            return;\n        }\n        this._polygonManager.setPolygonOptions(this, this._updatePolygonOptions(changes));\n    };\n    AgmPolygon.prototype._init = function () {\n        this._polygonManager.addPolygon(this);\n        this._polygonAddedToManager = true;\n        this._addEventListeners();\n    };\n    AgmPolygon.prototype._addEventListeners = function () {\n        var _this = this;\n        var handlers = [\n            { name: 'click', handler: function (ev) { return _this.polyClick.emit(ev); } },\n            { name: 'dbclick', handler: function (ev) { return _this.polyDblClick.emit(ev); } },\n            { name: 'drag', handler: function (ev) { return _this.polyDrag.emit(ev); } },\n            { name: 'dragend', handler: function (ev) { return _this.polyDragEnd.emit(ev); } },\n            { name: 'dragstart', handler: function (ev) { return _this.polyDragStart.emit(ev); } },\n            { name: 'mousedown', handler: function (ev) { return _this.polyMouseDown.emit(ev); } },\n            { name: 'mousemove', handler: function (ev) { return _this.polyMouseMove.emit(ev); } },\n            { name: 'mouseout', handler: function (ev) { return _this.polyMouseOut.emit(ev); } },\n            { name: 'mouseover', handler: function (ev) { return _this.polyMouseOver.emit(ev); } },\n            { name: 'mouseup', handler: function (ev) { return _this.polyMouseUp.emit(ev); } },\n            { name: 'rightclick', handler: function (ev) { return _this.polyRightClick.emit(ev); } },\n        ];\n        handlers.forEach(function (obj) {\n            var os = _this._polygonManager.createEventObservable(obj.name, _this).subscribe(obj.handler);\n            _this._subscriptions.push(os);\n        });\n    };\n    AgmPolygon.prototype._updatePolygonOptions = function (changes) {\n        return Object.keys(changes)\n            .filter(function (k) { return AgmPolygon._polygonOptionsAttributes.indexOf(k) !== -1; })\n            .reduce(function (obj, k) {\n            obj[k] = changes[k].currentValue;\n            return obj;\n        }, {});\n    };\n    /** @internal */\n    AgmPolygon.prototype.id = function () { return this._id; };\n    /** @internal */\n    AgmPolygon.prototype.ngOnDestroy = function () {\n        this._polygonManager.deletePolygon(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    return AgmPolygon;\n}());\n\nAgmPolygon._polygonOptionsAttributes = [\n    'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'icon', 'map',\n    'paths', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'draggable',\n    'editable', 'visible'\n];\nAgmPolygon.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'agm-polygon',\n                inputs: [\n                    'clickable',\n                    'draggable: polyDraggable',\n                    'editable',\n                    'fillColor',\n                    'fillOpacity',\n                    'geodesic',\n                    'paths',\n                    'strokeColor',\n                    'strokeOpacity',\n                    'strokeWeight',\n                    'visible',\n                    'zIndex',\n                ],\n                outputs: [\n                    'polyClick', 'polyDblClick', 'polyDrag', 'polyDragEnd', 'polyMouseDown', 'polyMouseMove',\n                    'polyMouseOut', 'polyMouseOver', 'polyMouseUp', 'polyRightClick'\n                ]\n            },] },\n];\n/** @nocollapse */\nAgmPolygon.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_1__services_managers_polygon_manager__[\"a\" /* PolygonManager */], },\n]; };\n//# sourceMappingURL=polygon.js.map\n\n/***/ }),\n/* 138 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_managers_polyline_manager__ = __webpack_require__(94);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__polyline_point__ = __webpack_require__(88);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AgmPolyline; });\n\n\n\nvar polylineId = 0;\n/**\n * AgmPolyline renders a polyline on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-polyline-point [latitude]=\"latA\" [longitude]=\"lngA\">\n *          </agm-polyline-point>\n *          <agm-polyline-point [latitude]=\"latB\" [longitude]=\"lngB\">\n *          </agm-polyline-point>\n *      </agm-polyline>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nvar AgmPolyline = (function () {\n    function AgmPolyline(_polylineManager) {\n        this._polylineManager = _polylineManager;\n        /**\n         * Indicates whether this Polyline handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this shape over the map. The geodesic property defines the\n         * mode of dragging. Defaults to false.\n         */\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this shape by dragging the control points shown at the\n         * vertices and on each segment. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\n         * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\n         * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\n         * are maintained relative to the surface of the earth. Defaults to false.\n         */\n        this.geodesic = false;\n        /**\n         * Whether this polyline is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the DOM click event is fired on the Polyline.\n         */\n        this.lineClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the DOM dblclick event is fired on the Polyline.\n         */\n        this.lineDblClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is repeatedly fired while the user drags the polyline.\n         */\n        this.lineDrag = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the user stops dragging the polyline.\n         */\n        this.lineDragEnd = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the user starts dragging the polyline.\n         */\n        this.lineDragStart = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the Polyline.\n         */\n        this.lineMouseDown = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the Polyline.\n         */\n        this.lineMouseMove = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired on Polyline mouseout.\n         */\n        this.lineMouseOut = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired on Polyline mouseover.\n         */\n        this.lineMouseOver = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This event is fired whe the DOM mouseup event is fired on the Polyline\n         */\n        this.lineMouseUp = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * This even is fired when the Polyline is right-clicked on.\n         */\n        this.lineRightClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this._polylineAddedToManager = false;\n        this._subscriptions = [];\n        this._id = (polylineId++).toString();\n    }\n    /** @internal */\n    AgmPolyline.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        if (this.points.length) {\n            this.points.forEach(function (point) {\n                var s = point.positionChanged.subscribe(function () { _this._polylineManager.updatePolylinePoints(_this); });\n                _this._subscriptions.push(s);\n            });\n        }\n        if (!this._polylineAddedToManager) {\n            this._init();\n        }\n        var s = this.points.changes.subscribe(function () { return _this._polylineManager.updatePolylinePoints(_this); });\n        this._subscriptions.push(s);\n        this._polylineManager.updatePolylinePoints(this);\n    };\n    AgmPolyline.prototype.ngOnChanges = function (changes) {\n        if (!this._polylineAddedToManager) {\n            this._init();\n            return;\n        }\n        var options = {};\n        var optionKeys = Object.keys(changes).filter(function (k) { return AgmPolyline._polylineOptionsAttributes.indexOf(k) !== -1; });\n        optionKeys.forEach(function (k) { return options[k] = changes[k].currentValue; });\n        this._polylineManager.setPolylineOptions(this, options);\n    };\n    AgmPolyline.prototype._init = function () {\n        this._polylineManager.addPolyline(this);\n        this._polylineAddedToManager = true;\n        this._addEventListeners();\n    };\n    AgmPolyline.prototype._addEventListeners = function () {\n        var _this = this;\n        var handlers = [\n            { name: 'click', handler: function (ev) { return _this.lineClick.emit(ev); } },\n            { name: 'dbclick', handler: function (ev) { return _this.lineDblClick.emit(ev); } },\n            { name: 'drag', handler: function (ev) { return _this.lineDrag.emit(ev); } },\n            { name: 'dragend', handler: function (ev) { return _this.lineDragEnd.emit(ev); } },\n            { name: 'dragstart', handler: function (ev) { return _this.lineDragStart.emit(ev); } },\n            { name: 'mousedown', handler: function (ev) { return _this.lineMouseDown.emit(ev); } },\n            { name: 'mousemove', handler: function (ev) { return _this.lineMouseMove.emit(ev); } },\n            { name: 'mouseout', handler: function (ev) { return _this.lineMouseOut.emit(ev); } },\n            { name: 'mouseover', handler: function (ev) { return _this.lineMouseOver.emit(ev); } },\n            { name: 'mouseup', handler: function (ev) { return _this.lineMouseUp.emit(ev); } },\n            { name: 'rightclick', handler: function (ev) { return _this.lineRightClick.emit(ev); } },\n        ];\n        handlers.forEach(function (obj) {\n            var os = _this._polylineManager.createEventObservable(obj.name, _this).subscribe(obj.handler);\n            _this._subscriptions.push(os);\n        });\n    };\n    /** @internal */\n    AgmPolyline.prototype._getPoints = function () {\n        if (this.points) {\n            return this.points.toArray();\n        }\n        return [];\n    };\n    /** @internal */\n    AgmPolyline.prototype.id = function () { return this._id; };\n    /** @internal */\n    AgmPolyline.prototype.ngOnDestroy = function () {\n        this._polylineManager.deletePolyline(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    return AgmPolyline;\n}());\n\nAgmPolyline._polylineOptionsAttributes = [\n    'draggable', 'editable', 'visible', 'geodesic', 'strokeColor', 'strokeOpacity', 'strokeWeight',\n    'zIndex'\n];\nAgmPolyline.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'agm-polyline',\n                inputs: [\n                    'clickable', 'draggable: polylineDraggable', 'editable', 'geodesic', 'strokeColor',\n                    'strokeWeight', 'strokeOpacity', 'visible', 'zIndex'\n                ],\n                outputs: [\n                    'lineClick', 'lineDblClick', 'lineDrag', 'lineDragEnd', 'lineMouseDown', 'lineMouseMove',\n                    'lineMouseOut', 'lineMouseOver', 'lineMouseUp', 'lineRightClick'\n                ]\n            },] },\n];\n/** @nocollapse */\nAgmPolyline.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_1__services_managers_polyline_manager__[\"a\" /* PolylineManager */], },\n]; };\nAgmPolyline.propDecorators = {\n    'points': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChildren\"], args: [__WEBPACK_IMPORTED_MODULE_2__polyline_point__[\"a\" /* AgmPolylinePoint */],] },],\n};\n//# sourceMappingURL=polyline.js.map\n\n/***/ }),\n/* 139 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return WindowRef; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return DocumentRef; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return BROWSER_GLOBALS_PROVIDERS; });\nvar WindowRef = (function () {\n    function WindowRef() {\n    }\n    WindowRef.prototype.getNativeWindow = function () { return window; };\n    return WindowRef;\n}());\n\nvar DocumentRef = (function () {\n    function DocumentRef() {\n    }\n    DocumentRef.prototype.getNativeDocument = function () { return document; };\n    return DocumentRef;\n}());\n\nvar BROWSER_GLOBALS_PROVIDERS = [WindowRef, DocumentRef];\n//# sourceMappingURL=browser-globals.js.map\n\n/***/ }),\n/* 140 */,\n/* 141 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar pages_1 = __webpack_require__(142);\r\nvar Cache = (function () {\r\n    function Cache(pages) {\r\n        this.pages = pages;\r\n        // the variables containing the language jsons\r\n        // will contain the default language\r\n        this.language = '';\r\n    }\r\n    // will return the texts from witch we fill our forms\r\n    Cache.prototype.getPages = function () {\r\n        return this.pages.cache;\r\n    };\r\n    ;\r\n    ;\r\n    Cache = __decorate([\r\n        core_1.Injectable(),\r\n        __metadata(\"design:paramtypes\", [pages_1.Pages])\r\n    ], Cache);\r\n    return Cache;\r\n}());\r\nexports.Cache = Cache;\r\n\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar Pages = (function () {\r\n    function Pages() {\r\n        this.cache = {\r\n            \"pages\": [\r\n                {\r\n                    \"_id\": \"58ebc72932eb01cb4d0de212\",\r\n                    \"owner\": \"home\",\r\n                    \"image\": null,\r\n                    \"type\": \"page\",\r\n                    \"zIndex\": 0,\r\n                    \"title\": {\r\n                        \"en\": \"\",\r\n                        \"bg\": \"\"\r\n                    },\r\n                    \"html\": {\r\n                        \"en\": \"Oт 2004 година IKARINS работи активно в областта на застраховането. Нашата цел е да изберем най-подходящата застраховка за всеки от клиентите ни персонално и според специфичните му изисквания. През 2015 година закупихме \\\"ИЗИИНС-Първи Интренет Застраховатален Брокер\\\"ЕООД и чрез него увеличихме набора на застрахователни продукти. В случай на застрахователно събитие ние се грижим нашите клиенти да бъдат минимално притеснени от инцидента. При пътно транспортно проишествир ни се обадете: +359(0) 888 234 454\",\r\n                        \"bg\": \"Oт 2004 година IKARINS работи активно в областта на застраховането. Нашата цел е да изберем най-подходящата застраховка за всеки от клиентите ни персонално и според специфичните му изисквания. През 2015 година закупихме \\\"ИЗИИНС-Първи Интренет Застраховатален Брокер\\\"ЕООД и чрез него увеличихме набора на застрахователни продукти. В случай на застрахователно събитие ние се грижим нашите клиенти да бъдат минимално притеснени от инцидента. При пътно транспортно проишествир ни се обадете: +359(0) 888 234 454\"\r\n                    }\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc72932eb01cb4d0de292\",\r\n                    \"type\": \"multiple\",\r\n                    \"link\": null,\r\n                    \"title\": {\r\n                        \"bg\": \"Услуги и застраховки\",\r\n                        \"en\": \"Услуги и застраховки ен\"\r\n                    },\r\n                    \"subCategories\": [\r\n                        \"zastrahovki_za_vas\",\r\n                        \"zastrahovki_za_biznesa_vi\",\r\n                        \"urejdane_na_zastrahovatelni_pretencii\",\r\n                        \"tehnichesko_obslujvane_na_avtomobili\",\r\n                        \"konsultacii\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc72932eb01cb4d0de293\",\r\n                    \"type\": \"single\",\r\n                    \"link\": \"promocionalni\",\r\n                    \"title\": {\r\n                        \"bg\": \"Промоционални\",\r\n                        \"en\": \"Промоционални ен\"\r\n                    },\r\n                    \"subCategories\": null\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc72932eb01cb4d0de294\",\r\n                    \"type\": \"blog\",\r\n                    \"link\": \"novini\",\r\n                    \"title\": {\r\n                        \"bg\": \"Новини\",\r\n                        \"en\": \"Новини ен\"\r\n                    },\r\n                    \"subCategories\": null\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc72932eb01cb4d0de295\",\r\n                    \"type\": \"single\",\r\n                    \"link\": \"pri_shteta\",\r\n                    \"title\": {\r\n                        \"bg\": \"При щета\",\r\n                        \"en\": \"При щета ен\"\r\n                    },\r\n                    \"subCategories\": null\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc72932eb01cb4d0de296\",\r\n                    \"type\": \"single\",\r\n                    \"link\": \"za_nas\",\r\n                    \"title\": {\r\n                        \"bg\": \"За нас\",\r\n                        \"en\": \"За нас ен\"\r\n                    },\r\n                    \"subCategories\": null\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc72932eb01cb4d0de297\",\r\n                    \"type\": \"sub-category\",\r\n                    \"link\": \"zastrahovki_za_vas\",\r\n                    \"title\": {\r\n                        \"bg\": \"Застраховки за вас\",\r\n                        \"en\": \"Застраховки за вас ен\"\r\n                    },\r\n                    \"subCategories\": null\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc72932eb01cb4d0de298\",\r\n                    \"type\": \"sub-category\",\r\n                    \"link\": \"zastrahovki_za_biznesa_vi\",\r\n                    \"title\": {\r\n                        \"bg\": \"Застраховки за бизнеса ви\",\r\n                        \"en\": \"Застраховки за бизнеса ви ен\"\r\n                    },\r\n                    \"subCategories\": null\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc72932eb01cb4d0de299\",\r\n                    \"type\": \"sub-category\",\r\n                    \"link\": \"urejdane_na_zastrahovatelni_pretencii\",\r\n                    \"title\": {\r\n                        \"bg\": \"Уреждане на застрахователни претенции\",\r\n                        \"en\": \"Уреждане на застрахователни претенции ен\"\r\n                    },\r\n                    \"subCategories\": null\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc72932eb01cb4d0de29a\",\r\n                    \"type\": \"sub-category\",\r\n                    \"link\": \"tehnichesko_obslujvane_na_avtomobili\",\r\n                    \"title\": {\r\n                        \"bg\": \"Техническо обслужване на автомобили\",\r\n                        \"en\": \"Техническо обслужване на автомобили ен\"\r\n                    },\r\n                    \"subCategories\": null\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc72932eb01cb4d0de29b\",\r\n                    \"type\": \"sub-category\",\r\n                    \"link\": \"konsultacii\",\r\n                    \"title\": {\r\n                        \"bg\": \"Консултации\",\r\n                        \"en\": \"Консултации ен\"\r\n                    },\r\n                    \"subCategories\": null\r\n                }\r\n            ],\r\n            \"pagesData\": [\r\n                {\r\n                    \"_id\": \"58ebc74c32eb01cb4d0de29c\",\r\n                    \"owner\": \"promocionalni\",\r\n                    \"image\": null,\r\n                    \"type\": \"page\",\r\n                    \"zIndex\": 0,\r\n                    \"title\": {\r\n                        \"en\": \"ЗАЩИТА ОТ ПРИРОДНИ БЕДСТВИЯEN\",\r\n                        \"bg\": \"ЗАЩИТА ОТ ПРИРОДНИ БЕДСТВИЯ\"\r\n                    },\r\n                    \"html\": {\r\n                        \"en\": \"\",\r\n                        \"bg\": \"\"\r\n                    }\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc74c32eb01cb4d0de29d\",\r\n                    \"owner\": \"pri_shteta\",\r\n                    \"image\": null,\r\n                    \"type\": \"page\",\r\n                    \"zIndex\": 0,\r\n                    \"title\": {\r\n                        \"en\": \"ПРИ ЩЕТА\",\r\n                        \"bg\": \"ПРИ ЩЕТА\"\r\n                    },\r\n                    \"html\": {\r\n                        \"en\": \"\",\r\n                        \"bg\": \"\"\r\n                    }\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc74c32eb01cb4d0de29f\",\r\n                    \"owner\": \"zastrahovki_za_vas\",\r\n                    \"image\": null,\r\n                    \"type\": \"page\",\r\n                    \"zIndex\": 0,\r\n                    \"title\": {\r\n                        \"en\": \"ЗАСТРАХОВКИ ЗА ВАС\",\r\n                        \"bg\": \"ЗАСТРАХОВКИ ЗА ВАС\"\r\n                    },\r\n                    \"html\": {\r\n                        \"en\": \"\",\r\n                        \"bg\": \"\"\r\n                    }\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc74c32eb01cb4d0de2a0\",\r\n                    \"owner\": \"zastrahovki_za_biznesa_vi\",\r\n                    \"image\": null,\r\n                    \"type\": \"page\",\r\n                    \"zIndex\": 0,\r\n                    \"title\": {\r\n                        \"en\": \"ЗАСТРАХОВКИ ЗА БИЗНЕСА ВИ\",\r\n                        \"bg\": \"ЗАСТРАХОВКИ ЗА БИЗНЕСА ВИ\"\r\n                    },\r\n                    \"html\": {\r\n                        \"en\": \"\",\r\n                        \"bg\": \"\"\r\n                    }\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc74c32eb01cb4d0de2a1\",\r\n                    \"owner\": \"urejdane_na_zastrahovatelni_pretencii\",\r\n                    \"image\": null,\r\n                    \"type\": \"page\",\r\n                    \"zIndex\": 0,\r\n                    \"title\": {\r\n                        \"en\": \"УРЕЖДАНЕ НА ЗАСТРАХОВАТЕЛНИ ПРЕТЕНЦИИ\",\r\n                        \"bg\": \"УРЕЖДАНЕ НА ЗАСТРАХОВАТЕЛНИ ПРЕТЕНЦИИ\"\r\n                    },\r\n                    \"html\": {\r\n                        \"en\": \"\",\r\n                        \"bg\": \"\"\r\n                    }\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc74c32eb01cb4d0de2a2\",\r\n                    \"owner\": \"tehnichesko_obslujvane_na_avtomobili\",\r\n                    \"image\": null,\r\n                    \"type\": \"page\",\r\n                    \"zIndex\": 0,\r\n                    \"title\": {\r\n                        \"en\": \"ТЕХНИЧЕСКО ОБСЛУЖВАНЕ НА АВТОМОБИЛИ\",\r\n                        \"bg\": \"ТЕХНИЧЕСКО ОБСЛУЖВАНЕ НА АВТОМОБИЛИ\"\r\n                    },\r\n                    \"html\": {\r\n                        \"en\": \"\",\r\n                        \"bg\": \"\"\r\n                    }\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc74c32eb01cb4d0de2a3\",\r\n                    \"owner\": \"konsultacii\",\r\n                    \"image\": null,\r\n                    \"type\": \"page\",\r\n                    \"zIndex\": 0,\r\n                    \"title\": {\r\n                        \"en\": \"КОНСУЛТАЦИИ И ЛИЗИНГ\",\r\n                        \"bg\": \"КОНСУЛТАЦИИ И ЛИЗИНГ\"\r\n                    },\r\n                    \"html\": {\r\n                        \"en\": \"\",\r\n                        \"bg\": \"\"\r\n                    }\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc74c32eb01cb4d0de2a3\",\r\n                    \"owner\": \"novini\",\r\n                    \"image\": null,\r\n                    \"type\": \"page\",\r\n                    \"zIndex\": 0,\r\n                    \"title\": {\r\n                        \"en\": \"НОВИНИ ЕН\",\r\n                        \"bg\": \"НОВИНИ\"\r\n                    },\r\n                    \"html\": {\r\n                        \"en\": \"\",\r\n                        \"bg\": \"\"\r\n                    }\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc74c32eb01cb4d0de2a6\",\r\n                    \"owner\": \"zastrahovki_za_vas\",\r\n                    \"image\": \"house.png\",\r\n                    \"type\": \"sub-page\",\r\n                    \"zIndex\": 0,\r\n                    \"title\": {\r\n                        \"en\": \"Застраховка за ДОМАEN\",\r\n                        \"bg\": \"Застраховка за ДОМА\"\r\n                    },\r\n                    \"html\": {\r\n                        \"en\": \"има много варианти при този вид застраховки,  с които може да сме винаги спокойни и сигурни за нашето недвижимо и движимо имущество:<br/>- жилище;<br/>- вила;<br/>- обзавеждане;<br/>- техника;<br/>- и други придобивки.<br/>Ние ще Ви помогнем да изберете най-точното покритие като<br/>рискове и застрахователни суми.\",\r\n                        \"bg\": \"има много варианти при този вид застраховки,  с които може да сме винаги спокойни и сигурни за нашето недвижимо и движимо имущество:<br/>- жилище;<br/>- вила;<br/>- обзавеждане;<br/>- техника;<br/>- и други придобивки.<br/>Ние ще Ви помогнем да изберете най-точното покритие като<br/>рискове и застрахователни суми.\"\r\n                    }\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc74c32eb01cb4d0de2a7\",\r\n                    \"owner\": \"zastrahovki_za_vas\",\r\n                    \"image\": \"street.png\",\r\n                    \"type\": \"sub-page\",\r\n                    \"zIndex\": 0,\r\n                    \"title\": {\r\n                        \"en\": \"Застраховки за АВТОМОБИЛИТЕ EN\",\r\n                        \"bg\": \"Застраховки за АВТОМОБИЛИТЕ \"\r\n                    },\r\n                    \"html\": {\r\n                        \"en\": \"доброволна застраховка КАСКО и задължителна застраховка ГРАЖДАНСКА ОТГОВОРНОСТ.  При тези полици имаме възможност да комбинираме и с други видове застраховки като:<br/>- злополука на лицата в МПС;<br/>- асистанс на пътя;<br/>- техническа повреда.<br/>Наша задача при тези полици е да Ви предложим най-изгодната застраховка с най-доброто покритие.\",\r\n                        \"bg\": \"доброволна застраховка КАСКО и задължителна застраховка ГРАЖДАНСКА ОТГОВОРНОСТ.  При тези полици имаме възможност да комбинираме и с други видове застраховки като:<br/>- злополука на лицата в МПС;<br/>- асистанс на пътя;<br/>- техническа повреда.<br/>Наша задача при тези полици е да Ви предложим най-изгодната застраховка с най-доброто покритие.\"\r\n                    }\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc74c32eb01cb4d0de2aa\",\r\n                    \"owner\": \"zastrahovki_za_biznesa_vi\",\r\n                    \"image\": \"new-car.png\",\r\n                    \"type\": \"sub-page\",\r\n                    \"zIndex\": 1,\r\n                    \"title\": {\r\n                        \"en\": \"Застраховка КАСКО и ГРАЖАДАНСКА ОТГОВОРНОСТ EN\",\r\n                        \"bg\": \"Застраховка КАСКО и ГРАЖАДАНСКА ОТГОВОРНОСТ\"\r\n                    },\r\n                    \"html\": {\r\n                        \"en\": \"за превозните средства  с държавни контролни номера – леки и товарни автомобили, влекачи, прикачни устройства, кари, земеделски и горска техника и други;\",\r\n                        \"bg\": \"за превозните средства  с държавни контролни номера – леки и товарни автомобили, влекачи, прикачни устройства, кари, земеделски и горска техника и други;\"\r\n                    }\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc74c32eb01cb4d0de29e\",\r\n                    \"owner\": \"za_nas\",\r\n                    \"image\": null,\r\n                    \"type\": \"page\",\r\n                    \"zIndex\": 0,\r\n                    \"title\": {\r\n                        \"en\": \"Застрахователни услуги с високо качество и лично отношение\",\r\n                        \"bg\": \"Застрахователни услуги с високо качество и лично отношение\"\r\n                    },\r\n                    \"html\": {\r\n                        \"en\": \"В началото на 2004 година ние - Иван и Милена Стефанин, направихме нашия застрахователен офис. От тогова до сега предлагаме на нашите клиенти застрахователни услуги с високо качество и лично отношение. С голямо желание и в дълбочина се фокусираме върху даването на най-оптималния вариант за застраховка на всеки клиент – в бизнеса или личния живот. При реализиране на риск и настъпване на застрахователно събитие всеки има нужда от силна подкрепа за да преодолее първоначалния шок от случилото се. Благодарение на знанията и опита, които имаме, ние даваме на  клиентите ни точни и ясни указания за спазване на закона и условията на застраховката за може да сме изрядни при подаването на претенцията пред застрахователя и да бъдем сигурни в 100%вото обезщетяване на вредата. <br/>Ние сме гъвкави и адаптираме услугите си към конкретните нужди на нашите клиенти, като по този начин, всеки отделен клиент има предимството да получава най-добрата застрахователна защита.<br/>Създадохме бранда IKARINS – чрез който се стремим да бъдем разпознати и да увеличим услугите, които предоставяме.<br/>Заедно с Вас – нашите клиенти, извървяхме дълъг път на усъвършенстване и през годините изградихме доверие помежду ни.<br/>Повече от 10 години работихме усилено и успяхме да се развием като независим застрахователен посредник.<br/>В началото на 2015 година закупихме застрахователен брокер „ИзиИнс - Първи Интернет Застрахователен Брокер“ ЕООД.<br/>По този начин ние се разраснахме и имаме възможността да предлагаме на нашите клиенти по-голям избор на застрахователни продукти\",\r\n                        \"bg\": \"В началото на 2004 година ние - Иван и Милена Стефанин, направихме нашия застрахователен офис. От тогова до сега предлагаме на нашите клиенти застрахователни услуги с високо качество и лично отношение. С голямо желание и в дълбочина се фокусираме върху даването на най-оптималния вариант за застраховка на всеки клиент – в бизнеса или личния живот. При реализиране на риск и настъпване на застрахователно събитие всеки има нужда от силна подкрепа за да преодолее първоначалния шок от случилото се. Благодарение на знанията и опита, които имаме, ние даваме на  клиентите ни точни и ясни указания за спазване на закона и условията на застраховката за може да сме изрядни при подаването на претенцията пред застрахователя и да бъдем сигурни в 100%вото обезщетяване на вредата. <br/>Ние сме гъвкави и адаптираме услугите си към конкретните нужди на нашите клиенти, като по този начин, всеки отделен клиент има предимството да получава най-добрата застрахователна защита.<br/>Създадохме бранда IKARINS – чрез който се стремим да бъдем разпознати и да увеличим услугите, които предоставяме.<br/>Заедно с Вас – нашите клиенти, извървяхме дълъг път на усъвършенстване и през годините изградихме доверие помежду ни.<br/>Повече от 10 години работихме усилено и успяхме да се развием като независим застрахователен посредник.<br/>В началото на 2015 година закупихме застрахователен брокер „ИзиИнс - Първи Интернет Застрахователен Брокер“ ЕООД.<br/>По този начин ние се разраснахме и имаме възможността да предлагаме на нашите клиенти по-голям избор на застрахователни продукти\"\r\n                    }\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc74c32eb01cb4d0de2a4\",\r\n                    \"owner\": \"promocionalni\",\r\n                    \"image\": \"helicopter.png\",\r\n                    \"type\": \"sub-page\",\r\n                    \"zIndex\": 0,\r\n                    \"title\": {\r\n                        \"en\": \"\",\r\n                        \"bg\": \"\"\r\n                    },\r\n                    \"html\": {\r\n                        \"en\": \"Във връзка със сполетелите нашата страна природни бедствия тази година, ние решихме през месец Септември да направим кампания за популяризиране и увеличаване на интереса към застраховката на жилищата ни – апартаменти, къщи и вили.<br/>За повечето от нас купуването и обзавеждането на собствен дом е най-важната и ценна инвестиция, направена през живота и несъмнено тя трябва да бъде защитена. За да си осигурим тази защита е необходимо да сключим доброволна застраховка за нашия дом.<br/>Застрахователите в България предлагат голям брой рискове, предоставящи оптимално покритие за недвижимото имущество (апартамента, къщата или вилата, вкл. стени, покрив и всички трайно закрепени към сградата покрития – гипсокартон, боя, настилки и други) и движимото имущество (мебели, битови електроуреди, ел.техника и други). Ето това са рисковете:<br/>Пожар;<br/>Експлозия на съд под налягане;<br/>Природни бедствия: буря, ураган, градушка, проливен дъжд, вкл. щети от падащи дървета и клони;<br/>Наводнение - заливане с вода, причинено от вълни, приливни вълни или изтичане на вода извън границите на водоизточници, намиращи се на повърхността на земята като: езера, язовири, резервоари, реки и потоци;<br/>Измокряне в резултат на авария на водопроводна, канализационна, отоплителна и паропроводна инсталация;<br/>Злоумишлени действия на трети лица (вандализъм);<br/>Удар от ППС или от летящо тяло, падащи негови съставни части или товар;<br/>Свличане и срутване на земни пластове;<br/>Земетресение – повечето застрахователи в България прилагат самоучастие на застрахования при реализиране на този риск до 2% от застрахователната сума;<br/>Кражба чрез взлом;<br/>Гражданска Отговорност към трети лица.<br/>За да направим нашата застраховка за дома трябва освен да изберем желаните покрития, но и да решим на каква застрахователна сума ще сключим полицата. Минималната застрахователна премия, която трябва да платите за 1 година може да е 30 лв. при застраховка на т.нар. Първи риск в застраховането – избраните застрахователни суми не са обвързани с действителните (пазарни) цени на имота. Има и вариант, при който избора на застрахователна сума се обвързва с действителна стойност на кв.м., като при него ще заплатите около 70 лв. премия на година за апартамент около 60 кв.м.<br/>Ние ще Ви предложим най-добрата комбинация от покрития и застрахователни суми, за да получите максимална защита на добра цена.<br/>Този Септември може да се възползвате от предлаганата от нас отстъпка до 50%.<br/>Екипът на ИкарИнс\",\r\n                        \"bg\": \"Във връзка със сполетелите нашата страна природни бедствия тази година, ние решихме през месец Септември да направим кампания за популяризиране и увеличаване на интереса към застраховката на жилищата ни – апартаменти, къщи и вили.<br/>За повечето от нас купуването и обзавеждането на собствен дом е най-важната и ценна инвестиция, направена през живота и несъмнено тя трябва да бъде защитена. За да си осигурим тази защита е необходимо да сключим доброволна застраховка за нашия дом.<br/>Застрахователите в България предлагат голям брой рискове, предоставящи оптимално покритие за недвижимото имущество (апартамента, къщата или вилата, вкл. стени, покрив и всички трайно закрепени към сградата покрития – гипсокартон, боя, настилки и други) и движимото имущество (мебели, битови електроуреди, ел.техника и други). Ето това са рисковете:<br/>Пожар;<br/>Експлозия на съд под налягане;<br/>Природни бедствия: буря, ураган, градушка, проливен дъжд, вкл. щети от падащи дървета и клони;<br/>Наводнение - заливане с вода, причинено от вълни, приливни вълни или изтичане на вода извън границите на водоизточници, намиращи се на повърхността на земята като: езера, язовири, резервоари, реки и потоци;<br/>Измокряне в резултат на авария на водопроводна, канализационна, отоплителна и паропроводна инсталация;<br/>Злоумишлени действия на трети лица (вандализъм);<br/>Удар от ППС или от летящо тяло, падащи негови съставни части или товар;<br/>Свличане и срутване на земни пластове;<br/>Земетресение – повечето застрахователи в България прилагат самоучастие на застрахования при реализиране на този риск до 2% от застрахователната сума;<br/>Кражба чрез взлом;<br/>Гражданска Отговорност към трети лица.<br/>За да направим нашата застраховка за дома трябва освен да изберем желаните покрития, но и да решим на каква застрахователна сума ще сключим полицата. Минималната застрахователна премия, която трябва да платите за 1 година може да е 30 лв. при застраховка на т.нар. Първи риск в застраховането – избраните застрахователни суми не са обвързани с действителните (пазарни) цени на имота. Има и вариант, при който избора на застрахователна сума се обвързва с действителна стойност на кв.м., като при него ще заплатите около 70 лв. премия на година за апартамент около 60 кв.м.<br/>Ние ще Ви предложим най-добрата комбинация от покрития и застрахователни суми, за да получите максимална защита на добра цена.<br/>Този Септември може да се възползвате от предлаганата от нас отстъпка до 50%.<br/>Екипът на ИкарИнс\"\r\n                    }\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc74c32eb01cb4d0de2a5\",\r\n                    \"owner\": \"pri_shteta\",\r\n                    \"image\": \"destroyed_building.png\",\r\n                    \"type\": \"sub-page\",\r\n                    \"zIndex\": 0,\r\n                    \"title\": {\r\n                        \"en\": \"Обадете ни се веднага на телефон:<br/>+359(0) 888 234 454\",\r\n                        \"bg\": \"Обадете ни се веднага на телефон:<br/>+359(0) 888 234 454\"\r\n                    },\r\n                    \"html\": {\r\n                        \"en\": \"При настъпване на ПЪТНО-ТРАНСПОРТНО ПРОИЗШЕСТВИЕ ( ПТП ) в България , трябва да спазваме Закона  за движение по пътищата, Кодекса на Застраховането и условията на застрахователната полица. Условията , при които се попълва УКАЗАНИЯ ЗА ПОПЪЛВАНЕ НА ДВУСТРАНЕН КОНСТАТИВЕН ПРОТОКОЛ ЗА ПТП са:<br/>Ако няма пострадали лица;<br/>Ако сте 2 (двама) участници - нито повече, нито по-малко. Ако самокатастрофирате - трябва да бъдете посетен от КАТ. И двамата участници в ПТП сте с български регистрационни номера;<br/>Ако няма пострадало друго имущество, различно от Вашите два автомобила;<br/>Ако и двамата участници са в движение и могат да продължат на собствен ход;<br/>Ако видимо и двамата участници не са употребили алкохол или наркотици;<br/>И двамата водачи имат съгласие относно вината за настъпване на ПТП,<br/>Тогава може да се обадите на 1 1 2, да дадете данните на двата автомобила и да вземете № на регистрираното от тях събитие и попълните ДВУСТРАННИЯ КОНСТАТИВЕН ПРОТОКОЛ за ПТП. Попълва се протокола към Гражданската Отговорност на виновния водач, ако той няма такъв то тогава може се попълни и този на пострадалия. Оригиналният (горният) протокол е за пострадалия, а индигираното копие е за виновния водач. Не забравяйте да запишете № , който са Ви дали от 112. <br/>ВЪВ ВСИЧКИ ДРУГИ СЛУЧАИ ПО ЗАКОН ТРЯБВА ДА БЪДЕТЕ ПОСЕТЕНИ НА МЯСТО ОТ ОРГАНИТЕ НА МВР И ДА ВИ БЪДЕ ИЗАДЕН ДОКУМЕНТ ОТ ТЯХ ЗА НАСТЪПИЛОТО СЪБИТИЕ.<br/>Изтеглете тук: УКАЗАНИЯ ЗА ПОПЪЛВАНЕ НА ДВУСТРАНЕН КОНСТАТИВЕН ПРОТОКОЛ ЗА ПТП<br/>\",\r\n                        \"bg\": \"При настъпване на ПЪТНО-ТРАНСПОРТНО ПРОИЗШЕСТВИЕ ( ПТП ) в България , трябва да спазваме Закона  за движение по пътищата, Кодекса на Застраховането и условията на застрахователната полица. Условията , при които се попълва УКАЗАНИЯ ЗА ПОПЪЛВАНЕ НА ДВУСТРАНЕН КОНСТАТИВЕН ПРОТОКОЛ ЗА ПТП са:<br/>Ако няма пострадали лица;<br/>Ако сте 2 (двама) участници - нито повече, нито по-малко. Ако самокатастрофирате - трябва да бъдете посетен от КАТ. И двамата участници в ПТП сте с български регистрационни номера;<br/>Ако няма пострадало друго имущество, различно от Вашите два автомобила;<br/>Ако и двамата участници са в движение и могат да продължат на собствен ход;<br/>Ако видимо и двамата участници не са употребили алкохол или наркотици;<br/>И двамата водачи имат съгласие относно вината за настъпване на ПТП,<br/>Тогава може да се обадите на 1 1 2, да дадете данните на двата автомобила и да вземете № на регистрираното от тях събитие и попълните ДВУСТРАННИЯ КОНСТАТИВЕН ПРОТОКОЛ за ПТП. Попълва се протокола към Гражданската Отговорност на виновния водач, ако той няма такъв то тогава може се попълни и този на пострадалия. Оригиналният (горният) протокол е за пострадалия, а индигираното копие е за виновния водач. Не забравяйте да запишете № , който са Ви дали от 112. <br/>ВЪВ ВСИЧКИ ДРУГИ СЛУЧАИ ПО ЗАКОН ТРЯБВА ДА БЪДЕТЕ ПОСЕТЕНИ НА МЯСТО ОТ ОРГАНИТЕ НА МВР И ДА ВИ БЪДЕ ИЗАДЕН ДОКУМЕНТ ОТ ТЯХ ЗА НАСТЪПИЛОТО СЪБИТИЕ.<br/>Изтеглете тук: УКАЗАНИЯ ЗА ПОПЪЛВАНЕ НА ДВУСТРАНЕН КОНСТАТИВЕН ПРОТОКОЛ ЗА ПТП<br/>\"\r\n                    }\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc74c32eb01cb4d0de2a8\",\r\n                    \"owner\": \"zastrahovki_za_vas\",\r\n                    \"image\": \"doctor.png\",\r\n                    \"type\": \"sub-page\",\r\n                    \"zIndex\": 0,\r\n                    \"title\": {\r\n                        \"en\": \"Застраховки за ЗДРАВЕТО И ЖИВОТА EN\",\r\n                        \"bg\": \"Застраховки за ЗДРАВЕТО И ЖИВОТА \"\r\n                    },\r\n                    \"html\": {\r\n                        \"en\": \"Свързани са най-често с:<br/>- помощ при пътуване в чужбина;<br/>- планинска застраховка;<br/>- злополука на спортисти;<br/>- злополука на учениците и децата в детските и учебни заведения;<br/>- допълнително доброволно здравно осигуряване;<br/>- все по-сигурни и атрактивни са СПЕСТОВНИТЕ (дългосрочни)  застарохвки ЖИВОТ, както и пенсионните полици.\",\r\n                        \"bg\": \"Свързани са най-често с:<br/>- помощ при пътуване в чужбина;<br/>- планинска застраховка;<br/>- злополука на спортисти;<br/>- злополука на учениците и децата в детските и учебни заведения;<br/>- допълнително доброволно здравно осигуряване;<br/>- все по-сигурни и атрактивни са СПЕСТОВНИТЕ (дългосрочни)  застарохвки ЖИВОТ, както и пенсионните полици.\"\r\n                    }\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc74c32eb01cb4d0de2a9\",\r\n                    \"owner\": \"zastrahovki_za_biznesa_vi\",\r\n                    \"image\": \"wheel.png\",\r\n                    \"type\": \"sub-page\",\r\n                    \"zIndex\": 0,\r\n                    \"title\": {\r\n                        \"en\": \"Застраховка за Вашите АКТИВИ EN\",\r\n                        \"bg\": \"Застраховка за Вашите АКТИВИ \"\r\n                    },\r\n                    \"html\": {\r\n                        \"en\": \"сгради - административни , производстевени, складове, незавършени сториетелни обекти;<br/>оборудване, машини, електроника;<br/>стоково - материални запаси;<br/>и всички други дълготрайни материални активи на Вашия бизнес.<br/>Наша цел е да Ви предоставим най-качественото застрахователно покритие срещу рисковете , които може да се реализират и да възпрепятстват бизнеса Ви.\",\r\n                        \"bg\": \"сгради - административни , производстевени, складове, незавършени сториетелни обекти;<br/>оборудване, машини, електроника;<br/>стоково - материални запаси;<br/>и всички други дълготрайни материални активи на Вашия бизнес.<br/>Наша цел е да Ви предоставим най-качественото застрахователно покритие срещу рисковете , които може да се реализират и да възпрепятстват бизнеса Ви.\"\r\n                    }\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc74c32eb01cb4d0de2ab\",\r\n                    \"owner\": \"zastrahovki_za_biznesa_vi\",\r\n                    \"image\": \"factory-line.png\",\r\n                    \"type\": \"sub-page\",\r\n                    \"zIndex\": 1,\r\n                    \"title\": {\r\n                        \"en\": \"Застраховка на ОТГОВОРНОСТИ EN\",\r\n                        \"bg\": \"Застраховка на ОТГОВОРНОСТИ\"\r\n                    },\r\n                    \"html\": {\r\n                        \"en\": \"Навлизайки на европейските и световни пазари, спазвайки европейските норми и закони  на бизнеса, все повече се налагат  застраховките на отговорности. „ОБЩА ГРАЖДНСКА ОТГОВРОНСТ“, „Отговорност на ПРОДУКТА“ , „Отговорност на РАБОТОДАТЕЛЯ“ , „Отговорност на ХОТЕЛИЕРА и РЕСТОРАНТЬОРА“. Станаха задължителни някои от ПРОФЕСИОНАЛНИТЕ ОТГОВОРНОСТИ – на нотариуси, на адвокати, на строители и архитекти, на лекари и медицински персонал и други. Важна застраховка за бизнеса е ОТГОВРНОСТТА НА ПРЕВОЗВАЧА, покриваща загуба или повреда на товара по време на превоз по шосе със собствени и/или наети превозни средства, съгласно разпоредбите на международната конвенция „CMR“  и действащите закони в България;\",\r\n                        \"bg\": \"Навлизайки на европейските и световни пазари, спазвайки европейските норми и закони  на бизнеса, все повече се налагат  застраховките на отговорности. „ОБЩА ГРАЖДНСКА ОТГОВРОНСТ“, „Отговорност на ПРОДУКТА“ , „Отговорност на РАБОТОДАТЕЛЯ“ , „Отговорност на ХОТЕЛИЕРА и РЕСТОРАНТЬОРА“. Станаха задължителни някои от ПРОФЕСИОНАЛНИТЕ ОТГОВОРНОСТИ – на нотариуси, на адвокати, на строители и архитекти, на лекари и медицински персонал и други. Важна застраховка за бизнеса е ОТГОВРНОСТТА НА ПРЕВОЗВАЧА, покриваща загуба или повреда на товара по време на превоз по шосе със собствени и/или наети превозни средства, съгласно разпоредбите на международната конвенция „CMR“  и действащите закони в България;\"\r\n                    }\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc74c32eb01cb4d0de2ac\",\r\n                    \"owner\": \"zastrahovki_za_biznesa_vi\",\r\n                    \"image\": \"ship.png\",\r\n                    \"type\": \"sub-page\",\r\n                    \"zIndex\": 1,\r\n                    \"title\": {\r\n                        \"en\": \"Застраховка КАРГО на товари по време на превоз\",\r\n                        \"bg\": \"Застраховка КАРГО на товари по време на превоз\"\r\n                    },\r\n                    \"html\": {\r\n                        \"en\": \"Застраховката покрива частични или тотални щети на стоки при превоза им от и до всяка точка на света със сухоземен, воден, въздушен и / или комбиниран транспорт.\",\r\n                        \"bg\": \"Застраховката покрива частични или тотални щети на стоки при превоза им от и до всяка точка на света със сухоземен, воден, въздушен и / или комбиниран транспорт.\"\r\n                    }\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc74c32eb01cb4d0de2ad\",\r\n                    \"owner\": \"zastrahovki_za_biznesa_vi\",\r\n                    \"image\": \"builder.png\",\r\n                    \"type\": \"sub-page\",\r\n                    \"zIndex\": 1,\r\n                    \"title\": {\r\n                        \"en\": \"Застраховки на СЛУЖИТЕЛИТЕ\",\r\n                        \"bg\": \"Застраховки на СЛУЖИТЕЛИТЕ\"\r\n                    },\r\n                    \"html\": {\r\n                        \"en\": \"ЗАДЪЛЖИТЕЛНА ТРУДОВА ЗЛОПОЛУКА - Работодателят има задължение да сключва застраховка за всички работници и служители, подлежащи на застраховане съгласно ежегодно публикуван от Министерство на Труда и социалната политика Коефициент на трудов травматизъм . Застраховки свързани с командировките на служителите в чужбина „Медицински разноски в чужбина на работници и служители“;  Доброволно ДОПЪЛНИТЕЛНО ЗДРАВНО ОСИГУРЯВАНЕ , ГРУПОВИ застраховки ЖИВОТ или ЗЛОПОЛУКА.\",\r\n                        \"bg\": \"ЗАДЪЛЖИТЕЛНА ТРУДОВА ЗЛОПОЛУКА - Работодателят има задължение да сключва застраховка за всички работници и служители, подлежащи на застраховане съгласно ежегодно публикуван от Министерство на Труда и социалната политика Коефициент на трудов травматизъм . Застраховки свързани с командировките на служителите в чужбина „Медицински разноски в чужбина на работници и служители“;  Доброволно ДОПЪЛНИТЕЛНО ЗДРАВНО ОСИГУРЯВАНЕ , ГРУПОВИ застраховки ЖИВОТ или ЗЛОПОЛУКА.\"\r\n                    }\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc74c32eb01cb4d0de2ae\",\r\n                    \"owner\": \"zastrahovki_za_biznesa_vi\",\r\n                    \"image\": \"handshake.png\",\r\n                    \"type\": \"sub-page\",\r\n                    \"zIndex\": 1,\r\n                    \"title\": {\r\n                        \"en\": \"ЕКСПОРТНО ЗАСТРАХОВАНЕ\",\r\n                        \"bg\": \"ЕКСПОРТНО ЗАСТРАХОВАНЕ\"\r\n                    },\r\n                    \"html\": {\r\n                        \"en\": \"При сключване на договори за доставка на стоки и услуги с чужди партньори се застраховат вземанията при настъпване на риск - неплатежоспособност или забавяне на плащането.\",\r\n                        \"bg\": \"При сключване на договори за доставка на стоки и услуги с чужди партньори се застраховат вземанията при настъпване на риск - неплатежоспособност или забавяне на плащането.\"\r\n                    }\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc74c32eb01cb4d0de2b0\",\r\n                    \"owner\": \"zastrahovki_za_biznesa_vi\",\r\n                    \"image\": \"fields.png\",\r\n                    \"type\": \"sub-page\",\r\n                    \"zIndex\": 1,\r\n                    \"title\": {\r\n                        \"en\": \"ЗЕМЕДЕЛСКИ КУЛТУРИ и ЖИВОТНИ\",\r\n                        \"bg\": \"ЗЕМЕДЕЛСКИ КУЛТУРИ и ЖИВОТНИ\"\r\n                    },\r\n                    \"html\": {\r\n                        \"en\": \"Застрахова се реколтата от земеделски култури, трайни насаждения в плододаваща възраст (лозя и овошки), зеленчуци, медицински и етеричномаслени култури. Застраховат се също така животни, птици, риба и зарибителен материал, пчелни семейства при смърт или клане (унищожаване по необходимост).\",\r\n                        \"bg\": \"Застрахова се реколтата от земеделски култури, трайни насаждения в плододаваща възраст (лозя и овошки), зеленчуци, медицински и етеричномаслени култури. Застраховат се също така животни, птици, риба и зарибителен материал, пчелни семейства при смърт или клане (унищожаване по необходимост).\"\r\n                    }\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc74c32eb01cb4d0de2b1\",\r\n                    \"owner\": \"urejdane_na_zastrahovatelni_pretencii\",\r\n                    \"image\": \"petition.png\",\r\n                    \"type\": \"sub-page\",\r\n                    \"zIndex\": 1,\r\n                    \"title\": {\r\n                        \"en\": \"Сътрудничим на всеки пострадал от застрахователни събития в България и чужбина, като осъществяваме следните дейности:\",\r\n                        \"bg\": \"Сътрудничим на всеки пострадал от застрахователни събития в България и чужбина, като осъществяваме следните дейности:\"\r\n                    },\r\n                    \"html\": {\r\n                        \"en\": \"Анализираме и предварително оформяме информацията и документите относно настъпилото събитие, като конкретизираме покритите рискове;<br/>Окомплектоваме всички необходими документи и предявяваме Претенцията пред Застрахователя;<br/>Съдействаме при извършване на огледи;<br/>Осигуряваме при необходимост експерт-инженери;<br/>Посредничим при кореспонденцията със Застрахователя до крайното уреждане на претенцията.<br/>Взаимоотношенията ни с лица, които не са наши клиенти се оформят с договор.\",\r\n                        \"bg\": \"Анализираме и предварително оформяме информацията и документите относно настъпилото събитие, като конкретизираме покритите рискове;<br/>Окомплектоваме всички необходими документи и предявяваме Претенцията пред Застрахователя;<br/>Съдействаме при извършване на огледи;<br/>Осигуряваме при необходимост експерт-инженери;<br/>Посредничим при кореспонденцията със Застрахователя до крайното уреждане на претенцията.<br/>Взаимоотношенията ни с лица, които не са наши клиенти се оформят с договор.\"\r\n                    }\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc74c32eb01cb4d0de2b2\",\r\n                    \"owner\": \"tehnichesko_obslujvane_na_avtomobili\",\r\n                    \"image\": \"car.png\",\r\n                    \"type\": \"sub-page\",\r\n                    \"zIndex\": 1,\r\n                    \"title\": {\r\n                        \"en\": \"Услугите, които предлагаме са\",\r\n                        \"bg\": \"Услугите, които предлагаме са\"\r\n                    },\r\n                    \"html\": {\r\n                        \"en\": \"Периодично Техническо обслужване – транспортиране на автомобила до избран от Вас сервиз за периодично обслужване:  смяна на масло, филтри и други сервизни дейности по техническата поддръжка на колата, както връщането й на посочен от Вас адрес;<br/>Смяна на гуми – транспортиране на автомобила до сервиза, извършващ смяната и неговото връщане на посочено от Вас място;<br/>Извършване на периодичен Годишен Технически Преглед (ГТП);<br/>Осигуряване на сервизно обслужване и при възникване на други непредвидени ремонти на автомобилите - доставяне на резервни части и консумативи за съответната марка автомобил на избаран от Вас неоторизиран сервиз по предварително изготвена оферта;<br/>Съдействие при възникване на техническа повреда на автомобила – консултация, осигуряване на пътна помощ за репатриране до сервиз (доверен или оторизиран).<br/>Предоставената от нас услуга се оформя с договор.\",\r\n                        \"bg\": \"Периодично Техническо обслужване – транспортиране на автомобила до избран от Вас сервиз за периодично обслужване:  смяна на масло, филтри и други сервизни дейности по техническата поддръжка на колата, както връщането й на посочен от Вас адрес;<br/>Смяна на гуми – транспортиране на автомобила до сервиза, извършващ смяната и неговото връщане на посочено от Вас място;<br/>Извършване на периодичен Годишен Технически Преглед (ГТП);<br/>Осигуряване на сервизно обслужване и при възникване на други непредвидени ремонти на автомобилите - доставяне на резервни части и консумативи за съответната марка автомобил на избаран от Вас неоторизиран сервиз по предварително изготвена оферта;<br/>Съдействие при възникване на техническа повреда на автомобила – консултация, осигуряване на пътна помощ за репатриране до сервиз (доверен или оторизиран).<br/>Предоставената от нас услуга се оформя с договор.\"\r\n                    }\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc74c32eb01cb4d0de2b3\",\r\n                    \"owner\": \"konsultacii\",\r\n                    \"image\": \"computer.png\",\r\n                    \"type\": \"sub-page\",\r\n                    \"zIndex\": 1,\r\n                    \"title\": {\r\n                        \"en\": \"Предлагаме на нашите клиенти следните дейности\",\r\n                        \"bg\": \"Предлагаме на нашите клиенти следните дейности\"\r\n                    },\r\n                    \"html\": {\r\n                        \"en\": \"Съдействие при избор и закупуване на автомобил – предоставянe на промоционални оферти от вносителите на автомобили в България, доставка на предварително одобрен автомобил от Германия, Австрия и Италия ;<br/>Предоставяне на лизингови схеми  - финансов и оперативен лизинг;<br/>Анализ на събраните оферти относно технически параметри, разход на гориво и други предимдства и недостатъци на подбраните от нас автомобили.\",\r\n                        \"bg\": \"Съдействие при избор и закупуване на автомобил – предоставянe на промоционални оферти от вносителите на автомобили в България, доставка на предварително одобрен автомобил от Германия, Австрия и Италия ;<br/>Предоставяне на лизингови схеми  - финансов и оперативен лизинг;<br/>Анализ на събраните оферти относно технически параметри, разход на гориво и други предимдства и недостатъци на подбраните от нас автомобили.\"\r\n                    }\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc74c32eb01cb4d0de2b3\",\r\n                    \"owner\": \"novini\",\r\n                    \"image\": \"computer.png\",\r\n                    \"type\": \"sub-page\",\r\n                    \"zIndex\": 1,\r\n                    \"title\": {\r\n                        \"en\": \"Предлагаме на нашите клиенти следните дейности\",\r\n                        \"bg\": \"Предлагаме на нашите клиенти следните дейности\"\r\n                    },\r\n                    \"html\": {\r\n                        \"en\": \"Съдействие при избор и закупуване на автомобил – предоставянe на промоционални оферти от вносителите на автомобили в България, доставка на предварително одобрен автомобил от Германия, Австрия и Италия ;<br/>Предоставяне на лизингови схеми  - финансов и оперативен лизинг;<br/>Анализ на събраните оферти относно технически параметри, разход на гориво и други предимдства и недостатъци на подбраните от нас автомобили.\",\r\n                        \"bg\": \"Съдействие при избор и закупуване на автомобил – предоставянe на промоционални оферти от вносителите на автомобили в България, доставка на предварително одобрен автомобил от Германия, Австрия и Италия ;<br/>Предоставяне на лизингови схеми  - финансов и оперативен лизинг;<br/>Анализ на събраните оферти относно технически параметри, разход на гориво и други предимдства и недостатъци на подбраните от нас автомобили.\"\r\n                    }\r\n                },\r\n                {\r\n                    \"_id\": \"58ebc74c32eb01cb4d0de2b3\",\r\n                    \"owner\": \"novini\",\r\n                    \"image\": \"computer.png\",\r\n                    \"type\": \"sub-page\",\r\n                    \"zIndex\": 1,\r\n                    \"title\": {\r\n                        \"en\": \"Предлагаме на нашите клиенти следните дейности\",\r\n                        \"bg\": \"Предлагаме на нашите клиенти следните дейности\"\r\n                    },\r\n                    \"html\": {\r\n                        \"en\": \"Съдействие при избор и закупуване на автомобил – предоставянe на промоционални оферти от вносителите на автомобили в България, доставка на предварително одобрен автомобил от Германия, Австрия и Италия ;<br/>Предоставяне на лизингови схеми  - финансов и оперативен лизинг;<br/>Анализ на събраните оферти относно технически параметри, разход на гориво и други предимдства и недостатъци на подбраните от нас автомобили.\",\r\n                        \"bg\": \"Съдействие при избор и закупуване на автомобил – предоставянe на промоционални оферти от вносителите на автомобили в България, доставка на предварително одобрен автомобил от Германия, Австрия и Италия ;<br/>Предоставяне на лизингови схеми  - финансов и оперативен лизинг;<br/>Анализ на събраните оферти относно технически параметри, разход на гориво и други предимдства и недостатъци на подбраните от нас автомобили.\"\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n    }\r\n    Pages = __decorate([\r\n        core_1.Injectable()\r\n    ], Pages);\r\n    return Pages;\r\n}());\r\nexports.Pages = Pages;\r\n\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar dictionary_service_1 = __webpack_require__(26);\r\nvar fetcher_service_1 = __webpack_require__(97);\r\nvar event_emiter_service_1 = __webpack_require__(32);\r\nvar config_1 = __webpack_require__(69);\r\n// import { DateComponent } from '../date/date.component';\r\nvar ContactsComponent = (function () {\r\n    function ContactsComponent(dictionary, fetcherService, eventEmiterService) {\r\n        this.dictionary = dictionary;\r\n        this.fetcherService = fetcherService;\r\n        this.eventEmiterService = eventEmiterService;\r\n        this.mapCoordinates = config_1.Config.mapCoordinates;\r\n        this.starsCount = 4.6;\r\n    }\r\n    ContactsComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'contacts',\r\n            styles: [__webpack_require__(475)],\r\n            template: __webpack_require__(415)\r\n        }),\r\n        __metadata(\"design:paramtypes\", [dictionary_service_1.Dictionary,\r\n            fetcher_service_1.FetcherService,\r\n            event_emiter_service_1.EventEmiterService])\r\n    ], ContactsComponent);\r\n    return ContactsComponent;\r\n}());\r\nexports.ContactsComponent = ContactsComponent;\r\n\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar dictionary_service_1 = __webpack_require__(26);\r\nvar pages_service_1 = __webpack_require__(41);\r\nvar pages_data_service_1 = __webpack_require__(51);\r\nvar event_emiter_service_1 = __webpack_require__(32);\r\nvar DetailsComponent = (function () {\r\n    function DetailsComponent(dictionary, pagesService, pagesDataService, eventEmiterService) {\r\n        var _this = this;\r\n        this.dictionary = dictionary;\r\n        this.pagesService = pagesService;\r\n        this.pagesDataService = pagesDataService;\r\n        this.eventEmiterService = eventEmiterService;\r\n        this.pages = Array();\r\n        this.pagesData = Array();\r\n        this.pages = pagesService.getPages();\r\n        this.pagesData = pagesDataService.getPagesData();\r\n        // on categories update we update the local array\r\n        this.eventEmiterService.dataFetched.subscribe(function (data) { return _this.onFetchedData(data); });\r\n    }\r\n    ;\r\n    DetailsComponent.prototype.onFetchedData = function (data) {\r\n        this.pages = data.products;\r\n        this.pagesData = data.categories;\r\n    };\r\n    DetailsComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'details',\r\n            styles: [__webpack_require__(476)],\r\n            template: __webpack_require__(416)\r\n        }),\r\n        __metadata(\"design:paramtypes\", [dictionary_service_1.Dictionary,\r\n            pages_service_1.PagesService,\r\n            pages_data_service_1.PagesDataService,\r\n            event_emiter_service_1.EventEmiterService])\r\n    ], DetailsComponent);\r\n    return DetailsComponent;\r\n}());\r\nexports.DetailsComponent = DetailsComponent;\r\n\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar router_1 = __webpack_require__(40);\r\nvar dictionary_service_1 = __webpack_require__(26);\r\nvar pages_service_1 = __webpack_require__(41);\r\nvar pages_data_service_1 = __webpack_require__(51);\r\nvar event_emiter_service_1 = __webpack_require__(32);\r\nvar HomeComponent = (function () {\r\n    function HomeComponent(router, dictionary, pagesService, pagesDataService, eventEmiterService) {\r\n        this.router = router;\r\n        this.dictionary = dictionary;\r\n        this.pagesService = pagesService;\r\n        this.pagesDataService = pagesDataService;\r\n        this.eventEmiterService = eventEmiterService;\r\n        this.pages = [];\r\n        this.pagesData = [];\r\n        this.icons = [\r\n            {\r\n                link: 'zastrahovki_za_vas',\r\n                src: 'zastrahovka_za_vas.png'\r\n            },\r\n            {\r\n                link: 'zastrahovki_za_biznesa_vi',\r\n                src: 'zastrahovki_biznes.png'\r\n            },\r\n            {\r\n                link: 'urejdane_na_zastrahovatelni_pretencii',\r\n                src: 'zastrahovatelni_pretencii.png'\r\n            },\r\n            {\r\n                link: 'konsultacii',\r\n                src: 'consulting.png'\r\n            },\r\n            {\r\n                link: 'tehnichesko_obslujvane_na_avtomobili',\r\n                src: 'technical_support.png'\r\n            }\r\n        ];\r\n        this.pageInfo = '';\r\n        this.pages = pagesService.getPages();\r\n        for (var pagesCounter = 0; pagesCounter < this.pages.length; pagesCounter++) {\r\n            if (this.pages[pagesCounter]['owner'] == 'home') {\r\n                this.pageInfo = this.pages[pagesCounter]['html'][dictionary['language']];\r\n            }\r\n        }\r\n    }\r\n    ;\r\n    HomeComponent.prototype.buildSrc = function (icon) {\r\n        return './src/img/' + icon.src;\r\n    };\r\n    HomeComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'home',\r\n            styles: [__webpack_require__(477)],\r\n            template: __webpack_require__(417)\r\n        }),\r\n        __metadata(\"design:paramtypes\", [router_1.Router,\r\n            dictionary_service_1.Dictionary,\r\n            pages_service_1.PagesService,\r\n            pages_data_service_1.PagesDataService,\r\n            event_emiter_service_1.EventEmiterService])\r\n    ], HomeComponent);\r\n    return HomeComponent;\r\n}());\r\nexports.HomeComponent = HomeComponent;\r\n\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar router_1 = __webpack_require__(40);\r\nvar dictionary_service_1 = __webpack_require__(26);\r\nvar pages_service_1 = __webpack_require__(41);\r\nvar pages_data_service_1 = __webpack_require__(51);\r\nvar event_emiter_service_1 = __webpack_require__(32);\r\nvar PageComponent = (function () {\r\n    function PageComponent(router, dictionary, pagesService, routeParams, pagesDataService, eventEmiterService) {\r\n        var _this = this;\r\n        this.router = router;\r\n        this.dictionary = dictionary;\r\n        this.pagesService = pagesService;\r\n        this.routeParams = routeParams;\r\n        this.pagesDataService = pagesDataService;\r\n        this.eventEmiterService = eventEmiterService;\r\n        this.pageData = {\r\n            page: {},\r\n            subPages: []\r\n        };\r\n        this.pageType = '';\r\n        this.insuranseLink = '';\r\n        this.routeParams.params.subscribe(function (params) { return _this.setParams(params); });\r\n    }\r\n    ;\r\n    PageComponent.prototype.setParams = function (params) {\r\n        var _this = this;\r\n        if (params['insurance']) {\r\n            this.insuranseLink = params.insurance.toLowerCase();\r\n            this.pages = this.pagesService.getPages();\r\n            this.pagesData = this.pagesDataService.getPagesData();\r\n            this.getPageData();\r\n            // on categories update we update the local array\r\n            this.eventEmiterService.dataFetched.subscribe(function (data) { return _this.onFetchedData(data); });\r\n        }\r\n    };\r\n    PageComponent.prototype.onFetchedData = function (data) {\r\n        this.pages = data.products;\r\n        this.pagesData = data.categories;\r\n        this.getPageData();\r\n    };\r\n    PageComponent.prototype.getPageData = function () {\r\n        // we empty the array with sub pages\r\n        this.pageData['subPages'].length = 0;\r\n        for (var pagesCounter = 0; pagesCounter < this.pagesData.length; pagesCounter++) {\r\n            if (this.insuranseLink == this.pagesData[pagesCounter]['owner']) {\r\n                if (this.pagesData[pagesCounter]['type'] == 'page') {\r\n                    this.pageData['page'] = this.pagesData[pagesCounter];\r\n                }\r\n                if (this.pagesData[pagesCounter]['type'] == 'sub-page') {\r\n                    this.pageData['subPages'].push(this.pagesData[pagesCounter]);\r\n                    // if this.pagesData[pagesCounter].html[dictionary.language].length > 900\r\n                    // добави бутон който да отваря в нова страница като отделна\r\n                }\r\n            }\r\n        }\r\n    };\r\n    PageComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'page',\r\n            styles: [__webpack_require__(478)],\r\n            template: __webpack_require__(418)\r\n        }),\r\n        __metadata(\"design:paramtypes\", [router_1.Router,\r\n            dictionary_service_1.Dictionary,\r\n            pages_service_1.PagesService,\r\n            router_1.ActivatedRoute,\r\n            pages_data_service_1.PagesDataService,\r\n            event_emiter_service_1.EventEmiterService])\r\n    ], PageComponent);\r\n    return PageComponent;\r\n}());\r\nexports.PageComponent = PageComponent;\r\n\n\n/***/ }),\n/* 147 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar router_1 = __webpack_require__(40);\r\n//import { DateComponent } from '../date/date.component';\r\nvar PageNotFoundComponent = (function () {\r\n    /**\r\n     * @constructor We init the view with the router\r\n     */\r\n    function PageNotFoundComponent(router) {\r\n        this.router = router;\r\n    }\r\n    /**\r\n     * @ngOnInit on init\r\n     */\r\n    PageNotFoundComponent.prototype.ngOnInit = function () {\r\n        this.checkForSimilarRouter();\r\n    };\r\n    PageNotFoundComponent.prototype.checkForSimilarRouter = function () {\r\n        var path = '';\r\n        var navigateTo = '';\r\n        var currentUrl = this.router.url.toLowerCase().split('/')[1];\r\n        // we split it into many 2 chars strings\r\n        var partsOfUrl = currentUrl.match(/.{1,2}/g);\r\n        var partsEquals = new Array(partsOfUrl.length);\r\n        // we check for all routes we predeclare\r\n        for (var routeCounter = 0; routeCounter < this.router.config.length; routeCounter++) {\r\n            partsEquals.fill(undefined);\r\n            path = this.router.config[routeCounter].path;\r\n            // we check for each part of the url we typed is part of it\r\n            for (var chunksCounter = 0; chunksCounter < partsEquals.length; chunksCounter++) {\r\n                // if the part of the url is here we make it true\r\n                if (path.indexOf(partsOfUrl[chunksCounter]) !== -1) {\r\n                    partsEquals[chunksCounter] = true;\r\n                }\r\n            }\r\n            // check did we find the path that we must go to\r\n            partsEquals.sort();\r\n            if ((partsEquals.indexOf(undefined) > partsEquals.length * 1 / 2) || (partsEquals.indexOf(undefined) == -1)) {\r\n                var url = '/';\r\n                if (this.router.url.split('/')[2] !== undefined) {\r\n                    if (path.split(':')[1] !== undefined) {\r\n                        url += path.split(':')[0];\r\n                        url += this.router.url.split('/')[2];\r\n                    }\r\n                }\r\n                else {\r\n                    url += path;\r\n                }\r\n                this.router.navigate([url]);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], PageNotFoundComponent.prototype, \"postOptions\", void 0);\r\n    PageNotFoundComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'page-not-found',\r\n            styles: [__webpack_require__(479)],\r\n            template: __webpack_require__(419)\r\n        }),\r\n        __metadata(\"design:paramtypes\", [router_1.Router])\r\n    ], PageNotFoundComponent);\r\n    return PageNotFoundComponent;\r\n}());\r\nexports.PageNotFoundComponent = PageNotFoundComponent;\r\n\n\n/***/ }),\n/* 148 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar BulgarianDictionary = (function () {\r\n    function BulgarianDictionary() {\r\n        this.language = {\r\n            \"homePage\": \"Начало\",\r\n            \"services\": \"Видове услуги\",\r\n            \"contactPage\": \"Контакти\",\r\n            \"companyAddress\": \"1527 София , ул. Стара планина 37\",\r\n            \"contactPhone1\": \"+359/2/9433799\",\r\n            \"contactPhone2\": \"+359/2/9446207\",\r\n            \"contactPhone3\": \"+359888234454\",\r\n            \"contactPhone4\": \"+359888902401\",\r\n            \"contactPhone5\": \"+359888802856\",\r\n            \"contactPhone3viber\": \"2B359888234454\",\r\n            \"contactPhone4viber\": \"2B359888902401\",\r\n            \"contactPhone5viber\": \"2B359888802856\",\r\n        };\r\n    }\r\n    BulgarianDictionary = __decorate([\r\n        core_1.Injectable()\r\n    ], BulgarianDictionary);\r\n    return BulgarianDictionary;\r\n}());\r\nexports.BulgarianDictionary = BulgarianDictionary;\r\n\n\n/***/ }),\n/* 149 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar EnglishDictionary = (function () {\r\n    function EnglishDictionary() {\r\n        this.language = {\r\n            \"homePage\": \"Home\",\r\n        };\r\n    }\r\n    EnglishDictionary = __decorate([\r\n        core_1.Injectable()\r\n    ], EnglishDictionary);\r\n    return EnglishDictionary;\r\n}());\r\nexports.EnglishDictionary = EnglishDictionary;\r\n\n\n/***/ }),\n/* 150 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar ErrorHandlerService = (function () {\r\n    function ErrorHandlerService() {\r\n        this.errorEmitter = new core_1.EventEmitter();\r\n    }\r\n    ErrorHandlerService.prototype.handleError = function (err) {\r\n    };\r\n    ErrorHandlerService.prototype.emitError = function (data) {\r\n        this.errorEmitter.emit(data);\r\n    };\r\n    ErrorHandlerService = __decorate([\r\n        core_1.Injectable()\r\n        /**\r\n         * @DriverService used on all connections to the back-end for the drivers\r\n         */\r\n        ,\r\n        __metadata(\"design:paramtypes\", [])\r\n    ], ErrorHandlerService);\r\n    return ErrorHandlerService;\r\n}());\r\nexports.ErrorHandlerService = ErrorHandlerService;\r\n\n\n/***/ }),\n/* 151 */,\n/* 152 */,\n/* 153 */,\n/* 154 */,\n/* 155 */,\n/* 156 */,\n/* 157 */,\n/* 158 */,\n/* 159 */,\n/* 160 */,\n/* 161 */,\n/* 162 */,\n/* 163 */,\n/* 164 */,\n/* 165 */,\n/* 166 */,\n/* 167 */,\n/* 168 */,\n/* 169 */,\n/* 170 */,\n/* 171 */,\n/* 172 */,\n/* 173 */,\n/* 174 */,\n/* 175 */,\n/* 176 */,\n/* 177 */,\n/* 178 */,\n/* 179 */,\n/* 180 */,\n/* 181 */,\n/* 182 */,\n/* 183 */,\n/* 184 */,\n/* 185 */,\n/* 186 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__keyStorage__ = __webpack_require__(120);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__keyStorage__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__storageObserver__ = __webpack_require__(187);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_1__storageObserver__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__webStorage__ = __webpack_require__(188);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_2__webStorage__[\"a\"]; });\n\r\n\r\n\r\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 187 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return StorageObserverHelper; });\n\r\nvar StorageObserverHelper = (function () {\r\n    function StorageObserverHelper() {\r\n    }\r\n    StorageObserverHelper.observe = function (sType, sKey) {\r\n        var oKey = this.genObserverKey(sType, sKey);\r\n        if (oKey in this.observers)\r\n            return this.observers[oKey];\r\n        return this.observers[oKey] = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\r\n    };\r\n    StorageObserverHelper.emit = function (sType, sKey, value) {\r\n        var oKey = this.genObserverKey(sType, sKey);\r\n        if (oKey in this.observers)\r\n            this.observers[oKey].emit(value);\r\n    };\r\n    StorageObserverHelper.genObserverKey = function (sType, sKey) {\r\n        return sType + '|' + sKey;\r\n    };\r\n    return StorageObserverHelper;\r\n}());\r\n\r\nStorageObserverHelper.observers = {};\r\n//# sourceMappingURL=storageObserver.js.map\n\n/***/ }),\n/* 188 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__enums_storage__ = __webpack_require__(38);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__storageObserver__ = __webpack_require__(187);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__keyStorage__ = __webpack_require__(120);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mockStorage__ = __webpack_require__(405);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__constants_lib__ = __webpack_require__(80);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return WebStorageHelper; });\n\r\n\r\n\r\n\r\n\r\nvar CACHED = (_a = {}, _a[__WEBPACK_IMPORTED_MODULE_0__enums_storage__[\"a\" /* STORAGE */].local] = {}, _a[__WEBPACK_IMPORTED_MODULE_0__enums_storage__[\"a\" /* STORAGE */].session] = {}, _a);\r\nvar STORAGEAVAILABILITY = (_b = {}, _b[__WEBPACK_IMPORTED_MODULE_0__enums_storage__[\"a\" /* STORAGE */].local] = null, _b[__WEBPACK_IMPORTED_MODULE_0__enums_storage__[\"a\" /* STORAGE */].session] = null, _b);\r\nvar WebStorageHelper = (function () {\r\n    function WebStorageHelper() {\r\n    }\r\n    WebStorageHelper.store = function (sType, sKey, value) {\r\n        this.getStorage(sType).setItem(sKey, JSON.stringify(value));\r\n        CACHED[sType][sKey] = value;\r\n        __WEBPACK_IMPORTED_MODULE_1__storageObserver__[\"a\" /* StorageObserverHelper */].emit(sType, sKey, value);\r\n    };\r\n    WebStorageHelper.retrieve = function (sType, sKey) {\r\n        if (CACHED[sType][sKey])\r\n            return CACHED[sType][sKey];\r\n        return CACHED[sType][sKey] = WebStorageHelper.retrieveFromStorage(sType, sKey);\r\n    };\r\n    WebStorageHelper.retrieveFromStorage = function (sType, sKey) {\r\n        var data = null;\r\n        try {\r\n            data = JSON.parse(this.getStorage(sType).getItem(sKey));\r\n        }\r\n        catch (err) {\r\n            console.warn(\"invalid value for \" + sKey);\r\n        }\r\n        return data;\r\n    };\r\n    WebStorageHelper.refresh = function (sType, sKey) {\r\n        if (!__WEBPACK_IMPORTED_MODULE_2__keyStorage__[\"a\" /* KeyStorageHelper */].isManagedKey(sKey))\r\n            return;\r\n        var value = WebStorageHelper.retrieveFromStorage(sType, sKey);\r\n        if (value === null) {\r\n            delete CACHED[sType][sKey];\r\n            __WEBPACK_IMPORTED_MODULE_1__storageObserver__[\"a\" /* StorageObserverHelper */].emit(sType, sKey, null);\r\n        }\r\n        else if (value !== CACHED[sType][sKey]) {\r\n            CACHED[sType][sKey] = value;\r\n            __WEBPACK_IMPORTED_MODULE_1__storageObserver__[\"a\" /* StorageObserverHelper */].emit(sType, sKey, value);\r\n        }\r\n    };\r\n    WebStorageHelper.clearAll = function (sType) {\r\n        var storage = this.getStorage(sType);\r\n        __WEBPACK_IMPORTED_MODULE_2__keyStorage__[\"a\" /* KeyStorageHelper */].retrieveKeysFromStorage(storage)\r\n            .forEach(function (sKey) {\r\n            storage.removeItem(sKey);\r\n            delete CACHED[sType][sKey];\r\n            __WEBPACK_IMPORTED_MODULE_1__storageObserver__[\"a\" /* StorageObserverHelper */].emit(sType, sKey, null);\r\n        });\r\n    };\r\n    WebStorageHelper.clear = function (sType, sKey) {\r\n        this.getStorage(sType).removeItem(sKey);\r\n        delete CACHED[sType][sKey];\r\n        __WEBPACK_IMPORTED_MODULE_1__storageObserver__[\"a\" /* StorageObserverHelper */].emit(sType, sKey, null);\r\n    };\r\n    WebStorageHelper.getStorage = function (sType) {\r\n        if (this.isStorageAvailable(sType))\r\n            return this.getWStorage(sType);\r\n        else\r\n            return __WEBPACK_IMPORTED_MODULE_3__mockStorage__[\"a\" /* MockStorageHelper */].getStorage(sType);\r\n    };\r\n    WebStorageHelper.getWStorage = function (sType) {\r\n        var storage;\r\n        switch (sType) {\r\n            case __WEBPACK_IMPORTED_MODULE_0__enums_storage__[\"a\" /* STORAGE */].local:\r\n                storage = localStorage;\r\n                break;\r\n            case __WEBPACK_IMPORTED_MODULE_0__enums_storage__[\"a\" /* STORAGE */].session:\r\n                storage = sessionStorage;\r\n                break;\r\n            default:\r\n                throw Error('invalid storage type');\r\n        }\r\n        return storage;\r\n    };\r\n    WebStorageHelper.isStorageAvailable = function (sType) {\r\n        if (typeof STORAGEAVAILABILITY[sType] === 'boolean')\r\n            return STORAGEAVAILABILITY[sType];\r\n        var isAvailable = true, storage;\r\n        try {\r\n            storage = this.getWStorage(sType);\r\n            if (typeof storage === 'object') {\r\n                storage.setItem('test-storage', 'foobar');\r\n                storage.removeItem('test-storage');\r\n            }\r\n            else\r\n                isAvailable = false;\r\n        }\r\n        catch (e) {\r\n            isAvailable = false;\r\n        }\r\n        if (!isAvailable)\r\n            console.warn(__WEBPACK_IMPORTED_MODULE_4__constants_lib__[\"c\" /* STORAGE_NAMES */][sType] + \" storage unavailable, Ng2Webstorage will use a fallback strategy instead\");\r\n        return STORAGEAVAILABILITY[sType] = isAvailable;\r\n    };\r\n    return WebStorageHelper;\r\n}());\r\n\r\nvar _a, _b;\r\n//# sourceMappingURL=webStorage.js.map\n\n/***/ }),\n/* 189 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__constants_lib__ = __webpack_require__(80);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return WebstorageConfig; });\n\r\nvar WebstorageConfig = (function () {\r\n    function WebstorageConfig(config) {\r\n        this.prefix = __WEBPACK_IMPORTED_MODULE_0__constants_lib__[\"a\" /* LIB_KEY */];\r\n        this.separator = __WEBPACK_IMPORTED_MODULE_0__constants_lib__[\"b\" /* LIB_KEY_SEPARATOR */];\r\n        if (config && config.prefix !== undefined) {\r\n            this.prefix = config.prefix;\r\n        }\r\n        if (config && config.separator !== undefined) {\r\n            this.separator = config.separator;\r\n        }\r\n    }\r\n    return WebstorageConfig;\r\n}());\r\n\r\n//# sourceMappingURL=config.js.map\n\n/***/ }),\n/* 190 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__webStorage__ = __webpack_require__(121);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__webStorage__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__localStorage__ = __webpack_require__(407);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__localStorage__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__sessionStorage__ = __webpack_require__(408);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_2__sessionStorage__[\"a\"]; });\n\r\n\r\n\r\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 191 */,\n/* 192 */,\n/* 193 */,\n/* 194 */,\n/* 195 */,\n/* 196 */,\n/* 197 */,\n/* 198 */,\n/* 199 */,\n/* 200 */,\n/* 201 */,\n/* 202 */,\n/* 203 */,\n/* 204 */,\n/* 205 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// Angular 2 Modules\r\n__webpack_require__(400);\r\nvar core_1 = __webpack_require__(1);\r\nvar material_1 = __webpack_require__(235);\r\nvar http_1 = __webpack_require__(66);\r\nvar ng2_webstorage_1 = __webpack_require__(401);\r\nvar core_2 = __webpack_require__(230);\r\nvar ngx_rating_1 = __webpack_require__(409);\r\nvar platform_browser_1 = __webpack_require__(31);\r\nvar animations_1 = __webpack_require__(236);\r\nvar forms_1 = __webpack_require__(65);\r\n// Router\r\nvar app_routing_1 = __webpack_require__(238);\r\n// Language \r\nvar dictionary_service_1 = __webpack_require__(26);\r\nvar en_dictionary_1 = __webpack_require__(149);\r\nvar bg_dictionary_1 = __webpack_require__(148);\r\n// Basic Components\r\nvar price_component_1 = __webpack_require__(242);\r\nvar image_component_1 = __webpack_require__(240);\r\nvar header_component_1 = __webpack_require__(239);\r\nvar notification_component_1 = __webpack_require__(241);\r\n// Components\r\nvar app_component_1 = __webpack_require__(237);\r\nvar home_component_1 = __webpack_require__(145);\r\nvar page_component_1 = __webpack_require__(146);\r\nvar search_component_1 = __webpack_require__(243);\r\nvar details_component_1 = __webpack_require__(144);\r\nvar contacts_component_1 = __webpack_require__(143);\r\nvar page_not_found_component_1 = __webpack_require__(147);\r\n// Config\r\nvar config_1 = __webpack_require__(69);\r\n// Cache\r\nvar cache_1 = __webpack_require__(141);\r\nvar pages_1 = __webpack_require__(142);\r\n// Services\r\nvar pages_service_1 = __webpack_require__(41);\r\nvar fetcher_service_1 = __webpack_require__(97);\r\nvar pages_data_service_1 = __webpack_require__(51);\r\nvar event_emiter_service_1 = __webpack_require__(32);\r\nvar error_handler_service_1 = __webpack_require__(150);\r\nvar AppModule = (function () {\r\n    function AppModule() {\r\n    }\r\n    AppModule = __decorate([\r\n        core_1.NgModule({\r\n            // Modules & Libs\r\n            imports: [\r\n                app_routing_1.routing,\r\n                http_1.HttpModule,\r\n                forms_1.FormsModule,\r\n                ngx_rating_1.RatingModule,\r\n                platform_browser_1.BrowserModule,\r\n                ng2_webstorage_1.Ng2Webstorage,\r\n                material_1.MaterialModule,\r\n                forms_1.ReactiveFormsModule,\r\n                animations_1.BrowserAnimationsModule,\r\n                core_2.AgmCoreModule.forRoot({\r\n                    apiKey: 'AIzaSyDBbPzFEwNVTHNoZ-bz7YYqO1eMRPqTyUA'\r\n                })\r\n            ],\r\n            // Components & Views\r\n            declarations: [\r\n                // standard components\r\n                app_component_1.AppComponent,\r\n                image_component_1.ImageComponent,\r\n                price_component_1.PriceComponent,\r\n                header_component_1.HeaderComponent,\r\n                notification_component_1.NotificationComponent,\r\n                // SideMenuComponent,\r\n                // views\r\n                home_component_1.HomeComponent,\r\n                page_component_1.PageComponent,\r\n                search_component_1.SearchComponent,\r\n                details_component_1.DetailsComponent,\r\n                contacts_component_1.ContactsComponent,\r\n                page_not_found_component_1.PageNotFoundComponent,\r\n            ],\r\n            // Bootstraping\r\n            bootstrap: [\r\n                app_component_1.AppComponent\r\n            ],\r\n            // Services\r\n            providers: [\r\n                // config of the app\r\n                config_1.Config,\r\n                // router of the app\r\n                app_routing_1.appRoutingProviders,\r\n                // languages\r\n                dictionary_service_1.Dictionary,\r\n                en_dictionary_1.EnglishDictionary,\r\n                bg_dictionary_1.BulgarianDictionary,\r\n                // cache\r\n                cache_1.Cache,\r\n                pages_1.Pages,\r\n                // services of the app\r\n                pages_service_1.PagesService,\r\n                fetcher_service_1.FetcherService,\r\n                pages_data_service_1.PagesDataService,\r\n                event_emiter_service_1.EventEmiterService,\r\n                error_handler_service_1.ErrorHandlerService\r\n            ]\r\n        })\r\n    ], AppModule);\r\n    return AppModule;\r\n}());\r\nexports.AppModule = AppModule;\r\n\n\n/***/ }),\n/* 206 */,\n/* 207 */,\n/* 208 */,\n/* 209 */,\n/* 210 */,\n/* 211 */,\n/* 212 */,\n/* 213 */,\n/* 214 */,\n/* 215 */,\n/* 216 */,\n/* 217 */,\n/* 218 */,\n/* 219 */,\n/* 220 */,\n/* 221 */,\n/* 222 */,\n/* 223 */,\n/* 224 */,\n/* 225 */,\n/* 226 */,\n/* 227 */,\n/* 228 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__directives_map__ = __webpack_require__(135);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__directives_circle__ = __webpack_require__(132);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__directives_info_window__ = __webpack_require__(87);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__directives_marker__ = __webpack_require__(136);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__directives_polygon__ = __webpack_require__(137);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__directives_polyline__ = __webpack_require__(138);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__directives_polyline_point__ = __webpack_require__(88);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__directives_kml_layer__ = __webpack_require__(134);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__directives_data_layer__ = __webpack_require__(133);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__services_maps_api_loader_lazy_maps_api_loader__ = __webpack_require__(95);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__services_maps_api_loader_maps_api_loader__ = __webpack_require__(68);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__utils_browser_globals__ = __webpack_require__(139);\n/* unused harmony export coreDirectives */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AgmCoreModule; });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @internal\n */\nfunction coreDirectives() {\n    return [\n        __WEBPACK_IMPORTED_MODULE_1__directives_map__[\"a\" /* AgmMap */], __WEBPACK_IMPORTED_MODULE_4__directives_marker__[\"a\" /* AgmMarker */], __WEBPACK_IMPORTED_MODULE_3__directives_info_window__[\"a\" /* AgmInfoWindow */], __WEBPACK_IMPORTED_MODULE_2__directives_circle__[\"a\" /* AgmCircle */],\n        __WEBPACK_IMPORTED_MODULE_5__directives_polygon__[\"a\" /* AgmPolygon */], __WEBPACK_IMPORTED_MODULE_6__directives_polyline__[\"a\" /* AgmPolyline */], __WEBPACK_IMPORTED_MODULE_7__directives_polyline_point__[\"a\" /* AgmPolylinePoint */], __WEBPACK_IMPORTED_MODULE_8__directives_kml_layer__[\"a\" /* AgmKmlLayer */],\n        __WEBPACK_IMPORTED_MODULE_9__directives_data_layer__[\"a\" /* AgmDataLayer */]\n    ];\n}\n;\n/**\n * The angular-google-maps core module. Contains all Directives/Services/Pipes\n * of the core module. Please use `AgmCoreModule.forRoot()` in your app module.\n */\nvar AgmCoreModule = (function () {\n    function AgmCoreModule() {\n    }\n    /**\n     * Please use this method when you register the module at the root level.\n     */\n    AgmCoreModule.forRoot = function (lazyMapsAPILoaderConfig) {\n        return {\n            ngModule: AgmCoreModule,\n            providers: __WEBPACK_IMPORTED_MODULE_12__utils_browser_globals__[\"a\" /* BROWSER_GLOBALS_PROVIDERS */].concat([\n                { provide: __WEBPACK_IMPORTED_MODULE_11__services_maps_api_loader_maps_api_loader__[\"a\" /* MapsAPILoader */], useClass: __WEBPACK_IMPORTED_MODULE_10__services_maps_api_loader_lazy_maps_api_loader__[\"a\" /* LazyMapsAPILoader */] },\n                { provide: __WEBPACK_IMPORTED_MODULE_10__services_maps_api_loader_lazy_maps_api_loader__[\"b\" /* LAZY_MAPS_API_CONFIG */], useValue: lazyMapsAPILoaderConfig }\n            ]),\n        };\n    };\n    return AgmCoreModule;\n}());\n\nAgmCoreModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{ declarations: coreDirectives(), exports: coreDirectives() },] },\n];\n/** @nocollapse */\nAgmCoreModule.ctorParameters = function () { return []; };\n//# sourceMappingURL=core.module.js.map\n\n/***/ }),\n/* 229 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__directives_map__ = __webpack_require__(135);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__directives_map__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__directives_circle__ = __webpack_require__(132);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__directives_circle__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__directives_info_window__ = __webpack_require__(87);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_2__directives_info_window__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__directives_kml_layer__ = __webpack_require__(134);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_3__directives_kml_layer__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__directives_data_layer__ = __webpack_require__(133);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_4__directives_data_layer__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__directives_marker__ = __webpack_require__(136);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return __WEBPACK_IMPORTED_MODULE_5__directives_marker__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__directives_polygon__ = __webpack_require__(137);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return __WEBPACK_IMPORTED_MODULE_6__directives_polygon__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__directives_polyline__ = __webpack_require__(138);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return __WEBPACK_IMPORTED_MODULE_7__directives_polyline__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__directives_polyline_point__ = __webpack_require__(88);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return __WEBPACK_IMPORTED_MODULE_8__directives_polyline_point__[\"a\"]; });\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=directives.js.map\n\n/***/ }),\n/* 230 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__directives__ = __webpack_require__(229);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"AgmMap\", function() { return __WEBPACK_IMPORTED_MODULE_0__directives__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"AgmCircle\", function() { return __WEBPACK_IMPORTED_MODULE_0__directives__[\"b\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"AgmInfoWindow\", function() { return __WEBPACK_IMPORTED_MODULE_0__directives__[\"c\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"AgmKmlLayer\", function() { return __WEBPACK_IMPORTED_MODULE_0__directives__[\"d\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"AgmDataLayer\", function() { return __WEBPACK_IMPORTED_MODULE_0__directives__[\"e\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"AgmMarker\", function() { return __WEBPACK_IMPORTED_MODULE_0__directives__[\"f\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"AgmPolygon\", function() { return __WEBPACK_IMPORTED_MODULE_0__directives__[\"g\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"AgmPolyline\", function() { return __WEBPACK_IMPORTED_MODULE_0__directives__[\"h\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"AgmPolylinePoint\", function() { return __WEBPACK_IMPORTED_MODULE_0__directives__[\"i\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services__ = __webpack_require__(231);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"GoogleMapsAPIWrapper\", function() { return __WEBPACK_IMPORTED_MODULE_1__services__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"CircleManager\", function() { return __WEBPACK_IMPORTED_MODULE_1__services__[\"b\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"InfoWindowManager\", function() { return __WEBPACK_IMPORTED_MODULE_1__services__[\"c\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"MarkerManager\", function() { return __WEBPACK_IMPORTED_MODULE_1__services__[\"d\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"PolygonManager\", function() { return __WEBPACK_IMPORTED_MODULE_1__services__[\"e\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"PolylineManager\", function() { return __WEBPACK_IMPORTED_MODULE_1__services__[\"f\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"KmlLayerManager\", function() { return __WEBPACK_IMPORTED_MODULE_1__services__[\"g\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"DataLayerManager\", function() { return __WEBPACK_IMPORTED_MODULE_1__services__[\"h\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"GoogleMapsScriptProtocol\", function() { return __WEBPACK_IMPORTED_MODULE_1__services__[\"i\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"LAZY_MAPS_API_CONFIG\", function() { return __WEBPACK_IMPORTED_MODULE_1__services__[\"j\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"LazyMapsAPILoader\", function() { return __WEBPACK_IMPORTED_MODULE_1__services__[\"k\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"MapsAPILoader\", function() { return __WEBPACK_IMPORTED_MODULE_1__services__[\"l\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"NoOpMapsAPILoader\", function() { return __WEBPACK_IMPORTED_MODULE_1__services__[\"m\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_module__ = __webpack_require__(228);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"AgmCoreModule\", function() { return __WEBPACK_IMPORTED_MODULE_2__core_module__[\"a\"]; });\n// main modules\n\n\n// core module\n// we explicitly export the module here to prevent this Ionic 2 bug:\n// http://stevemichelotti.com/integrate-angular-2-google-maps-into-ionic-2/\n\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 231 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__services_google_maps_api_wrapper__ = __webpack_require__(25);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__services_google_maps_api_wrapper__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_managers_circle_manager__ = __webpack_require__(89);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__services_managers_circle_manager__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_managers_info_window_manager__ = __webpack_require__(91);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_2__services_managers_info_window_manager__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_managers_marker_manager__ = __webpack_require__(67);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_3__services_managers_marker_manager__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_managers_polygon_manager__ = __webpack_require__(93);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_4__services_managers_polygon_manager__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_managers_polyline_manager__ = __webpack_require__(94);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return __WEBPACK_IMPORTED_MODULE_5__services_managers_polyline_manager__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_managers_kml_layer_manager__ = __webpack_require__(92);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return __WEBPACK_IMPORTED_MODULE_6__services_managers_kml_layer_manager__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_managers_data_layer_manager__ = __webpack_require__(90);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return __WEBPACK_IMPORTED_MODULE_7__services_managers_data_layer_manager__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_maps_api_loader_lazy_maps_api_loader__ = __webpack_require__(95);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return __WEBPACK_IMPORTED_MODULE_8__services_maps_api_loader_lazy_maps_api_loader__[\"c\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return __WEBPACK_IMPORTED_MODULE_8__services_maps_api_loader_lazy_maps_api_loader__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return __WEBPACK_IMPORTED_MODULE_8__services_maps_api_loader_lazy_maps_api_loader__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_maps_api_loader_maps_api_loader__ = __webpack_require__(68);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return __WEBPACK_IMPORTED_MODULE_9__services_maps_api_loader_maps_api_loader__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__services_maps_api_loader_noop_maps_api_loader__ = __webpack_require__(232);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return __WEBPACK_IMPORTED_MODULE_10__services_maps_api_loader_noop_maps_api_loader__[\"a\"]; });\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=services.js.map\n\n/***/ }),\n/* 232 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return NoOpMapsAPILoader; });\n/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nvar NoOpMapsAPILoader = (function () {\n    function NoOpMapsAPILoader() {\n    }\n    NoOpMapsAPILoader.prototype.load = function () {\n        if (!window.google || !window.google.maps) {\n            throw new Error('Google Maps API not loaded on page. Make sure window.google.maps is available!');\n        }\n        return Promise.resolve();\n    };\n    ;\n    return NoOpMapsAPILoader;\n}());\n\n//# sourceMappingURL=noop-maps-api-loader.js.map\n\n/***/ }),\n/* 233 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_animations__ = __webpack_require__(96);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return AnimationDriver; });\n/* unused harmony export ɵAnimation */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return AnimationStyleNormalizer; });\n/* unused harmony export ɵNoopAnimationStyleNormalizer */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return WebAnimationsStyleNormalizer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return NoopAnimationDriver; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AnimationEngine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return WebAnimationsDriver; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return supportsWebAnimations; });\n/* unused harmony export ɵWebAnimationsPlayer */\n\n/**\n * @license Angular v4.2.3\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction optimizeGroupPlayer(players) {\n    switch (players.length) {\n        case 0:\n            return new __WEBPACK_IMPORTED_MODULE_1__angular_animations__[\"d\" /* NoopAnimationPlayer */]();\n        case 1:\n            return players[0];\n        default:\n            return new __WEBPACK_IMPORTED_MODULE_1__angular_animations__[\"e\" /* ɵAnimationGroupPlayer */](players);\n    }\n}\nfunction normalizeKeyframes(driver, normalizer, element, keyframes, preStyles, postStyles) {\n    if (preStyles === void 0) { preStyles = {}; }\n    if (postStyles === void 0) { postStyles = {}; }\n    var errors = [];\n    var normalizedKeyframes = [];\n    var previousOffset = -1;\n    var previousKeyframe = null;\n    keyframes.forEach(function (kf) {\n        var offset = kf['offset'];\n        var isSameOffset = offset == previousOffset;\n        var normalizedKeyframe = (isSameOffset && previousKeyframe) || {};\n        Object.keys(kf).forEach(function (prop) {\n            var normalizedProp = prop;\n            var normalizedValue = kf[prop];\n            if (normalizedValue == __WEBPACK_IMPORTED_MODULE_1__angular_animations__[\"f\" /* ɵPRE_STYLE */]) {\n                normalizedValue = preStyles[prop];\n            }\n            else if (normalizedValue == __WEBPACK_IMPORTED_MODULE_1__angular_animations__[\"g\" /* AUTO_STYLE */]) {\n                normalizedValue = postStyles[prop];\n            }\n            else if (prop != 'offset') {\n                normalizedProp = normalizer.normalizePropertyName(prop, errors);\n                normalizedValue = normalizer.normalizeStyleValue(prop, normalizedProp, kf[prop], errors);\n            }\n            normalizedKeyframe[normalizedProp] = normalizedValue;\n        });\n        if (!isSameOffset) {\n            normalizedKeyframes.push(normalizedKeyframe);\n        }\n        previousKeyframe = normalizedKeyframe;\n        previousOffset = offset;\n    });\n    if (errors.length) {\n        var LINE_START = '\\n - ';\n        throw new Error(\"Unable to animate due to the following errors:\" + LINE_START + errors.join(LINE_START));\n    }\n    return normalizedKeyframes;\n}\nfunction listenOnPlayer(player, eventName, event, callback) {\n    switch (eventName) {\n        case 'start':\n            player.onStart(function () { return callback(event && copyAnimationEvent(event, 'start', player.totalTime)); });\n            break;\n        case 'done':\n            player.onDone(function () { return callback(event && copyAnimationEvent(event, 'done', player.totalTime)); });\n            break;\n        case 'destroy':\n            player.onDestroy(function () { return callback(event && copyAnimationEvent(event, 'destroy', player.totalTime)); });\n            break;\n    }\n}\nfunction copyAnimationEvent(e, phaseName, totalTime) {\n    var event = makeAnimationEvent(e.element, e.triggerName, e.fromState, e.toState, phaseName || e.phaseName, totalTime == undefined ? e.totalTime : totalTime);\n    var data = e['_data'];\n    if (data != null) {\n        event['_data'] = data;\n    }\n    return event;\n}\nfunction makeAnimationEvent(element, triggerName, fromState, toState, phaseName, totalTime) {\n    if (phaseName === void 0) { phaseName = ''; }\n    if (totalTime === void 0) { totalTime = 0; }\n    return { element: element, triggerName: triggerName, fromState: fromState, toState: toState, phaseName: phaseName, totalTime: totalTime };\n}\nfunction getOrSetAsInMap(map, key, defaultValue) {\n    var value;\n    if (map instanceof Map) {\n        value = map.get(key);\n        if (!value) {\n            map.set(key, value = defaultValue);\n        }\n    }\n    else {\n        value = map[key];\n        if (!value) {\n            value = map[key] = defaultValue;\n        }\n    }\n    return value;\n}\nfunction parseTimelineCommand(command) {\n    var separatorPos = command.indexOf(':');\n    var id = command.substring(1, separatorPos);\n    var action = command.substr(separatorPos + 1);\n    return [id, action];\n}\nvar _contains = function (elm1, elm2) { return false; };\nvar _matches = function (element, selector) { return false; };\nvar _query = function (element, selector, multi) {\n    return [];\n};\nif (typeof Element != 'undefined') {\n    // this is well supported in all browsers\n    _contains = function (elm1, elm2) { return elm1.contains(elm2); };\n    if (Element.prototype.matches) {\n        _matches = function (element, selector) { return element.matches(selector); };\n    }\n    else {\n        var proto = Element.prototype;\n        var fn_1 = proto.matchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector ||\n            proto.oMatchesSelector || proto.webkitMatchesSelector;\n        if (fn_1) {\n            _matches = function (element, selector) { return fn_1.apply(element, [selector]); };\n        }\n    }\n    _query = function (element, selector, multi) {\n        var results = [];\n        if (multi) {\n            results.push.apply(results, element.querySelectorAll(selector));\n        }\n        else {\n            var elm = element.querySelector(selector);\n            if (elm) {\n                results.push(elm);\n            }\n        }\n        return results;\n    };\n}\nvar matchesElement = _matches;\nvar containsElement = _contains;\nvar invokeQuery = _query;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @experimental\n */\nvar NoopAnimationDriver = (function () {\n    function NoopAnimationDriver() {\n    }\n    NoopAnimationDriver.prototype.matchesElement = function (element, selector) {\n        return matchesElement(element, selector);\n    };\n    NoopAnimationDriver.prototype.containsElement = function (elm1, elm2) { return containsElement(elm1, elm2); };\n    NoopAnimationDriver.prototype.query = function (element, selector, multi) {\n        return invokeQuery(element, selector, multi);\n    };\n    NoopAnimationDriver.prototype.computeStyle = function (element, prop, defaultValue) {\n        return defaultValue || '';\n    };\n    NoopAnimationDriver.prototype.animate = function (element, keyframes, duration, delay, easing, previousPlayers) {\n        if (previousPlayers === void 0) { previousPlayers = []; }\n        return new __WEBPACK_IMPORTED_MODULE_1__angular_animations__[\"d\" /* NoopAnimationPlayer */]();\n    };\n    return NoopAnimationDriver;\n}());\n/**\n * @experimental\n */\nvar AnimationDriver = (function () {\n    function AnimationDriver() {\n    }\n    return AnimationDriver;\n}());\nAnimationDriver.NOOP = new NoopAnimationDriver();\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ONE_SECOND = 1000;\nvar ENTER_CLASSNAME = 'ng-enter';\nvar LEAVE_CLASSNAME = 'ng-leave';\nvar ENTER_SELECTOR = '.ng-enter';\nvar LEAVE_SELECTOR = '.ng-leave';\nvar NG_TRIGGER_CLASSNAME = 'ng-trigger';\nvar NG_TRIGGER_SELECTOR = '.ng-trigger';\nvar NG_ANIMATING_CLASSNAME = 'ng-animating';\nvar NG_ANIMATING_SELECTOR = '.ng-animating';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction resolveTimingValue(value) {\n    if (typeof value == 'number')\n        return value;\n    var /** @type {?} */ matches = ((value)).match(/^(-?[\\.\\d]+)(m?s)/);\n    if (!matches || matches.length < 2)\n        return 0;\n    return _convertTimeValueToMS(parseFloat(matches[1]), matches[2]);\n}\n/**\n * @param {?} value\n * @param {?} unit\n * @return {?}\n */\nfunction _convertTimeValueToMS(value, unit) {\n    switch (unit) {\n        case 's':\n            return value * ONE_SECOND;\n        default:\n            return value;\n    }\n}\n/**\n * @param {?} timings\n * @param {?} errors\n * @param {?=} allowNegativeValues\n * @return {?}\n */\nfunction resolveTiming(timings, errors, allowNegativeValues) {\n    return timings.hasOwnProperty('duration') ? (timings) :\n        parseTimeExpression(/** @type {?} */ (timings), errors, allowNegativeValues);\n}\n/**\n * @param {?} exp\n * @param {?} errors\n * @param {?=} allowNegativeValues\n * @return {?}\n */\nfunction parseTimeExpression(exp, errors, allowNegativeValues) {\n    var /** @type {?} */ regex = /^(-?[\\.\\d]+)(m?s)(?:\\s+(-?[\\.\\d]+)(m?s))?(?:\\s+([-a-z]+(?:\\(.+?\\))?))?$/i;\n    var /** @type {?} */ duration;\n    var /** @type {?} */ delay = 0;\n    var /** @type {?} */ easing = '';\n    if (typeof exp === 'string') {\n        var /** @type {?} */ matches = exp.match(regex);\n        if (matches === null) {\n            errors.push(\"The provided timing value \\\"\" + exp + \"\\\" is invalid.\");\n            return { duration: 0, delay: 0, easing: '' };\n        }\n        duration = _convertTimeValueToMS(parseFloat(matches[1]), matches[2]);\n        var /** @type {?} */ delayMatch = matches[3];\n        if (delayMatch != null) {\n            delay = _convertTimeValueToMS(Math.floor(parseFloat(delayMatch)), matches[4]);\n        }\n        var /** @type {?} */ easingVal = matches[5];\n        if (easingVal) {\n            easing = easingVal;\n        }\n    }\n    else {\n        duration = (exp);\n    }\n    if (!allowNegativeValues) {\n        var /** @type {?} */ containsErrors = false;\n        var /** @type {?} */ startIndex = errors.length;\n        if (duration < 0) {\n            errors.push(\"Duration values below 0 are not allowed for this animation step.\");\n            containsErrors = true;\n        }\n        if (delay < 0) {\n            errors.push(\"Delay values below 0 are not allowed for this animation step.\");\n            containsErrors = true;\n        }\n        if (containsErrors) {\n            errors.splice(startIndex, 0, \"The provided timing value \\\"\" + exp + \"\\\" is invalid.\");\n        }\n    }\n    return { duration: duration, delay: delay, easing: easing };\n}\n/**\n * @param {?} obj\n * @param {?=} destination\n * @return {?}\n */\nfunction copyObj(obj, destination) {\n    if (destination === void 0) { destination = {}; }\n    Object.keys(obj).forEach(function (prop) { destination[prop] = obj[prop]; });\n    return destination;\n}\n/**\n * @param {?} styles\n * @return {?}\n */\nfunction normalizeStyles(styles) {\n    var /** @type {?} */ normalizedStyles = {};\n    if (Array.isArray(styles)) {\n        styles.forEach(function (data) { return copyStyles(data, false, normalizedStyles); });\n    }\n    else {\n        copyStyles(styles, false, normalizedStyles);\n    }\n    return normalizedStyles;\n}\n/**\n * @param {?} styles\n * @param {?} readPrototype\n * @param {?=} destination\n * @return {?}\n */\nfunction copyStyles(styles, readPrototype, destination) {\n    if (destination === void 0) { destination = {}; }\n    if (readPrototype) {\n        // we make use of a for-in loop so that the\n        // prototypically inherited properties are\n        // revealed from the backFill map\n        for (var /** @type {?} */ prop in styles) {\n            destination[prop] = styles[prop];\n        }\n    }\n    else {\n        copyObj(styles, destination);\n    }\n    return destination;\n}\n/**\n * @param {?} element\n * @param {?} styles\n * @return {?}\n */\nfunction setStyles(element, styles) {\n    if (element['style']) {\n        Object.keys(styles).forEach(function (prop) {\n            var /** @type {?} */ camelProp = dashCaseToCamelCase(prop);\n            element.style[camelProp] = styles[prop];\n        });\n    }\n}\n/**\n * @param {?} element\n * @param {?} styles\n * @return {?}\n */\nfunction eraseStyles(element, styles) {\n    if (element['style']) {\n        Object.keys(styles).forEach(function (prop) {\n            var /** @type {?} */ camelProp = dashCaseToCamelCase(prop);\n            element.style[camelProp] = '';\n        });\n    }\n}\n/**\n * @param {?} steps\n * @return {?}\n */\nfunction normalizeAnimationEntry(steps) {\n    if (Array.isArray(steps)) {\n        if (steps.length == 1)\n            return steps[0];\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_animations__[\"a\" /* sequence */])(steps);\n    }\n    return (steps);\n}\n/**\n * @param {?} value\n * @param {?} options\n * @param {?} errors\n * @return {?}\n */\nfunction validateStyleParams(value, options, errors) {\n    var /** @type {?} */ params = options.params || {};\n    if (typeof value !== 'string')\n        return;\n    var /** @type {?} */ matches = value.toString().match(PARAM_REGEX);\n    if (matches) {\n        matches.forEach(function (varName) {\n            if (!params.hasOwnProperty(varName)) {\n                errors.push(\"Unable to resolve the local animation param \" + varName + \" in the given list of values\");\n            }\n        });\n    }\n}\nvar PARAM_REGEX = /\\{\\{\\s*(.+?)\\s*\\}\\}/g;\n/**\n * @param {?} value\n * @param {?} params\n * @param {?} errors\n * @return {?}\n */\nfunction interpolateParams(value, params, errors) {\n    var /** @type {?} */ original = value.toString();\n    var /** @type {?} */ str = original.replace(PARAM_REGEX, function (_, varName) {\n        var /** @type {?} */ localVal = params[varName];\n        // this means that the value was never overidden by the data passed in by the user\n        if (!params.hasOwnProperty(varName)) {\n            errors.push(\"Please provide a value for the animation param \" + varName);\n            localVal = '';\n        }\n        return localVal.toString();\n    });\n    // we do this to assert that numeric values stay as they are\n    return str == original ? value : str;\n}\n/**\n * @param {?} iterator\n * @return {?}\n */\nfunction iteratorToArray(iterator) {\n    var /** @type {?} */ arr = [];\n    var /** @type {?} */ item = iterator.next();\n    while (!item.done) {\n        arr.push(item.value);\n        item = iterator.next();\n    }\n    return arr;\n}\n/**\n * @param {?} source\n * @param {?} destination\n * @return {?}\n */\nfunction mergeAnimationOptions(source, destination) {\n    if (source.params) {\n        var /** @type {?} */ p0_1 = source.params;\n        if (!destination.params) {\n            destination.params = {};\n        }\n        var /** @type {?} */ p1_1 = destination.params;\n        Object.keys(p0_1).forEach(function (param) {\n            if (!p1_1.hasOwnProperty(param)) {\n                p1_1[param] = p0_1[param];\n            }\n        });\n    }\n    return destination;\n}\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_ANIMATION_OPTIONS = {};\n/**\n * @abstract\n */\nvar Ast = (function () {\n    function Ast() {\n        this.options = EMPTY_ANIMATION_OPTIONS;\n    }\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    Ast.prototype.visit = function (ast, context) { };\n    Object.defineProperty(Ast.prototype, \"params\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.options['params'] || null; },\n        enumerable: true,\n        configurable: true\n    });\n    return Ast;\n}());\nvar TriggerAst = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](TriggerAst, _super);\n    /**\n     * @param {?} name\n     * @param {?} states\n     * @param {?} transitions\n     */\n    function TriggerAst(name, states, transitions) {\n        var _this = _super.call(this) || this;\n        _this.name = name;\n        _this.states = states;\n        _this.transitions = transitions;\n        _this.queryCount = 0;\n        _this.depCount = 0;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TriggerAst.prototype.visit = function (visitor, context) { return visitor.visitTrigger(this, context); };\n    return TriggerAst;\n}(Ast));\nvar StateAst = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](StateAst, _super);\n    /**\n     * @param {?} name\n     * @param {?} style\n     */\n    function StateAst(name, style$$1) {\n        var _this = _super.call(this) || this;\n        _this.name = name;\n        _this.style = style$$1;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    StateAst.prototype.visit = function (visitor, context) { return visitor.visitState(this, context); };\n    return StateAst;\n}(Ast));\nvar TransitionAst = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](TransitionAst, _super);\n    /**\n     * @param {?} matchers\n     * @param {?} animation\n     */\n    function TransitionAst(matchers, animation) {\n        var _this = _super.call(this) || this;\n        _this.matchers = matchers;\n        _this.animation = animation;\n        _this.queryCount = 0;\n        _this.depCount = 0;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TransitionAst.prototype.visit = function (visitor, context) { return visitor.visitTransition(this, context); };\n    return TransitionAst;\n}(Ast));\nvar SequenceAst = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](SequenceAst, _super);\n    /**\n     * @param {?} steps\n     */\n    function SequenceAst(steps) {\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    SequenceAst.prototype.visit = function (visitor, context) { return visitor.visitSequence(this, context); };\n    return SequenceAst;\n}(Ast));\nvar GroupAst = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](GroupAst, _super);\n    /**\n     * @param {?} steps\n     */\n    function GroupAst(steps) {\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    GroupAst.prototype.visit = function (visitor, context) { return visitor.visitGroup(this, context); };\n    return GroupAst;\n}(Ast));\nvar AnimateAst = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](AnimateAst, _super);\n    /**\n     * @param {?} timings\n     * @param {?} style\n     */\n    function AnimateAst(timings, style$$1) {\n        var _this = _super.call(this) || this;\n        _this.timings = timings;\n        _this.style = style$$1;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AnimateAst.prototype.visit = function (visitor, context) { return visitor.visitAnimate(this, context); };\n    return AnimateAst;\n}(Ast));\nvar StyleAst = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](StyleAst, _super);\n    /**\n     * @param {?} styles\n     * @param {?} easing\n     * @param {?} offset\n     */\n    function StyleAst(styles, easing, offset) {\n        var _this = _super.call(this) || this;\n        _this.styles = styles;\n        _this.easing = easing;\n        _this.offset = offset;\n        _this.isEmptyStep = false;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    StyleAst.prototype.visit = function (visitor, context) { return visitor.visitStyle(this, context); };\n    return StyleAst;\n}(Ast));\nvar KeyframesAst = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](KeyframesAst, _super);\n    /**\n     * @param {?} styles\n     */\n    function KeyframesAst(styles) {\n        var _this = _super.call(this) || this;\n        _this.styles = styles;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    KeyframesAst.prototype.visit = function (visitor, context) { return visitor.visitKeyframes(this, context); };\n    return KeyframesAst;\n}(Ast));\nvar ReferenceAst = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](ReferenceAst, _super);\n    /**\n     * @param {?} animation\n     */\n    function ReferenceAst(animation) {\n        var _this = _super.call(this) || this;\n        _this.animation = animation;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = function (visitor, context) { return visitor.visitReference(this, context); };\n    return ReferenceAst;\n}(Ast));\nvar AnimateChildAst = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](AnimateChildAst, _super);\n    function AnimateChildAst() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AnimateChildAst.prototype.visit = function (visitor, context) { return visitor.visitAnimateChild(this, context); };\n    return AnimateChildAst;\n}(Ast));\nvar AnimateRefAst = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](AnimateRefAst, _super);\n    /**\n     * @param {?} animation\n     */\n    function AnimateRefAst(animation) {\n        var _this = _super.call(this) || this;\n        _this.animation = animation;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AnimateRefAst.prototype.visit = function (visitor, context) { return visitor.visitAnimateRef(this, context); };\n    return AnimateRefAst;\n}(Ast));\nvar QueryAst = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](QueryAst, _super);\n    /**\n     * @param {?} selector\n     * @param {?} limit\n     * @param {?} optional\n     * @param {?} includeSelf\n     * @param {?} animation\n     */\n    function QueryAst(selector, limit, optional, includeSelf, animation) {\n        var _this = _super.call(this) || this;\n        _this.selector = selector;\n        _this.limit = limit;\n        _this.optional = optional;\n        _this.includeSelf = includeSelf;\n        _this.animation = animation;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    QueryAst.prototype.visit = function (visitor, context) { return visitor.visitQuery(this, context); };\n    return QueryAst;\n}(Ast));\nvar StaggerAst = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](StaggerAst, _super);\n    /**\n     * @param {?} timings\n     * @param {?} animation\n     */\n    function StaggerAst(timings, animation) {\n        var _this = _super.call(this) || this;\n        _this.timings = timings;\n        _this.animation = animation;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    StaggerAst.prototype.visit = function (visitor, context) { return visitor.visitStagger(this, context); };\n    return StaggerAst;\n}(Ast));\nvar TimingAst = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](TimingAst, _super);\n    /**\n     * @param {?} duration\n     * @param {?=} delay\n     * @param {?=} easing\n     */\n    function TimingAst(duration, delay, easing) {\n        if (delay === void 0) { delay = 0; }\n        if (easing === void 0) { easing = null; }\n        var _this = _super.call(this) || this;\n        _this.duration = duration;\n        _this.delay = delay;\n        _this.easing = easing;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TimingAst.prototype.visit = function (visitor, context) { return visitor.visitTiming(this, context); };\n    return TimingAst;\n}(Ast));\nvar DynamicTimingAst = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](DynamicTimingAst, _super);\n    /**\n     * @param {?} value\n     */\n    function DynamicTimingAst(value) {\n        var _this = _super.call(this, 0, 0, '') || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DynamicTimingAst.prototype.visit = function (visitor, context) { return visitor.visitTiming(this, context); };\n    return DynamicTimingAst;\n}(TimingAst));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} visitor\n * @param {?} node\n * @param {?} context\n * @return {?}\n */\nfunction visitAnimationNode(visitor, node, context) {\n    switch (node.type) {\n        case 7 /* Trigger */:\n            return visitor.visitTrigger(/** @type {?} */ (node), context);\n        case 0 /* State */:\n            return visitor.visitState(/** @type {?} */ (node), context);\n        case 1 /* Transition */:\n            return visitor.visitTransition(/** @type {?} */ (node), context);\n        case 2 /* Sequence */:\n            return visitor.visitSequence(/** @type {?} */ (node), context);\n        case 3 /* Group */:\n            return visitor.visitGroup(/** @type {?} */ (node), context);\n        case 4 /* Animate */:\n            return visitor.visitAnimate(/** @type {?} */ (node), context);\n        case 5 /* Keyframes */:\n            return visitor.visitKeyframes(/** @type {?} */ (node), context);\n        case 6 /* Style */:\n            return visitor.visitStyle(/** @type {?} */ (node), context);\n        case 8 /* Reference */:\n            return visitor.visitReference(/** @type {?} */ (node), context);\n        case 9 /* AnimateChild */:\n            return visitor.visitAnimateChild(/** @type {?} */ (node), context);\n        case 10 /* AnimateRef */:\n            return visitor.visitAnimateRef(/** @type {?} */ (node), context);\n        case 11 /* Query */:\n            return visitor.visitQuery(/** @type {?} */ (node), context);\n        case 12 /* Stagger */:\n            return visitor.visitStagger(/** @type {?} */ (node), context);\n        default:\n            throw new Error(\"Unable to resolve animation metadata node #\" + node.type);\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANY_STATE = '*';\n/**\n * @param {?} transitionValue\n * @param {?} errors\n * @return {?}\n */\nfunction parseTransitionExpr(transitionValue, errors) {\n    var /** @type {?} */ expressions = [];\n    if (typeof transitionValue == 'string') {\n        ((transitionValue))\n            .split(/\\s*,\\s*/)\n            .forEach(function (str) { return parseInnerTransitionStr(str, expressions, errors); });\n    }\n    else {\n        expressions.push(/** @type {?} */ (transitionValue));\n    }\n    return expressions;\n}\n/**\n * @param {?} eventStr\n * @param {?} expressions\n * @param {?} errors\n * @return {?}\n */\nfunction parseInnerTransitionStr(eventStr, expressions, errors) {\n    if (eventStr[0] == ':') {\n        eventStr = parseAnimationAlias(eventStr, errors);\n    }\n    var /** @type {?} */ match = eventStr.match(/^(\\*|[-\\w]+)\\s*(<?[=-]>)\\s*(\\*|[-\\w]+)$/);\n    if (match == null || match.length < 4) {\n        errors.push(\"The provided transition expression \\\"\" + eventStr + \"\\\" is not supported\");\n        return expressions;\n    }\n    var /** @type {?} */ fromState = match[1];\n    var /** @type {?} */ separator = match[2];\n    var /** @type {?} */ toState = match[3];\n    expressions.push(makeLambdaFromStates(fromState, toState));\n    var /** @type {?} */ isFullAnyStateExpr = fromState == ANY_STATE && toState == ANY_STATE;\n    if (separator[0] == '<' && !isFullAnyStateExpr) {\n        expressions.push(makeLambdaFromStates(toState, fromState));\n    }\n}\n/**\n * @param {?} alias\n * @param {?} errors\n * @return {?}\n */\nfunction parseAnimationAlias(alias, errors) {\n    switch (alias) {\n        case ':enter':\n            return 'void => *';\n        case ':leave':\n            return '* => void';\n        default:\n            errors.push(\"The transition alias value \\\"\" + alias + \"\\\" is not supported\");\n            return '* => *';\n    }\n}\n/**\n * @param {?} lhs\n * @param {?} rhs\n * @return {?}\n */\nfunction makeLambdaFromStates(lhs, rhs) {\n    return function (fromState, toState) {\n        var /** @type {?} */ lhsMatch = lhs == ANY_STATE || lhs == fromState;\n        var /** @type {?} */ rhsMatch = rhs == ANY_STATE || rhs == toState;\n        if (!lhsMatch && typeof fromState === 'boolean') {\n            lhsMatch = fromState ? lhs === 'true' : lhs === 'false';\n        }\n        if (!rhsMatch && typeof toState === 'boolean') {\n            rhsMatch = toState ? rhs === 'true' : rhs === 'false';\n        }\n        return lhsMatch && rhsMatch;\n    };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SELF_TOKEN = ':self';\nvar SELF_TOKEN_REGEX = new RegExp(\"s*\" + SELF_TOKEN + \"s*,?\", 'g');\n/**\n * @param {?} metadata\n * @param {?} errors\n * @return {?}\n */\nfunction buildAnimationAst(metadata, errors) {\n    return new AnimationAstBuilderVisitor().build(metadata, errors);\n}\nvar LEAVE_TOKEN = ':leave';\nvar LEAVE_TOKEN_REGEX = new RegExp(LEAVE_TOKEN, 'g');\nvar ENTER_TOKEN = ':enter';\nvar ENTER_TOKEN_REGEX = new RegExp(ENTER_TOKEN, 'g');\nvar ROOT_SELECTOR = '';\nvar AnimationAstBuilderVisitor = (function () {\n    function AnimationAstBuilderVisitor() {\n    }\n    /**\n     * @param {?} metadata\n     * @param {?} errors\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.build = function (metadata, errors) {\n        var /** @type {?} */ context = new AnimationAstBuilderContext(errors);\n        this._resetContextStyleTimingState(context);\n        return (visitAnimationNode(this, normalizeAnimationEntry(metadata), context));\n    };\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype._resetContextStyleTimingState = function (context) {\n        context.currentQuerySelector = ROOT_SELECTOR;\n        context.collectedStyles[ROOT_SELECTOR] = {};\n        context.currentTime = 0;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitTrigger = function (metadata, context) {\n        var _this = this;\n        var /** @type {?} */ queryCount = context.queryCount = 0;\n        var /** @type {?} */ depCount = context.depCount = 0;\n        var /** @type {?} */ states = [];\n        var /** @type {?} */ transitions = [];\n        metadata.definitions.forEach(function (def) {\n            _this._resetContextStyleTimingState(context);\n            if (def.type == 0 /* State */) {\n                var /** @type {?} */ stateDef_1 = (def);\n                var /** @type {?} */ name = stateDef_1.name;\n                name.split(/\\s*,\\s*/).forEach(function (n) {\n                    stateDef_1.name = n;\n                    states.push(_this.visitState(stateDef_1, context));\n                });\n                stateDef_1.name = name;\n            }\n            else if (def.type == 1 /* Transition */) {\n                var /** @type {?} */ transition = _this.visitTransition(/** @type {?} */ (def), context);\n                queryCount += transition.queryCount;\n                depCount += transition.depCount;\n                transitions.push(transition);\n            }\n            else {\n                context.errors.push('only state() and transition() definitions can sit inside of a trigger()');\n            }\n        });\n        var /** @type {?} */ ast = new TriggerAst(metadata.name, states, transitions);\n        ast.options = normalizeAnimationOptions(metadata.options);\n        ast.queryCount = queryCount;\n        ast.depCount = depCount;\n        return ast;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitState = function (metadata, context) {\n        return new StateAst(metadata.name, this.visitStyle(metadata.styles, context));\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitTransition = function (metadata, context) {\n        context.queryCount = 0;\n        context.depCount = 0;\n        var /** @type {?} */ entry = visitAnimationNode(this, normalizeAnimationEntry(metadata.animation), context);\n        var /** @type {?} */ matchers = parseTransitionExpr(metadata.expr, context.errors);\n        var /** @type {?} */ ast = new TransitionAst(matchers, entry);\n        ast.options = normalizeAnimationOptions(metadata.options);\n        ast.queryCount = context.queryCount;\n        ast.depCount = context.depCount;\n        return ast;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitSequence = function (metadata, context) {\n        var _this = this;\n        var /** @type {?} */ ast = new SequenceAst(metadata.steps.map(function (s) { return visitAnimationNode(_this, s, context); }));\n        ast.options = normalizeAnimationOptions(metadata.options);\n        return ast;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitGroup = function (metadata, context) {\n        var _this = this;\n        var /** @type {?} */ currentTime = context.currentTime;\n        var /** @type {?} */ furthestTime = 0;\n        var /** @type {?} */ steps = metadata.steps.map(function (step) {\n            context.currentTime = currentTime;\n            var /** @type {?} */ innerAst = visitAnimationNode(_this, step, context);\n            furthestTime = Math.max(furthestTime, context.currentTime);\n            return innerAst;\n        });\n        context.currentTime = furthestTime;\n        var /** @type {?} */ ast = new GroupAst(steps);\n        ast.options = normalizeAnimationOptions(metadata.options);\n        return ast;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitAnimate = function (metadata, context) {\n        var /** @type {?} */ timingAst = constructTimingAst(metadata.timings, context.errors);\n        context.currentAnimateTimings = timingAst;\n        var /** @type {?} */ styles;\n        var /** @type {?} */ styleMetadata = metadata.styles ? metadata.styles : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_animations__[\"h\" /* style */])({});\n        if (styleMetadata.type == 5 /* Keyframes */) {\n            styles = this.visitKeyframes(/** @type {?} */ (styleMetadata), context);\n        }\n        else {\n            var /** @type {?} */ styleMetadata_1 = (metadata.styles);\n            var /** @type {?} */ isEmpty = false;\n            if (!styleMetadata_1) {\n                isEmpty = true;\n                var /** @type {?} */ newStyleData = {};\n                if (timingAst.easing) {\n                    newStyleData['easing'] = timingAst.easing;\n                }\n                styleMetadata_1 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_animations__[\"h\" /* style */])(newStyleData);\n            }\n            context.currentTime += timingAst.duration + timingAst.delay;\n            var /** @type {?} */ styleAst = this.visitStyle(styleMetadata_1, context);\n            styleAst.isEmptyStep = isEmpty;\n            styles = styleAst;\n        }\n        context.currentAnimateTimings = null;\n        return new AnimateAst(timingAst, styles);\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitStyle = function (metadata, context) {\n        var /** @type {?} */ ast = this._makeStyleAst(metadata, context);\n        this._validateStyleAst(ast, context);\n        return ast;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype._makeStyleAst = function (metadata, context) {\n        var /** @type {?} */ styles = [];\n        if (Array.isArray(metadata.styles)) {\n            ((metadata.styles)).forEach(function (styleTuple) {\n                if (typeof styleTuple == 'string') {\n                    if (styleTuple == __WEBPACK_IMPORTED_MODULE_1__angular_animations__[\"g\" /* AUTO_STYLE */]) {\n                        styles.push(/** @type {?} */ (styleTuple));\n                    }\n                    else {\n                        context.errors.push(\"The provided style string value \" + styleTuple + \" is not allowed.\");\n                    }\n                }\n                else {\n                    styles.push(/** @type {?} */ (styleTuple));\n                }\n            });\n        }\n        else {\n            styles.push(metadata.styles);\n        }\n        var /** @type {?} */ collectedEasing = null;\n        styles.forEach(function (styleData) {\n            if (isObject(styleData)) {\n                var /** @type {?} */ styleMap = (styleData);\n                var /** @type {?} */ easing = styleMap['easing'];\n                if (easing) {\n                    collectedEasing = (easing);\n                    delete styleMap['easing'];\n                }\n            }\n        });\n        return new StyleAst(styles, collectedEasing, metadata.offset);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype._validateStyleAst = function (ast, context) {\n        var /** @type {?} */ timings = context.currentAnimateTimings;\n        var /** @type {?} */ endTime = context.currentTime;\n        var /** @type {?} */ startTime = context.currentTime;\n        if (timings && startTime > 0) {\n            startTime -= timings.duration + timings.delay;\n        }\n        ast.styles.forEach(function (tuple) {\n            if (typeof tuple == 'string')\n                return;\n            Object.keys(tuple).forEach(function (prop) {\n                var /** @type {?} */ collectedStyles = context.collectedStyles[((context.currentQuerySelector))];\n                var /** @type {?} */ collectedEntry = collectedStyles[prop];\n                var /** @type {?} */ updateCollectedStyle = true;\n                if (collectedEntry) {\n                    if (startTime != endTime && startTime >= collectedEntry.startTime &&\n                        endTime <= collectedEntry.endTime) {\n                        context.errors.push(\"The CSS property \\\"\" + prop + \"\\\" that exists between the times of \\\"\" + collectedEntry.startTime + \"ms\\\" and \\\"\" + collectedEntry.endTime + \"ms\\\" is also being animated in a parallel animation between the times of \\\"\" + startTime + \"ms\\\" and \\\"\" + endTime + \"ms\\\"\");\n                        updateCollectedStyle = false;\n                    }\n                    // we always choose the smaller start time value since we\n                    // want to have a record of the entire animation window where\n                    // the style property is being animated in between\n                    startTime = collectedEntry.startTime;\n                }\n                if (updateCollectedStyle) {\n                    collectedStyles[prop] = { startTime: startTime, endTime: endTime };\n                }\n                if (context.options) {\n                    validateStyleParams(tuple[prop], context.options, context.errors);\n                }\n            });\n        });\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitKeyframes = function (metadata, context) {\n        var _this = this;\n        if (!context.currentAnimateTimings) {\n            context.errors.push(\"keyframes() must be placed inside of a call to animate()\");\n            return new KeyframesAst([]);\n        }\n        var /** @type {?} */ MAX_KEYFRAME_OFFSET = 1;\n        var /** @type {?} */ totalKeyframesWithOffsets = 0;\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offsetsOutOfOrder = false;\n        var /** @type {?} */ keyframesOutOfRange = false;\n        var /** @type {?} */ previousOffset = 0;\n        var /** @type {?} */ keyframes = metadata.steps.map(function (styles) {\n            var /** @type {?} */ style$$1 = _this._makeStyleAst(styles, context);\n            var /** @type {?} */ offsetVal = style$$1.offset != null ? style$$1.offset : consumeOffset(style$$1.styles);\n            var /** @type {?} */ offset = 0;\n            if (offsetVal != null) {\n                totalKeyframesWithOffsets++;\n                offset = style$$1.offset = offsetVal;\n            }\n            keyframesOutOfRange = keyframesOutOfRange || offset < 0 || offset > 1;\n            offsetsOutOfOrder = offsetsOutOfOrder || offset < previousOffset;\n            previousOffset = offset;\n            offsets.push(offset);\n            return style$$1;\n        });\n        if (keyframesOutOfRange) {\n            context.errors.push(\"Please ensure that all keyframe offsets are between 0 and 1\");\n        }\n        if (offsetsOutOfOrder) {\n            context.errors.push(\"Please ensure that all keyframe offsets are in order\");\n        }\n        var /** @type {?} */ length = metadata.steps.length;\n        var /** @type {?} */ generatedOffset = 0;\n        if (totalKeyframesWithOffsets > 0 && totalKeyframesWithOffsets < length) {\n            context.errors.push(\"Not all style() steps within the declared keyframes() contain offsets\");\n        }\n        else if (totalKeyframesWithOffsets == 0) {\n            generatedOffset = MAX_KEYFRAME_OFFSET / (length - 1);\n        }\n        var /** @type {?} */ limit = length - 1;\n        var /** @type {?} */ currentTime = context.currentTime;\n        var /** @type {?} */ currentAnimateTimings = ((context.currentAnimateTimings));\n        var /** @type {?} */ animateDuration = currentAnimateTimings.duration;\n        keyframes.forEach(function (kf, i) {\n            var /** @type {?} */ offset = generatedOffset > 0 ? (i == limit ? 1 : (generatedOffset * i)) : offsets[i];\n            var /** @type {?} */ durationUpToThisFrame = offset * animateDuration;\n            context.currentTime = currentTime + currentAnimateTimings.delay + durationUpToThisFrame;\n            currentAnimateTimings.duration = durationUpToThisFrame;\n            _this._validateStyleAst(kf, context);\n            kf.offset = offset;\n        });\n        return new KeyframesAst(keyframes);\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitReference = function (metadata, context) {\n        var /** @type {?} */ entry = visitAnimationNode(this, normalizeAnimationEntry(metadata.animation), context);\n        var /** @type {?} */ ast = new ReferenceAst(entry);\n        ast.options = normalizeAnimationOptions(metadata.options);\n        return ast;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitAnimateChild = function (metadata, context) {\n        context.depCount++;\n        var /** @type {?} */ ast = new AnimateChildAst();\n        ast.options = normalizeAnimationOptions(metadata.options);\n        return ast;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitAnimateRef = function (metadata, context) {\n        var /** @type {?} */ animation = this.visitReference(metadata.animation, context);\n        var /** @type {?} */ ast = new AnimateRefAst(animation);\n        ast.options = normalizeAnimationOptions(metadata.options);\n        return ast;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitQuery = function (metadata, context) {\n        var /** @type {?} */ parentSelector = ((context.currentQuerySelector));\n        var /** @type {?} */ options = ((metadata.options || {}));\n        context.queryCount++;\n        context.currentQuery = metadata;\n        var _a = normalizeSelector(metadata.selector), selector = _a[0], includeSelf = _a[1];\n        context.currentQuerySelector =\n            parentSelector.length ? (parentSelector + ' ' + selector) : selector;\n        getOrSetAsInMap(context.collectedStyles, context.currentQuerySelector, {});\n        var /** @type {?} */ entry = visitAnimationNode(this, normalizeAnimationEntry(metadata.animation), context);\n        context.currentQuery = null;\n        context.currentQuerySelector = parentSelector;\n        var /** @type {?} */ ast = new QueryAst(selector, options.limit || 0, !!options.optional, includeSelf, entry);\n        ast.originalSelector = metadata.selector;\n        ast.options = normalizeAnimationOptions(metadata.options);\n        return ast;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitStagger = function (metadata, context) {\n        if (!context.currentQuery) {\n            context.errors.push(\"stagger() can only be used inside of query()\");\n        }\n        var /** @type {?} */ timings = metadata.timings === 'full' ?\n            { duration: 0, delay: 0, easing: 'full' } :\n            resolveTiming(metadata.timings, context.errors, true);\n        var /** @type {?} */ animation = visitAnimationNode(this, normalizeAnimationEntry(metadata.animation), context);\n        return new StaggerAst(timings, animation);\n    };\n    return AnimationAstBuilderVisitor;\n}());\n/**\n * @param {?} selector\n * @return {?}\n */\nfunction normalizeSelector(selector) {\n    var /** @type {?} */ hasAmpersand = selector.split(/\\s*,\\s*/).find(function (token) { return token == SELF_TOKEN; }) ? true : false;\n    if (hasAmpersand) {\n        selector = selector.replace(SELF_TOKEN_REGEX, '');\n    }\n    selector = selector.replace(ENTER_TOKEN_REGEX, ENTER_SELECTOR)\n        .replace(LEAVE_TOKEN_REGEX, LEAVE_SELECTOR)\n        .replace(/@\\*/g, NG_TRIGGER_SELECTOR)\n        .replace(/@\\w+/g, function (match) { return NG_TRIGGER_SELECTOR + '-' + match.substr(1); })\n        .replace(/:animating/g, NG_ANIMATING_SELECTOR);\n    return [selector, hasAmpersand];\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction normalizeParams(obj) {\n    return obj ? copyObj(obj) : null;\n}\nvar AnimationAstBuilderContext = (function () {\n    /**\n     * @param {?} errors\n     */\n    function AnimationAstBuilderContext(errors) {\n        this.errors = errors;\n        this.queryCount = 0;\n        this.depCount = 0;\n        this.currentTransition = null;\n        this.currentQuery = null;\n        this.currentQuerySelector = null;\n        this.currentAnimateTimings = null;\n        this.currentTime = 0;\n        this.collectedStyles = {};\n        this.options = null;\n    }\n    return AnimationAstBuilderContext;\n}());\n/**\n * @param {?} styles\n * @return {?}\n */\nfunction consumeOffset(styles) {\n    if (typeof styles == 'string')\n        return null;\n    var /** @type {?} */ offset = null;\n    if (Array.isArray(styles)) {\n        styles.forEach(function (styleTuple) {\n            if (isObject(styleTuple) && styleTuple.hasOwnProperty('offset')) {\n                var /** @type {?} */ obj = (styleTuple);\n                offset = parseFloat(/** @type {?} */ (obj['offset']));\n                delete obj['offset'];\n            }\n        });\n    }\n    else if (isObject(styles) && styles.hasOwnProperty('offset')) {\n        var /** @type {?} */ obj = (styles);\n        offset = parseFloat(/** @type {?} */ (obj['offset']));\n        delete obj['offset'];\n    }\n    return offset;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isObject(value) {\n    return !Array.isArray(value) && typeof value == 'object';\n}\n/**\n * @param {?} value\n * @param {?} errors\n * @return {?}\n */\nfunction constructTimingAst(value, errors) {\n    var /** @type {?} */ timings = null;\n    if (value.hasOwnProperty('duration')) {\n        timings = (value);\n    }\n    else if (typeof value == 'number') {\n        var /** @type {?} */ duration = resolveTiming(/** @type {?} */ (value), errors).duration;\n        return new TimingAst(/** @type {?} */ (value), 0, '');\n    }\n    var /** @type {?} */ strValue = (value);\n    var /** @type {?} */ isDynamic = strValue.split(/\\s+/).some(function (v) { return v.charAt(0) == '{' && v.charAt(1) == '{'; });\n    if (isDynamic) {\n        return new DynamicTimingAst(strValue);\n    }\n    timings = timings || resolveTiming(strValue, errors);\n    return new TimingAst(timings.duration, timings.delay, timings.easing);\n}\n/**\n * @param {?} options\n * @return {?}\n */\nfunction normalizeAnimationOptions(options) {\n    if (options) {\n        options = copyObj(options);\n        if (options['params']) {\n            options['params'] = ((normalizeParams(options['params'])));\n        }\n    }\n    else {\n        options = {};\n    }\n    return options;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} element\n * @param {?} keyframes\n * @param {?} preStyleProps\n * @param {?} postStyleProps\n * @param {?} duration\n * @param {?} delay\n * @param {?=} easing\n * @param {?=} subTimeline\n * @return {?}\n */\nfunction createTimelineInstruction(element, keyframes, preStyleProps, postStyleProps, duration, delay, easing, subTimeline) {\n    if (easing === void 0) { easing = null; }\n    if (subTimeline === void 0) { subTimeline = false; }\n    return {\n        type: 1 /* TimelineAnimation */,\n        element: element,\n        keyframes: keyframes,\n        preStyleProps: preStyleProps,\n        postStyleProps: postStyleProps,\n        duration: duration,\n        delay: delay,\n        totalTime: duration + delay, easing: easing, subTimeline: subTimeline\n    };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ElementInstructionMap = (function () {\n    function ElementInstructionMap() {\n        this._map = new Map();\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    ElementInstructionMap.prototype.consume = function (element) {\n        var /** @type {?} */ instructions = this._map.get(element);\n        if (instructions) {\n            this._map.delete(element);\n        }\n        else {\n            instructions = [];\n        }\n        return instructions;\n    };\n    /**\n     * @param {?} element\n     * @param {?} instructions\n     * @return {?}\n     */\n    ElementInstructionMap.prototype.append = function (element, instructions) {\n        var /** @type {?} */ existingInstructions = this._map.get(element);\n        if (!existingInstructions) {\n            this._map.set(element, existingInstructions = []);\n        }\n        existingInstructions.push.apply(existingInstructions, instructions);\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    ElementInstructionMap.prototype.has = function (element) { return this._map.has(element); };\n    /**\n     * @return {?}\n     */\n    ElementInstructionMap.prototype.clear = function () { this._map.clear(); };\n    return ElementInstructionMap;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ONE_FRAME_IN_MILLISECONDS = 1;\n/**\n * @param {?} driver\n * @param {?} rootElement\n * @param {?} ast\n * @param {?=} startingStyles\n * @param {?=} finalStyles\n * @param {?=} options\n * @param {?=} subInstructions\n * @param {?=} errors\n * @return {?}\n */\nfunction buildAnimationTimelines(driver, rootElement, ast, startingStyles, finalStyles, options, subInstructions, errors) {\n    if (startingStyles === void 0) { startingStyles = {}; }\n    if (finalStyles === void 0) { finalStyles = {}; }\n    if (errors === void 0) { errors = []; }\n    return new AnimationTimelineBuilderVisitor().buildKeyframes(driver, rootElement, ast, startingStyles, finalStyles, options, subInstructions, errors);\n}\nvar AnimationTimelineBuilderVisitor = (function () {\n    function AnimationTimelineBuilderVisitor() {\n    }\n    /**\n     * @param {?} driver\n     * @param {?} rootElement\n     * @param {?} ast\n     * @param {?} startingStyles\n     * @param {?} finalStyles\n     * @param {?} options\n     * @param {?=} subInstructions\n     * @param {?=} errors\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.buildKeyframes = function (driver, rootElement, ast, startingStyles, finalStyles, options, subInstructions, errors) {\n        if (errors === void 0) { errors = []; }\n        subInstructions = subInstructions || new ElementInstructionMap();\n        var /** @type {?} */ context = new AnimationTimelineContext(driver, rootElement, subInstructions, errors, []);\n        context.options = options;\n        context.currentTimeline.setStyles([startingStyles], null, context.errors, options);\n        ast.visit(this, context);\n        // this checks to see if an actual animation happened\n        var /** @type {?} */ timelines = context.timelines.filter(function (timeline) { return timeline.containsAnimation(); });\n        if (timelines.length && Object.keys(finalStyles).length) {\n            var /** @type {?} */ tl = timelines[timelines.length - 1];\n            if (!tl.allowOnlyTimelineStyles()) {\n                tl.setStyles([finalStyles], null, context.errors, options);\n            }\n        }\n        return timelines.length ? timelines.map(function (timeline) { return timeline.buildKeyframes(); }) :\n            [createTimelineInstruction(rootElement, [], [], [], 0, 0, '', false)];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitTrigger = function (ast, context) {\n        // these values are not visited in this AST\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitState = function (ast, context) {\n        // these values are not visited in this AST\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitTransition = function (ast, context) {\n        // these values are not visited in this AST\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitAnimateChild = function (ast, context) {\n        var /** @type {?} */ elementInstructions = context.subInstructions.consume(context.element);\n        if (elementInstructions) {\n            var /** @type {?} */ innerContext = context.createSubContext(ast.options);\n            var /** @type {?} */ startTime = context.currentTimeline.currentTime;\n            var /** @type {?} */ endTime = this._visitSubInstructions(elementInstructions, innerContext, /** @type {?} */ (innerContext.options));\n            if (startTime != endTime) {\n                // we do this on the upper context because we created a sub context for\n                // the sub child animations\n                context.transformIntoNewTimeline(endTime);\n            }\n        }\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitAnimateRef = function (ast, context) {\n        var /** @type {?} */ innerContext = context.createSubContext(ast.options);\n        innerContext.transformIntoNewTimeline();\n        this.visitReference(ast.animation, innerContext);\n        context.transformIntoNewTimeline(innerContext.currentTimeline.currentTime);\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} instructions\n     * @param {?} context\n     * @param {?} options\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype._visitSubInstructions = function (instructions, context, options) {\n        var /** @type {?} */ startTime = context.currentTimeline.currentTime;\n        var /** @type {?} */ furthestTime = startTime;\n        // this is a special-case for when a user wants to skip a sub\n        // animation from being fired entirely.\n        var /** @type {?} */ duration = options.duration != null ? resolveTimingValue(options.duration) : null;\n        var /** @type {?} */ delay = options.delay != null ? resolveTimingValue(options.delay) : null;\n        if (duration !== 0) {\n            instructions.forEach(function (instruction) {\n                var /** @type {?} */ instructionTimings = context.appendInstructionToTimeline(instruction, duration, delay);\n                furthestTime =\n                    Math.max(furthestTime, instructionTimings.duration + instructionTimings.delay);\n            });\n        }\n        return furthestTime;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitReference = function (ast, context) {\n        context.updateOptions(ast.options, true);\n        ast.animation.visit(this, context);\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitSequence = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ subContextCount = context.subContextCount;\n        var /** @type {?} */ ctx = context;\n        var /** @type {?} */ options = ast.options;\n        if (options && (options.params || options.delay)) {\n            ctx = context.createSubContext(options);\n            ctx.transformIntoNewTimeline();\n            if (options.delay != null) {\n                if (ctx.previousNode instanceof StyleAst) {\n                    ctx.currentTimeline.snapshotCurrentStyles();\n                    ctx.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n                }\n                var /** @type {?} */ delay = resolveTimingValue(options.delay);\n                ctx.delayNextStep(delay);\n            }\n        }\n        if (ast.steps.length) {\n            ast.steps.forEach(function (s) { return s.visit(_this, ctx); });\n            // this is here just incase the inner steps only contain or end with a style() call\n            ctx.currentTimeline.applyStylesToKeyframe();\n            // this means that some animation function within the sequence\n            // ended up creating a sub timeline (which means the current\n            // timeline cannot overlap with the contents of the sequence)\n            if (ctx.subContextCount > subContextCount) {\n                ctx.transformIntoNewTimeline();\n            }\n        }\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitGroup = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ innerTimelines = [];\n        var /** @type {?} */ furthestTime = context.currentTimeline.currentTime;\n        var /** @type {?} */ delay = ast.options && ast.options.delay ? resolveTimingValue(ast.options.delay) : 0;\n        ast.steps.forEach(function (s) {\n            var /** @type {?} */ innerContext = context.createSubContext(ast.options);\n            if (delay) {\n                innerContext.delayNextStep(delay);\n            }\n            s.visit(_this, innerContext);\n            furthestTime = Math.max(furthestTime, innerContext.currentTimeline.currentTime);\n            innerTimelines.push(innerContext.currentTimeline);\n        });\n        // this operation is run after the AST loop because otherwise\n        // if the parent timeline's collected styles were updated then\n        // it would pass in invalid data into the new-to-be forked items\n        innerTimelines.forEach(function (timeline) { return context.currentTimeline.mergeTimelineCollectedStyles(timeline); });\n        context.transformIntoNewTimeline(furthestTime);\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitTiming = function (ast, context) {\n        if (ast instanceof DynamicTimingAst) {\n            var /** @type {?} */ strValue = context.params ?\n                interpolateParams(ast.value, context.params, context.errors) :\n                ast.value.toString();\n            return resolveTiming(strValue, context.errors);\n        }\n        else {\n            return { duration: ast.duration, delay: ast.delay, easing: ast.easing };\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitAnimate = function (ast, context) {\n        var /** @type {?} */ timings = context.currentAnimateTimings = this.visitTiming(ast.timings, context);\n        var /** @type {?} */ timeline = context.currentTimeline;\n        if (timings.delay) {\n            context.incrementTime(timings.delay);\n            timeline.snapshotCurrentStyles();\n        }\n        var /** @type {?} */ style$$1 = ast.style;\n        if (style$$1 instanceof KeyframesAst) {\n            this.visitKeyframes(style$$1, context);\n        }\n        else {\n            context.incrementTime(timings.duration);\n            this.visitStyle(/** @type {?} */ (style$$1), context);\n            timeline.applyStylesToKeyframe();\n        }\n        context.currentAnimateTimings = null;\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitStyle = function (ast, context) {\n        var /** @type {?} */ timeline = context.currentTimeline;\n        var /** @type {?} */ timings = ((context.currentAnimateTimings));\n        // this is a special case for when a style() call\n        // directly follows  an animate() call (but not inside of an animate() call)\n        if (!timings && timeline.getCurrentStyleProperties().length) {\n            timeline.forwardFrame();\n        }\n        var /** @type {?} */ easing = (timings && timings.easing) || ast.easing;\n        if (ast.isEmptyStep) {\n            timeline.applyEmptyStep(easing);\n        }\n        else {\n            timeline.setStyles(ast.styles, easing, context.errors, context.options);\n        }\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitKeyframes = function (ast, context) {\n        var /** @type {?} */ currentAnimateTimings = ((context.currentAnimateTimings));\n        var /** @type {?} */ startTime = (((context.currentTimeline))).duration;\n        var /** @type {?} */ duration = currentAnimateTimings.duration;\n        var /** @type {?} */ innerContext = context.createSubContext();\n        var /** @type {?} */ innerTimeline = innerContext.currentTimeline;\n        innerTimeline.easing = currentAnimateTimings.easing;\n        ast.styles.forEach(function (step) {\n            var /** @type {?} */ offset = step.offset || 0;\n            innerTimeline.forwardTime(offset * duration);\n            innerTimeline.setStyles(step.styles, step.easing, context.errors, context.options);\n            innerTimeline.applyStylesToKeyframe();\n        });\n        // this will ensure that the parent timeline gets all the styles from\n        // the child even if the new timeline below is not used\n        context.currentTimeline.mergeTimelineCollectedStyles(innerTimeline);\n        // we do this because the window between this timeline and the sub timeline\n        // should ensure that the styles within are exactly the same as they were before\n        context.transformIntoNewTimeline(startTime + duration);\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitQuery = function (ast, context) {\n        var _this = this;\n        // in the event that the first step before this is a style step we need\n        // to ensure the styles are applied before the children are animated\n        var /** @type {?} */ startTime = context.currentTimeline.currentTime;\n        var /** @type {?} */ options = ((ast.options || {}));\n        var /** @type {?} */ delay = options.delay ? resolveTimingValue(options.delay) : 0;\n        if (delay && (context.previousNode instanceof StyleAst ||\n            (startTime == 0 && context.currentTimeline.getCurrentStyleProperties().length))) {\n            context.currentTimeline.snapshotCurrentStyles();\n            context.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n        }\n        var /** @type {?} */ furthestTime = startTime;\n        var /** @type {?} */ elms = context.invokeQuery(ast.selector, ast.originalSelector, ast.limit, ast.includeSelf, options.optional ? true : false, context.errors);\n        context.currentQueryTotal = elms.length;\n        var /** @type {?} */ sameElementTimeline = null;\n        elms.forEach(function (element, i) {\n            context.currentQueryIndex = i;\n            var /** @type {?} */ innerContext = context.createSubContext(ast.options, element);\n            if (delay) {\n                innerContext.delayNextStep(delay);\n            }\n            if (element === context.element) {\n                sameElementTimeline = innerContext.currentTimeline;\n            }\n            ast.animation.visit(_this, innerContext);\n            // this is here just incase the inner steps only contain or end\n            // with a style() call (which is here to signal that this is a preparatory\n            // call to style an element before it is animated again)\n            innerContext.currentTimeline.applyStylesToKeyframe();\n            var /** @type {?} */ endTime = innerContext.currentTimeline.currentTime;\n            furthestTime = Math.max(furthestTime, endTime);\n        });\n        context.currentQueryIndex = 0;\n        context.currentQueryTotal = 0;\n        context.transformIntoNewTimeline(furthestTime);\n        if (sameElementTimeline) {\n            context.currentTimeline.mergeTimelineCollectedStyles(sameElementTimeline);\n            context.currentTimeline.snapshotCurrentStyles();\n        }\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitStagger = function (ast, context) {\n        var /** @type {?} */ parentContext = ((context.parentContext));\n        var /** @type {?} */ tl = context.currentTimeline;\n        var /** @type {?} */ timings = ast.timings;\n        var /** @type {?} */ duration = Math.abs(timings.duration);\n        var /** @type {?} */ maxTime = duration * (context.currentQueryTotal - 1);\n        var /** @type {?} */ delay = duration * context.currentQueryIndex;\n        var /** @type {?} */ staggerTransformer = timings.duration < 0 ? 'reverse' : timings.easing;\n        switch (staggerTransformer) {\n            case 'reverse':\n                delay = maxTime - delay;\n                break;\n            case 'full':\n                delay = parentContext.currentStaggerTime;\n                break;\n        }\n        if (delay) {\n            context.currentTimeline.delayNextStep(delay);\n        }\n        var /** @type {?} */ startingTime = context.currentTimeline.currentTime;\n        ast.animation.visit(this, context);\n        context.previousNode = ast;\n        // time = duration + delay\n        // the reason why this computation is so complex is because\n        // the inner timeline may either have a delay value or a stretched\n        // keyframe depending on if a subtimeline is not used or is used.\n        parentContext.currentStaggerTime =\n            (tl.currentTime - startingTime) + (tl.startTime - parentContext.currentTimeline.startTime);\n    };\n    return AnimationTimelineBuilderVisitor;\n}());\nvar DEFAULT_NOOP_PREVIOUS_NODE = ({});\nvar AnimationTimelineContext = (function () {\n    /**\n     * @param {?} _driver\n     * @param {?} element\n     * @param {?} subInstructions\n     * @param {?} errors\n     * @param {?} timelines\n     * @param {?=} initialTimeline\n     */\n    function AnimationTimelineContext(_driver, element, subInstructions, errors, timelines, initialTimeline) {\n        this._driver = _driver;\n        this.element = element;\n        this.subInstructions = subInstructions;\n        this.errors = errors;\n        this.timelines = timelines;\n        this.parentContext = null;\n        this.currentAnimateTimings = null;\n        this.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n        this.subContextCount = 0;\n        this.options = {};\n        this.currentQueryIndex = 0;\n        this.currentQueryTotal = 0;\n        this.currentStaggerTime = 0;\n        this.currentTimeline = initialTimeline || new TimelineBuilder(element, 0);\n        timelines.push(this.currentTimeline);\n    }\n    Object.defineProperty(AnimationTimelineContext.prototype, \"params\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.options.params; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} options\n     * @param {?=} skipIfExists\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.updateOptions = function (options, skipIfExists) {\n        var _this = this;\n        if (!options)\n            return;\n        var /** @type {?} */ newOptions = (options);\n        var /** @type {?} */ optionsToUpdate = this.options;\n        // NOTE: this will get patched up when other animation methods support duration overrides\n        if (newOptions.duration != null) {\n            ((optionsToUpdate)).duration = resolveTimingValue(newOptions.duration);\n        }\n        if (newOptions.delay != null) {\n            optionsToUpdate.delay = resolveTimingValue(newOptions.delay);\n        }\n        var /** @type {?} */ newParams = newOptions.params;\n        if (newParams) {\n            var /** @type {?} */ paramsToUpdate_1 = ((optionsToUpdate.params));\n            if (!paramsToUpdate_1) {\n                paramsToUpdate_1 = this.options.params = {};\n            }\n            Object.keys(newParams).forEach(function (name) {\n                if (!skipIfExists || !paramsToUpdate_1.hasOwnProperty(name)) {\n                    paramsToUpdate_1[name] = interpolateParams(newParams[name], paramsToUpdate_1, _this.errors);\n                }\n            });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype._copyOptions = function () {\n        var /** @type {?} */ options = {};\n        if (this.options) {\n            var /** @type {?} */ oldParams_1 = this.options.params;\n            if (oldParams_1) {\n                var /** @type {?} */ params_1 = options['params'] = {};\n                Object.keys(this.options.params).forEach(function (name) { params_1[name] = oldParams_1[name]; });\n            }\n        }\n        return options;\n    };\n    /**\n     * @param {?=} options\n     * @param {?=} element\n     * @param {?=} newTime\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.createSubContext = function (options, element, newTime) {\n        if (options === void 0) { options = null; }\n        var /** @type {?} */ target = element || this.element;\n        var /** @type {?} */ context = new AnimationTimelineContext(this._driver, target, this.subInstructions, this.errors, this.timelines, this.currentTimeline.fork(target, newTime || 0));\n        context.previousNode = this.previousNode;\n        context.currentAnimateTimings = this.currentAnimateTimings;\n        context.options = this._copyOptions();\n        context.updateOptions(options);\n        context.currentQueryIndex = this.currentQueryIndex;\n        context.currentQueryTotal = this.currentQueryTotal;\n        context.parentContext = this;\n        this.subContextCount++;\n        return context;\n    };\n    /**\n     * @param {?=} newTime\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.transformIntoNewTimeline = function (newTime) {\n        this.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n        this.currentTimeline = this.currentTimeline.fork(this.element, newTime);\n        this.timelines.push(this.currentTimeline);\n        return this.currentTimeline;\n    };\n    /**\n     * @param {?} instruction\n     * @param {?} duration\n     * @param {?} delay\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.appendInstructionToTimeline = function (instruction, duration, delay) {\n        var /** @type {?} */ updatedTimings = {\n            duration: duration != null ? duration : instruction.duration,\n            delay: this.currentTimeline.currentTime + (delay != null ? delay : 0) + instruction.delay,\n            easing: ''\n        };\n        var /** @type {?} */ builder = new SubTimelineBuilder(instruction.element, instruction.keyframes, instruction.preStyleProps, instruction.postStyleProps, updatedTimings, instruction.stretchStartingKeyframe);\n        this.timelines.push(builder);\n        return updatedTimings;\n    };\n    /**\n     * @param {?} time\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.incrementTime = function (time) {\n        this.currentTimeline.forwardTime(this.currentTimeline.duration + time);\n    };\n    /**\n     * @param {?} delay\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.delayNextStep = function (delay) {\n        // negative delays are not yet supported\n        if (delay > 0) {\n            this.currentTimeline.delayNextStep(delay);\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} originalSelector\n     * @param {?} limit\n     * @param {?} includeSelf\n     * @param {?} optional\n     * @param {?} errors\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.invokeQuery = function (selector, originalSelector, limit, includeSelf, optional, errors) {\n        var /** @type {?} */ results = [];\n        if (includeSelf) {\n            results.push(this.element);\n        }\n        if (selector.length > 0) {\n            var /** @type {?} */ multi = limit != 1;\n            results.push.apply(results, this._driver.query(this.element, selector, multi));\n        }\n        if (!optional && results.length == 0) {\n            errors.push(\"`query(\\\"\" + originalSelector + \"\\\")` returned zero elements. (Use `query(\\\"\" + originalSelector + \"\\\", { optional: true })` if you wish to allow this.)\");\n        }\n        return results;\n    };\n    return AnimationTimelineContext;\n}());\nvar TimelineBuilder = (function () {\n    /**\n     * @param {?} element\n     * @param {?} startTime\n     * @param {?=} _elementTimelineStylesLookup\n     */\n    function TimelineBuilder(element, startTime, _elementTimelineStylesLookup) {\n        this.element = element;\n        this.startTime = startTime;\n        this._elementTimelineStylesLookup = _elementTimelineStylesLookup;\n        this.duration = 0;\n        this._previousKeyframe = {};\n        this._currentKeyframe = {};\n        this._keyframes = new Map();\n        this._styleSummary = {};\n        this._pendingStyles = {};\n        this._backFill = {};\n        this._currentEmptyStepKeyframe = null;\n        if (!this._elementTimelineStylesLookup) {\n            this._elementTimelineStylesLookup = new Map();\n        }\n        this._localTimelineStyles = Object.create(this._backFill, {});\n        this._globalTimelineStyles = this._elementTimelineStylesLookup.get(element);\n        if (!this._globalTimelineStyles) {\n            this._globalTimelineStyles = this._localTimelineStyles;\n            this._elementTimelineStylesLookup.set(element, this._localTimelineStyles);\n        }\n        this._loadKeyframe();\n    }\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.containsAnimation = function () {\n        switch (this._keyframes.size) {\n            case 0:\n                return false;\n            case 1:\n                return this.getCurrentStyleProperties().length > 0;\n            default:\n                return true;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.getCurrentStyleProperties = function () { return Object.keys(this._currentKeyframe); };\n    Object.defineProperty(TimelineBuilder.prototype, \"currentTime\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.startTime + this.duration; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} delay\n     * @return {?}\n     */\n    TimelineBuilder.prototype.delayNextStep = function (delay) {\n        if (this.duration == 0) {\n            this.startTime += delay;\n        }\n        else {\n            this.forwardTime(this.currentTime + delay);\n        }\n    };\n    /**\n     * @param {?} element\n     * @param {?=} currentTime\n     * @return {?}\n     */\n    TimelineBuilder.prototype.fork = function (element, currentTime) {\n        this.applyStylesToKeyframe();\n        return new TimelineBuilder(element, currentTime || this.currentTime, this._elementTimelineStylesLookup);\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype._loadKeyframe = function () {\n        if (this._currentKeyframe) {\n            this._previousKeyframe = this._currentKeyframe;\n        }\n        this._currentKeyframe = ((this._keyframes.get(this.duration)));\n        if (!this._currentKeyframe) {\n            this._currentKeyframe = Object.create(this._backFill, {});\n            this._keyframes.set(this.duration, this._currentKeyframe);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.forwardFrame = function () {\n        this.duration += ONE_FRAME_IN_MILLISECONDS;\n        this._loadKeyframe();\n    };\n    /**\n     * @param {?} time\n     * @return {?}\n     */\n    TimelineBuilder.prototype.forwardTime = function (time) {\n        this.applyStylesToKeyframe();\n        this.duration = time;\n        this._loadKeyframe();\n    };\n    /**\n     * @param {?} prop\n     * @param {?} value\n     * @return {?}\n     */\n    TimelineBuilder.prototype._updateStyle = function (prop, value) {\n        this._localTimelineStyles[prop] = value;\n        this._globalTimelineStyles[prop] = value;\n        this._styleSummary[prop] = { time: this.currentTime, value: value };\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.allowOnlyTimelineStyles = function () { return this._currentEmptyStepKeyframe !== this._currentKeyframe; };\n    /**\n     * @param {?} easing\n     * @return {?}\n     */\n    TimelineBuilder.prototype.applyEmptyStep = function (easing) {\n        var _this = this;\n        if (easing) {\n            this._previousKeyframe['easing'] = easing;\n        }\n        // special case for animate(duration):\n        // all missing styles are filled with a `*` value then\n        // if any destination styles are filled in later on the same\n        // keyframe then they will override the overridden styles\n        // We use `_globalTimelineStyles` here because there may be\n        // styles in previous keyframes that are not present in this timeline\n        Object.keys(this._globalTimelineStyles).forEach(function (prop) {\n            _this._backFill[prop] = _this._globalTimelineStyles[prop] || __WEBPACK_IMPORTED_MODULE_1__angular_animations__[\"g\" /* AUTO_STYLE */];\n            _this._currentKeyframe[prop] = __WEBPACK_IMPORTED_MODULE_1__angular_animations__[\"g\" /* AUTO_STYLE */];\n        });\n        this._currentEmptyStepKeyframe = this._currentKeyframe;\n    };\n    /**\n     * @param {?} input\n     * @param {?} easing\n     * @param {?} errors\n     * @param {?=} options\n     * @return {?}\n     */\n    TimelineBuilder.prototype.setStyles = function (input, easing, errors, options) {\n        var _this = this;\n        if (easing) {\n            this._previousKeyframe['easing'] = easing;\n        }\n        var /** @type {?} */ params = (options && options.params) || {};\n        var /** @type {?} */ styles = flattenStyles(input, this._globalTimelineStyles);\n        Object.keys(styles).forEach(function (prop) {\n            var /** @type {?} */ val = interpolateParams(styles[prop], params, errors);\n            _this._pendingStyles[prop] = val;\n            if (!_this._localTimelineStyles.hasOwnProperty(prop)) {\n                _this._backFill[prop] = _this._globalTimelineStyles.hasOwnProperty(prop) ?\n                    _this._globalTimelineStyles[prop] :\n                    __WEBPACK_IMPORTED_MODULE_1__angular_animations__[\"g\" /* AUTO_STYLE */];\n            }\n            _this._updateStyle(prop, val);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.applyStylesToKeyframe = function () {\n        var _this = this;\n        var /** @type {?} */ styles = this._pendingStyles;\n        var /** @type {?} */ props = Object.keys(styles);\n        if (props.length == 0)\n            return;\n        this._pendingStyles = {};\n        props.forEach(function (prop) {\n            var /** @type {?} */ val = styles[prop];\n            _this._currentKeyframe[prop] = val;\n        });\n        Object.keys(this._localTimelineStyles).forEach(function (prop) {\n            if (!_this._currentKeyframe.hasOwnProperty(prop)) {\n                _this._currentKeyframe[prop] = _this._localTimelineStyles[prop];\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.snapshotCurrentStyles = function () {\n        var _this = this;\n        Object.keys(this._localTimelineStyles).forEach(function (prop) {\n            var /** @type {?} */ val = _this._localTimelineStyles[prop];\n            _this._pendingStyles[prop] = val;\n            _this._updateStyle(prop, val);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.getFinalKeyframe = function () { return this._keyframes.get(this.duration); };\n    Object.defineProperty(TimelineBuilder.prototype, \"properties\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ properties = [];\n            for (var /** @type {?} */ prop in this._currentKeyframe) {\n                properties.push(prop);\n            }\n            return properties;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} timeline\n     * @return {?}\n     */\n    TimelineBuilder.prototype.mergeTimelineCollectedStyles = function (timeline) {\n        var _this = this;\n        Object.keys(timeline._styleSummary).forEach(function (prop) {\n            var /** @type {?} */ details0 = _this._styleSummary[prop];\n            var /** @type {?} */ details1 = timeline._styleSummary[prop];\n            if (!details0 || details1.time > details0.time) {\n                _this._updateStyle(prop, details1.value);\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.buildKeyframes = function () {\n        var _this = this;\n        this.applyStylesToKeyframe();\n        var /** @type {?} */ preStyleProps = new Set();\n        var /** @type {?} */ postStyleProps = new Set();\n        var /** @type {?} */ isEmpty = this._keyframes.size === 1 && this.duration === 0;\n        var /** @type {?} */ finalKeyframes = [];\n        this._keyframes.forEach(function (keyframe, time) {\n            var /** @type {?} */ finalKeyframe = copyStyles(keyframe, true);\n            Object.keys(finalKeyframe).forEach(function (prop) {\n                var /** @type {?} */ value = finalKeyframe[prop];\n                if (value == __WEBPACK_IMPORTED_MODULE_1__angular_animations__[\"f\" /* ɵPRE_STYLE */]) {\n                    preStyleProps.add(prop);\n                }\n                else if (value == __WEBPACK_IMPORTED_MODULE_1__angular_animations__[\"g\" /* AUTO_STYLE */]) {\n                    postStyleProps.add(prop);\n                }\n            });\n            if (!isEmpty) {\n                finalKeyframe['offset'] = time / _this.duration;\n            }\n            finalKeyframes.push(finalKeyframe);\n        });\n        var /** @type {?} */ preProps = preStyleProps.size ? iteratorToArray(preStyleProps.values()) : [];\n        var /** @type {?} */ postProps = postStyleProps.size ? iteratorToArray(postStyleProps.values()) : [];\n        // special case for a 0-second animation (which is designed just to place styles onscreen)\n        if (isEmpty) {\n            var /** @type {?} */ kf0 = finalKeyframes[0];\n            var /** @type {?} */ kf1 = copyObj(kf0);\n            kf0['offset'] = 0;\n            kf1['offset'] = 1;\n            finalKeyframes = [kf0, kf1];\n        }\n        return createTimelineInstruction(this.element, finalKeyframes, preProps, postProps, this.duration, this.startTime, this.easing, false);\n    };\n    return TimelineBuilder;\n}());\nvar SubTimelineBuilder = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](SubTimelineBuilder, _super);\n    /**\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} preStyleProps\n     * @param {?} postStyleProps\n     * @param {?} timings\n     * @param {?=} _stretchStartingKeyframe\n     */\n    function SubTimelineBuilder(element, keyframes, preStyleProps, postStyleProps, timings, _stretchStartingKeyframe) {\n        if (_stretchStartingKeyframe === void 0) { _stretchStartingKeyframe = false; }\n        var _this = _super.call(this, element, timings.delay) || this;\n        _this.element = element;\n        _this.keyframes = keyframes;\n        _this.preStyleProps = preStyleProps;\n        _this.postStyleProps = postStyleProps;\n        _this._stretchStartingKeyframe = _stretchStartingKeyframe;\n        _this.timings = { duration: timings.duration, delay: timings.delay, easing: timings.easing };\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    SubTimelineBuilder.prototype.containsAnimation = function () { return this.keyframes.length > 1; };\n    /**\n     * @return {?}\n     */\n    SubTimelineBuilder.prototype.buildKeyframes = function () {\n        var /** @type {?} */ keyframes = this.keyframes;\n        var _a = this.timings, delay = _a.delay, duration = _a.duration, easing = _a.easing;\n        if (this._stretchStartingKeyframe && delay) {\n            var /** @type {?} */ newKeyframes = [];\n            var /** @type {?} */ totalTime = duration + delay;\n            var /** @type {?} */ startingGap = delay / totalTime;\n            // the original starting keyframe now starts once the delay is done\n            var /** @type {?} */ newFirstKeyframe = copyStyles(keyframes[0], false);\n            newFirstKeyframe['offset'] = 0;\n            newKeyframes.push(newFirstKeyframe);\n            var /** @type {?} */ oldFirstKeyframe = copyStyles(keyframes[0], false);\n            oldFirstKeyframe['offset'] = roundOffset(startingGap);\n            newKeyframes.push(oldFirstKeyframe);\n            /*\n              When the keyframe is stretched then it means that the delay before the animation\n              starts is gone. Instead the first keyframe is placed at the start of the animation\n              and it is then copied to where it starts when the original delay is over. This basically\n              means nothing animates during that delay, but the styles are still renderered. For this\n              to work the original offset values that exist in the original keyframes must be \"warped\"\n              so that they can take the new keyframe + delay into account.\n      \n              delay=1000, duration=1000, keyframes = 0 .5 1\n      \n              turns into\n      \n              delay=0, duration=2000, keyframes = 0 .33 .66 1\n             */\n            // offsets between 1 ... n -1 are all warped by the keyframe stretch\n            var /** @type {?} */ limit = keyframes.length - 1;\n            for (var /** @type {?} */ i = 1; i <= limit; i++) {\n                var /** @type {?} */ kf = copyStyles(keyframes[i], false);\n                var /** @type {?} */ oldOffset = (kf['offset']);\n                var /** @type {?} */ timeAtKeyframe = delay + oldOffset * duration;\n                kf['offset'] = roundOffset(timeAtKeyframe / totalTime);\n                newKeyframes.push(kf);\n            }\n            // the new starting keyframe should be added at the start\n            duration = totalTime;\n            delay = 0;\n            easing = '';\n            keyframes = newKeyframes;\n        }\n        return createTimelineInstruction(this.element, keyframes, this.preStyleProps, this.postStyleProps, duration, delay, easing, true);\n    };\n    return SubTimelineBuilder;\n}(TimelineBuilder));\n/**\n * @param {?} offset\n * @param {?=} decimalPoints\n * @return {?}\n */\nfunction roundOffset(offset, decimalPoints) {\n    if (decimalPoints === void 0) { decimalPoints = 3; }\n    var /** @type {?} */ mult = Math.pow(10, decimalPoints - 1);\n    return Math.round(offset * mult) / mult;\n}\n/**\n * @param {?} input\n * @param {?} allStyles\n * @return {?}\n */\nfunction flattenStyles(input, allStyles) {\n    var /** @type {?} */ styles = {};\n    var /** @type {?} */ allProperties;\n    input.forEach(function (token) {\n        if (token === '*') {\n            allProperties = allProperties || Object.keys(allStyles);\n            allProperties.forEach(function (prop) { styles[prop] = __WEBPACK_IMPORTED_MODULE_1__angular_animations__[\"g\" /* AUTO_STYLE */]; });\n        }\n        else {\n            copyStyles(/** @type {?} */ (token), false, styles);\n        }\n    });\n    return styles;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Animation = (function () {\n    /**\n     * @param {?} _driver\n     * @param {?} input\n     */\n    function Animation(_driver, input) {\n        this._driver = _driver;\n        var errors = [];\n        var ast = buildAnimationAst(input, errors);\n        if (errors.length) {\n            var errorMessage = \"animation validation failed:\\n\" + errors.join(\"\\n\");\n            throw new Error(errorMessage);\n        }\n        this._animationAst = ast;\n    }\n    /**\n     * @param {?} element\n     * @param {?} startingStyles\n     * @param {?} destinationStyles\n     * @param {?} options\n     * @param {?=} subInstructions\n     * @return {?}\n     */\n    Animation.prototype.buildTimelines = function (element, startingStyles, destinationStyles, options, subInstructions) {\n        var /** @type {?} */ start = Array.isArray(startingStyles) ? normalizeStyles(startingStyles) : (startingStyles);\n        var /** @type {?} */ dest = Array.isArray(destinationStyles) ? normalizeStyles(destinationStyles) : (destinationStyles);\n        var /** @type {?} */ errors = [];\n        subInstructions = subInstructions || new ElementInstructionMap();\n        var /** @type {?} */ result = buildAnimationTimelines(this._driver, element, this._animationAst, start, dest, options, subInstructions, errors);\n        if (errors.length) {\n            var /** @type {?} */ errorMessage = \"animation building failed:\\n\" + errors.join(\"\\n\");\n            throw new Error(errorMessage);\n        }\n        return result;\n    };\n    return Animation;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @experimental Animation support is experimental.\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */ var AnimationStyleNormalizer = (function () {\n    function AnimationStyleNormalizer() {\n    }\n    return AnimationStyleNormalizer;\n}());\n/**\n * @experimental Animation support is experimental.\n */\nvar NoopAnimationStyleNormalizer = (function () {\n    function NoopAnimationStyleNormalizer() {\n    }\n    NoopAnimationStyleNormalizer.prototype.normalizePropertyName = function (propertyName, errors) { return propertyName; };\n    NoopAnimationStyleNormalizer.prototype.normalizeStyleValue = function (userProvidedProperty, normalizedProperty, value, errors) {\n        return value;\n    };\n    return NoopAnimationStyleNormalizer;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar WebAnimationsStyleNormalizer = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](WebAnimationsStyleNormalizer, _super);\n    function WebAnimationsStyleNormalizer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} propertyName\n     * @param {?} errors\n     * @return {?}\n     */\n    WebAnimationsStyleNormalizer.prototype.normalizePropertyName = function (propertyName, errors) {\n        return dashCaseToCamelCase(propertyName);\n    };\n    /**\n     * @param {?} userProvidedProperty\n     * @param {?} normalizedProperty\n     * @param {?} value\n     * @param {?} errors\n     * @return {?}\n     */\n    WebAnimationsStyleNormalizer.prototype.normalizeStyleValue = function (userProvidedProperty, normalizedProperty, value, errors) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = value.toString().trim();\n        if (DIMENSIONAL_PROP_MAP[normalizedProperty] && value !== 0 && value !== '0') {\n            if (typeof value === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = value.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errors.push(\"Please provide a CSS unit value for \" + userProvidedProperty + \":\" + value);\n                }\n            }\n        }\n        return strVal + unit;\n    };\n    return WebAnimationsStyleNormalizer;\n}(AnimationStyleNormalizer));\nvar DIMENSIONAL_PROP_MAP = makeBooleanMap('width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective'\n    .split(','));\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction makeBooleanMap(keys) {\n    var /** @type {?} */ map = {};\n    keys.forEach(function (key) { return map[key] = true; });\n    return map;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} element\n * @param {?} triggerName\n * @param {?} fromState\n * @param {?} toState\n * @param {?} isRemovalTransition\n * @param {?} fromStyles\n * @param {?} toStyles\n * @param {?} timelines\n * @param {?} queriedElements\n * @param {?} preStyleProps\n * @param {?} postStyleProps\n * @return {?}\n */\nfunction createTransitionInstruction(element, triggerName, fromState, toState, isRemovalTransition, fromStyles, toStyles, timelines, queriedElements, preStyleProps, postStyleProps) {\n    return {\n        type: 0 /* TransitionAnimation */,\n        element: element,\n        triggerName: triggerName,\n        isRemovalTransition: isRemovalTransition,\n        fromState: fromState,\n        fromStyles: fromStyles,\n        toState: toState,\n        toStyles: toStyles,\n        timelines: timelines,\n        queriedElements: queriedElements,\n        preStyleProps: preStyleProps,\n        postStyleProps: postStyleProps\n    };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AnimationTransitionFactory = (function () {\n    /**\n     * @param {?} _triggerName\n     * @param {?} ast\n     * @param {?} _stateStyles\n     */\n    function AnimationTransitionFactory(_triggerName, ast, _stateStyles) {\n        this._triggerName = _triggerName;\n        this.ast = ast;\n        this._stateStyles = _stateStyles;\n    }\n    /**\n     * @param {?} currentState\n     * @param {?} nextState\n     * @return {?}\n     */\n    AnimationTransitionFactory.prototype.match = function (currentState, nextState) {\n        return oneOrMoreTransitionsMatch(this.ast.matchers, currentState, nextState);\n    };\n    /**\n     * @param {?} driver\n     * @param {?} element\n     * @param {?} currentState\n     * @param {?} nextState\n     * @param {?=} options\n     * @param {?=} subInstructions\n     * @return {?}\n     */\n    AnimationTransitionFactory.prototype.build = function (driver, element, currentState, nextState, options, subInstructions) {\n        var /** @type {?} */ animationOptions = mergeAnimationOptions(this.ast.options || {}, options || {});\n        var /** @type {?} */ backupStateStyles = this._stateStyles['*'] || {};\n        var /** @type {?} */ currentStateStyles = this._stateStyles[currentState] || backupStateStyles;\n        var /** @type {?} */ nextStateStyles = this._stateStyles[nextState] || backupStateStyles;\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ timelines = buildAnimationTimelines(driver, element, this.ast.animation, currentStateStyles, nextStateStyles, animationOptions, subInstructions, errors);\n        if (errors.length) {\n            var /** @type {?} */ errorMessage = \"animation building failed:\\n\" + errors.join(\"\\n\");\n            throw new Error(errorMessage);\n        }\n        var /** @type {?} */ preStyleMap = new Map();\n        var /** @type {?} */ postStyleMap = new Map();\n        var /** @type {?} */ queriedElements = new Set();\n        timelines.forEach(function (tl) {\n            var /** @type {?} */ elm = tl.element;\n            var /** @type {?} */ preProps = getOrSetAsInMap(preStyleMap, elm, {});\n            tl.preStyleProps.forEach(function (prop) { return preProps[prop] = true; });\n            var /** @type {?} */ postProps = getOrSetAsInMap(postStyleMap, elm, {});\n            tl.postStyleProps.forEach(function (prop) { return postProps[prop] = true; });\n            if (elm !== element) {\n                queriedElements.add(elm);\n            }\n        });\n        var /** @type {?} */ queriedElementsList = iteratorToArray(queriedElements.values());\n        return createTransitionInstruction(element, this._triggerName, currentState, nextState, nextState === 'void', currentStateStyles, nextStateStyles, timelines, queriedElementsList, preStyleMap, postStyleMap);\n    };\n    return AnimationTransitionFactory;\n}());\n/**\n * @param {?} matchFns\n * @param {?} currentState\n * @param {?} nextState\n * @return {?}\n */\nfunction oneOrMoreTransitionsMatch(matchFns, currentState, nextState) {\n    return matchFns.some(function (fn) { return fn(currentState, nextState); });\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} ast\n * @return {?}\n */\nfunction buildTrigger(name, ast) {\n    return new AnimationTrigger(name, ast);\n}\n/**\n * \\@experimental Animation support is experimental.\n */\nvar AnimationTrigger = (function () {\n    /**\n     * @param {?} name\n     * @param {?} ast\n     */\n    function AnimationTrigger(name, ast) {\n        var _this = this;\n        this.name = name;\n        this.ast = ast;\n        this.transitionFactories = [];\n        this.states = {};\n        ast.states.forEach(function (ast) {\n            var obj = _this.states[ast.name] = {};\n            ast.style.styles.forEach(function (styleTuple) {\n                if (typeof styleTuple == 'object') {\n                    copyStyles(styleTuple, false, obj);\n                }\n            });\n        });\n        balanceProperties(this.states, 'true', '1');\n        balanceProperties(this.states, 'false', '0');\n        ast.transitions.forEach(function (ast) {\n            _this.transitionFactories.push(new AnimationTransitionFactory(name, ast, _this.states));\n        });\n        this.fallbackTransition = createFallbackTransition(name, this.states);\n    }\n    Object.defineProperty(AnimationTrigger.prototype, \"containsQueries\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.ast.queryCount > 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} currentState\n     * @param {?} nextState\n     * @return {?}\n     */\n    AnimationTrigger.prototype.matchTransition = function (currentState, nextState) {\n        var /** @type {?} */ entry = this.transitionFactories.find(function (f) { return f.match(currentState, nextState); });\n        return entry || null;\n    };\n    return AnimationTrigger;\n}());\n/**\n * @param {?} triggerName\n * @param {?} states\n * @return {?}\n */\nfunction createFallbackTransition(triggerName, states) {\n    var /** @type {?} */ matchers = [function (fromState, toState) { return true; }];\n    var /** @type {?} */ animation = new SequenceAst([]);\n    var /** @type {?} */ transition = new TransitionAst(matchers, animation);\n    return new AnimationTransitionFactory(triggerName, transition, states);\n}\n/**\n * @param {?} obj\n * @param {?} key1\n * @param {?} key2\n * @return {?}\n */\nfunction balanceProperties(obj, key1, key2) {\n    if (obj.hasOwnProperty(key1)) {\n        if (!obj.hasOwnProperty(key2)) {\n            obj[key2] = obj[key1];\n        }\n    }\n    else if (obj.hasOwnProperty(key2)) {\n        obj[key1] = obj[key2];\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_INSTRUCTION_MAP = new ElementInstructionMap();\nvar TimelineAnimationEngine = (function () {\n    /**\n     * @param {?} _driver\n     * @param {?} _normalizer\n     */\n    function TimelineAnimationEngine(_driver, _normalizer) {\n        this._driver = _driver;\n        this._normalizer = _normalizer;\n        this._animations = {};\n        this._playersById = {};\n        this.players = [];\n    }\n    /**\n     * @param {?} id\n     * @param {?} metadata\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.register = function (id, metadata) {\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ ast = buildAnimationAst(metadata, errors);\n        if (errors.length) {\n            throw new Error(\"Unable to build the animation due to the following errors: \" + errors.join(\"\\n\"));\n        }\n        else {\n            this._animations[id] = ast;\n        }\n    };\n    /**\n     * @param {?} i\n     * @param {?} preStyles\n     * @param {?=} postStyles\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype._buildPlayer = function (i, preStyles, postStyles) {\n        var /** @type {?} */ element = i.element;\n        var /** @type {?} */ keyframes = normalizeKeyframes(this._driver, this._normalizer, element, i.keyframes, preStyles, postStyles);\n        return this._driver.animate(element, keyframes, i.duration, i.delay, i.easing, []);\n    };\n    /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?=} options\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.create = function (id, element, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ ast = this._animations[id];\n        var /** @type {?} */ instructions;\n        var /** @type {?} */ autoStylesMap = new Map();\n        if (ast) {\n            instructions = buildAnimationTimelines(this._driver, element, ast, {}, {}, options, EMPTY_INSTRUCTION_MAP, errors);\n            instructions.forEach(function (inst) {\n                var /** @type {?} */ styles = getOrSetAsInMap(autoStylesMap, inst.element, {});\n                inst.postStyleProps.forEach(function (prop) { return styles[prop] = null; });\n            });\n        }\n        else {\n            errors.push('The requested animation doesn\\'t exist or has already been destroyed');\n            instructions = [];\n        }\n        if (errors.length) {\n            throw new Error(\"Unable to create the animation due to the following errors: \" + errors.join(\"\\n\"));\n        }\n        autoStylesMap.forEach(function (styles, element) {\n            Object.keys(styles).forEach(function (prop) { styles[prop] = _this._driver.computeStyle(element, prop, __WEBPACK_IMPORTED_MODULE_1__angular_animations__[\"g\" /* AUTO_STYLE */]); });\n        });\n        var /** @type {?} */ players = instructions.map(function (i) {\n            var /** @type {?} */ styles = autoStylesMap.get(i.element);\n            return _this._buildPlayer(i, {}, styles);\n        });\n        var /** @type {?} */ player = optimizeGroupPlayer(players);\n        this._playersById[id] = player;\n        player.onDestroy(function () { return _this.destroy(id); });\n        this.players.push(player);\n        return player;\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.destroy = function (id) {\n        var /** @type {?} */ player = this._getPlayer(id);\n        player.destroy();\n        delete this._playersById[id];\n        var /** @type {?} */ index = this.players.indexOf(player);\n        if (index >= 0) {\n            this.players.splice(index, 1);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype._getPlayer = function (id) {\n        var /** @type {?} */ player = this._playersById[id];\n        if (!player) {\n            throw new Error(\"Unable to find the timeline player referenced by \" + id);\n        }\n        return player;\n    };\n    /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.listen = function (id, element, eventName, callback) {\n        // triggerName, fromState, toState are all ignored for timeline animations\n        var /** @type {?} */ baseEvent = makeAnimationEvent(element, '', '', '');\n        listenOnPlayer(this._getPlayer(id), eventName, baseEvent, callback);\n        return function () { };\n    };\n    /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?} command\n     * @param {?} args\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.command = function (id, element, command, args) {\n        if (command == 'register') {\n            this.register(id, /** @type {?} */ (args[0]));\n            return;\n        }\n        if (command == 'create') {\n            var /** @type {?} */ options = ((args[0] || {}));\n            this.create(id, element, options);\n            return;\n        }\n        var /** @type {?} */ player = this._getPlayer(id);\n        switch (command) {\n            case 'play':\n                player.play();\n                break;\n            case 'pause':\n                player.pause();\n                break;\n            case 'reset':\n                player.reset();\n                break;\n            case 'restart':\n                player.restart();\n                break;\n            case 'finish':\n                player.finish();\n                break;\n            case 'init':\n                player.init();\n                break;\n            case 'setPosition':\n                player.setPosition(parseFloat(/** @type {?} */ (args[0])));\n                break;\n            case 'destroy':\n                this.destroy(id);\n                break;\n        }\n    };\n    return TimelineAnimationEngine;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_PLAYER_ARRAY = [];\nvar NULL_REMOVAL_STATE = {\n    namespaceId: '',\n    setForRemoval: null,\n    hasAnimation: false,\n    removedBeforeQueried: false\n};\nvar NULL_REMOVED_QUERIED_STATE = {\n    namespaceId: '',\n    setForRemoval: null,\n    hasAnimation: false,\n    removedBeforeQueried: true\n};\nvar REMOVAL_FLAG = '__ng_removed';\nvar StateValue = (function () {\n    /**\n     * @param {?} input\n     */\n    function StateValue(input) {\n        var isObj = input && input.hasOwnProperty('value');\n        var value = isObj ? input['value'] : input;\n        this.value = normalizeTriggerValue(value);\n        if (isObj) {\n            var options = copyObj(input);\n            delete options['value'];\n            this.options = options;\n        }\n        else {\n            this.options = {};\n        }\n        if (!this.options.params) {\n            this.options.params = {};\n        }\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    StateValue.prototype.absorbOptions = function (options) {\n        var /** @type {?} */ newParams = options.params;\n        if (newParams) {\n            var /** @type {?} */ oldParams_2 = ((this.options.params));\n            Object.keys(newParams).forEach(function (prop) {\n                if (oldParams_2[prop] == null) {\n                    oldParams_2[prop] = newParams[prop];\n                }\n            });\n        }\n    };\n    return StateValue;\n}());\nvar VOID_VALUE = 'void';\nvar DEFAULT_STATE_VALUE = new StateValue(VOID_VALUE);\nvar DELETED_STATE_VALUE = new StateValue('DELETED');\nvar POTENTIAL_ENTER_CLASSNAME = ENTER_CLASSNAME + '-temp';\nvar POTENTIAL_ENTER_SELECTOR = '.' + POTENTIAL_ENTER_CLASSNAME;\nvar AnimationTransitionNamespace = (function () {\n    /**\n     * @param {?} id\n     * @param {?} hostElement\n     * @param {?} _engine\n     */\n    function AnimationTransitionNamespace(id, hostElement, _engine) {\n        this.id = id;\n        this.hostElement = hostElement;\n        this._engine = _engine;\n        this.players = [];\n        this._triggers = {};\n        this._queue = [];\n        this._elementListeners = new Map();\n        this._hostClassName = 'ng-tns-' + id;\n        addClass(hostElement, this._hostClassName);\n    }\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @param {?} phase\n     * @param {?} callback\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.listen = function (element, name, phase, callback) {\n        var _this = this;\n        if (!this._triggers.hasOwnProperty(name)) {\n            throw new Error(\"Unable to listen on the animation trigger event \\\"\" + phase + \"\\\" because the animation trigger \\\"\" + name + \"\\\" doesn't exist!\");\n        }\n        if (phase == null || phase.length == 0) {\n            throw new Error(\"Unable to listen on the animation trigger \\\"\" + name + \"\\\" because the provided event is undefined!\");\n        }\n        if (!isTriggerEventValid(phase)) {\n            throw new Error(\"The provided animation trigger event \\\"\" + phase + \"\\\" for the animation trigger \\\"\" + name + \"\\\" is not supported!\");\n        }\n        var /** @type {?} */ listeners = getOrSetAsInMap(this._elementListeners, element, []);\n        var /** @type {?} */ data = { name: name, phase: phase, callback: callback };\n        listeners.push(data);\n        var /** @type {?} */ triggersWithStates = getOrSetAsInMap(this._engine.statesByElement, element, {});\n        if (!triggersWithStates.hasOwnProperty(name)) {\n            addClass(element, NG_TRIGGER_CLASSNAME);\n            addClass(element, NG_TRIGGER_CLASSNAME + '-' + name);\n            triggersWithStates[name] = null;\n        }\n        return function () {\n            // the event listener is removed AFTER the flush has occurred such\n            // that leave animations callbacks can fire (otherwise if the node\n            // is removed in between then the listeners would be deregistered)\n            _this._engine.afterFlush(function () {\n                var /** @type {?} */ index = listeners.indexOf(data);\n                if (index >= 0) {\n                    listeners.splice(index, 1);\n                }\n                if (!_this._triggers[name]) {\n                    delete triggersWithStates[name];\n                }\n            });\n        };\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.register = function (name, ast) {\n        if (this._triggers[name]) {\n            // throw\n            return false;\n        }\n        else {\n            this._triggers[name] = ast;\n            return true;\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype._getTrigger = function (name) {\n        var /** @type {?} */ trigger = this._triggers[name];\n        if (!trigger) {\n            throw new Error(\"The provided animation trigger \\\"\" + name + \"\\\" has not been registered!\");\n        }\n        return trigger;\n    };\n    /**\n     * @param {?} element\n     * @param {?} triggerName\n     * @param {?} value\n     * @param {?=} defaultToFallback\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.trigger = function (element, triggerName, value, defaultToFallback) {\n        var _this = this;\n        if (defaultToFallback === void 0) { defaultToFallback = true; }\n        var /** @type {?} */ trigger = this._getTrigger(triggerName);\n        var /** @type {?} */ player = new TransitionAnimationPlayer(this.id, triggerName, element);\n        var /** @type {?} */ triggersWithStates = this._engine.statesByElement.get(element);\n        if (!triggersWithStates) {\n            addClass(element, NG_TRIGGER_CLASSNAME);\n            addClass(element, NG_TRIGGER_CLASSNAME + '-' + triggerName);\n            this._engine.statesByElement.set(element, triggersWithStates = {});\n        }\n        var /** @type {?} */ fromState = triggersWithStates[triggerName];\n        var /** @type {?} */ toState = new StateValue(value);\n        var /** @type {?} */ isObj = value && value.hasOwnProperty('value');\n        if (!isObj && fromState) {\n            toState.absorbOptions(fromState.options);\n        }\n        triggersWithStates[triggerName] = toState;\n        if (!fromState) {\n            fromState = DEFAULT_STATE_VALUE;\n        }\n        else if (fromState === DELETED_STATE_VALUE) {\n            return player;\n        }\n        var /** @type {?} */ playersOnElement = getOrSetAsInMap(this._engine.playersByElement, element, []);\n        playersOnElement.forEach(function (player) {\n            // only remove the player if it is queued on the EXACT same trigger/namespace\n            // we only also deal with queued players here because if the animation has\n            // started then we want to keep the player alive until the flush happens\n            // (which is where the previousPlayers are passed into the new palyer)\n            if (player.namespaceId == _this.id && player.triggerName == triggerName && player.queued) {\n                player.destroy();\n            }\n        });\n        var /** @type {?} */ transition = trigger.matchTransition(fromState.value, toState.value);\n        var /** @type {?} */ isFallbackTransition = false;\n        if (!transition) {\n            if (!defaultToFallback)\n                return;\n            transition = trigger.fallbackTransition;\n            isFallbackTransition = true;\n        }\n        this._engine.totalQueuedPlayers++;\n        this._queue.push({ element: element, triggerName: triggerName, transition: transition, fromState: fromState, toState: toState, player: player, isFallbackTransition: isFallbackTransition });\n        if (!isFallbackTransition) {\n            addClass(element, NG_ANIMATING_CLASSNAME);\n        }\n        player.onDone(function () {\n            removeClass(element, NG_ANIMATING_CLASSNAME);\n            var /** @type {?} */ index = _this.players.indexOf(player);\n            if (index >= 0) {\n                _this.players.splice(index, 1);\n            }\n            var /** @type {?} */ players = _this._engine.playersByElement.get(element);\n            if (players) {\n                var /** @type {?} */ index_1 = players.indexOf(player);\n                if (index_1 >= 0) {\n                    players.splice(index_1, 1);\n                }\n            }\n        });\n        this.players.push(player);\n        playersOnElement.push(player);\n        return player;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.deregister = function (name) {\n        var _this = this;\n        delete this._triggers[name];\n        this._engine.statesByElement.forEach(function (stateMap, element) { delete stateMap[name]; });\n        this._elementListeners.forEach(function (listeners, element) {\n            _this._elementListeners.set(element, listeners.filter(function (entry) { return entry.name != name; }));\n        });\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.clearElementCache = function (element) {\n        this._engine.statesByElement.delete(element);\n        this._elementListeners.delete(element);\n        var /** @type {?} */ elementPlayers = this._engine.playersByElement.get(element);\n        if (elementPlayers) {\n            elementPlayers.forEach(function (player) { return player.destroy(); });\n            this._engine.playersByElement.delete(element);\n        }\n    };\n    /**\n     * @param {?} rootElement\n     * @param {?} context\n     * @param {?=} animate\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype._destroyInnerNodes = function (rootElement, context, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = false; }\n        this._engine.driver.query(rootElement, NG_TRIGGER_SELECTOR, true).forEach(function (elm) {\n            if (animate && containsClass(elm, _this._hostClassName)) {\n                var /** @type {?} */ innerNs = _this._engine.namespacesByHostElement.get(elm);\n                // special case for a host element with animations on the same element\n                if (innerNs) {\n                    innerNs.removeNode(elm, context, true);\n                }\n                _this.removeNode(elm, context, true);\n            }\n            else {\n                _this.clearElementCache(elm);\n            }\n        });\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @param {?=} doNotRecurse\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.removeNode = function (element, context, doNotRecurse) {\n        var _this = this;\n        var /** @type {?} */ engine = this._engine;\n        if (!doNotRecurse && element.childElementCount) {\n            this._destroyInnerNodes(element, context, true);\n        }\n        var /** @type {?} */ triggerStates = engine.statesByElement.get(element);\n        if (triggerStates) {\n            var /** @type {?} */ players_1 = [];\n            Object.keys(triggerStates).forEach(function (triggerName) {\n                // this check is here in the event that an element is removed\n                // twice (both on the host level and the component level)\n                if (_this._triggers[triggerName]) {\n                    var /** @type {?} */ player = _this.trigger(element, triggerName, VOID_VALUE, false);\n                    if (player) {\n                        players_1.push(player);\n                    }\n                }\n            });\n            if (players_1.length) {\n                engine.markElementAsRemoved(this.id, element, true, context);\n                optimizeGroupPlayer(players_1).onDone(function () { return engine.processLeaveNode(element); });\n                return;\n            }\n        }\n        // find the player that is animating and make sure that the\n        // removal is delayed until that player has completed\n        var /** @type {?} */ containsPotentialParentTransition = false;\n        if (engine.totalAnimations) {\n            var /** @type {?} */ currentPlayers = engine.players.length ? engine.playersByQueriedElement.get(element) : [];\n            // when this `if statement` does not continue forward it means that\n            // a previous animation query has selected the current element and\n            // is animating it. In this situation want to continue fowards and\n            // allow the element to be queued up for animation later.\n            if (currentPlayers && currentPlayers.length) {\n                containsPotentialParentTransition = true;\n            }\n            else {\n                var /** @type {?} */ parent = element;\n                while (parent = parent.parentNode) {\n                    var /** @type {?} */ triggers = engine.statesByElement.get(parent);\n                    if (triggers) {\n                        containsPotentialParentTransition = true;\n                        break;\n                    }\n                }\n            }\n        }\n        // at this stage we know that the element will either get removed\n        // during flush or will be picked up by a parent query. Either way\n        // we need to fire the listeners for this element when it DOES get\n        // removed (once the query parent animation is done or after flush)\n        var /** @type {?} */ listeners = this._elementListeners.get(element);\n        if (listeners) {\n            var /** @type {?} */ visitedTriggers_1 = new Set();\n            listeners.forEach(function (listener) {\n                var /** @type {?} */ triggerName = listener.name;\n                if (visitedTriggers_1.has(triggerName))\n                    return;\n                visitedTriggers_1.add(triggerName);\n                var /** @type {?} */ trigger = _this._triggers[triggerName];\n                var /** @type {?} */ transition = trigger.fallbackTransition;\n                var /** @type {?} */ elementStates = ((engine.statesByElement.get(element)));\n                var /** @type {?} */ fromState = elementStates[triggerName] || DEFAULT_STATE_VALUE;\n                var /** @type {?} */ toState = new StateValue(VOID_VALUE);\n                var /** @type {?} */ player = new TransitionAnimationPlayer(_this.id, triggerName, element);\n                _this._engine.totalQueuedPlayers++;\n                _this._queue.push({\n                    element: element,\n                    triggerName: triggerName,\n                    transition: transition,\n                    fromState: fromState,\n                    toState: toState,\n                    player: player,\n                    isFallbackTransition: true\n                });\n            });\n        }\n        // whether or not a parent has an animation we need to delay the deferral of the leave\n        // operation until we have more information (which we do after flush() has been called)\n        if (containsPotentialParentTransition) {\n            engine.markElementAsRemoved(this.id, element, false, context);\n        }\n        else {\n            // we do this after the flush has occurred such\n            // that the callbacks can be fired\n            engine.afterFlush(function () { return _this.clearElementCache(element); });\n            engine.destroyInnerAnimations(element);\n            engine._onRemovalComplete(element, context);\n        }\n    };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.insertNode = function (element, parent) { addClass(element, this._hostClassName); };\n    /**\n     * @param {?} microtaskId\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.drainQueuedTransitions = function (microtaskId) {\n        var _this = this;\n        var /** @type {?} */ instructions = [];\n        this._queue.forEach(function (entry) {\n            var /** @type {?} */ player = entry.player;\n            if (player.destroyed)\n                return;\n            var /** @type {?} */ element = entry.element;\n            var /** @type {?} */ listeners = _this._elementListeners.get(element);\n            if (listeners) {\n                listeners.forEach(function (listener) {\n                    if (listener.name == entry.triggerName) {\n                        var /** @type {?} */ baseEvent = makeAnimationEvent(element, entry.triggerName, entry.fromState.value, entry.toState.value);\n                        ((baseEvent))['_data'] = microtaskId;\n                        listenOnPlayer(entry.player, listener.phase, baseEvent, listener.callback);\n                    }\n                });\n            }\n            if (player.markedForDestroy) {\n                _this._engine.afterFlush(function () {\n                    // now we can destroy the element properly since the event listeners have\n                    // been bound to the player\n                    player.destroy();\n                });\n            }\n            else {\n                instructions.push(entry);\n            }\n        });\n        this._queue = [];\n        return instructions.sort(function (a, b) {\n            // if depCount == 0 them move to front\n            // otherwise if a contains b then move back\n            var /** @type {?} */ d0 = a.transition.ast.depCount;\n            var /** @type {?} */ d1 = b.transition.ast.depCount;\n            if (d0 == 0 || d1 == 0) {\n                return d0 - d1;\n            }\n            return _this._engine.driver.containsElement(a.element, b.element) ? 1 : -1;\n        });\n    };\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.destroy = function (context) {\n        this.players.forEach(function (p) { return p.destroy(); });\n        this._destroyInnerNodes(this.hostElement, context);\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.elementContainsData = function (element) {\n        var /** @type {?} */ containsData = false;\n        if (this._elementListeners.has(element))\n            containsData = true;\n        containsData =\n            (this._queue.find(function (entry) { return entry.element === element; }) ? true : false) || containsData;\n        return containsData;\n    };\n    return AnimationTransitionNamespace;\n}());\nvar TransitionAnimationEngine = (function () {\n    /**\n     * @param {?} driver\n     * @param {?} _normalizer\n     */\n    function TransitionAnimationEngine(driver, _normalizer) {\n        this.driver = driver;\n        this._normalizer = _normalizer;\n        this.players = [];\n        this.newHostElements = new Map();\n        this.playersByElement = new Map();\n        this.playersByQueriedElement = new Map();\n        this.statesByElement = new Map();\n        this.totalAnimations = 0;\n        this.totalQueuedPlayers = 0;\n        this._namespaceLookup = {};\n        this._namespaceList = [];\n        this._flushFns = [];\n        this._whenQuietFns = [];\n        this.namespacesByHostElement = new Map();\n        this.collectedEnterElements = [];\n        this.collectedLeaveElements = [];\n        this.onRemovalComplete = function (element, context) { };\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._onRemovalComplete = function (element, context) { this.onRemovalComplete(element, context); };\n    Object.defineProperty(TransitionAnimationEngine.prototype, \"queuedPlayers\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ players = [];\n            this._namespaceList.forEach(function (ns) {\n                ns.players.forEach(function (player) {\n                    if (player.queued) {\n                        players.push(player);\n                    }\n                });\n            });\n            return players;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.createNamespace = function (namespaceId, hostElement) {\n        var /** @type {?} */ ns = new AnimationTransitionNamespace(namespaceId, hostElement, this);\n        if (hostElement.parentNode) {\n            this._balanceNamespaceList(ns, hostElement);\n        }\n        else {\n            // defer this later until flush during when the host element has\n            // been inserted so that we know exactly where to place it in\n            // the namespace list\n            this.newHostElements.set(hostElement, ns);\n            // given that this host element is apart of the animation code, it\n            // may or may not be inserted by a parent node that is an of an\n            // animation renderer type. If this happens then we can still have\n            // access to this item when we query for :enter nodes. If the parent\n            // is a renderer then the set data-structure will normalize the entry\n            this.collectEnterElement(hostElement);\n        }\n        return this._namespaceLookup[namespaceId] = ns;\n    };\n    /**\n     * @param {?} ns\n     * @param {?} hostElement\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._balanceNamespaceList = function (ns, hostElement) {\n        var /** @type {?} */ limit = this._namespaceList.length - 1;\n        if (limit >= 0) {\n            var /** @type {?} */ found = false;\n            for (var /** @type {?} */ i = limit; i >= 0; i--) {\n                var /** @type {?} */ nextNamespace = this._namespaceList[i];\n                if (this.driver.containsElement(nextNamespace.hostElement, hostElement)) {\n                    this._namespaceList.splice(i + 1, 0, ns);\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                this._namespaceList.splice(0, 0, ns);\n            }\n        }\n        else {\n            this._namespaceList.push(ns);\n        }\n        this.namespacesByHostElement.set(hostElement, ns);\n        return ns;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.register = function (namespaceId, hostElement) {\n        var /** @type {?} */ ns = this._namespaceLookup[namespaceId];\n        if (!ns) {\n            ns = this.createNamespace(namespaceId, hostElement);\n        }\n        return ns;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} name\n     * @param {?} trigger\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.registerTrigger = function (namespaceId, name, trigger) {\n        var /** @type {?} */ ns = this._namespaceLookup[namespaceId];\n        if (ns && ns.register(name, trigger)) {\n            this.totalAnimations++;\n        }\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} context\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.destroy = function (namespaceId, context) {\n        var _this = this;\n        if (!namespaceId)\n            return;\n        var /** @type {?} */ ns = this._fetchNamespace(namespaceId);\n        this.afterFlush(function () {\n            _this.namespacesByHostElement.delete(ns.hostElement);\n            delete _this._namespaceLookup[namespaceId];\n            var /** @type {?} */ index = _this._namespaceList.indexOf(ns);\n            if (index >= 0) {\n                _this._namespaceList.splice(index, 1);\n            }\n        });\n        this.afterFlushAnimationsDone(function () { return ns.destroy(context); });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._fetchNamespace = function (id) { return this._namespaceLookup[id]; };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.trigger = function (namespaceId, element, name, value) {\n        if (isElementNode(element)) {\n            this._fetchNamespace(namespaceId).trigger(element, name, value);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} parent\n     * @param {?} insertBefore\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.insertNode = function (namespaceId, element, parent, insertBefore) {\n        if (!isElementNode(element))\n            return;\n        // special case for when an element is removed and reinserted (move operation)\n        // when this occurs we do not want to use the element for deletion later\n        var /** @type {?} */ details = (element[REMOVAL_FLAG]);\n        if (details && details.setForRemoval) {\n            details.setForRemoval = false;\n        }\n        // in the event that the namespaceId is blank then the caller\n        // code does not contain any animation code in it, but it is\n        // just being called so that the node is marked as being inserted\n        if (namespaceId) {\n            this._fetchNamespace(namespaceId).insertNode(element, parent);\n        }\n        // only *directives and host elements are inserted before\n        if (insertBefore) {\n            this.collectEnterElement(element);\n        }\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.collectEnterElement = function (element) { this.collectedEnterElements.push(element); };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} context\n     * @param {?=} doNotRecurse\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.removeNode = function (namespaceId, element, context, doNotRecurse) {\n        if (!isElementNode(element)) {\n            this._onRemovalComplete(element, context);\n            return;\n        }\n        var /** @type {?} */ ns = namespaceId ? this._fetchNamespace(namespaceId) : null;\n        if (ns) {\n            ns.removeNode(element, context, doNotRecurse);\n        }\n        else {\n            this.markElementAsRemoved(namespaceId, element, false, context);\n        }\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?=} hasAnimation\n     * @param {?=} context\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.markElementAsRemoved = function (namespaceId, element, hasAnimation, context) {\n        this.collectedLeaveElements.push(element);\n        element[REMOVAL_FLAG] = {\n            namespaceId: namespaceId,\n            setForRemoval: context, hasAnimation: hasAnimation,\n            removedBeforeQueried: false\n        };\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} name\n     * @param {?} phase\n     * @param {?} callback\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.listen = function (namespaceId, element, name, phase, callback) {\n        if (isElementNode(element)) {\n            return this._fetchNamespace(namespaceId).listen(element, name, phase, callback);\n        }\n        return function () { };\n    };\n    /**\n     * @param {?} entry\n     * @param {?} subTimelines\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._buildInstruction = function (entry, subTimelines) {\n        return entry.transition.build(this.driver, entry.element, entry.fromState.value, entry.toState.value, entry.toState.options, subTimelines);\n    };\n    /**\n     * @param {?} containerElement\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.destroyInnerAnimations = function (containerElement) {\n        var _this = this;\n        this.driver.query(containerElement, NG_TRIGGER_SELECTOR, true).forEach(function (element) {\n            var /** @type {?} */ players = _this.playersByElement.get(element);\n            if (players) {\n                players.forEach(function (player) {\n                    // special case for when an element is set for destruction, but hasn't started.\n                    // in this situation we want to delay the destruction until the flush occurs\n                    // so that any event listeners attached to the player are triggered.\n                    if (player.queued) {\n                        player.markedForDestroy = true;\n                    }\n                    else {\n                        player.destroy();\n                    }\n                });\n            }\n            var /** @type {?} */ stateMap = _this.statesByElement.get(element);\n            if (stateMap) {\n                Object.keys(stateMap).forEach(function (triggerName) { return stateMap[triggerName] = DELETED_STATE_VALUE; });\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.whenRenderingDone = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            if (_this.players.length) {\n                return optimizeGroupPlayer(_this.players).onDone(function () { return resolve(); });\n            }\n            else {\n                resolve();\n            }\n        });\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.processLeaveNode = function (element) {\n        var /** @type {?} */ details = (element[REMOVAL_FLAG]);\n        if (details && details.setForRemoval) {\n            // this will prevent it from removing it twice\n            element[REMOVAL_FLAG] = NULL_REMOVAL_STATE;\n            if (details.namespaceId) {\n                this.destroyInnerAnimations(element);\n                var /** @type {?} */ ns = this._fetchNamespace(details.namespaceId);\n                if (ns) {\n                    ns.clearElementCache(element);\n                }\n            }\n            this._onRemovalComplete(element, details.setForRemoval);\n        }\n    };\n    /**\n     * @param {?=} microtaskId\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.flush = function (microtaskId) {\n        var _this = this;\n        if (microtaskId === void 0) { microtaskId = -1; }\n        var /** @type {?} */ players = [];\n        if (this.newHostElements.size) {\n            this.newHostElements.forEach(function (ns, element) { return _this._balanceNamespaceList(ns, element); });\n            this.newHostElements.clear();\n        }\n        if (this._namespaceList.length &&\n            (this.totalQueuedPlayers || this.collectedLeaveElements.length)) {\n            players = this._flushAnimations(microtaskId);\n        }\n        else {\n            for (var /** @type {?} */ i = 0; i < this.collectedLeaveElements.length; i++) {\n                var /** @type {?} */ element = this.collectedLeaveElements[i];\n                this.processLeaveNode(element);\n            }\n        }\n        this.totalQueuedPlayers = 0;\n        this.collectedEnterElements.length = 0;\n        this.collectedLeaveElements.length = 0;\n        this._flushFns.forEach(function (fn) { return fn(); });\n        this._flushFns = [];\n        if (this._whenQuietFns.length) {\n            // we move these over to a variable so that\n            // if any new callbacks are registered in another\n            // flush they do not populate the existing set\n            var /** @type {?} */ quietFns_1 = this._whenQuietFns;\n            this._whenQuietFns = [];\n            if (players.length) {\n                optimizeGroupPlayer(players).onDone(function () { quietFns_1.forEach(function (fn) { return fn(); }); });\n            }\n            else {\n                quietFns_1.forEach(function (fn) { return fn(); });\n            }\n        }\n    };\n    /**\n     * @param {?} microtaskId\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._flushAnimations = function (microtaskId) {\n        var _this = this;\n        var /** @type {?} */ subTimelines = new ElementInstructionMap();\n        var /** @type {?} */ skippedPlayers = [];\n        var /** @type {?} */ skippedPlayersMap = new Map();\n        var /** @type {?} */ queuedInstructions = [];\n        var /** @type {?} */ queriedElements = new Map();\n        var /** @type {?} */ allPreStyleElements = new Map();\n        var /** @type {?} */ allPostStyleElements = new Map();\n        // this must occur before the instructions are built below such that\n        // the :enter queries match the elements (since the timeline queries\n        // are fired during instruction building).\n        var /** @type {?} */ bodyNode = getBodyNode();\n        var /** @type {?} */ allEnterNodes = this.collectedEnterElements.length ?\n            collectEnterElements(this.driver, this.collectedEnterElements) :\n            [];\n        var /** @type {?} */ allLeaveNodes = [];\n        var /** @type {?} */ leaveNodesWithoutAnimations = [];\n        for (var /** @type {?} */ i = 0; i < this.collectedLeaveElements.length; i++) {\n            var /** @type {?} */ element = this.collectedLeaveElements[i];\n            var /** @type {?} */ details = (element[REMOVAL_FLAG]);\n            if (details && details.setForRemoval) {\n                addClass(element, LEAVE_CLASSNAME);\n                allLeaveNodes.push(element);\n                if (!details.hasAnimation) {\n                    leaveNodesWithoutAnimations.push(element);\n                }\n            }\n        }\n        for (var /** @type {?} */ i = this._namespaceList.length - 1; i >= 0; i--) {\n            var /** @type {?} */ ns = this._namespaceList[i];\n            ns.drainQueuedTransitions(microtaskId).forEach(function (entry) {\n                var /** @type {?} */ player = entry.player;\n                var /** @type {?} */ element = entry.element;\n                if (!bodyNode || !_this.driver.containsElement(bodyNode, element)) {\n                    player.destroy();\n                    return;\n                }\n                var /** @type {?} */ instruction = _this._buildInstruction(entry, subTimelines);\n                if (!instruction)\n                    return;\n                // if a unmatched transition is queued to go then it SHOULD NOT render\n                // an animation and cancel the previously running animations.\n                if (entry.isFallbackTransition) {\n                    player.onStart(function () { return eraseStyles(element, instruction.fromStyles); });\n                    player.onDestroy(function () { return setStyles(element, instruction.toStyles); });\n                    skippedPlayers.push(player);\n                    return;\n                }\n                // this means that if a parent animation uses this animation as a sub trigger\n                // then it will instruct the timeline builder to not add a player delay, but\n                // instead stretch the first keyframe gap up until the animation starts. The\n                // reason this is important is to prevent extra initialization styles from being\n                // required by the user in the animation.\n                instruction.timelines.forEach(function (tl) { return tl.stretchStartingKeyframe = true; });\n                subTimelines.append(element, instruction.timelines);\n                var /** @type {?} */ tuple = { instruction: instruction, player: player, element: element };\n                queuedInstructions.push(tuple);\n                instruction.queriedElements.forEach(function (element) { return getOrSetAsInMap(queriedElements, element, []).push(player); });\n                instruction.preStyleProps.forEach(function (stringMap, element) {\n                    var /** @type {?} */ props = Object.keys(stringMap);\n                    if (props.length) {\n                        var /** @type {?} */ setVal_1 = ((allPreStyleElements.get(element)));\n                        if (!setVal_1) {\n                            allPreStyleElements.set(element, setVal_1 = new Set());\n                        }\n                        props.forEach(function (prop) { return setVal_1.add(prop); });\n                    }\n                });\n                instruction.postStyleProps.forEach(function (stringMap, element) {\n                    var /** @type {?} */ props = Object.keys(stringMap);\n                    var /** @type {?} */ setVal = ((allPostStyleElements.get(element)));\n                    if (!setVal) {\n                        allPostStyleElements.set(element, setVal = new Set());\n                    }\n                    props.forEach(function (prop) { return setVal.add(prop); });\n                });\n            });\n        }\n        // these can only be detected here since we have a map of all the elements\n        // that have animations attached to them...\n        var /** @type {?} */ enterNodesWithoutAnimations = [];\n        for (var /** @type {?} */ i = 0; i < allEnterNodes.length; i++) {\n            var /** @type {?} */ element = allEnterNodes[i];\n            if (!subTimelines.has(element)) {\n                enterNodesWithoutAnimations.push(element);\n            }\n        }\n        var /** @type {?} */ allPreviousPlayersMap = new Map();\n        var /** @type {?} */ sortedParentElements = [];\n        queuedInstructions.forEach(function (entry) {\n            var /** @type {?} */ element = entry.element;\n            if (subTimelines.has(element)) {\n                sortedParentElements.unshift(element);\n                _this._beforeAnimationBuild(entry.player.namespaceId, entry.instruction, allPreviousPlayersMap);\n            }\n        });\n        skippedPlayers.forEach(function (player) {\n            var /** @type {?} */ element = player.element;\n            var /** @type {?} */ previousPlayers = _this._getPreviousPlayers(element, false, player.namespaceId, player.triggerName, null);\n            previousPlayers.forEach(function (prevPlayer) { getOrSetAsInMap(allPreviousPlayersMap, element, []).push(prevPlayer); });\n        });\n        allPreviousPlayersMap.forEach(function (players) { return players.forEach(function (player) { return player.destroy(); }); });\n        // PRE STAGE: fill the ! styles\n        var /** @type {?} */ preStylesMap = allPreStyleElements.size ?\n            cloakAndComputeStyles(this.driver, enterNodesWithoutAnimations, allPreStyleElements, __WEBPACK_IMPORTED_MODULE_1__angular_animations__[\"f\" /* ɵPRE_STYLE */]) :\n            new Map();\n        // POST STAGE: fill the * styles\n        var /** @type {?} */ postStylesMap = cloakAndComputeStyles(this.driver, leaveNodesWithoutAnimations, allPostStyleElements, __WEBPACK_IMPORTED_MODULE_1__angular_animations__[\"g\" /* AUTO_STYLE */]);\n        var /** @type {?} */ rootPlayers = [];\n        var /** @type {?} */ subPlayers = [];\n        queuedInstructions.forEach(function (entry) {\n            var element = entry.element, player = entry.player, instruction = entry.instruction;\n            // this means that it was never consumed by a parent animation which\n            // means that it is independent and therefore should be set for animation\n            if (subTimelines.has(element)) {\n                var /** @type {?} */ innerPlayer = _this._buildAnimation(player.namespaceId, instruction, allPreviousPlayersMap, skippedPlayersMap, preStylesMap, postStylesMap);\n                player.setRealPlayer(innerPlayer);\n                var /** @type {?} */ parentHasPriority = null;\n                for (var /** @type {?} */ i = 0; i < sortedParentElements.length; i++) {\n                    var /** @type {?} */ parent = sortedParentElements[i];\n                    if (parent === element)\n                        break;\n                    if (_this.driver.containsElement(parent, element)) {\n                        parentHasPriority = parent;\n                        break;\n                    }\n                }\n                if (parentHasPriority) {\n                    var /** @type {?} */ parentPlayers = _this.playersByElement.get(parentHasPriority);\n                    if (parentPlayers && parentPlayers.length) {\n                        player.parentPlayer = optimizeGroupPlayer(parentPlayers);\n                    }\n                    skippedPlayers.push(player);\n                }\n                else {\n                    rootPlayers.push(player);\n                }\n            }\n            else {\n                eraseStyles(element, instruction.fromStyles);\n                player.onDestroy(function () { return setStyles(element, instruction.toStyles); });\n                subPlayers.push(player);\n            }\n        });\n        subPlayers.forEach(function (player) {\n            var /** @type {?} */ playersForElement = skippedPlayersMap.get(player.element);\n            if (playersForElement && playersForElement.length) {\n                var /** @type {?} */ innerPlayer = optimizeGroupPlayer(playersForElement);\n                player.setRealPlayer(innerPlayer);\n            }\n        });\n        // the reason why we don't actually play the animation is\n        // because all that a skipped player is designed to do is to\n        // fire the start/done transition callback events\n        skippedPlayers.forEach(function (player) {\n            if (player.parentPlayer) {\n                player.parentPlayer.onDestroy(function () { return player.destroy(); });\n            }\n            else {\n                player.destroy();\n            }\n        });\n        // run through all of the queued removals and see if they\n        // were picked up by a query. If not then perform the removal\n        // operation right away unless a parent animation is ongoing.\n        for (var /** @type {?} */ i = 0; i < allLeaveNodes.length; i++) {\n            var /** @type {?} */ element = allLeaveNodes[i];\n            var /** @type {?} */ players = queriedElements.get(element);\n            if (players) {\n                removeNodesAfterAnimationDone(this, element, players);\n            }\n            else {\n                var /** @type {?} */ details = (element[REMOVAL_FLAG]);\n                if (details && !details.hasAnimation) {\n                    this.processLeaveNode(element);\n                }\n            }\n        }\n        rootPlayers.forEach(function (player) {\n            _this.players.push(player);\n            player.onDone(function () {\n                player.destroy();\n                var /** @type {?} */ index = _this.players.indexOf(player);\n                _this.players.splice(index, 1);\n            });\n            player.play();\n        });\n        allEnterNodes.forEach(function (element) { return removeClass(element, ENTER_CLASSNAME); });\n        return rootPlayers;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.elementContainsData = function (namespaceId, element) {\n        var /** @type {?} */ containsData = false;\n        var /** @type {?} */ details = (element[REMOVAL_FLAG]);\n        if (details && details.setForRemoval)\n            containsData = true;\n        if (this.playersByElement.has(element))\n            containsData = true;\n        if (this.playersByQueriedElement.has(element))\n            containsData = true;\n        if (this.statesByElement.has(element))\n            containsData = true;\n        return this._fetchNamespace(namespaceId).elementContainsData(element) || containsData;\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.afterFlush = function (callback) { this._flushFns.push(callback); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.afterFlushAnimationsDone = function (callback) { this._whenQuietFns.push(callback); };\n    /**\n     * @param {?} element\n     * @param {?} isQueriedElement\n     * @param {?=} namespaceId\n     * @param {?=} triggerName\n     * @param {?=} toStateValue\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._getPreviousPlayers = function (element, isQueriedElement, namespaceId, triggerName, toStateValue) {\n        var /** @type {?} */ players = [];\n        if (isQueriedElement) {\n            var /** @type {?} */ queriedElementPlayers = this.playersByQueriedElement.get(element);\n            if (queriedElementPlayers) {\n                players = queriedElementPlayers;\n            }\n        }\n        else {\n            var /** @type {?} */ elementPlayers = this.playersByElement.get(element);\n            if (elementPlayers) {\n                var /** @type {?} */ isRemovalAnimation_1 = !toStateValue || toStateValue == VOID_VALUE;\n                elementPlayers.forEach(function (player) {\n                    if (player.queued)\n                        return;\n                    if (!isRemovalAnimation_1 && player.triggerName != triggerName)\n                        return;\n                    players.push(player);\n                });\n            }\n        }\n        if (namespaceId || triggerName) {\n            players = players.filter(function (player) {\n                if (namespaceId && namespaceId != player.namespaceId)\n                    return false;\n                if (triggerName && triggerName != player.triggerName)\n                    return false;\n                return true;\n            });\n        }\n        return players;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} instruction\n     * @param {?} allPreviousPlayersMap\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._beforeAnimationBuild = function (namespaceId, instruction, allPreviousPlayersMap) {\n        var _this = this;\n        // it's important to do this step before destroying the players\n        // so that the onDone callback below won't fire before this\n        eraseStyles(instruction.element, instruction.fromStyles);\n        var /** @type {?} */ triggerName = instruction.triggerName;\n        var /** @type {?} */ rootElement = instruction.element;\n        // when a removal animation occurs, ALL previous players are collected\n        // and destroyed (even if they are outside of the current namespace)\n        var /** @type {?} */ targetNameSpaceId = instruction.isRemovalTransition ? undefined : namespaceId;\n        var /** @type {?} */ targetTriggerName = instruction.isRemovalTransition ? undefined : triggerName;\n        instruction.timelines.map(function (timelineInstruction) {\n            var /** @type {?} */ element = timelineInstruction.element;\n            var /** @type {?} */ isQueriedElement = element !== rootElement;\n            var /** @type {?} */ players = getOrSetAsInMap(allPreviousPlayersMap, element, []);\n            var /** @type {?} */ previousPlayers = _this._getPreviousPlayers(element, isQueriedElement, targetNameSpaceId, targetTriggerName, instruction.toState);\n            previousPlayers.forEach(function (player) {\n                var /** @type {?} */ realPlayer = (player.getRealPlayer());\n                if (realPlayer.beforeDestroy) {\n                    realPlayer.beforeDestroy();\n                }\n                players.push(player);\n            });\n        });\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} instruction\n     * @param {?} allPreviousPlayersMap\n     * @param {?} skippedPlayersMap\n     * @param {?} preStylesMap\n     * @param {?} postStylesMap\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._buildAnimation = function (namespaceId, instruction, allPreviousPlayersMap, skippedPlayersMap, preStylesMap, postStylesMap) {\n        var _this = this;\n        var /** @type {?} */ triggerName = instruction.triggerName;\n        var /** @type {?} */ rootElement = instruction.element;\n        // we first run this so that the previous animation player\n        // data can be passed into the successive animation players\n        var /** @type {?} */ allQueriedPlayers = [];\n        var /** @type {?} */ allConsumedElements = new Set();\n        var /** @type {?} */ allSubElements = new Set();\n        var /** @type {?} */ allNewPlayers = instruction.timelines.map(function (timelineInstruction) {\n            var /** @type {?} */ element = timelineInstruction.element;\n            // FIXME (matsko): make sure to-be-removed animations are removed properly\n            var /** @type {?} */ details = element[REMOVAL_FLAG];\n            if (details && details.removedBeforeQueried)\n                return new __WEBPACK_IMPORTED_MODULE_1__angular_animations__[\"d\" /* NoopAnimationPlayer */]();\n            var /** @type {?} */ isQueriedElement = element !== rootElement;\n            var /** @type {?} */ previousPlayers = EMPTY_PLAYER_ARRAY;\n            if (!allConsumedElements.has(element)) {\n                allConsumedElements.add(element);\n                var /** @type {?} */ _previousPlayers = allPreviousPlayersMap.get(element);\n                if (_previousPlayers) {\n                    previousPlayers = _previousPlayers.map(function (p) { return p.getRealPlayer(); });\n                }\n            }\n            var /** @type {?} */ preStyles = preStylesMap.get(element);\n            var /** @type {?} */ postStyles = postStylesMap.get(element);\n            var /** @type {?} */ keyframes = normalizeKeyframes(_this.driver, _this._normalizer, element, timelineInstruction.keyframes, preStyles, postStyles);\n            var /** @type {?} */ player = _this._buildPlayer(timelineInstruction, keyframes, previousPlayers);\n            // this means that this particular player belongs to a sub trigger. It is\n            // important that we match this player up with the corresponding (@trigger.listener)\n            if (timelineInstruction.subTimeline && skippedPlayersMap) {\n                allSubElements.add(element);\n            }\n            if (isQueriedElement) {\n                var /** @type {?} */ wrappedPlayer = new TransitionAnimationPlayer(namespaceId, triggerName, element);\n                wrappedPlayer.setRealPlayer(player);\n                allQueriedPlayers.push(wrappedPlayer);\n            }\n            return player;\n        });\n        allQueriedPlayers.forEach(function (player) {\n            getOrSetAsInMap(_this.playersByQueriedElement, player.element, []).push(player);\n            player.onDone(function () { deleteOrUnsetInMap(_this.playersByQueriedElement, player.element, player); });\n        });\n        allConsumedElements.forEach(function (element) { return addClass(element, NG_ANIMATING_CLASSNAME); });\n        var /** @type {?} */ player = optimizeGroupPlayer(allNewPlayers);\n        player.onDestroy(function () {\n            allConsumedElements.forEach(function (element) { return removeClass(element, NG_ANIMATING_CLASSNAME); });\n            setStyles(rootElement, instruction.toStyles);\n        });\n        // this basically makes all of the callbacks for sub element animations\n        // be dependent on the upper players for when they finish\n        allSubElements.forEach(function (element) { getOrSetAsInMap(skippedPlayersMap, element, []).push(player); });\n        return player;\n    };\n    /**\n     * @param {?} instruction\n     * @param {?} keyframes\n     * @param {?} previousPlayers\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._buildPlayer = function (instruction, keyframes, previousPlayers) {\n        if (keyframes.length > 0) {\n            return this.driver.animate(instruction.element, keyframes, instruction.duration, instruction.delay, instruction.easing, previousPlayers);\n        }\n        // special case for when an empty transition|definition is provided\n        // ... there is no point in rendering an empty animation\n        return new __WEBPACK_IMPORTED_MODULE_1__angular_animations__[\"d\" /* NoopAnimationPlayer */]();\n    };\n    return TransitionAnimationEngine;\n}());\nvar TransitionAnimationPlayer = (function () {\n    /**\n     * @param {?} namespaceId\n     * @param {?} triggerName\n     * @param {?} element\n     */\n    function TransitionAnimationPlayer(namespaceId, triggerName, element) {\n        this.namespaceId = namespaceId;\n        this.triggerName = triggerName;\n        this.element = element;\n        this._player = new __WEBPACK_IMPORTED_MODULE_1__angular_animations__[\"d\" /* NoopAnimationPlayer */]();\n        this._containsRealPlayer = false;\n        this._queuedCallbacks = {};\n        this._destroyed = false;\n        this.markedForDestroy = false;\n    }\n    Object.defineProperty(TransitionAnimationPlayer.prototype, \"queued\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._containsRealPlayer == false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TransitionAnimationPlayer.prototype, \"destroyed\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} player\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.setRealPlayer = function (player) {\n        var _this = this;\n        if (this._containsRealPlayer)\n            return;\n        this._player = player;\n        Object.keys(this._queuedCallbacks).forEach(function (phase) {\n            _this._queuedCallbacks[phase].forEach(function (callback) { return listenOnPlayer(player, phase, undefined, callback); });\n        });\n        this._queuedCallbacks = {};\n        this._containsRealPlayer = true;\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.getRealPlayer = function () { return this._player; };\n    /**\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype._queueEvent = function (name, callback) {\n        getOrSetAsInMap(this._queuedCallbacks, name, []).push(callback);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.onDone = function (fn) {\n        if (this.queued) {\n            this._queueEvent('done', fn);\n        }\n        this._player.onDone(fn);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.onStart = function (fn) {\n        if (this.queued) {\n            this._queueEvent('start', fn);\n        }\n        this._player.onStart(fn);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.onDestroy = function (fn) {\n        if (this.queued) {\n            this._queueEvent('destroy', fn);\n        }\n        this._player.onDestroy(fn);\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.init = function () { this._player.init(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.hasStarted = function () { return this.queued ? false : this._player.hasStarted(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.play = function () { !this.queued && this._player.play(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.pause = function () { !this.queued && this._player.pause(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.restart = function () { !this.queued && this._player.restart(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.finish = function () { this._player.finish(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.destroy = function () {\n        this._destroyed = true;\n        this._player.destroy();\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.reset = function () { !this.queued && this._player.reset(); };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.setPosition = function (p) {\n        if (!this.queued) {\n            this._player.setPosition(p);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.getPosition = function () { return this.queued ? 0 : this._player.getPosition(); };\n    Object.defineProperty(TransitionAnimationPlayer.prototype, \"totalTime\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._player.totalTime; },\n        enumerable: true,\n        configurable: true\n    });\n    return TransitionAnimationPlayer;\n}());\n/**\n * @param {?} map\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nfunction deleteOrUnsetInMap(map, key, value) {\n    var /** @type {?} */ currentValues;\n    if (map instanceof Map) {\n        currentValues = map.get(key);\n        if (currentValues) {\n            if (currentValues.length) {\n                var /** @type {?} */ index = currentValues.indexOf(value);\n                currentValues.splice(index, 1);\n            }\n            if (currentValues.length == 0) {\n                map.delete(key);\n            }\n        }\n    }\n    else {\n        currentValues = map[key];\n        if (currentValues) {\n            if (currentValues.length) {\n                var /** @type {?} */ index = currentValues.indexOf(value);\n                currentValues.splice(index, 1);\n            }\n            if (currentValues.length == 0) {\n                delete map[key];\n            }\n        }\n    }\n    return currentValues;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeTriggerValue(value) {\n    switch (typeof value) {\n        case 'boolean':\n            return value ? '1' : '0';\n        default:\n            return value != null ? value.toString() : null;\n    }\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isElementNode(node) {\n    return node && node['nodeType'] === 1;\n}\n/**\n * @param {?} eventName\n * @return {?}\n */\nfunction isTriggerEventValid(eventName) {\n    return eventName == 'start' || eventName == 'done';\n}\n/**\n * @param {?} element\n * @param {?=} value\n * @return {?}\n */\nfunction cloakElement(element, value) {\n    var /** @type {?} */ oldValue = element.style.display;\n    element.style.display = value != null ? value : 'none';\n    return oldValue;\n}\n/**\n * @param {?} driver\n * @param {?} rootElement\n * @param {?} selector\n * @return {?}\n */\nfunction filterNodeClasses(driver, rootElement, selector) {\n    var /** @type {?} */ rootElements = [];\n    if (!rootElement)\n        return rootElements;\n    var /** @type {?} */ cursor = rootElement;\n    var /** @type {?} */ nextCursor = {};\n    var /** @type {?} */ potentialCursorStack = [];\n    do {\n        // 1. query from root\n        nextCursor = cursor ? driver.query(cursor, selector, false)[0] : null;\n        // this is used to avoid the extra matchesElement call when we\n        // know that the element does match based it on being queried\n        var /** @type {?} */ justQueried = !!nextCursor;\n        if (!nextCursor) {\n            var /** @type {?} */ nextPotentialCursor = potentialCursorStack.pop();\n            if (nextPotentialCursor) {\n                // 1a)\n                nextCursor = nextPotentialCursor;\n            }\n            else {\n                cursor = cursor.parentElement;\n                // 1b)\n                if (!cursor)\n                    break;\n                // 1c)\n                nextCursor = cursor = cursor.nextElementSibling;\n                continue;\n            }\n        }\n        // 2. visit the next node\n        while (nextCursor) {\n            var /** @type {?} */ matches = justQueried || driver.matchesElement(nextCursor, selector);\n            justQueried = false;\n            var /** @type {?} */ nextPotentialCursor = nextCursor.nextElementSibling;\n            // 2a)\n            if (!matches) {\n                potentialCursorStack.push(nextPotentialCursor);\n                cursor = nextCursor;\n                break;\n            }\n            // 2b)\n            rootElements.push(nextCursor);\n            nextCursor = nextPotentialCursor;\n            if (nextCursor) {\n                cursor = nextCursor;\n            }\n            else {\n                cursor = cursor.parentElement;\n                if (!cursor)\n                    break;\n                nextCursor = cursor = cursor.nextElementSibling;\n            }\n        }\n    } while (nextCursor && nextCursor !== rootElement);\n    return rootElements;\n}\n/**\n * @param {?} driver\n * @param {?} elements\n * @param {?} elementPropsMap\n * @param {?} defaultStyle\n * @return {?}\n */\nfunction cloakAndComputeStyles(driver, elements, elementPropsMap, defaultStyle) {\n    var /** @type {?} */ cloakVals = elements.map(function (element) { return cloakElement(element); });\n    var /** @type {?} */ valuesMap = new Map();\n    elementPropsMap.forEach(function (props, element) {\n        var /** @type {?} */ styles = {};\n        props.forEach(function (prop) {\n            var /** @type {?} */ value = styles[prop] = driver.computeStyle(element, prop, defaultStyle);\n            // there is no easy way to detect this because a sub element could be removed\n            // by a parent animation element being detached.\n            if (!value || value.length == 0) {\n                element[REMOVAL_FLAG] = NULL_REMOVED_QUERIED_STATE;\n            }\n        });\n        valuesMap.set(element, styles);\n    });\n    elements.forEach(function (element, i) { return cloakElement(element, cloakVals[i]); });\n    return valuesMap;\n}\n/**\n * @param {?} driver\n * @param {?} allEnterNodes\n * @return {?}\n */\nfunction collectEnterElements(driver, allEnterNodes) {\n    allEnterNodes.forEach(function (element) { return addClass(element, POTENTIAL_ENTER_CLASSNAME); });\n    var /** @type {?} */ enterNodes = filterNodeClasses(driver, getBodyNode(), POTENTIAL_ENTER_SELECTOR);\n    enterNodes.forEach(function (element) { return addClass(element, ENTER_CLASSNAME); });\n    allEnterNodes.forEach(function (element) { return removeClass(element, POTENTIAL_ENTER_CLASSNAME); });\n    return enterNodes;\n}\nvar CLASSES_CACHE_KEY = '$$classes';\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nfunction containsClass(element, className) {\n    if (element.classList) {\n        return element.classList.contains(className);\n    }\n    else {\n        var /** @type {?} */ classes = element[CLASSES_CACHE_KEY];\n        return classes && classes[className];\n    }\n}\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nfunction addClass(element, className) {\n    if (element.classList) {\n        element.classList.add(className);\n    }\n    else {\n        var /** @type {?} */ classes = element[CLASSES_CACHE_KEY];\n        if (!classes) {\n            classes = element[CLASSES_CACHE_KEY] = {};\n        }\n        classes[className] = true;\n    }\n}\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nfunction removeClass(element, className) {\n    if (element.classList) {\n        element.classList.remove(className);\n    }\n    else {\n        var /** @type {?} */ classes = element[CLASSES_CACHE_KEY];\n        if (classes) {\n            delete classes[className];\n        }\n    }\n}\n/**\n * @return {?}\n */\nfunction getBodyNode() {\n    if (typeof document != 'undefined') {\n        return document.body;\n    }\n    return null;\n}\n/**\n * @param {?} engine\n * @param {?} element\n * @param {?} players\n * @return {?}\n */\nfunction removeNodesAfterAnimationDone(engine, element, players) {\n    optimizeGroupPlayer(players).onDone(function () { return engine.processLeaveNode(element); });\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AnimationEngine = (function () {\n    /**\n     * @param {?} driver\n     * @param {?} normalizer\n     */\n    function AnimationEngine(driver, normalizer) {\n        var _this = this;\n        this._triggerCache = {};\n        this.onRemovalComplete = function (element, context) { };\n        this._transitionEngine = new TransitionAnimationEngine(driver, normalizer);\n        this._timelineEngine = new TimelineAnimationEngine(driver, normalizer);\n        this._transitionEngine.onRemovalComplete =\n            function (element, context) { _this.onRemovalComplete(element, context); };\n    }\n    /**\n     * @param {?} componentId\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @param {?} name\n     * @param {?} metadata\n     * @return {?}\n     */\n    AnimationEngine.prototype.registerTrigger = function (componentId, namespaceId, hostElement, name, metadata) {\n        var /** @type {?} */ cacheKey = componentId + '-' + name;\n        var /** @type {?} */ trigger = this._triggerCache[cacheKey];\n        if (!trigger) {\n            var /** @type {?} */ errors = [];\n            var /** @type {?} */ ast = (buildAnimationAst(/** @type {?} */ (metadata), errors));\n            if (errors.length) {\n                throw new Error(\"The animation trigger \\\"\" + name + \"\\\" has failed to build due to the following errors:\\n - \" + errors.join(\"\\n - \"));\n            }\n            trigger = buildTrigger(name, ast);\n            this._triggerCache[cacheKey] = trigger;\n        }\n        this._transitionEngine.registerTrigger(namespaceId, name, trigger);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @return {?}\n     */\n    AnimationEngine.prototype.register = function (namespaceId, hostElement) {\n        this._transitionEngine.register(namespaceId, hostElement);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationEngine.prototype.destroy = function (namespaceId, context) {\n        this._transitionEngine.destroy(namespaceId, context);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} parent\n     * @param {?} insertBefore\n     * @return {?}\n     */\n    AnimationEngine.prototype.onInsert = function (namespaceId, element, parent, insertBefore) {\n        this._transitionEngine.insertNode(namespaceId, element, parent, insertBefore);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationEngine.prototype.onRemove = function (namespaceId, element, context) {\n        this._transitionEngine.removeNode(namespaceId, element, context);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    AnimationEngine.prototype.setProperty = function (namespaceId, element, property, value) {\n        // @@property\n        if (property.charAt(0) == '@') {\n            var _a = parseTimelineCommand(property), id = _a[0], action = _a[1];\n            var /** @type {?} */ args = (value);\n            this._timelineEngine.command(id, element, action, args);\n            return false;\n        }\n        return this._transitionEngine.trigger(namespaceId, element, property, value);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} eventPhase\n     * @param {?} callback\n     * @return {?}\n     */\n    AnimationEngine.prototype.listen = function (namespaceId, element, eventName, eventPhase, callback) {\n        // @@listen\n        if (eventName.charAt(0) == '@') {\n            var _a = parseTimelineCommand(eventName), id = _a[0], action = _a[1];\n            return this._timelineEngine.listen(id, element, action, callback);\n        }\n        return this._transitionEngine.listen(namespaceId, element, eventName, eventPhase, callback);\n    };\n    /**\n     * @param {?=} microtaskId\n     * @return {?}\n     */\n    AnimationEngine.prototype.flush = function (microtaskId) {\n        if (microtaskId === void 0) { microtaskId = -1; }\n        this._transitionEngine.flush(microtaskId);\n    };\n    Object.defineProperty(AnimationEngine.prototype, \"players\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return ((this._transitionEngine.players))\n                .concat(/** @type {?} */ (this._timelineEngine.players));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    AnimationEngine.prototype.whenRenderingDone = function () { return this._transitionEngine.whenRenderingDone(); };\n    return AnimationEngine;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar WebAnimationsPlayer = (function () {\n    /**\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} options\n     * @param {?=} previousPlayers\n     */\n    function WebAnimationsPlayer(element, keyframes, options, previousPlayers) {\n        if (previousPlayers === void 0) { previousPlayers = []; }\n        var _this = this;\n        this.element = element;\n        this.keyframes = keyframes;\n        this.options = options;\n        this.previousPlayers = previousPlayers;\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._onDestroyFns = [];\n        this._initialized = false;\n        this._finished = false;\n        this._started = false;\n        this._destroyed = false;\n        this.time = 0;\n        this.parentPlayer = null;\n        this.currentSnapshot = {};\n        this._duration = options['duration'];\n        this._delay = options['delay'] || 0;\n        this.time = this._duration + this._delay;\n        this.previousStyles = {};\n        previousPlayers.forEach(function (player) {\n            var styles = player.currentSnapshot;\n            Object.keys(styles).forEach(function (prop) { return _this.previousStyles[prop] = styles[prop]; });\n        });\n    }\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._onFinish = function () {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(function (fn) { return fn(); });\n            this._onDoneFns = [];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.init = function () {\n        this._buildPlayer();\n        this._preparePlayerBeforeStart();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._buildPlayer = function () {\n        var _this = this;\n        if (this._initialized)\n            return;\n        this._initialized = true;\n        var /** @type {?} */ keyframes = this.keyframes.map(function (styles) { return copyStyles(styles, false); });\n        var /** @type {?} */ previousStyleProps = Object.keys(this.previousStyles);\n        if (previousStyleProps.length) {\n            var /** @type {?} */ startingKeyframe_1 = keyframes[0];\n            var /** @type {?} */ missingStyleProps_1 = [];\n            previousStyleProps.forEach(function (prop) {\n                if (!startingKeyframe_1.hasOwnProperty(prop)) {\n                    missingStyleProps_1.push(prop);\n                }\n                startingKeyframe_1[prop] = _this.previousStyles[prop];\n            });\n            if (missingStyleProps_1.length) {\n                var /** @type {?} */ self_1 = this;\n                var _loop_1 = function () {\n                    var /** @type {?} */ kf = keyframes[i];\n                    missingStyleProps_1.forEach(function (prop) {\n                        kf[prop] = _computeStyle(self_1.element, prop);\n                    });\n                };\n                // tslint:disable-next-line\n                for (var /** @type {?} */ i = 1; i < keyframes.length; i++) {\n                    _loop_1();\n                }\n            }\n        }\n        this._player = this._triggerWebAnimation(this.element, keyframes, this.options);\n        this._finalKeyframe = keyframes.length ? keyframes[keyframes.length - 1] : {};\n        this._player.addEventListener('finish', function () { return _this._onFinish(); });\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._preparePlayerBeforeStart = function () {\n        // this is required so that the player doesn't start to animate right away\n        if (this._delay) {\n            this._resetDomPlayerState();\n        }\n        else {\n            this._player.pause();\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} options\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._triggerWebAnimation = function (element, keyframes, options) {\n        // jscompiler doesn't seem to know animate is a native property because it's not fully\n        // supported yet across common browsers (we polyfill it for Edge/Safari) [CL #143630929]\n        return (element['animate'](keyframes, options));\n    };\n    Object.defineProperty(WebAnimationsPlayer.prototype, \"domPlayer\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._player; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.onDestroy = function (fn) { this._onDestroyFns.push(fn); };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.play = function () {\n        this._buildPlayer();\n        if (!this.hasStarted()) {\n            this._onStartFns.forEach(function (fn) { return fn(); });\n            this._onStartFns = [];\n            this._started = true;\n        }\n        this._player.play();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.pause = function () {\n        this.init();\n        this._player.pause();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.finish = function () {\n        this.init();\n        this._onFinish();\n        this._player.finish();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.reset = function () {\n        this._resetDomPlayerState();\n        this._destroyed = false;\n        this._finished = false;\n        this._started = false;\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._resetDomPlayerState = function () {\n        if (this._player) {\n            this._player.cancel();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.restart = function () {\n        this.reset();\n        this.play();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.hasStarted = function () { return this._started; };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.destroy = function () {\n        if (!this._destroyed) {\n            this._resetDomPlayerState();\n            this._onFinish();\n            this._destroyed = true;\n            this._onDestroyFns.forEach(function (fn) { return fn(); });\n            this._onDestroyFns = [];\n        }\n    };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.setPosition = function (p) { this._player.currentTime = p * this.time; };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.getPosition = function () { return this._player.currentTime / this.time; };\n    Object.defineProperty(WebAnimationsPlayer.prototype, \"totalTime\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._delay + this._duration; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.beforeDestroy = function () {\n        var _this = this;\n        var /** @type {?} */ styles = {};\n        if (this.hasStarted()) {\n            Object.keys(this._finalKeyframe).forEach(function (prop) {\n                if (prop != 'offset') {\n                    styles[prop] =\n                        _this._finished ? _this._finalKeyframe[prop] : _computeStyle(_this.element, prop);\n                }\n            });\n        }\n        this.currentSnapshot = styles;\n    };\n    return WebAnimationsPlayer;\n}());\n/**\n * @param {?} element\n * @param {?} prop\n * @return {?}\n */\nfunction _computeStyle(element, prop) {\n    return ((window.getComputedStyle(element)))[prop];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar WebAnimationsDriver = (function () {\n    function WebAnimationsDriver() {\n    }\n    /**\n     * @param {?} element\n     * @param {?} selector\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.matchesElement = function (element, selector) {\n        return matchesElement(element, selector);\n    };\n    /**\n     * @param {?} elm1\n     * @param {?} elm2\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.containsElement = function (elm1, elm2) { return containsElement(elm1, elm2); };\n    /**\n     * @param {?} element\n     * @param {?} selector\n     * @param {?} multi\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.query = function (element, selector, multi) {\n        return invokeQuery(element, selector, multi);\n    };\n    /**\n     * @param {?} element\n     * @param {?} prop\n     * @param {?=} defaultValue\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.computeStyle = function (element, prop, defaultValue) {\n        return (((window.getComputedStyle(element)))[prop]);\n    };\n    /**\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} duration\n     * @param {?} delay\n     * @param {?} easing\n     * @param {?=} previousPlayers\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.animate = function (element, keyframes, duration, delay, easing, previousPlayers) {\n        if (previousPlayers === void 0) { previousPlayers = []; }\n        var /** @type {?} */ fill = delay == 0 ? 'both' : 'forwards';\n        var /** @type {?} */ playerOptions = { duration: duration, delay: delay, fill: fill };\n        // we check for this to avoid having a null|undefined value be present\n        // for the easing (which results in an error for certain browsers #9752)\n        if (easing) {\n            playerOptions['easing'] = easing;\n        }\n        var /** @type {?} */ previousWebAnimationPlayers = (previousPlayers.filter(function (player) { return player instanceof WebAnimationsPlayer; }));\n        return new WebAnimationsPlayer(element, keyframes, playerOptions, previousWebAnimationPlayers);\n    };\n    return WebAnimationsDriver;\n}());\n/**\n * @return {?}\n */\nfunction supportsWebAnimations() {\n    return typeof Element !== 'undefined' && typeof ((Element)).prototype['animate'] === 'function';\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation browser package.\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the animation package.\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=browser.es5.js.map\n\n\n/***/ }),\n/* 234 */,\n/* 235 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__ = __webpack_require__(31);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(50);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__ = __webpack_require__(54);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_fromEvent__ = __webpack_require__(427);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_fromEvent___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_fromEvent__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_merge__ = __webpack_require__(428);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_merge___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_merge__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_auditTime__ = __webpack_require__(431);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_auditTime___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_auditTime__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__angular_forms__ = __webpack_require__(65);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__angular_animations__ = __webpack_require__(96);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_rxjs_add_operator_startWith__ = __webpack_require__(438);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_rxjs_add_operator_startWith___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_rxjs_add_operator_startWith__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_rxjs_add_operator_first__ = __webpack_require__(436);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_rxjs_add_operator_first___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_rxjs_add_operator_first__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__angular_http__ = __webpack_require__(66);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_rxjs_add_observable_forkJoin__ = __webpack_require__(426);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_rxjs_add_observable_forkJoin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13_rxjs_add_observable_forkJoin__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_rxjs_add_observable_of__ = __webpack_require__(429);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_rxjs_add_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_14_rxjs_add_observable_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_rxjs_add_operator_map__ = __webpack_require__(131);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_15_rxjs_add_operator_map__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_rxjs_add_operator_filter__ = __webpack_require__(434);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16_rxjs_add_operator_filter___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_16_rxjs_add_operator_filter__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17_rxjs_add_operator_do__ = __webpack_require__(433);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17_rxjs_add_operator_do___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_17_rxjs_add_operator_do__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18_rxjs_add_operator_share__ = __webpack_require__(437);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18_rxjs_add_operator_share___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_18_rxjs_add_operator_share__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19_rxjs_add_operator_finally__ = __webpack_require__(435);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19_rxjs_add_operator_finally___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_19_rxjs_add_operator_finally__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20_rxjs_add_operator_catch__ = __webpack_require__(432);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_20_rxjs_add_operator_catch__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21_rxjs_add_observable_throw__ = __webpack_require__(430);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21_rxjs_add_observable_throw___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_21_rxjs_add_observable_throw__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22_rxjs_add_operator_switchMap__ = __webpack_require__(439);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22_rxjs_add_operator_switchMap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_22_rxjs_add_operator_switchMap__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Dir\", function() { return Dir; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RtlModule\", function() { return RtlModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ObserveContentModule\", function() { return ObserveContentModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ObserveContent\", function() { return ObserveContent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdOptionModule\", function() { return MdOptionModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdOption\", function() { return MdOption; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Portal\", function() { return Portal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BasePortalHost\", function() { return BasePortalHost; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ComponentPortal\", function() { return ComponentPortal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TemplatePortal\", function() { return TemplatePortal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PortalHostDirective\", function() { return PortalHostDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TemplatePortalDirective\", function() { return TemplatePortalDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PortalModule\", function() { return PortalModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DomPortalHost\", function() { return DomPortalHost; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Overlay\", function() { return Overlay; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OVERLAY_PROVIDERS\", function() { return OVERLAY_PROVIDERS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OverlayContainer\", function() { return OverlayContainer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FullscreenOverlayContainer\", function() { return FullscreenOverlayContainer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OverlayRef\", function() { return OverlayRef; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OverlayState\", function() { return OverlayState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ConnectedOverlayDirective\", function() { return ConnectedOverlayDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OverlayOrigin\", function() { return OverlayOrigin; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OverlayModule\", function() { return OverlayModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ScrollDispatcher\", function() { return ScrollDispatcher; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GestureConfig\", function() { return GestureConfig; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LiveAnnouncer\", function() { return LiveAnnouncer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LIVE_ANNOUNCER_ELEMENT_TOKEN\", function() { return LIVE_ANNOUNCER_ELEMENT_TOKEN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LIVE_ANNOUNCER_PROVIDER\", function() { return LIVE_ANNOUNCER_PROVIDER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InteractivityChecker\", function() { return InteractivityChecker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isFakeMousedownFromScreenReader\", function() { return isFakeMousedownFromScreenReader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"A11yModule\", function() { return A11yModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UniqueSelectionDispatcher\", function() { return UniqueSelectionDispatcher; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UNIQUE_SELECTION_DISPATCHER_PROVIDER\", function() { return UNIQUE_SELECTION_DISPATCHER_PROVIDER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdLineModule\", function() { return MdLineModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdLine\", function() { return MdLine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdLineSetter\", function() { return MdLineSetter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdError\", function() { return MdError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"coerceBooleanProperty\", function() { return coerceBooleanProperty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"coerceNumberProperty\", function() { return coerceNumberProperty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CompatibilityModule\", function() { return CompatibilityModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NoConflictStyleCompatibilityMode\", function() { return NoConflictStyleCompatibilityMode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdCoreModule\", function() { return MdCoreModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PlatformModule\", function() { return PlatformModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Platform\", function() { return Platform; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSupportedInputTypes\", function() { return getSupportedInputTypes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GlobalPositionStrategy\", function() { return GlobalPositionStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ConnectedPositionStrategy\", function() { return ConnectedPositionStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ConnectionPositionPair\", function() { return ConnectionPositionPair; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ScrollableViewProperties\", function() { return ScrollableViewProperties; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ConnectedOverlayPositionChange\", function() { return ConnectedOverlayPositionChange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdRipple\", function() { return MdRipple; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MD_RIPPLE_GLOBAL_OPTIONS\", function() { return MD_RIPPLE_GLOBAL_OPTIONS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RippleRef\", function() { return RippleRef; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RippleState\", function() { return RippleState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RIPPLE_FADE_IN_DURATION\", function() { return RIPPLE_FADE_IN_DURATION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RIPPLE_FADE_OUT_DURATION\", function() { return RIPPLE_FADE_OUT_DURATION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdRippleModule\", function() { return MdRippleModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SelectionModel\", function() { return SelectionModel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SelectionChange\", function() { return SelectionChange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FocusTrap\", function() { return FocusTrap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FocusTrapFactory\", function() { return FocusTrapFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FocusTrapDeprecatedDirective\", function() { return FocusTrapDeprecatedDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FocusTrapDirective\", function() { return FocusTrapDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StyleModule\", function() { return StyleModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TOUCH_BUFFER_MS\", function() { return TOUCH_BUFFER_MS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FocusOriginMonitor\", function() { return FocusOriginMonitor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CdkMonitorFocus\", function() { return CdkMonitorFocus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY\", function() { return FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FOCUS_ORIGIN_MONITOR_PROVIDER\", function() { return FOCUS_ORIGIN_MONITOR_PROVIDER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"applyCssTransform\", function() { return applyCssTransform; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UP_ARROW\", function() { return UP_ARROW; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DOWN_ARROW\", function() { return DOWN_ARROW; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RIGHT_ARROW\", function() { return RIGHT_ARROW; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LEFT_ARROW\", function() { return LEFT_ARROW; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PAGE_UP\", function() { return PAGE_UP; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PAGE_DOWN\", function() { return PAGE_DOWN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HOME\", function() { return HOME; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"END\", function() { return END; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ENTER\", function() { return ENTER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SPACE\", function() { return SPACE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TAB\", function() { return TAB; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ESCAPE\", function() { return ESCAPE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BACKSPACE\", function() { return BACKSPACE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DELETE\", function() { return DELETE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MATERIAL_COMPATIBILITY_MODE\", function() { return MATERIAL_COMPATIBILITY_MODE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MAT_ELEMENTS_SELECTOR\", function() { return MAT_ELEMENTS_SELECTOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MD_ELEMENTS_SELECTOR\", function() { return MD_ELEMENTS_SELECTOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MatPrefixRejector\", function() { return MatPrefixRejector; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdPrefixRejector\", function() { return MdPrefixRejector; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AnimationCurves\", function() { return AnimationCurves; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AnimationDurations\", function() { return AnimationDurations; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdSelectionModule\", function() { return MdSelectionModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdPseudoCheckbox\", function() { return MdPseudoCheckbox; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MaterialRootModule\", function() { return MaterialRootModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MaterialModule\", function() { return MaterialModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdAutocompleteModule\", function() { return MdAutocompleteModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdAutocomplete\", function() { return MdAutocomplete; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AUTOCOMPLETE_OPTION_HEIGHT\", function() { return AUTOCOMPLETE_OPTION_HEIGHT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AUTOCOMPLETE_PANEL_HEIGHT\", function() { return AUTOCOMPLETE_PANEL_HEIGHT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MD_AUTOCOMPLETE_VALUE_ACCESSOR\", function() { return MD_AUTOCOMPLETE_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdAutocompleteTrigger\", function() { return MdAutocompleteTrigger; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdButtonModule\", function() { return MdButtonModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdButtonCssMatStyler\", function() { return MdButtonCssMatStyler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdRaisedButtonCssMatStyler\", function() { return MdRaisedButtonCssMatStyler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdIconButtonCssMatStyler\", function() { return MdIconButtonCssMatStyler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdFabCssMatStyler\", function() { return MdFabCssMatStyler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdMiniFabCssMatStyler\", function() { return MdMiniFabCssMatStyler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdButton\", function() { return MdButton; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdAnchor\", function() { return MdAnchor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdButtonToggleModule\", function() { return MdButtonToggleModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MD_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR\", function() { return MD_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdButtonToggleChange\", function() { return MdButtonToggleChange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdButtonToggleGroup\", function() { return MdButtonToggleGroup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdButtonToggleGroupMultiple\", function() { return MdButtonToggleGroupMultiple; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdButtonToggle\", function() { return MdButtonToggle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdCardModule\", function() { return MdCardModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdCardContent\", function() { return MdCardContent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdCardTitle\", function() { return MdCardTitle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdCardSubtitle\", function() { return MdCardSubtitle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdCardActions\", function() { return MdCardActions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdCardFooter\", function() { return MdCardFooter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdCardSmImage\", function() { return MdCardSmImage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdCardMdImage\", function() { return MdCardMdImage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdCardLgImage\", function() { return MdCardLgImage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdCardImage\", function() { return MdCardImage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdCardXlImage\", function() { return MdCardXlImage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdCardAvatar\", function() { return MdCardAvatar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdCard\", function() { return MdCard; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdCardHeader\", function() { return MdCardHeader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdCardTitleGroup\", function() { return MdCardTitleGroup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdChipsModule\", function() { return MdChipsModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdChipList\", function() { return MdChipList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdChip\", function() { return MdChip; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdCheckboxModule\", function() { return MdCheckboxModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MD_CHECKBOX_CONTROL_VALUE_ACCESSOR\", function() { return MD_CHECKBOX_CONTROL_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TransitionCheckState\", function() { return TransitionCheckState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdCheckboxChange\", function() { return MdCheckboxChange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdCheckbox\", function() { return MdCheckbox; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdDialogModule\", function() { return MdDialogModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MD_DIALOG_DATA\", function() { return MD_DIALOG_DATA; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdDialog\", function() { return MdDialog; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdDialogContainer\", function() { return MdDialogContainer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdDialogClose\", function() { return MdDialogClose; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdDialogTitle\", function() { return MdDialogTitle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdDialogContent\", function() { return MdDialogContent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdDialogActions\", function() { return MdDialogActions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdDialogConfig\", function() { return MdDialogConfig; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdDialogRef\", function() { return MdDialogRef; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdGridListModule\", function() { return MdGridListModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdGridList\", function() { return MdGridList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdIconModule\", function() { return MdIconModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdIconRegistry\", function() { return MdIconRegistry; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdIconInvalidNameError\", function() { return MdIconInvalidNameError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdIcon\", function() { return MdIcon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ICON_REGISTRY_PROVIDER_FACTORY\", function() { return ICON_REGISTRY_PROVIDER_FACTORY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ICON_REGISTRY_PROVIDER\", function() { return ICON_REGISTRY_PROVIDER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdInputModule\", function() { return MdInputModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdTextareaAutosize\", function() { return MdTextareaAutosize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdPlaceholder\", function() { return MdPlaceholder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdHint\", function() { return MdHint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdErrorDirective\", function() { return MdErrorDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdPrefix\", function() { return MdPrefix; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdSuffix\", function() { return MdSuffix; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdInputDirective\", function() { return MdInputDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdInputContainer\", function() { return MdInputContainer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdInputContainerPlaceholderConflictError\", function() { return MdInputContainerPlaceholderConflictError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdInputContainerUnsupportedTypeError\", function() { return MdInputContainerUnsupportedTypeError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdInputContainerDuplicatedHintError\", function() { return MdInputContainerDuplicatedHintError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdInputContainerMissingMdInputError\", function() { return MdInputContainerMissingMdInputError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdListModule\", function() { return MdListModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdListDivider\", function() { return MdListDivider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LIST_TYPE_TOKEN\", function() { return LIST_TYPE_TOKEN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdList\", function() { return MdList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdListCssMatStyler\", function() { return MdListCssMatStyler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdNavListCssMatStyler\", function() { return MdNavListCssMatStyler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdNavListTokenSetter\", function() { return MdNavListTokenSetter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdDividerCssMatStyler\", function() { return MdDividerCssMatStyler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdListAvatarCssMatStyler\", function() { return MdListAvatarCssMatStyler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdListIconCssMatStyler\", function() { return MdListIconCssMatStyler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdListSubheaderCssMatStyler\", function() { return MdListSubheaderCssMatStyler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdListItem\", function() { return MdListItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdMenuModule\", function() { return MdMenuModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fadeInItems\", function() { return fadeInItems; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transformMenu\", function() { return transformMenu; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdMenu\", function() { return MdMenu; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdMenuItem\", function() { return MdMenuItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdMenuTrigger\", function() { return MdMenuTrigger; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdProgressBarModule\", function() { return MdProgressBarModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdProgressBar\", function() { return MdProgressBar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdProgressSpinnerModule\", function() { return MdProgressSpinnerModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdProgressSpinnerCssMatStyler\", function() { return MdProgressSpinnerCssMatStyler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdProgressSpinner\", function() { return MdProgressSpinner; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdSpinner\", function() { return MdSpinner; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdRadioModule\", function() { return MdRadioModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR\", function() { return MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdRadioChange\", function() { return MdRadioChange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdRadioGroup\", function() { return MdRadioGroup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdRadioButton\", function() { return MdRadioButton; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdSelectModule\", function() { return MdSelectModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fadeInContent\", function() { return fadeInContent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transformPanel\", function() { return transformPanel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transformPlaceholder\", function() { return transformPlaceholder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SELECT_OPTION_HEIGHT\", function() { return SELECT_OPTION_HEIGHT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SELECT_PANEL_MAX_HEIGHT\", function() { return SELECT_PANEL_MAX_HEIGHT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SELECT_MAX_OPTIONS_DISPLAYED\", function() { return SELECT_MAX_OPTIONS_DISPLAYED; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SELECT_TRIGGER_HEIGHT\", function() { return SELECT_TRIGGER_HEIGHT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SELECT_OPTION_HEIGHT_ADJUSTMENT\", function() { return SELECT_OPTION_HEIGHT_ADJUSTMENT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SELECT_PANEL_PADDING_X\", function() { return SELECT_PANEL_PADDING_X; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SELECT_MULTIPLE_PANEL_PADDING_X\", function() { return SELECT_MULTIPLE_PANEL_PADDING_X; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SELECT_PANEL_PADDING_Y\", function() { return SELECT_PANEL_PADDING_Y; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SELECT_PANEL_VIEWPORT_PADDING\", function() { return SELECT_PANEL_VIEWPORT_PADDING; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdSelectChange\", function() { return MdSelectChange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdSelect\", function() { return MdSelect; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdSidenavModule\", function() { return MdSidenavModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdDuplicatedSidenavError\", function() { return MdDuplicatedSidenavError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdSidenavToggleResult\", function() { return MdSidenavToggleResult; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdSidenav\", function() { return MdSidenav; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdSidenavContainer\", function() { return MdSidenavContainer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdSliderModule\", function() { return MdSliderModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MD_SLIDER_VALUE_ACCESSOR\", function() { return MD_SLIDER_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdSliderChange\", function() { return MdSliderChange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdSlider\", function() { return MdSlider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SliderRenderer\", function() { return SliderRenderer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdSlideToggleModule\", function() { return MdSlideToggleModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MD_SLIDE_TOGGLE_VALUE_ACCESSOR\", function() { return MD_SLIDE_TOGGLE_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdSlideToggleChange\", function() { return MdSlideToggleChange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdSlideToggle\", function() { return MdSlideToggle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdSnackBarModule\", function() { return MdSnackBarModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdSnackBar\", function() { return MdSnackBar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SHOW_ANIMATION\", function() { return SHOW_ANIMATION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HIDE_ANIMATION\", function() { return HIDE_ANIMATION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdSnackBarContainer\", function() { return MdSnackBarContainer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdSnackBarConfig\", function() { return MdSnackBarConfig; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdSnackBarRef\", function() { return MdSnackBarRef; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SimpleSnackBar\", function() { return SimpleSnackBar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdTabsModule\", function() { return MdTabsModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdInkBar\", function() { return MdInkBar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdTabBody\", function() { return MdTabBody; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdTabHeader\", function() { return MdTabHeader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdTabLabelWrapper\", function() { return MdTabLabelWrapper; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdTab\", function() { return MdTab; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdTabLabel\", function() { return MdTabLabel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdTabChangeEvent\", function() { return MdTabChangeEvent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdTabGroup\", function() { return MdTabGroup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdTabNavBar\", function() { return MdTabNavBar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdTabLink\", function() { return MdTabLink; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdTabLinkRipple\", function() { return MdTabLinkRipple; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdToolbarModule\", function() { return MdToolbarModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdToolbarRow\", function() { return MdToolbarRow; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdToolbar\", function() { return MdToolbar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdTooltipModule\", function() { return MdTooltipModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TOUCHEND_HIDE_DELAY\", function() { return TOUCHEND_HIDE_DELAY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SCROLL_THROTTLE_MS\", function() { return SCROLL_THROTTLE_MS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MdTooltip\", function() { return MdTooltip; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TooltipComponent\", function() { return TooltipComponent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵf\", function() { return LIVE_ANNOUNCER_PROVIDER_FACTORY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵg\", function() { return UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵb\", function() { return OVERLAY_CONTAINER_PROVIDER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵa\", function() { return OVERLAY_CONTAINER_PROVIDER_FACTORY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵk\", function() { return OverlayPositionBuilder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵj\", function() { return VIEWPORT_RULER_PROVIDER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵi\", function() { return VIEWPORT_RULER_PROVIDER_FACTORY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵh\", function() { return ViewportRuler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵd\", function() { return SCROLL_DISPATCHER_PROVIDER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵc\", function() { return SCROLL_DISPATCHER_PROVIDER_FACTORY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵl\", function() { return Scrollable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵe\", function() { return RippleRenderer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵo\", function() { return MdGridAvatarCssMatStyler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵm\", function() { return MdGridTile; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵq\", function() { return MdGridTileFooterCssMatStyler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵp\", function() { return MdGridTileHeaderCssMatStyler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵn\", function() { return MdGridTileText; });\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n  * @license Angular Material v2.0.0-beta.3\n  * Copyright (c) 2017 Google, Inc. https://material.angular.io/\n  * License: MIT\n  */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\nvar hasDoneGlobalChecks = false;\nvar MATERIAL_COMPATIBILITY_MODE = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"OpaqueToken\"]('md-compatibility-mode');\n/** Selector that matches all elements that may have style collisions with AngularJS Material. */\nvar MAT_ELEMENTS_SELECTOR = \"\\n  [mat-button],\\n  [mat-dialog-actions],\\n  [mat-dialog-close],\\n  [mat-dialog-content],\\n  [mat-dialog-title],\\n  [mat-fab],\\n  [mat-icon-button],\\n  [mat-menu-trigger-for],\\n  [mat-mini-fab],\\n  [mat-raised-button],\\n  [mat-tab-label],\\n  [mat-tab-link],\\n  [mat-tab-nav-bar],\\n  [matTooltip],\\n  mat-autocomplete,\\n  mat-button-toggle,\\n  mat-button-toggle-group,\\n  mat-button-toggle,\\n  mat-card,\\n  mat-card-actions,\\n  mat-card-content,\\n  mat-card-footer,\\n  mat-card-header,\\n  mat-card-subtitle,\\n  mat-card-title,\\n  mat-card-title-group,\\n  mat-checkbox,\\n  mat-chip,\\n  mat-dialog-actions,\\n  mat-dialog-container,\\n  mat-dialog-content,\\n  mat-divider,\\n  mat-grid-list,\\n  mat-grid-tile,\\n  mat-grid-tile-footer,\\n  mat-grid-tile-header,\\n  mat-hint,\\n  mat-icon,\\n  mat-list,\\n  mat-list-item,\\n  mat-menu,\\n  mat-nav-list,\\n  mat-option,\\n  mat-placeholder,\\n  mat-progress-bar,\\n  mat-pseudo-checkbox,\\n  mat-radio-button,\\n  mat-radio-group,\\n  mat-select,\\n  mat-sidenav,\\n  mat-sidenav-container,\\n  mat-slider,\\n  mat-spinner,\\n  mat-tab,\\n  mat-tab-group,\\n  mat-toolbar,\\n  mat-error\";\n/** Selector that matches all elements that may have style collisions with AngularJS Material. */\nvar MD_ELEMENTS_SELECTOR = \"\\n  [md-button],\\n  [md-dialog-actions],\\n  [md-dialog-close],\\n  [md-dialog-content],\\n  [md-dialog-title],\\n  [md-fab],\\n  [md-icon-button],\\n  [md-menu-trigger-for],\\n  [md-mini-fab],\\n  [md-raised-button],\\n  [md-tab-label],\\n  [md-tab-link],\\n  [md-tab-nav-bar],\\n  [mdTooltip],\\n  md-autocomplete,\\n  md-button-toggle,\\n  md-button-toggle-group,\\n  md-button-toggle,\\n  md-card,\\n  md-card-actions,\\n  md-card-content,\\n  md-card-footer,\\n  md-card-header,\\n  md-card-subtitle,\\n  md-card-title,\\n  md-card-title-group,\\n  md-checkbox,\\n  md-chip,\\n  md-dialog-actions,\\n  md-dialog-container,\\n  md-dialog-content,\\n  md-divider,\\n  md-grid-list,\\n  md-grid-tile,\\n  md-grid-tile-footer,\\n  md-grid-tile-header,\\n  md-hint,\\n  md-icon,\\n  md-list,\\n  md-list-item,\\n  md-menu,\\n  md-nav-list,\\n  md-option,\\n  md-placeholder,\\n  md-progress-bar,\\n  md-pseudo-checkbox,\\n  md-radio-button,\\n  md-radio-group,\\n  md-select,\\n  md-sidenav,\\n  md-sidenav-container,\\n  md-slider,\\n  md-spinner,\\n  md-tab,\\n  md-tab-group,\\n  md-toolbar,\\n  md-error\";\n/**\n * Directive that enforces that the `mat-` prefix cannot be used.\n */\nvar MatPrefixRejector = (function () {\n    /**\n     * @param {?} isCompatibilityMode\n     */\n    function MatPrefixRejector(isCompatibilityMode) {\n        if (!isCompatibilityMode) {\n            throw Error('The \"mat-\" prefix cannot be used out of ng-material v1 compatibility mode.');\n        }\n    }\n    return MatPrefixRejector;\n}());\nMatPrefixRejector.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{ selector: MAT_ELEMENTS_SELECTOR },] },\n];\n/**\n * @nocollapse\n */\nMatPrefixRejector.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [MATERIAL_COMPATIBILITY_MODE,] },] },\n]; };\n/**\n * Directive that enforces that the `md-` prefix cannot be used.\n */\nvar MdPrefixRejector = (function () {\n    /**\n     * @param {?} isCompatibilityMode\n     */\n    function MdPrefixRejector(isCompatibilityMode) {\n        if (isCompatibilityMode) {\n            throw Error('The \"md-\" prefix cannot be used in ng-material v1 compatibility mode.');\n        }\n    }\n    return MdPrefixRejector;\n}());\nMdPrefixRejector.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{ selector: MD_ELEMENTS_SELECTOR },] },\n];\n/**\n * @nocollapse\n */\nMdPrefixRejector.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [MATERIAL_COMPATIBILITY_MODE,] },] },\n]; };\n/**\n * Module that enforces the default compatibility mode settings. When this module is loaded\n * without NoConflictStyleCompatibilityMode also being imported, it will throw an error if\n * there are any uses of the `mat-` prefix.\n */\nvar CompatibilityModule = (function () {\n    /**\n     * @param {?} _document\n     */\n    function CompatibilityModule(_document) {\n        this._document = _document;\n        if (!hasDoneGlobalChecks && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"isDevMode\"])()) {\n            this._checkDoctype();\n            this._checkTheme();\n            hasDoneGlobalChecks = true;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    CompatibilityModule.forRoot = function () {\n        return {\n            ngModule: CompatibilityModule,\n            providers: [],\n        };\n    };\n    /**\n     * @return {?}\n     */\n    CompatibilityModule.prototype._checkDoctype = function () {\n        if (this._document && !this._document.doctype) {\n            console.warn('Current document does not have a doctype. This may cause ' +\n                'some Angular Material components not to behave as expected.');\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompatibilityModule.prototype._checkTheme = function () {\n        if (this._document) {\n            var /** @type {?} */ testElement = this._document.createElement('div');\n            testElement.classList.add('mat-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n            if (getComputedStyle(testElement).display !== 'none') {\n                console.warn('Could not find Angular Material core theme. Most Material ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: https://material.angular.io/guide/theming');\n            }\n            this._document.body.removeChild(testElement);\n        }\n    };\n    return CompatibilityModule;\n}());\nCompatibilityModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                declarations: [MatPrefixRejector, MdPrefixRejector],\n                exports: [MatPrefixRejector, MdPrefixRejector],\n            },] },\n];\n/**\n * @nocollapse\n */\nCompatibilityModule.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [__WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__[\"DOCUMENT\"],] },] },\n]; };\n/**\n * Module that enforces \"no-conflict\" compatibility mode settings. When this module is loaded,\n * it will throw an error if there are any uses of the `md-` prefix.\n */\nvar NoConflictStyleCompatibilityMode = (function () {\n    function NoConflictStyleCompatibilityMode() {\n    }\n    return NoConflictStyleCompatibilityMode;\n}());\nNoConflictStyleCompatibilityMode.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                providers: [{\n                        provide: MATERIAL_COMPATIBILITY_MODE, useValue: true,\n                    }],\n            },] },\n];\n/**\n * @nocollapse\n */\nNoConflictStyleCompatibilityMode.ctorParameters = function () { return []; };\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MdLine) query, then\n * counted by checking the query list's length.\n */\nvar MdLine = (function () {\n    function MdLine() {\n    }\n    return MdLine;\n}());\nMdLine.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[md-line], [mat-line]',\n                host: {\n                    '[class.mat-line]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdLine.ctorParameters = function () { return []; };\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n */\nvar MdLineSetter = (function () {\n    /**\n     * @param {?} _lines\n     * @param {?} _renderer\n     * @param {?} _element\n     */\n    function MdLineSetter(_lines, _renderer, _element) {\n        var _this = this;\n        this._lines = _lines;\n        this._renderer = _renderer;\n        this._element = _element;\n        this._setLineClass(this._lines.length);\n        this._lines.changes.subscribe(function () {\n            _this._setLineClass(_this._lines.length);\n        });\n    }\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    MdLineSetter.prototype._setLineClass = function (count) {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(\"mat-\" + count + \"-line\", true);\n        }\n        else if (count > 3) {\n            this._setClass(\"mat-multi-line\", true);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdLineSetter.prototype._resetClasses = function () {\n        this._setClass('mat-2-line', false);\n        this._setClass('mat-3-line', false);\n        this._setClass('mat-multi-line', false);\n    };\n    /**\n     * @param {?} className\n     * @param {?} bool\n     * @return {?}\n     */\n    MdLineSetter.prototype._setClass = function (className, bool) {\n        this._renderer.setElementClass(this._element.nativeElement, className, bool);\n    };\n    return MdLineSetter;\n}());\nvar MdLineModule = (function () {\n    function MdLineModule() {\n    }\n    return MdLineModule;\n}());\nMdLineModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [CompatibilityModule],\n                exports: [MdLine, CompatibilityModule],\n                declarations: [MdLine],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdLineModule.ctorParameters = function () { return []; };\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Applications should use this directive instead of the native attribute so that Material\n * components can listen on changes of direction.\n */\nvar Dir = (function () {\n    function Dir() {\n        /** Layout direction of the element. */\n        this._dir = 'ltr';\n        /** Event emitted when the direction changes. */\n        this.dirChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n    }\n    Object.defineProperty(Dir.prototype, \"dir\", {\n        /**\n         * \\@docs-private\n         * @return {?}\n         */\n        get: function () {\n            return this._dir;\n        },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) {\n            var /** @type {?} */ old = this._dir;\n            this._dir = v;\n            if (old != this._dir) {\n                this.dirChange.emit();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Dir.prototype, \"value\", {\n        /**\n         * Current layout direction of the element.\n         * @return {?}\n         */\n        get: function () { return this.dir; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this.dir = v; },\n        enumerable: true,\n        configurable: true\n    });\n    return Dir;\n}());\nDir.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[dir]',\n                // TODO(hansl): maybe `$implicit` isn't the best option here, but for now that's the best we got.\n                exportAs: '$implicit'\n            },] },\n];\n/**\n * @nocollapse\n */\nDir.ctorParameters = function () { return []; };\nDir.propDecorators = {\n    '_dir': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['dir',] },],\n    'dirChange': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    'dir': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"HostBinding\"], args: ['attr.dir',] },],\n};\nvar RtlModule = (function () {\n    function RtlModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    RtlModule.forRoot = function () {\n        return {\n            ngModule: RtlModule,\n            providers: []\n        };\n    };\n    return RtlModule;\n}());\nRtlModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                exports: [Dir],\n                declarations: [Dir]\n            },] },\n];\n/**\n * @nocollapse\n */\nRtlModule.ctorParameters = function () { return []; };\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nvar ObserveContent = (function () {\n    /**\n     * @param {?} _elementRef\n     */\n    function ObserveContent(_elementRef) {\n        this._elementRef = _elementRef;\n        /** Event emitted for each change in the element's content. */\n        this.event = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n    }\n    /**\n     * @return {?}\n     */\n    ObserveContent.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this._observer = new MutationObserver(function (mutations) { return mutations.forEach(function () { return _this.event.emit(); }); });\n        this._observer.observe(this._elementRef.nativeElement, {\n            characterData: true,\n            childList: true,\n            subtree: true\n        });\n    };\n    /**\n     * @return {?}\n     */\n    ObserveContent.prototype.ngOnDestroy = function () {\n        if (this._observer) {\n            this._observer.disconnect();\n        }\n    };\n    return ObserveContent;\n}());\nObserveContent.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[cdkObserveContent]'\n            },] },\n];\n/**\n * @nocollapse\n */\nObserveContent.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n]; };\nObserveContent.propDecorators = {\n    'event': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"], args: ['cdkObserveContent',] },],\n};\nvar ObserveContentModule = (function () {\n    function ObserveContentModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    ObserveContentModule.forRoot = function () {\n        return {\n            ngModule: ObserveContentModule,\n            providers: []\n        };\n    };\n    return ObserveContentModule;\n}());\nObserveContentModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                exports: [ObserveContent],\n                declarations: [ObserveContent]\n            },] },\n];\n/**\n * @nocollapse\n */\nObserveContentModule.ctorParameters = function () { return []; };\n// Due to a bug in the ChromeDriver, Angular keyboard events are not triggered by `sendKeys`\n// during E2E tests when using dot notation such as `(keydown.rightArrow)`. To get around this,\n// we are temporarily using a single (keydown) handler.\n// See: https://github.com/angular/angular/issues/9419\nvar UP_ARROW = 38;\nvar DOWN_ARROW = 40;\nvar RIGHT_ARROW = 39;\nvar LEFT_ARROW = 37;\nvar PAGE_UP = 33;\nvar PAGE_DOWN = 34;\nvar HOME = 36;\nvar END = 35;\nvar ENTER = 13;\nvar SPACE = 32;\nvar TAB = 9;\nvar ESCAPE = 27;\nvar BACKSPACE = 8;\nvar DELETE = 46;\n/**\n * Coerces a data-bound value (typically a string) to a boolean.\n * @param {?} value\n * @return {?}\n */\nfunction coerceBooleanProperty(value) {\n    return value != null && \"\" + value !== 'false';\n}\nvar RippleState = {};\nRippleState.FADING_IN = 0;\nRippleState.VISIBLE = 1;\nRippleState.FADING_OUT = 2;\nRippleState.HIDDEN = 3;\nRippleState[RippleState.FADING_IN] = \"FADING_IN\";\nRippleState[RippleState.VISIBLE] = \"VISIBLE\";\nRippleState[RippleState.FADING_OUT] = \"FADING_OUT\";\nRippleState[RippleState.HIDDEN] = \"HIDDEN\";\n/**\n * Reference to a previously launched ripple element.\n */\nvar RippleRef = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} element\n     * @param {?} config\n     */\n    function RippleRef(_renderer, element, config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /** Current state of the ripple reference. */\n        this.state = RippleState.HIDDEN;\n    }\n    /**\n     * Fades out the ripple element.\n     * @return {?}\n     */\n    RippleRef.prototype.fadeOut = function () {\n        this._renderer.fadeOutRipple(this);\n    };\n    return RippleRef;\n}());\n/** Fade-in duration for the ripples. Can be modified with the speedFactor option. */\nvar RIPPLE_FADE_IN_DURATION = 450;\n/** Fade-out duration for the ripples in milliseconds. This can't be modified by the speedFactor. */\nvar RIPPLE_FADE_OUT_DURATION = 400;\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nvar RippleRenderer = (function () {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _ruler\n     */\n    function RippleRenderer(_elementRef, _ngZone, _ruler) {\n        this._ngZone = _ngZone;\n        this._ruler = _ruler;\n        this._isMousedown = false;\n        this._triggerEvents = new Map();\n        this._activeRipples = new Set();\n        /** Ripple config for all ripples created by events. */\n        this.rippleConfig = {};\n        /** Whether mouse ripples should be created or not. */\n        this.rippleDisabled = false;\n        this._containerElement = _elementRef.nativeElement;\n        // Specify events which need to be registered on the trigger.\n        this._triggerEvents.set('mousedown', this.onMousedown.bind(this));\n        this._triggerEvents.set('mouseup', this.onMouseup.bind(this));\n        this._triggerEvents.set('mouseleave', this.onMouseLeave.bind(this));\n        // By default use the host element as trigger element.\n        this.setTriggerElement(this._containerElement);\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param {?} pageX\n     * @param {?} pageY\n     * @param {?=} config\n     * @return {?}\n     */\n    RippleRenderer.prototype.fadeInRipple = function (pageX, pageY, config) {\n        var _this = this;\n        if (config === void 0) { config = {}; }\n        var /** @type {?} */ containerRect = this._containerElement.getBoundingClientRect();\n        if (config.centered) {\n            pageX = containerRect.left + containerRect.width / 2;\n            pageY = containerRect.top + containerRect.height / 2;\n        }\n        else {\n            // Subtract scroll values from the coordinates because calculations below\n            // are always relative to the viewport rectangle.\n            var /** @type {?} */ scrollPosition = this._ruler.getViewportScrollPosition();\n            pageX -= scrollPosition.left;\n            pageY -= scrollPosition.top;\n        }\n        var /** @type {?} */ radius = config.radius || distanceToFurthestCorner(pageX, pageY, containerRect);\n        var /** @type {?} */ duration = RIPPLE_FADE_IN_DURATION * (1 / (config.speedFactor || 1));\n        var /** @type {?} */ offsetX = pageX - containerRect.left;\n        var /** @type {?} */ offsetY = pageY - containerRect.top;\n        var /** @type {?} */ ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = offsetX - radius + \"px\";\n        ripple.style.top = offsetY - radius + \"px\";\n        ripple.style.height = radius * 2 + \"px\";\n        ripple.style.width = radius * 2 + \"px\";\n        // If the color is not set, the default CSS color will be used.\n        ripple.style.backgroundColor = config.color;\n        ripple.style.transitionDuration = duration + \"ms\";\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        var /** @type {?} */ rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = RippleState.FADING_IN;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this.runTimeoutOutsideZone(function () {\n            rippleRef.state = RippleState.VISIBLE;\n            if (!config.persistent && !_this._isMousedown) {\n                rippleRef.fadeOut();\n            }\n        }, duration);\n        return rippleRef;\n    };\n    /**\n     * Fades out a ripple reference.\n     * @param {?} rippleRef\n     * @return {?}\n     */\n    RippleRenderer.prototype.fadeOutRipple = function (rippleRef) {\n        // For ripples that are not active anymore, don't re-un the fade-out animation.\n        if (!this._activeRipples.delete(rippleRef)) {\n            return;\n        }\n        var /** @type {?} */ rippleEl = rippleRef.element;\n        rippleEl.style.transitionDuration = RIPPLE_FADE_OUT_DURATION + \"ms\";\n        rippleEl.style.opacity = '0';\n        rippleRef.state = RippleState.FADING_OUT;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this.runTimeoutOutsideZone(function () {\n            rippleRef.state = RippleState.HIDDEN;\n            rippleEl.parentNode.removeChild(rippleEl);\n        }, RIPPLE_FADE_OUT_DURATION);\n    };\n    /**\n     * Fades out all currently active ripples.\n     * @return {?}\n     */\n    RippleRenderer.prototype.fadeOutAll = function () {\n        this._activeRipples.forEach(function (ripple) { return ripple.fadeOut(); });\n    };\n    /**\n     * Sets the trigger element and registers the mouse events.\n     * @param {?} element\n     * @return {?}\n     */\n    RippleRenderer.prototype.setTriggerElement = function (element) {\n        var _this = this;\n        // Remove all previously register event listeners from the trigger element.\n        if (this._triggerElement) {\n            this._triggerEvents.forEach(function (fn, type) { return _this._triggerElement.removeEventListener(type, fn); });\n        }\n        if (element) {\n            // If the element is not null, register all event listeners on the trigger element.\n            this._ngZone.runOutsideAngular(function () {\n                _this._triggerEvents.forEach(function (fn, type) { return element.addEventListener(type, fn); });\n            });\n        }\n        this._triggerElement = element;\n    };\n    /**\n     * Listener being called on mousedown event.\n     * @param {?} event\n     * @return {?}\n     */\n    RippleRenderer.prototype.onMousedown = function (event) {\n        if (!this.rippleDisabled) {\n            this._isMousedown = true;\n            this.fadeInRipple(event.pageX, event.pageY, this.rippleConfig);\n        }\n    };\n    /**\n     * Listener being called on mouseup event.\n     * @return {?}\n     */\n    RippleRenderer.prototype.onMouseup = function () {\n        this._isMousedown = false;\n        // Fade-out all ripples that are completely visible and not persistent.\n        this._activeRipples.forEach(function (ripple) {\n            if (!ripple.config.persistent && ripple.state === RippleState.VISIBLE) {\n                ripple.fadeOut();\n            }\n        });\n    };\n    /**\n     * Listener being called on mouseleave event.\n     * @return {?}\n     */\n    RippleRenderer.prototype.onMouseLeave = function () {\n        if (this._isMousedown) {\n            this.onMouseup();\n        }\n    };\n    /**\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n     * @param {?} fn\n     * @param {?=} delay\n     * @return {?}\n     */\n    RippleRenderer.prototype.runTimeoutOutsideZone = function (fn, delay) {\n        if (delay === void 0) { delay = 0; }\n        this._ngZone.runOutsideAngular(function () { return setTimeout(fn, delay); });\n    };\n    return RippleRenderer;\n}());\n/**\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    var /** @type {?} */ distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    var /** @type {?} */ distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n/** Time in ms to throttle the scrolling events by default. */\nvar DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nvar ScrollDispatcher = (function () {\n    /**\n     * @param {?} _ngZone\n     */\n    function ScrollDispatcher(_ngZone) {\n        this._ngZone = _ngZone;\n        /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n        this._scrolled = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__[\"Subject\"]();\n        /** Keeps track of the global `scroll` and `resize` subscriptions. */\n        this._globalSubscription = null;\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollableReferences = new Map();\n    }\n    /**\n     * Registers a Scrollable with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event in its scrolled observable.\n     * @param {?} scrollable Scrollable instance to be registered.\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.register = function (scrollable) {\n        var _this = this;\n        var /** @type {?} */ scrollSubscription = scrollable.elementScrolled().subscribe(function () { return _this._notify(); });\n        this.scrollableReferences.set(scrollable, scrollSubscription);\n    };\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param {?} scrollable Scrollable instance to be deregistered.\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.deregister = function (scrollable) {\n        if (this.scrollableReferences.has(scrollable)) {\n            this.scrollableReferences.get(scrollable).unsubscribe();\n            this.scrollableReferences.delete(scrollable);\n        }\n    };\n    /**\n     * Subscribes to an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     * @param {?=} auditTimeInMs\n     * @param {?=} callback\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.scrolled = function (auditTimeInMs, callback) {\n        var _this = this;\n        if (auditTimeInMs === void 0) { auditTimeInMs = DEFAULT_SCROLL_TIME; }\n        // In the case of a 0ms delay, use an observable without auditTime\n        // since it does add a perceptible delay in processing overhead.\n        var /** @type {?} */ observable = auditTimeInMs > 0 ?\n            this._scrolled.asObservable().auditTime(auditTimeInMs) :\n            this._scrolled.asObservable();\n        this._scrolledCount++;\n        if (!this._globalSubscription) {\n            this._globalSubscription = this._ngZone.runOutsideAngular(function () {\n                return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__[\"Observable\"].merge(__WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__[\"Observable\"].fromEvent(window.document, 'scroll'), __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__[\"Observable\"].fromEvent(window, 'resize')).subscribe(function () { return _this._notify(); });\n            });\n        }\n        // Note that we need to do the subscribing from here, in order to be able to remove\n        // the global event listeners once there are no more subscriptions.\n        var /** @type {?} */ subscription = observable.subscribe(callback);\n        subscription.add(function () {\n            _this._scrolledCount--;\n            if (_this._globalSubscription && !_this.scrollableReferences.size && !_this._scrolledCount) {\n                _this._globalSubscription.unsubscribe();\n                _this._globalSubscription = null;\n            }\n        });\n        return subscription;\n    };\n    /**\n     * Returns all registered Scrollables that contain the provided element.\n     * @param {?} elementRef\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.getScrollContainers = function (elementRef) {\n        var _this = this;\n        var /** @type {?} */ scrollingContainers = [];\n        this.scrollableReferences.forEach(function (subscription, scrollable) {\n            if (_this.scrollableContainsElement(scrollable, elementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        });\n        return scrollingContainers;\n    };\n    /**\n     * Returns true if the element is contained within the provided Scrollable.\n     * @param {?} scrollable\n     * @param {?} elementRef\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.scrollableContainsElement = function (scrollable, elementRef) {\n        var /** @type {?} */ element = elementRef.nativeElement;\n        var /** @type {?} */ scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while (element = element.parentElement);\n    };\n    /**\n     * Sends a notification that a scroll event has been fired.\n     * @return {?}\n     */\n    ScrollDispatcher.prototype._notify = function () {\n        this._scrolled.next();\n    };\n    return ScrollDispatcher;\n}());\nScrollDispatcher.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nScrollDispatcher.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n]; };\n/**\n * @param {?} parentDispatcher\n * @param {?} ngZone\n * @return {?}\n */\nfunction SCROLL_DISPATCHER_PROVIDER_FACTORY(parentDispatcher, ngZone) {\n    return parentDispatcher || new ScrollDispatcher(ngZone);\n}\nvar SCROLL_DISPATCHER_PROVIDER = {\n    // If there is already a ScrollDispatcher available, use that. Otherwise, provide a new one.\n    provide: ScrollDispatcher,\n    deps: [[new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"](), new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"SkipSelf\"](), ScrollDispatcher], __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"]],\n    useFactory: SCROLL_DISPATCHER_PROVIDER_FACTORY\n};\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * \\@docs-private\n */\nvar ViewportRuler = (function () {\n    /**\n     * @param {?} scrollDispatcher\n     */\n    function ViewportRuler(scrollDispatcher) {\n        var _this = this;\n        // Initially cache the document rectangle.\n        this._cacheViewportGeometry();\n        // Subscribe to scroll and resize events and update the document rectangle on changes.\n        scrollDispatcher.scrolled(null, function () { return _this._cacheViewportGeometry(); });\n    }\n    /**\n     * Gets a ClientRect for the viewport's bounds.\n     * @param {?=} documentRect\n     * @return {?}\n     */\n    ViewportRuler.prototype.getViewportRect = function (documentRect) {\n        if (documentRect === void 0) { documentRect = this._documentRect; }\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        var /** @type {?} */ scrollPosition = this.getViewportScrollPosition(documentRect);\n        var /** @type {?} */ height = window.innerHeight;\n        var /** @type {?} */ width = window.innerWidth;\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height: height,\n            width: width,\n        };\n    };\n    /**\n     * Gets the (top, left) scroll position of the viewport.\n     * @param {?=} documentRect\n     * @return {?}\n     */\n    ViewportRuler.prototype.getViewportScrollPosition = function (documentRect) {\n        if (documentRect === void 0) { documentRect = this._documentRect; }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        var /** @type {?} */ top = -documentRect.top || document.body.scrollTop || window.scrollY || 0;\n        var /** @type {?} */ left = -documentRect.left || document.body.scrollLeft || window.scrollX || 0;\n        return { top: top, left: left };\n    };\n    /**\n     * Caches the latest client rectangle of the document element.\n     * @return {?}\n     */\n    ViewportRuler.prototype._cacheViewportGeometry = function () {\n        this._documentRect = document.documentElement.getBoundingClientRect();\n    };\n    return ViewportRuler;\n}());\nViewportRuler.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nViewportRuler.ctorParameters = function () { return [\n    { type: ScrollDispatcher, },\n]; };\n/**\n * @param {?} parentRuler\n * @param {?} scrollDispatcher\n * @return {?}\n */\nfunction VIEWPORT_RULER_PROVIDER_FACTORY(parentRuler, scrollDispatcher) {\n    return parentRuler || new ViewportRuler(scrollDispatcher);\n}\nvar VIEWPORT_RULER_PROVIDER = {\n    // If there is already a ViewportRuler available, use that. Otherwise, provide a new one.\n    provide: ViewportRuler,\n    deps: [[new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"](), new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"SkipSelf\"](), ViewportRuler], ScrollDispatcher],\n    useFactory: VIEWPORT_RULER_PROVIDER_FACTORY\n};\n/** OpaqueToken that can be used to specify the global ripple options. */\nvar MD_RIPPLE_GLOBAL_OPTIONS = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"OpaqueToken\"]('md-ripple-global-options');\nvar MdRipple = (function () {\n    /**\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} ruler\n     * @param {?} globalOptions\n     */\n    function MdRipple(elementRef, ngZone, ruler, \n        // Type needs to be `any` because of https://github.com/angular/angular/issues/12631\n        globalOptions) {\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        /**\n         * If set, the normal duration of ripple animations is divided by this value. For example,\n         * setting it to 0.5 will cause the animations to take twice as long.\n         * A changed speedFactor will not modify the fade-out duration of the ripples.\n         */\n        this.speedFactor = 1;\n        this._rippleRenderer = new RippleRenderer(elementRef, ngZone, ruler);\n        this._globalOptions = globalOptions ? globalOptions : {};\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MdRipple.prototype.ngOnChanges = function (changes) {\n        if (changes['trigger'] && this.trigger) {\n            this._rippleRenderer.setTriggerElement(this.trigger);\n        }\n        this._rippleRenderer.rippleDisabled = this._globalOptions.disabled || this.disabled;\n        this._rippleRenderer.rippleConfig = this.rippleConfig;\n    };\n    /**\n     * @return {?}\n     */\n    MdRipple.prototype.ngOnDestroy = function () {\n        // Set the trigger element to null to cleanup all listeners.\n        this._rippleRenderer.setTriggerElement(null);\n    };\n    /**\n     * Launches a manual ripple at the specified position.\n     * @param {?} pageX\n     * @param {?} pageY\n     * @param {?=} config\n     * @return {?}\n     */\n    MdRipple.prototype.launch = function (pageX, pageY, config) {\n        if (config === void 0) { config = this.rippleConfig; }\n        return this._rippleRenderer.fadeInRipple(pageX, pageY, config);\n    };\n    /**\n     * Fades out all currently showing ripple elements.\n     * @return {?}\n     */\n    MdRipple.prototype.fadeOutAll = function () {\n        this._rippleRenderer.fadeOutAll();\n    };\n    Object.defineProperty(MdRipple.prototype, \"rippleConfig\", {\n        /**\n         * Ripple configuration from the directive's input values.\n         * @return {?}\n         */\n        get: function () {\n            return {\n                centered: this.centered,\n                speedFactor: this.speedFactor * (this._globalOptions.baseSpeedFactor || 1),\n                radius: this.radius,\n                color: this.color\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return MdRipple;\n}());\nMdRipple.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[md-ripple], [mat-ripple], [mdRipple], [matRipple]',\n                exportAs: 'mdRipple',\n                host: {\n                    '[class.mat-ripple]': 'true',\n                    '[class.mat-ripple-unbounded]': 'unbounded'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdRipple.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n    { type: ViewportRuler, },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [MD_RIPPLE_GLOBAL_OPTIONS,] },] },\n]; };\nMdRipple.propDecorators = {\n    'trigger': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['mdRippleTrigger',] },],\n    'centered': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['mdRippleCentered',] },],\n    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['mdRippleDisabled',] },],\n    'radius': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['mdRippleRadius',] },],\n    'speedFactor': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['mdRippleSpeedFactor',] },],\n    'color': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['mdRippleColor',] },],\n    'unbounded': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['mdRippleUnbounded',] },],\n};\nvar MdRippleModule = (function () {\n    function MdRippleModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdRippleModule.forRoot = function () {\n        return {\n            ngModule: MdRippleModule,\n            providers: []\n        };\n    };\n    return MdRippleModule;\n}());\nMdRippleModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [CompatibilityModule],\n                exports: [MdRipple, CompatibilityModule],\n                declarations: [MdRipple],\n                providers: [VIEWPORT_RULER_PROVIDER, SCROLL_DISPATCHER_PROVIDER],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdRippleModule.ctorParameters = function () { return []; };\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with <md-checkbox> and should *not* be used if the user would directly interact\n * with the checkbox. The pseudo-checkbox should only be used as an implementation detail of\n * more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\nvar MdPseudoCheckbox = (function () {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _renderer\n     */\n    function MdPseudoCheckbox(_elementRef, _renderer) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        /** Display state of the checkbox. */\n        this.state = 'unchecked';\n        /** Whether the checkbox is disabled. */\n        this.disabled = false;\n        this.color = 'accent';\n    }\n    Object.defineProperty(MdPseudoCheckbox.prototype, \"color\", {\n        /**\n         * Color of the checkbox.\n         * @return {?}\n         */\n        get: function () { return this._color; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (value) {\n                var /** @type {?} */ nativeElement = this._elementRef.nativeElement;\n                this._renderer.setElementClass(nativeElement, \"mat-\" + this.color, false);\n                this._renderer.setElementClass(nativeElement, \"mat-\" + value, true);\n                this._color = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    return MdPseudoCheckbox;\n}());\nMdPseudoCheckbox.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None,\n                selector: 'md-pseudo-checkbox, mat-pseudo-checkbox',\n                styles: [\".mat-pseudo-checkbox{width:20px;height:20px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:9px;left:2px;width:16px;opacity:1}.mat-pseudo-checkbox-checked::after{top:5px;left:3px;width:12px;height:5px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1} /*# sourceMappingURL=pseudo-checkbox.css.map */ \"],\n                template: '',\n                host: {\n                    '[class.mat-pseudo-checkbox]': 'true',\n                    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                },\n            },] },\n];\n/**\n * @nocollapse\n */\nMdPseudoCheckbox.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n]; };\nMdPseudoCheckbox.propDecorators = {\n    'state': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'color': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\nvar MdSelectionModule = (function () {\n    function MdSelectionModule() {\n    }\n    return MdSelectionModule;\n}());\nMdSelectionModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                exports: [MdPseudoCheckbox],\n                declarations: [MdPseudoCheckbox]\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSelectionModule.ctorParameters = function () { return []; };\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nvar _uniqueIdCounter = 0;\n/**\n * Event object emitted by MdOption when selected or deselected.\n */\nvar MdOptionSelectionChange = (function () {\n    /**\n     * @param {?} source\n     * @param {?=} isUserInput\n     */\n    function MdOptionSelectionChange(source, isUserInput) {\n        if (isUserInput === void 0) { isUserInput = false; }\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n    return MdOptionSelectionChange;\n}());\n/**\n * Single option inside of a `<md-select>` element.\n */\nvar MdOption = (function () {\n    /**\n     * @param {?} _element\n     * @param {?} _renderer\n     * @param {?} _isCompatibilityMode\n     */\n    function MdOption(_element, _renderer, _isCompatibilityMode) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._isCompatibilityMode = _isCompatibilityMode;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._id = \"md-option-\" + _uniqueIdCounter++;\n        /** Whether the wrapping component is in multiple selection mode. */\n        this.multiple = false;\n        /** Event emitted when the option is selected or deselected. */\n        this.onSelectionChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n    }\n    Object.defineProperty(MdOption.prototype, \"id\", {\n        /**\n         * The unique ID of the option.\n         * @return {?}\n         */\n        get: function () { return this._id; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdOption.prototype, \"selected\", {\n        /**\n         * Whether or not the option is currently selected.\n         * @return {?}\n         */\n        get: function () { return this._selected; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdOption.prototype, \"disabled\", {\n        /**\n         * Whether the option is disabled.\n         * @return {?}\n         */\n        get: function () { return this._disabled; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._disabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdOption.prototype, \"active\", {\n        /**\n         * Whether or not the option is currently active and ready to be selected.\n         * An active option displays styles as if it is focused, but the\n         * focus is actually retained somewhere else. This comes in handy\n         * for components like autocomplete where focus must remain on the input.\n         * @return {?}\n         */\n        get: function () {\n            return this._active;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdOption.prototype, \"viewValue\", {\n        /**\n         * The displayed value of the option. It is necessary to show the selected option in the\n         * select's trigger.\n         * @return {?}\n         */\n        get: function () {\n            // TODO(kara): Add input property alternative for node envs.\n            return this._getHostElement().textContent.trim();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Selects the option.\n     * @return {?}\n     */\n    MdOption.prototype.select = function () {\n        this._selected = true;\n        this._emitSelectionChangeEvent();\n    };\n    /**\n     * Deselects the option.\n     * @return {?}\n     */\n    MdOption.prototype.deselect = function () {\n        this._selected = false;\n        this._emitSelectionChangeEvent();\n    };\n    /**\n     * Sets focus onto this option.\n     * @return {?}\n     */\n    MdOption.prototype.focus = function () {\n        this._renderer.invokeElementMethod(this._getHostElement(), 'focus');\n    };\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    MdOption.prototype.setActiveStyles = function () {\n        this._active = true;\n    };\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    MdOption.prototype.setInactiveStyles = function () {\n        this._active = false;\n    };\n    /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    MdOption.prototype._handleKeydown = function (event) {\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n        }\n    };\n    /**\n     * Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.\n     * @return {?}\n     */\n    MdOption.prototype._selectViaInteraction = function () {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._emitSelectionChangeEvent(true);\n        }\n    };\n    /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n    MdOption.prototype._getTabIndex = function () {\n        return this.disabled ? '-1' : '0';\n    };\n    /**\n     * Fetches the host DOM element.\n     * @return {?}\n     */\n    MdOption.prototype._getHostElement = function () {\n        return this._element.nativeElement;\n    };\n    /**\n     * Emits the selection change event.\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    MdOption.prototype._emitSelectionChangeEvent = function (isUserInput) {\n        if (isUserInput === void 0) { isUserInput = false; }\n        this.onSelectionChange.emit(new MdOptionSelectionChange(this, isUserInput));\n    };\n    ;\n    return MdOption;\n}());\nMdOption.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-option, mat-option',\n                host: {\n                    'role': 'option',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[class.mat-selected]': 'selected',\n                    '[class.mat-option-multiple]': 'multiple',\n                    '[class.mat-active]': 'active',\n                    '[id]': 'id',\n                    '[attr.aria-selected]': 'selected.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[class.mat-option-disabled]': 'disabled',\n                    '(click)': '_selectViaInteraction()',\n                    '(keydown)': '_handleKeydown($event)',\n                    '[class.mat-option]': 'true',\n                },\n                template: \"<span [ngSwitch]=\\\"_isCompatibilityMode\\\" *ngIf=\\\"multiple\\\"> <mat-pseudo-checkbox class=\\\"mat-option-pseudo-checkbox\\\" *ngSwitchCase=\\\"true\\\" [state]=\\\"selected ? 'checked' : ''\\\" color=\\\"primary\\\"></mat-pseudo-checkbox> <md-pseudo-checkbox class=\\\"mat-option-pseudo-checkbox\\\" *ngSwitchDefault [state]=\\\"selected ? 'checked' : ''\\\" color=\\\"primary\\\"></md-pseudo-checkbox> </span> <ng-content></ng-content> <div class=\\\"mat-option-ripple\\\" *ngIf=\\\"!disabled\\\" md-ripple [mdRippleTrigger]=\\\"_getHostElement()\\\"> </div> \",\n                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None\n            },] },\n];\n/**\n * @nocollapse\n */\nMdOption.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [MATERIAL_COMPATIBILITY_MODE,] },] },\n]; };\nMdOption.propDecorators = {\n    'value': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'onSelectionChange': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n};\nvar MdOptionModule = (function () {\n    function MdOptionModule() {\n    }\n    /**\n     * @return {?}\n     */\n    MdOptionModule.forRoot = function () {\n        return {\n            ngModule: MdOptionModule,\n            providers: []\n        };\n    };\n    return MdOptionModule;\n}());\nMdOptionModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [MdRippleModule, __WEBPACK_IMPORTED_MODULE_2__angular_common__[\"CommonModule\"], MdSelectionModule],\n                exports: [MdOption],\n                declarations: [MdOption]\n            },] },\n];\n/**\n * @nocollapse\n */\nMdOptionModule.ctorParameters = function () { return []; };\n/**\n * Wrapper around Error that sets the error message.\n * \\@docs-private\n */\nvar MdError = (function (_super) {\n    __extends(MdError, _super);\n    /**\n     * @param {?} value\n     */\n    function MdError(value) {\n        var _this = _super.call(this) || this;\n        _this.message = value;\n        return _this;\n    }\n    return MdError;\n}(Error));\n/**\n * Exception thrown when attempting to attach a null portal to a host.\n * \\@docs-private\n */\nvar NullPortalError = (function (_super) {\n    __extends(NullPortalError, _super);\n    function NullPortalError() {\n        return _super.call(this, 'Must provide a portal to attach') || this;\n    }\n    return NullPortalError;\n}(MdError));\n/**\n * Exception thrown when attempting to attach a portal to a host that is already attached.\n * \\@docs-private\n */\nvar PortalAlreadyAttachedError = (function (_super) {\n    __extends(PortalAlreadyAttachedError, _super);\n    function PortalAlreadyAttachedError() {\n        return _super.call(this, 'Host already has a portal attached') || this;\n    }\n    return PortalAlreadyAttachedError;\n}(MdError));\n/**\n * Exception thrown when attempting to attach a portal to an already-disposed host.\n * \\@docs-private\n */\nvar PortalHostAlreadyDisposedError = (function (_super) {\n    __extends(PortalHostAlreadyDisposedError, _super);\n    function PortalHostAlreadyDisposedError() {\n        return _super.call(this, 'This PortalHost has already been disposed') || this;\n    }\n    return PortalHostAlreadyDisposedError;\n}(MdError));\n/**\n * Exception thrown when attempting to attach an unknown portal type.\n * \\@docs-private\n */\nvar UnknownPortalTypeError = (function (_super) {\n    __extends(UnknownPortalTypeError, _super);\n    function UnknownPortalTypeError() {\n        return _super.call(this, 'Attempting to attach an unknown Portal type. ' +\n            'BasePortalHost accepts either a ComponentPortal or a TemplatePortal.') || this;\n    }\n    return UnknownPortalTypeError;\n}(MdError));\n/**\n * Exception thrown when attempting to attach a portal to a null host.\n * \\@docs-private\n */\nvar NullPortalHostError = (function (_super) {\n    __extends(NullPortalHostError, _super);\n    function NullPortalHostError() {\n        return _super.call(this, 'Attempting to attach a portal to a null PortalHost') || this;\n    }\n    return NullPortalHostError;\n}(MdError));\n/**\n * Exception thrown when attempting to detach a portal that is not attached.\n * \\@docs-private\n */\nvar NoPortalAttachedError = (function (_super) {\n    __extends(NoPortalAttachedError, _super);\n    function NoPortalAttachedError() {\n        return _super.call(this, 'Attempting to detach a portal that is not attached to a host') || this;\n    }\n    return NoPortalAttachedError;\n}(MdError));\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalHost`.\n * @abstract\n */\nvar Portal = (function () {\n    function Portal() {\n    }\n    /**\n     * Attach this portal to a host.\n     * @param {?} host\n     * @return {?}\n     */\n    Portal.prototype.attach = function (host) {\n        if (host == null) {\n            throw new NullPortalHostError();\n        }\n        if (host.hasAttached()) {\n            throw new PortalAlreadyAttachedError();\n        }\n        this._attachedHost = host;\n        return (host.attach(this));\n    };\n    /**\n     * Detach this portal from its host\n     * @return {?}\n     */\n    Portal.prototype.detach = function () {\n        var /** @type {?} */ host = this._attachedHost;\n        if (host == null) {\n            throw new NoPortalAttachedError();\n        }\n        this._attachedHost = null;\n        return host.detach();\n    };\n    Object.defineProperty(Portal.prototype, \"isAttached\", {\n        /**\n         * Whether this portal is attached to a host.\n         * @return {?}\n         */\n        get: function () {\n            return this._attachedHost != null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the PortalHost reference without performing `attach()`. This is used directly by\n     * the PortalHost when it is performing an `attach()` or `detach()`.\n     * @param {?} host\n     * @return {?}\n     */\n    Portal.prototype.setAttachedHost = function (host) {\n        this._attachedHost = host;\n    };\n    return Portal;\n}());\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nvar ComponentPortal = (function (_super) {\n    __extends(ComponentPortal, _super);\n    /**\n     * @param {?} component\n     * @param {?=} viewContainerRef\n     * @param {?=} injector\n     */\n    function ComponentPortal(component, viewContainerRef, injector) {\n        if (viewContainerRef === void 0) { viewContainerRef = null; }\n        if (injector === void 0) { injector = null; }\n        var _this = _super.call(this) || this;\n        _this.component = component;\n        _this.viewContainerRef = viewContainerRef;\n        _this.injector = injector;\n        return _this;\n    }\n    return ComponentPortal;\n}(Portal));\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nvar TemplatePortal = (function (_super) {\n    __extends(TemplatePortal, _super);\n    /**\n     * @param {?} template\n     * @param {?} viewContainerRef\n     */\n    function TemplatePortal(template, viewContainerRef) {\n        var _this = _super.call(this) || this;\n        /**\n         * Additional locals for the instantiated embedded view.\n         * These locals can be seen as \"exports\" for the template, such as how ngFor has\n         * index / event / odd.\n         * See https://angular.io/docs/ts/latest/api/core/EmbeddedViewRef-class.html\n         */\n        _this.locals = new Map();\n        _this.templateRef = template;\n        _this.viewContainerRef = viewContainerRef;\n        return _this;\n    }\n    Object.defineProperty(TemplatePortal.prototype, \"origin\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.templateRef.elementRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} host\n     * @param {?=} locals\n     * @return {?}\n     */\n    TemplatePortal.prototype.attach = function (host, locals) {\n        this.locals = locals == null ? new Map() : locals;\n        return _super.prototype.attach.call(this, host);\n    };\n    /**\n     * @return {?}\n     */\n    TemplatePortal.prototype.detach = function () {\n        this.locals = new Map();\n        return _super.prototype.detach.call(this);\n    };\n    return TemplatePortal;\n}(Portal));\n/**\n * Partial implementation of PortalHost that only deals with attaching either a\n * ComponentPortal or a TemplatePortal.\n * @abstract\n */\nvar BasePortalHost = (function () {\n    function BasePortalHost() {\n        this._isDisposed = false;\n    }\n    /**\n     * Whether this host has an attached portal.\n     * @return {?}\n     */\n    BasePortalHost.prototype.hasAttached = function () {\n        return !!this._attachedPortal;\n    };\n    /**\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalHost.prototype.attach = function (portal) {\n        if (!portal) {\n            throw new NullPortalError();\n        }\n        if (this.hasAttached()) {\n            throw new PortalAlreadyAttachedError();\n        }\n        if (this._isDisposed) {\n            throw new PortalHostAlreadyDisposedError();\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n        }\n        throw new UnknownPortalTypeError();\n    };\n    /**\n     * @abstract\n     * @template T\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalHost.prototype.attachComponentPortal = function (portal) { };\n    /**\n     * @abstract\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalHost.prototype.attachTemplatePortal = function (portal) { };\n    /**\n     * @return {?}\n     */\n    BasePortalHost.prototype.detach = function () {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    };\n    /**\n     * @return {?}\n     */\n    BasePortalHost.prototype.dispose = function () {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    BasePortalHost.prototype.setDisposeFn = function (fn) {\n        this._disposeFn = fn;\n    };\n    /**\n     * @return {?}\n     */\n    BasePortalHost.prototype._invokeDisposeFn = function () {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    };\n    return BasePortalHost;\n}());\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n *\n * Usage:\n * <ng-template portal #greeting>\n *   <p> Hello {{name}} </p>\n * </ng-template>\n */\nvar TemplatePortalDirective = (function (_super) {\n    __extends(TemplatePortalDirective, _super);\n    /**\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     */\n    function TemplatePortalDirective(templateRef, viewContainerRef) {\n        return _super.call(this, templateRef, viewContainerRef) || this;\n    }\n    return TemplatePortalDirective;\n}(TemplatePortal));\nTemplatePortalDirective.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[cdk-portal], [portal]',\n                exportAs: 'cdkPortal',\n            },] },\n];\n/**\n * @nocollapse\n */\nTemplatePortalDirective.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"TemplateRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewContainerRef\"], },\n]; };\n/**\n * Directive version of a PortalHost. Because the directive *is* a PortalHost, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * <ng-template [cdkPortalHost]=\"greeting\"></ng-template>\n */\nvar PortalHostDirective = (function (_super) {\n    __extends(PortalHostDirective, _super);\n    /**\n     * @param {?} _componentFactoryResolver\n     * @param {?} _viewContainerRef\n     */\n    function PortalHostDirective(_componentFactoryResolver, _viewContainerRef) {\n        var _this = _super.call(this) || this;\n        _this._componentFactoryResolver = _componentFactoryResolver;\n        _this._viewContainerRef = _viewContainerRef;\n        return _this;\n    }\n    Object.defineProperty(PortalHostDirective.prototype, \"_deprecatedPortal\", {\n        /**\n         * @deprecated\n         * @return {?}\n         */\n        get: function () { return this.portal; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this.portal = v; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PortalHostDirective.prototype, \"portal\", {\n        /**\n         * Portal associated with the Portal host.\n         * @return {?}\n         */\n        get: function () {\n            return this._portal;\n        },\n        /**\n         * @param {?} portal\n         * @return {?}\n         */\n        set: function (portal) {\n            if (this.hasAttached()) {\n                _super.prototype.detach.call(this);\n            }\n            if (portal) {\n                _super.prototype.attach.call(this, portal);\n            }\n            this._portal = portal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    PortalHostDirective.prototype.ngOnDestroy = function () {\n        _super.prototype.dispose.call(this);\n        this._portal = null;\n    };\n    /**\n     * Attach the given ComponentPortal to this PortalHost using the ComponentFactoryResolver.\n     *\n     * @template T\n     * @param {?} portal Portal to be attached to the portal host.\n     * @return {?}\n     */\n    PortalHostDirective.prototype.attachComponentPortal = function (portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalHost.\n        var /** @type {?} */ viewContainerRef = portal.viewContainerRef != null ?\n            portal.viewContainerRef :\n            this._viewContainerRef;\n        var /** @type {?} */ componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n        var /** @type {?} */ ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.parentInjector);\n        _super.prototype.setDisposeFn.call(this, function () { return ref.destroy(); });\n        this._portal = portal;\n        return ref;\n    };\n    /**\n     * Attach the given TemplatePortal to this PortlHost as an embedded View.\n     * @param {?} portal Portal to be attached.\n     * @return {?}\n     */\n    PortalHostDirective.prototype.attachTemplatePortal = function (portal) {\n        var _this = this;\n        portal.setAttachedHost(this);\n        this._viewContainerRef.createEmbeddedView(portal.templateRef);\n        _super.prototype.setDisposeFn.call(this, function () { return _this._viewContainerRef.clear(); });\n        this._portal = portal;\n        // TODO(jelbourn): return locals from view\n        return new Map();\n    };\n    return PortalHostDirective;\n}(BasePortalHost));\nPortalHostDirective.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[cdkPortalHost], [portalHost]',\n                inputs: ['portal: cdkPortalHost']\n            },] },\n];\n/**\n * @nocollapse\n */\nPortalHostDirective.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ComponentFactoryResolver\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewContainerRef\"], },\n]; };\nPortalHostDirective.propDecorators = {\n    '_deprecatedPortal': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['portalHost',] },],\n};\nvar PortalModule = (function () {\n    function PortalModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    PortalModule.forRoot = function () {\n        return {\n            ngModule: PortalModule,\n            providers: []\n        };\n    };\n    return PortalModule;\n}());\nPortalModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                exports: [TemplatePortalDirective, PortalHostDirective],\n                declarations: [TemplatePortalDirective, PortalHostDirective],\n            },] },\n];\n/**\n * @nocollapse\n */\nPortalModule.ctorParameters = function () { return []; };\n/**\n * OverlayState is a bag of values for either the initial configuration or current state of an\n * overlay.\n */\nvar OverlayState = (function () {\n    function OverlayState() {\n        /** Whether the overlay has a backdrop. */\n        this.hasBackdrop = false;\n        /** Custom class to add to the backdrop **/\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /** The direction of the text in the overlay panel. */\n        this.direction = 'ltr';\n        // TODO(jelbourn): configuration still to add\n        // - focus trap\n        // - disable pointer events\n        // - z-index\n    }\n    return OverlayState;\n}());\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n *\n * This is the only part of the portal core that directly touches the DOM.\n */\nvar DomPortalHost = (function (_super) {\n    __extends(DomPortalHost, _super);\n    /**\n     * @param {?} _hostDomElement\n     * @param {?} _componentFactoryResolver\n     * @param {?} _appRef\n     * @param {?} _defaultInjector\n     */\n    function DomPortalHost(_hostDomElement, _componentFactoryResolver, _appRef, _defaultInjector) {\n        var _this = _super.call(this) || this;\n        _this._hostDomElement = _hostDomElement;\n        _this._componentFactoryResolver = _componentFactoryResolver;\n        _this._appRef = _appRef;\n        _this._defaultInjector = _defaultInjector;\n        return _this;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @template T\n     * @param {?} portal Portal to be attached\n     * @return {?}\n     */\n    DomPortalHost.prototype.attachComponentPortal = function (portal) {\n        var _this = this;\n        var /** @type {?} */ componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n        var /** @type {?} */ componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.parentInjector);\n            this.setDisposeFn(function () { return componentRef.destroy(); });\n        }\n        else {\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn(function () {\n                _this._appRef.detachView(componentRef.hostView);\n                componentRef.destroy();\n            });\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this._hostDomElement.appendChild(this._getComponentRootNode(componentRef));\n        return componentRef;\n    };\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @param {?} portal Portal to be attached.\n     * @return {?}\n     */\n    DomPortalHost.prototype.attachTemplatePortal = function (portal) {\n        var _this = this;\n        var /** @type {?} */ viewContainer = portal.viewContainerRef;\n        var /** @type {?} */ viewRef = viewContainer.createEmbeddedView(portal.templateRef);\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalHost the view can be added everywhere in the DOM (e.g Overlay Container)\n        // To move the view to the specified host element. We just re-append the existing root nodes.\n        viewRef.rootNodes.forEach(function (rootNode) { return _this._hostDomElement.appendChild(rootNode); });\n        this.setDisposeFn((function () {\n            var /** @type {?} */ index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        }));\n        // TODO(jelbourn): Return locals from view.\n        return new Map();\n    };\n    /**\n     * Clears out a portal from the DOM.\n     * @return {?}\n     */\n    DomPortalHost.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (this._hostDomElement.parentNode != null) {\n            this._hostDomElement.parentNode.removeChild(this._hostDomElement);\n        }\n    };\n    /**\n     * Gets the root HTMLElement for an instantiated component.\n     * @param {?} componentRef\n     * @return {?}\n     */\n    DomPortalHost.prototype._getComponentRootNode = function (componentRef) {\n        return (((componentRef.hostView)).rootNodes[0]);\n    };\n    return DomPortalHost;\n}(BasePortalHost));\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nvar OverlayRef = (function () {\n    /**\n     * @param {?} _portalHost\n     * @param {?} _pane\n     * @param {?} _state\n     * @param {?} _ngZone\n     */\n    function OverlayRef(_portalHost, _pane, _state, _ngZone) {\n        this._portalHost = _portalHost;\n        this._pane = _pane;\n        this._state = _state;\n        this._ngZone = _ngZone;\n        this._backdropElement = null;\n        this._backdropClick = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__[\"Subject\"]();\n    }\n    Object.defineProperty(OverlayRef.prototype, \"overlayElement\", {\n        /**\n         * The overlay's HTML element\n         * @return {?}\n         */\n        get: function () {\n            return this._pane;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Attaches the overlay to a portal instance and adds the backdrop.\n     * @param {?} portal Portal instance to which to attach the overlay.\n     * @return {?} The portal attachment result.\n     */\n    OverlayRef.prototype.attach = function (portal) {\n        var /** @type {?} */ attachResult = this._portalHost.attach(portal);\n        // Update the pane element with the given state configuration.\n        this._updateStackingOrder();\n        this.updateSize();\n        this.updateDirection();\n        this.updatePosition();\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._state.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        return attachResult;\n    };\n    /**\n     * Detaches an overlay from a portal.\n     * @return {?} Resolves when the overlay has been detached.\n     */\n    OverlayRef.prototype.detach = function () {\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        return this._portalHost.detach();\n    };\n    /**\n     * Cleans up the overlay from the DOM.\n     * @return {?}\n     */\n    OverlayRef.prototype.dispose = function () {\n        if (this._state.positionStrategy) {\n            this._state.positionStrategy.dispose();\n        }\n        this.detachBackdrop();\n        this._portalHost.dispose();\n    };\n    /**\n     * Checks whether the overlay has been attached.\n     * @return {?}\n     */\n    OverlayRef.prototype.hasAttached = function () {\n        return this._portalHost.hasAttached();\n    };\n    /**\n     * Returns an observable that emits when the backdrop has been clicked.\n     * @return {?}\n     */\n    OverlayRef.prototype.backdropClick = function () {\n        return this._backdropClick.asObservable();\n    };\n    /**\n     * Gets the current state config of the overlay.\n     * @return {?}\n     */\n    OverlayRef.prototype.getState = function () {\n        return this._state;\n    };\n    /**\n     * Updates the position of the overlay based on the position strategy.\n     * @return {?}\n     */\n    OverlayRef.prototype.updatePosition = function () {\n        if (this._state.positionStrategy) {\n            this._state.positionStrategy.apply(this._pane);\n        }\n    };\n    /**\n     * Updates the text direction of the overlay panel. *\n     * @return {?}\n     */\n    OverlayRef.prototype.updateDirection = function () {\n        this._pane.setAttribute('dir', this._state.direction);\n    };\n    /**\n     * Updates the size of the overlay based on the overlay config.\n     * @return {?}\n     */\n    OverlayRef.prototype.updateSize = function () {\n        if (this._state.width || this._state.width === 0) {\n            this._pane.style.width = formatCssUnit(this._state.width);\n        }\n        if (this._state.height || this._state.height === 0) {\n            this._pane.style.height = formatCssUnit(this._state.height);\n        }\n        if (this._state.minWidth || this._state.minWidth === 0) {\n            this._pane.style.minWidth = formatCssUnit(this._state.minWidth);\n        }\n        if (this._state.minHeight || this._state.minHeight === 0) {\n            this._pane.style.minHeight = formatCssUnit(this._state.minHeight);\n        }\n    };\n    /**\n     * Toggles the pointer events for the overlay pane element.\n     * @param {?} enablePointer\n     * @return {?}\n     */\n    OverlayRef.prototype._togglePointerEvents = function (enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? 'auto' : 'none';\n    };\n    /**\n     * Attaches a backdrop for this overlay.\n     * @return {?}\n     */\n    OverlayRef.prototype._attachBackdrop = function () {\n        var _this = this;\n        this._backdropElement = document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        this._backdropElement.classList.add(this._state.backdropClass);\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        this._pane.parentElement.insertBefore(this._backdropElement, this._pane);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', function () { return _this._backdropClick.next(null); });\n        // Add class to fade-in the backdrop after one frame.\n        requestAnimationFrame(function () {\n            if (_this._backdropElement) {\n                _this._backdropElement.classList.add('cdk-overlay-backdrop-showing');\n            }\n        });\n    };\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     * @return {?}\n     */\n    OverlayRef.prototype._updateStackingOrder = function () {\n        if (this._pane.nextSibling) {\n            this._pane.parentNode.appendChild(this._pane);\n        }\n    };\n    /**\n     * Detaches the backdrop (if any) associated with the overlay.\n     * @return {?}\n     */\n    OverlayRef.prototype.detachBackdrop = function () {\n        var _this = this;\n        var /** @type {?} */ backdropToDetach = this._backdropElement;\n        if (backdropToDetach) {\n            var /** @type {?} */ finishDetach_1 = function () {\n                // It may not be attached to anything in certain cases (e.g. unit tests).\n                if (backdropToDetach && backdropToDetach.parentNode) {\n                    backdropToDetach.parentNode.removeChild(backdropToDetach);\n                }\n                // It is possible that a new portal has been attached to this overlay since we started\n                // removing the backdrop. If that is the case, only clear the backdrop reference if it\n                // is still the same instance that we started to remove.\n                if (_this._backdropElement == backdropToDetach) {\n                    _this._backdropElement = null;\n                }\n            };\n            backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n            backdropToDetach.classList.remove(this._state.backdropClass);\n            backdropToDetach.addEventListener('transitionend', finishDetach_1);\n            // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n            // In this case we make it unclickable and we try to remove it after a delay.\n            backdropToDetach.style.pointerEvents = 'none';\n            // Run this outside the Angular zone because there's nothing that Angular cares about.\n            // If it were to run inside the Angular zone, every test that used Overlay would have to be\n            // either async or fakeAsync.\n            this._ngZone.runOutsideAngular(function () {\n                setTimeout(finishDetach_1, 500);\n            });\n        }\n    };\n    return OverlayRef;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction formatCssUnit(value) {\n    return typeof value === 'string' ? (value) : value + \"px\";\n}\n/** Horizontal dimension of a connection point on the perimeter of the origin or overlay element. */\n/**\n * The points of the origin element and the overlay element to connect.\n */\nvar ConnectionPositionPair = (function () {\n    /**\n     * @param {?} origin\n     * @param {?} overlay\n     */\n    function ConnectionPositionPair(origin, overlay) {\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n    return ConnectionPositionPair;\n}());\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n */\nvar ScrollableViewProperties = (function () {\n    function ScrollableViewProperties() {\n    }\n    return ScrollableViewProperties;\n}());\n/**\n * The change event emitted by the strategy when a fallback position is used.\n */\nvar ConnectedOverlayPositionChange = (function () {\n    /**\n     * @param {?} connectionPair\n     * @param {?} scrollableViewProperties\n     */\n    function ConnectedOverlayPositionChange(connectionPair, scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n    return ConnectedOverlayPositionChange;\n}());\n/**\n * @nocollapse\n */\nConnectedOverlayPositionChange.ctorParameters = function () { return [\n    { type: ConnectionPositionPair, },\n    { type: ScrollableViewProperties, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] },] },\n]; };\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nvar ConnectedPositionStrategy = (function () {\n    /**\n     * @param {?} _connectedTo\n     * @param {?} _originPos\n     * @param {?} _overlayPos\n     * @param {?} _viewportRuler\n     */\n    function ConnectedPositionStrategy(_connectedTo, _originPos, _overlayPos, _viewportRuler) {\n        this._connectedTo = _connectedTo;\n        this._originPos = _originPos;\n        this._overlayPos = _overlayPos;\n        this._viewportRuler = _viewportRuler;\n        this._dir = 'ltr';\n        this._offsetX = 0;\n        this._offsetY = 0;\n        this.scrollables = [];\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        this._onPositionChange = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__[\"Subject\"]();\n        this._origin = this._connectedTo.nativeElement;\n        this.withFallbackPosition(_originPos, _overlayPos);\n    }\n    Object.defineProperty(ConnectedPositionStrategy.prototype, \"_isRtl\", {\n        /**\n         * Whether the we're dealing with an RTL context\n         * @return {?}\n         */\n        get: function () {\n            return this._dir === 'rtl';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectedPositionStrategy.prototype, \"onPositionChange\", {\n        /**\n         * Emits an event when the connection point changes.\n         * @return {?}\n         */\n        get: function () {\n            return this._onPositionChange.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectedPositionStrategy.prototype, \"positions\", {\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         * @return {?}\n         */\n        get: function () {\n            return this._preferredPositions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * To be used to for any cleanup after the element gets destroyed.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.dispose = function () { };\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * \\@docs-private\n     *\n     * @param {?} element Element to which to apply the CSS styles.\n     * @return {?} Resolves when the styles have been applied.\n     */\n    ConnectedPositionStrategy.prototype.apply = function (element) {\n        // Cache the overlay pane element in case re-calculating position is necessary\n        this._pane = element;\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        var /** @type {?} */ originRect = this._origin.getBoundingClientRect();\n        var /** @type {?} */ overlayRect = element.getBoundingClientRect();\n        // We use the viewport rect to determine whether a position would go off-screen.\n        var /** @type {?} */ viewportRect = this._viewportRuler.getViewportRect();\n        // Fallback point if none of the fallbacks fit into the viewport.\n        var /** @type {?} */ fallbackPoint = null;\n        // We want to place the overlay in the first of the preferred positions such that the\n        // overlay fits on-screen.\n        for (var _i = 0, _a = this._preferredPositions; _i < _a.length; _i++) {\n            var pos = _a[_i];\n            // Get the (x, y) point of connection on the origin, and then use that to get the\n            // (top, left) coordinate for the overlay at `pos`.\n            var /** @type {?} */ originPoint = this._getOriginConnectionPoint(originRect, pos);\n            var /** @type {?} */ overlayPoint = this._getOverlayPoint(originPoint, overlayRect, viewportRect, pos);\n            // If the overlay in the calculated position fits on-screen, put it there and we're done.\n            if (overlayPoint.fitsInViewport) {\n                this._setElementPosition(element, overlayPoint);\n                // Save the last connected position in case the position needs to be re-calculated.\n                this._lastConnectedPosition = pos;\n                // Notify that the position has been changed along with its change properties.\n                var /** @type {?} */ scrollableViewProperties = this.getScrollableViewProperties(element);\n                var /** @type {?} */ positionChange = new ConnectedOverlayPositionChange(pos, scrollableViewProperties);\n                this._onPositionChange.next(positionChange);\n                return Promise.resolve(null);\n            }\n            else if (!fallbackPoint || fallbackPoint.visibleArea < overlayPoint.visibleArea) {\n                fallbackPoint = overlayPoint;\n            }\n        }\n        // If none of the preferred positions were in the viewport, take the one\n        // with the largest visible area.\n        this._setElementPosition(element, fallbackPoint);\n        return Promise.resolve(null);\n    };\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.recalculateLastPosition = function () {\n        var /** @type {?} */ originRect = this._origin.getBoundingClientRect();\n        var /** @type {?} */ overlayRect = this._pane.getBoundingClientRect();\n        var /** @type {?} */ viewportRect = this._viewportRuler.getViewportRect();\n        var /** @type {?} */ lastPosition = this._lastConnectedPosition || this._preferredPositions[0];\n        var /** @type {?} */ originPoint = this._getOriginConnectionPoint(originRect, lastPosition);\n        var /** @type {?} */ overlayPoint = this._getOverlayPoint(originPoint, overlayRect, viewportRect, lastPosition);\n        this._setElementPosition(this._pane, overlayPoint);\n    };\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @param {?} scrollables\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withScrollableContainers = function (scrollables) {\n        this.scrollables = scrollables;\n    };\n    /**\n     * Adds a new preferred fallback position.\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withFallbackPosition = function (originPos, overlayPos) {\n        this._preferredPositions.push(new ConnectionPositionPair(originPos, overlayPos));\n        return this;\n    };\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @param {?} dir New layout direction.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withDirection = function (dir) {\n        this._dir = dir;\n        return this;\n    };\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @param {?} offset New offset in the X axis.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withOffsetX = function (offset) {\n        this._offsetX = offset;\n        return this;\n    };\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @param {?} offset New offset in the Y axis.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withOffsetY = function (offset) {\n        this._offsetY = offset;\n        return this;\n    };\n    /**\n     * Gets the horizontal (x) \"start\" dimension based on whether the overlay is in an RTL context.\n     * @param {?} rect\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype._getStartX = function (rect) {\n        return this._isRtl ? rect.right : rect.left;\n    };\n    /**\n     * Gets the horizontal (x) \"end\" dimension based on whether the overlay is in an RTL context.\n     * @param {?} rect\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype._getEndX = function (rect) {\n        return this._isRtl ? rect.left : rect.right;\n    };\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     * @param {?} originRect\n     * @param {?} pos\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype._getOriginConnectionPoint = function (originRect, pos) {\n        var /** @type {?} */ originStartX = this._getStartX(originRect);\n        var /** @type {?} */ originEndX = this._getEndX(originRect);\n        var /** @type {?} */ x;\n        if (pos.originX == 'center') {\n            x = originStartX + (originRect.width / 2);\n        }\n        else {\n            x = pos.originX == 'start' ? originStartX : originEndX;\n        }\n        var /** @type {?} */ y;\n        if (pos.originY == 'center') {\n            y = originRect.top + (originRect.height / 2);\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected, as well as how much of the element\n     * would be inside the viewport at that position.\n     * @param {?} originPoint\n     * @param {?} overlayRect\n     * @param {?} viewportRect\n     * @param {?} pos\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype._getOverlayPoint = function (originPoint, overlayRect, viewportRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the potential overlay position\n        // relative to the origin point.\n        var /** @type {?} */ overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl ? 0 : -overlayRect.width;\n        }\n        var /** @type {?} */ overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        var /** @type {?} */ x = originPoint.x + overlayStartX + this._offsetX;\n        var /** @type {?} */ y = originPoint.y + overlayStartY + this._offsetY;\n        // How much the overlay would overflow at this position, on each side.\n        var /** @type {?} */ leftOverflow = 0 - x;\n        var /** @type {?} */ rightOverflow = (x + overlayRect.width) - viewportRect.width;\n        var /** @type {?} */ topOverflow = 0 - y;\n        var /** @type {?} */ bottomOverflow = (y + overlayRect.height) - viewportRect.height;\n        // Visible parts of the element on each axis.\n        var /** @type {?} */ visibleWidth = this._subtractOverflows(overlayRect.width, leftOverflow, rightOverflow);\n        var /** @type {?} */ visibleHeight = this._subtractOverflows(overlayRect.height, topOverflow, bottomOverflow);\n        // The area of the element that's within the viewport.\n        var /** @type {?} */ visibleArea = visibleWidth * visibleHeight;\n        var /** @type {?} */ fitsInViewport = (overlayRect.width * overlayRect.height) === visibleArea;\n        return { x: x, y: y, fitsInViewport: fitsInViewport, visibleArea: visibleArea };\n    };\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     * @param {?} overlay\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.getScrollableViewProperties = function (overlay) {\n        var _this = this;\n        var /** @type {?} */ originBounds = this._getElementBounds(this._origin);\n        var /** @type {?} */ overlayBounds = this._getElementBounds(overlay);\n        var /** @type {?} */ scrollContainerBounds = this.scrollables.map(function (scrollable) {\n            return _this._getElementBounds(scrollable.getElementRef().nativeElement);\n        });\n        return {\n            isOriginClipped: this.isElementClipped(originBounds, scrollContainerBounds),\n            isOriginOutsideView: this.isElementOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: this.isElementClipped(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: this.isElementOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    };\n    /**\n     * Whether the element is completely out of the view of any of the containers.\n     * @param {?} elementBounds\n     * @param {?} containersBounds\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.isElementOutsideView = function (elementBounds, containersBounds) {\n        return containersBounds.some(function (containerBounds) {\n            var /** @type {?} */ outsideAbove = elementBounds.bottom < containerBounds.top;\n            var /** @type {?} */ outsideBelow = elementBounds.top > containerBounds.bottom;\n            var /** @type {?} */ outsideLeft = elementBounds.right < containerBounds.left;\n            var /** @type {?} */ outsideRight = elementBounds.left > containerBounds.right;\n            return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n        });\n    };\n    /**\n     * Whether the element is clipped by any of the containers.\n     * @param {?} elementBounds\n     * @param {?} containersBounds\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.isElementClipped = function (elementBounds, containersBounds) {\n        return containersBounds.some(function (containerBounds) {\n            var /** @type {?} */ clippedAbove = elementBounds.top < containerBounds.top;\n            var /** @type {?} */ clippedBelow = elementBounds.bottom > containerBounds.bottom;\n            var /** @type {?} */ clippedLeft = elementBounds.left < containerBounds.left;\n            var /** @type {?} */ clippedRight = elementBounds.right > containerBounds.right;\n            return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n        });\n    };\n    /**\n     * Physically positions the overlay element to the given coordinate.\n     * @param {?} element\n     * @param {?} overlayPoint\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype._setElementPosition = function (element, overlayPoint) {\n        element.style.left = overlayPoint.x + 'px';\n        element.style.top = overlayPoint.y + 'px';\n    };\n    /**\n     * Returns the bounding positions of the provided element with respect to the viewport.\n     * @param {?} element\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype._getElementBounds = function (element) {\n        var /** @type {?} */ boundingClientRect = element.getBoundingClientRect();\n        return {\n            top: boundingClientRect.top,\n            right: boundingClientRect.left + boundingClientRect.width,\n            bottom: boundingClientRect.top + boundingClientRect.height,\n            left: boundingClientRect.left\n        };\n    };\n    /**\n     * Subtracts the amount that an element is overflowing on an axis from it's length.\n     * @param {?} length\n     * @param {...?} overflows\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype._subtractOverflows = function (length) {\n        var overflows = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            overflows[_i - 1] = arguments[_i];\n        }\n        return overflows.reduce(function (currentValue, currentOverflow) {\n            return currentValue - Math.max(currentOverflow, 0);\n        }, length);\n    };\n    return ConnectedPositionStrategy;\n}());\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nvar GlobalPositionStrategy = (function () {\n    function GlobalPositionStrategy() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param {?} value New top offset.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.top = function (value) {\n        this._bottomOffset = '';\n        this._topOffset = value;\n        this._alignItems = 'flex-start';\n        return this;\n    };\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param {?} value New left offset.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.left = function (value) {\n        this._rightOffset = '';\n        this._leftOffset = value;\n        this._justifyContent = 'flex-start';\n        return this;\n    };\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param {?} value New bottom offset.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.bottom = function (value) {\n        this._topOffset = '';\n        this._bottomOffset = value;\n        this._alignItems = 'flex-end';\n        return this;\n    };\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param {?} value New right offset.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.right = function (value) {\n        this._leftOffset = '';\n        this._rightOffset = value;\n        this._justifyContent = 'flex-end';\n        return this;\n    };\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @param {?} value New width for the overlay\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.width = function (value) {\n        this._width = value;\n        // When the width is 100%, we should reset the `left` and the offset,\n        // in order to ensure that the element is flush against the viewport edge.\n        if (value === '100%') {\n            this.left('0px');\n        }\n        return this;\n    };\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @param {?} value New height for the overlay\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.height = function (value) {\n        this._height = value;\n        // When the height is 100%, we should reset the `top` and the offset,\n        // in order to ensure that the element is flush against the viewport edge.\n        if (value === '100%') {\n            this.top('0px');\n        }\n        return this;\n    };\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param {?=} offset Overlay offset from the horizontal center.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.centerHorizontally = function (offset) {\n        if (offset === void 0) { offset = ''; }\n        this.left(offset);\n        this._justifyContent = 'center';\n        return this;\n    };\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param {?=} offset Overlay offset from the vertical center.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.centerVertically = function (offset) {\n        if (offset === void 0) { offset = ''; }\n        this.top(offset);\n        this._alignItems = 'center';\n        return this;\n    };\n    /**\n     * Apply the position to the element.\n     * \\@docs-private\n     *\n     * @param {?} element Element to which to apply the CSS.\n     * @return {?} Resolved when the styles have been applied.\n     */\n    GlobalPositionStrategy.prototype.apply = function (element) {\n        if (!this._wrapper) {\n            this._wrapper = document.createElement('div');\n            this._wrapper.classList.add('cdk-global-overlay-wrapper');\n            element.parentNode.insertBefore(this._wrapper, element);\n            this._wrapper.appendChild(element);\n        }\n        var /** @type {?} */ styles = element.style;\n        var /** @type {?} */ parentStyles = ((element.parentNode)).style;\n        styles.position = this._cssPosition;\n        styles.marginTop = this._topOffset;\n        styles.marginLeft = this._leftOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = this._rightOffset;\n        styles.width = this._width;\n        styles.height = this._height;\n        parentStyles.justifyContent = this._justifyContent;\n        parentStyles.alignItems = this._alignItems;\n        return Promise.resolve(null);\n    };\n    /**\n     * Removes the wrapper element from the DOM.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.dispose = function () {\n        if (this._wrapper && this._wrapper.parentNode) {\n            this._wrapper.parentNode.removeChild(this._wrapper);\n            this._wrapper = null;\n        }\n    };\n    return GlobalPositionStrategy;\n}());\n/**\n * Builder for overlay position strategy.\n */\nvar OverlayPositionBuilder = (function () {\n    /**\n     * @param {?} _viewportRuler\n     */\n    function OverlayPositionBuilder(_viewportRuler) {\n        this._viewportRuler = _viewportRuler;\n    }\n    /**\n     * Creates a global position strategy.\n     * @return {?}\n     */\n    OverlayPositionBuilder.prototype.global = function () {\n        return new GlobalPositionStrategy();\n    };\n    /**\n     * Creates a relative position strategy.\n     * @param {?} elementRef\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @return {?}\n     */\n    OverlayPositionBuilder.prototype.connectedTo = function (elementRef, originPos, overlayPos) {\n        return new ConnectedPositionStrategy(elementRef, originPos, overlayPos, this._viewportRuler);\n    };\n    return OverlayPositionBuilder;\n}());\nOverlayPositionBuilder.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nOverlayPositionBuilder.ctorParameters = function () { return [\n    { type: ViewportRuler, },\n]; };\n/**\n * The OverlayContainer is the container in which all overlays will load.\n * It should be provided in the root component to ensure it is properly shared.\n */\nvar OverlayContainer = (function () {\n    function OverlayContainer() {\n    }\n    Object.defineProperty(OverlayContainer.prototype, \"themeClass\", {\n        /**\n         * Base theme to be applied to all overlay-based components.\n         * @return {?}\n         */\n        get: function () { return this._themeClass; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._containerElement) {\n                this._containerElement.classList.remove(this._themeClass);\n                if (value) {\n                    this._containerElement.classList.add(value);\n                }\n            }\n            this._themeClass = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * This method returns the overlay container element.  It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @return {?} the container element\n     */\n    OverlayContainer.prototype.getContainerElement = function () {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    };\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     * @return {?}\n     */\n    OverlayContainer.prototype._createContainer = function () {\n        var /** @type {?} */ container = document.createElement('div');\n        container.classList.add('cdk-overlay-container');\n        if (this._themeClass) {\n            container.classList.add(this._themeClass);\n        }\n        document.body.appendChild(container);\n        this._containerElement = container;\n    };\n    return OverlayContainer;\n}());\nOverlayContainer.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nOverlayContainer.ctorParameters = function () { return []; };\n/**\n * @param {?} parentContainer\n * @return {?}\n */\nfunction OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer) {\n    return parentContainer || new OverlayContainer();\n}\nvar OVERLAY_CONTAINER_PROVIDER = {\n    // If there is already an OverlayContainer available, use that. Otherwise, provide a new one.\n    provide: OverlayContainer,\n    deps: [[new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"](), new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"SkipSelf\"](), OverlayContainer]],\n    useFactory: OVERLAY_CONTAINER_PROVIDER_FACTORY\n};\n/** Next overlay unique ID. */\nvar nextUniqueId = 0;\n/** The default state for newly created overlays. */\nvar defaultState = new OverlayState();\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\n */\nvar Overlay = (function () {\n    /**\n     * @param {?} _overlayContainer\n     * @param {?} _componentFactoryResolver\n     * @param {?} _positionBuilder\n     * @param {?} _appRef\n     * @param {?} _injector\n     * @param {?} _ngZone\n     */\n    function Overlay(_overlayContainer, _componentFactoryResolver, _positionBuilder, _appRef, _injector, _ngZone) {\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n    }\n    /**\n     * Creates an overlay.\n     * @param {?=} state State to apply to the overlay.\n     * @return {?} Reference to the created overlay.\n     */\n    Overlay.prototype.create = function (state$$1) {\n        if (state$$1 === void 0) { state$$1 = defaultState; }\n        return this._createOverlayRef(this._createPaneElement(), state$$1);\n    };\n    /**\n     * Returns a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @return {?}\n     */\n    Overlay.prototype.position = function () {\n        return this._positionBuilder;\n    };\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @return {?} Newly-created pane element\n     */\n    Overlay.prototype._createPaneElement = function () {\n        var /** @type {?} */ pane = document.createElement('div');\n        pane.id = \"cdk-overlay-\" + nextUniqueId++;\n        pane.classList.add('cdk-overlay-pane');\n        this._overlayContainer.getContainerElement().appendChild(pane);\n        return pane;\n    };\n    /**\n     * Create a DomPortalHost into which the overlay content can be loaded.\n     * @param {?} pane The DOM element to turn into a portal host.\n     * @return {?} A portal host for the given DOM element.\n     */\n    Overlay.prototype._createPortalHost = function (pane) {\n        return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef, this._injector);\n    };\n    /**\n     * Creates an OverlayRef for an overlay in the given DOM element.\n     * @param {?} pane DOM element for the overlay\n     * @param {?} state\n     * @return {?}\n     */\n    Overlay.prototype._createOverlayRef = function (pane, state$$1) {\n        return new OverlayRef(this._createPortalHost(pane), pane, state$$1, this._ngZone);\n    };\n    return Overlay;\n}());\nOverlay.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nOverlay.ctorParameters = function () { return [\n    { type: OverlayContainer, },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ComponentFactoryResolver\"], },\n    { type: OverlayPositionBuilder, },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ApplicationRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injector\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n]; };\n/** Providers for Overlay and its related injectables. */\nvar OVERLAY_PROVIDERS = [\n    Overlay,\n    OverlayPositionBuilder,\n    VIEWPORT_RULER_PROVIDER,\n    SCROLL_DISPATCHER_PROVIDER,\n    OVERLAY_CONTAINER_PROVIDER,\n];\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nvar Scrollable = (function () {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _scroll\n     * @param {?} _ngZone\n     * @param {?} _renderer\n     */\n    function Scrollable(_elementRef, _scroll, _ngZone, _renderer) {\n        this._elementRef = _elementRef;\n        this._scroll = _scroll;\n        this._ngZone = _ngZone;\n        this._renderer = _renderer;\n        this._elementScrolled = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__[\"Subject\"]();\n    }\n    /**\n     * @return {?}\n     */\n    Scrollable.prototype.ngOnInit = function () {\n        var _this = this;\n        this._scrollListener = this._ngZone.runOutsideAngular(function () {\n            return _this._renderer.listen(_this.getElementRef().nativeElement, 'scroll', function (event) {\n                _this._elementScrolled.next(event);\n            });\n        });\n        this._scroll.register(this);\n    };\n    /**\n     * @return {?}\n     */\n    Scrollable.prototype.ngOnDestroy = function () {\n        this._scroll.deregister(this);\n        if (this._scrollListener) {\n            this._scrollListener();\n            this._scrollListener = null;\n        }\n    };\n    /**\n     * Returns observable that emits when a scroll event is fired on the host element.\n     * @return {?}\n     */\n    Scrollable.prototype.elementScrolled = function () {\n        return this._elementScrolled.asObservable();\n    };\n    /**\n     * @return {?}\n     */\n    Scrollable.prototype.getElementRef = function () {\n        return this._elementRef;\n    };\n    return Scrollable;\n}());\nScrollable.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[cdk-scrollable]'\n            },] },\n];\n/**\n * @nocollapse\n */\nScrollable.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: ScrollDispatcher, },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n]; };\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nvar defaultPositionList = [\n    new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\n    new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }),\n];\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nvar OverlayOrigin = (function () {\n    /**\n     * @param {?} elementRef\n     */\n    function OverlayOrigin(elementRef) {\n        this.elementRef = elementRef;\n    }\n    return OverlayOrigin;\n}());\nOverlayOrigin.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[cdk-overlay-origin], [overlay-origin]',\n                exportAs: 'cdkOverlayOrigin',\n            },] },\n];\n/**\n * @nocollapse\n */\nOverlayOrigin.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n]; };\n/**\n * Directive to facilitate declarative creation of an Overlay using a ConnectedPositionStrategy.\n */\nvar ConnectedOverlayDirective = (function () {\n    /**\n     * @param {?} _overlay\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     * @param {?} _dir\n     */\n    function ConnectedOverlayDirective(_overlay, templateRef, viewContainerRef, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._open = false;\n        this._hasBackdrop = false;\n        this._offsetX = 0;\n        this._offsetY = 0;\n        /** Event emitted when the backdrop is clicked. */\n        this.backdropClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /** Event emitted when the position has changed. */\n        this.positionChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /** Event emitted when the overlay has been attached. */\n        this.attach = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /** Event emitted when the overlay has been detached. */\n        this.detach = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n    }\n    Object.defineProperty(ConnectedOverlayDirective.prototype, \"offsetX\", {\n        /**\n         * The offset in pixels for the overlay connection point on the x-axis\n         * @return {?}\n         */\n        get: function () {\n            return this._offsetX;\n        },\n        /**\n         * @param {?} offsetX\n         * @return {?}\n         */\n        set: function (offsetX) {\n            this._offsetX = offsetX;\n            if (this._position) {\n                this._position.withOffsetX(offsetX);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectedOverlayDirective.prototype, \"offsetY\", {\n        /**\n         * The offset in pixels for the overlay connection point on the y-axis\n         * @return {?}\n         */\n        get: function () {\n            return this._offsetY;\n        },\n        /**\n         * @param {?} offsetY\n         * @return {?}\n         */\n        set: function (offsetY) {\n            this._offsetY = offsetY;\n            if (this._position) {\n                this._position.withOffsetY(offsetY);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectedOverlayDirective.prototype, \"hasBackdrop\", {\n        /**\n         * Whether or not the overlay should attach a backdrop.\n         * @return {?}\n         */\n        get: function () {\n            return this._hasBackdrop;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._hasBackdrop = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectedOverlayDirective.prototype, \"open\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._open;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            value ? this._attachOverlay() : this._detachOverlay();\n            this._open = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectedOverlayDirective.prototype, \"overlayRef\", {\n        /**\n         * The associated overlay reference.\n         * @return {?}\n         */\n        get: function () {\n            return this._overlayRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectedOverlayDirective.prototype, \"dir\", {\n        /**\n         * The element's layout direction.\n         * @return {?}\n         */\n        get: function () {\n            return this._dir ? this._dir.value : 'ltr';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ConnectedOverlayDirective.prototype.ngOnDestroy = function () {\n        this._destroyOverlay();\n    };\n    /**\n     * Creates an overlay\n     * @return {?}\n     */\n    ConnectedOverlayDirective.prototype._createOverlay = function () {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        this._overlayRef = this._overlay.create(this._buildConfig());\n    };\n    /**\n     * Builds the overlay config based on the directive's inputs\n     * @return {?}\n     */\n    ConnectedOverlayDirective.prototype._buildConfig = function () {\n        var /** @type {?} */ overlayConfig = new OverlayState();\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        overlayConfig.hasBackdrop = this.hasBackdrop;\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        this._position = (this._createPositionStrategy());\n        overlayConfig.positionStrategy = this._position;\n        return overlayConfig;\n    };\n    /**\n     * Returns the position strategy of the overlay to be set on the overlay config\n     * @return {?}\n     */\n    ConnectedOverlayDirective.prototype._createPositionStrategy = function () {\n        var /** @type {?} */ pos = this.positions[0];\n        var /** @type {?} */ originPoint = { originX: pos.originX, originY: pos.originY };\n        var /** @type {?} */ overlayPoint = { overlayX: pos.overlayX, overlayY: pos.overlayY };\n        var /** @type {?} */ strategy = this._overlay.position()\n            .connectedTo(this.origin.elementRef, originPoint, overlayPoint)\n            .withOffsetX(this.offsetX)\n            .withOffsetY(this.offsetY);\n        this._handlePositionChanges(strategy);\n        return strategy;\n    };\n    /**\n     * @param {?} strategy\n     * @return {?}\n     */\n    ConnectedOverlayDirective.prototype._handlePositionChanges = function (strategy) {\n        var _this = this;\n        for (var /** @type {?} */ i = 1; i < this.positions.length; i++) {\n            strategy.withFallbackPosition({ originX: this.positions[i].originX, originY: this.positions[i].originY }, { overlayX: this.positions[i].overlayX, overlayY: this.positions[i].overlayY });\n        }\n        this._positionSubscription =\n            strategy.onPositionChange.subscribe(function (pos) { return _this.positionChange.emit(pos); });\n    };\n    /**\n     * Attaches the overlay and subscribes to backdrop clicks if backdrop exists\n     * @return {?}\n     */\n    ConnectedOverlayDirective.prototype._attachOverlay = function () {\n        var _this = this;\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        this._position.withDirection(this.dir);\n        this._overlayRef.getState().direction = this.dir;\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n            this.attach.emit();\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe(function () {\n                _this.backdropClick.emit();\n            });\n        }\n    };\n    /**\n     * Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists\n     * @return {?}\n     */\n    ConnectedOverlayDirective.prototype._detachOverlay = function () {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n            this.detach.emit();\n        }\n        if (this._backdropSubscription) {\n            this._backdropSubscription.unsubscribe();\n            this._backdropSubscription = null;\n        }\n    };\n    /**\n     * Destroys the overlay created by this directive.\n     * @return {?}\n     */\n    ConnectedOverlayDirective.prototype._destroyOverlay = function () {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        if (this._backdropSubscription) {\n            this._backdropSubscription.unsubscribe();\n        }\n        if (this._positionSubscription) {\n            this._positionSubscription.unsubscribe();\n        }\n    };\n    return ConnectedOverlayDirective;\n}());\nConnectedOverlayDirective.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[cdk-connected-overlay], [connected-overlay]',\n                exportAs: 'cdkConnectedOverlay'\n            },] },\n];\n/**\n * @nocollapse\n */\nConnectedOverlayDirective.ctorParameters = function () { return [\n    { type: Overlay, },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"TemplateRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewContainerRef\"], },\n    { type: Dir, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] },] },\n]; };\nConnectedOverlayDirective.propDecorators = {\n    'origin': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'positions': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'offsetX': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'offsetY': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'width': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'height': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'minWidth': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'minHeight': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'backdropClass': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'hasBackdrop': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'open': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'backdropClick': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    'positionChange': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    'attach': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    'detach': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n};\nvar OverlayModule = (function () {\n    function OverlayModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    OverlayModule.forRoot = function () {\n        return {\n            ngModule: OverlayModule,\n            providers: [],\n        };\n    };\n    return OverlayModule;\n}());\nOverlayModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [PortalModule],\n                exports: [ConnectedOverlayDirective, OverlayOrigin, Scrollable],\n                declarations: [ConnectedOverlayDirective, OverlayOrigin, Scrollable],\n                providers: [OVERLAY_PROVIDERS],\n            },] },\n];\n/**\n * @nocollapse\n */\nOverlayModule.ctorParameters = function () { return []; };\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nvar hasV8BreakIterator = typeof (window) !== 'undefined' ?\n    (window.Intl && ((window.Intl)).v8BreakIterator) :\n    (typeof (Intl) !== 'undefined' && ((Intl)).v8BreakIterator);\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n * \\@docs-private\n */\nvar Platform = (function () {\n    function Platform() {\n        /** Layout Engines */\n        this.EDGE = /(edge)/i.test(navigator.userAgent);\n        this.TRIDENT = /(msie|trident)/i.test(navigator.userAgent);\n        // EdgeHTML and Trident mock Blink specific things and need to excluded from this check.\n        this.BLINK = !!(window.chrome || hasV8BreakIterator) && !!CSS && !this.EDGE && !this.TRIDENT;\n        // Webkit is part of the userAgent in EdgeHTML Blink and Trident, so we need to\n        // ensure that Webkit runs standalone and is not use as another engines base.\n        this.WEBKIT = /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n        /** Browsers and Platform Types */\n        this.IOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        this.FIREFOX = /(firefox|minefield)/i.test(navigator.userAgent);\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = /android/i.test(navigator.userAgent) && !this.TRIDENT;\n    }\n    return Platform;\n}());\nPlatform.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nPlatform.ctorParameters = function () { return []; };\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nvar InteractivityChecker = (function () {\n    /**\n     * @param {?} _platform\n     */\n    function InteractivityChecker(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is disabled.\n     */\n    InteractivityChecker.prototype.isDisabled = function (element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    };\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @param {?} element\n     * @return {?} Whether the element is visible.\n     */\n    InteractivityChecker.prototype.isVisible = function (element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    };\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is tabbable.\n     */\n    InteractivityChecker.prototype.isTabbable = function (element) {\n        var /** @type {?} */ frameElement = (getWindow(element).frameElement);\n        if (frameElement) {\n            var /** @type {?} */ frameType = frameElement && frameElement.nodeName.toLowerCase();\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Webkit and Blink consider anything inside of an <object> element as non-tabbable.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && frameType === 'object') {\n                return false;\n            }\n            // Webkit and Blink disable tabbing to an element inside of an invisible frame.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && !this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        var /** @type {?} */ nodeName = element.nodeName.toLowerCase();\n        var /** @type {?} */ tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe') {\n            // The frames may be tabbable depending on content, but it's not possibly to reliably\n            // investigate the content of the frames.\n            return false;\n        }\n        if (nodeName === 'audio') {\n            if (!element.hasAttribute('controls')) {\n                // By default an <audio> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK) {\n                // In Blink <audio controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'video') {\n            if (!element.hasAttribute('controls') && this._platform.TRIDENT) {\n                // In Trident a <video> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK || this._platform.FIREFOX) {\n                // In Chrome and Firefox <video controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'object' && (this._platform.BLINK || this._platform.WEBKIT)) {\n            // In all Blink and WebKit based browsers <object> elements are never tabbable.\n            return false;\n        }\n        // In iOS the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        return element.tabIndex >= 0;\n    };\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is focusable.\n     */\n    InteractivityChecker.prototype.isFocusable = function (element) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return isPotentiallyFocusable(element) && !this.isDisabled(element) && this.isVisible(element);\n    };\n    return InteractivityChecker;\n}());\nInteractivityChecker.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nInteractivityChecker.ctorParameters = function () { return [\n    { type: Platform, },\n]; };\n/**\n * Checks whether the specified element has any geometry / rectangles.\n * @param {?} element\n * @return {?}\n */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth || element.offsetHeight || element.getClientRects().length);\n}\n/**\n * Gets whether an element's\n * @param {?} element\n * @return {?}\n */\nfunction isNativeFormElement(element) {\n    var /** @type {?} */ nodeName = element.nodeName.toLowerCase();\n    return nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea';\n}\n/**\n * Gets whether an element is an <input type=\"hidden\">.\n * @param {?} element\n * @return {?}\n */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/**\n * Gets whether an element is an anchor that has an href attribute.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/**\n * Gets whether an element is an input element.\n * @param {?} element\n * @return {?}\n */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/**\n * Gets whether an element is an anchor element.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/**\n * Gets whether an element has a valid tabindex.\n * @param {?} element\n * @return {?}\n */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    var /** @type {?} */ tabIndex = element.getAttribute('tabindex');\n    // IE11 parses tabindex=\"\" as the value \"-32768\"\n    if (tabIndex == '-32768') {\n        return false;\n    }\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n * @param {?} element\n * @return {?}\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    var /** @type {?} */ tabIndex = parseInt(element.getAttribute('tabindex'), 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/**\n * Checks whether the specified element is potentially tabbable on iOS\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyTabbableIOS(element) {\n    var /** @type {?} */ nodeName = element.nodeName.toLowerCase();\n    var /** @type {?} */ inputType = nodeName === 'input' && ((element)).type;\n    return inputType === 'text'\n        || inputType === 'password'\n        || nodeName === 'select'\n        || nodeName === 'textarea';\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element);\n}\n/**\n * Gets the parent window of a DOM node with regards of being inside of an iframe.\n * @param {?} node\n * @return {?}\n */\nfunction getWindow(node) {\n    return node.ownerDocument.defaultView || window;\n}\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * NOTE: This class currently uses a very simple (naive) approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like tabIndex > 0, flex `order`, and shadow roots can cause to two to misalign.\n * This will be replaced with a more intelligent solution before the library is considered stable.\n */\nvar FocusTrap = (function () {\n    /**\n     * @param {?} _element\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?=} deferAnchors\n     */\n    function FocusTrap(_element, _checker, _ngZone, deferAnchors) {\n        if (deferAnchors === void 0) { deferAnchors = false; }\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    Object.defineProperty(FocusTrap.prototype, \"enabled\", {\n        /**\n         * Whether the focus trap is active.\n         * @return {?}\n         */\n        get: function () { return this._enabled; },\n        /**\n         * @param {?} val\n         * @return {?}\n         */\n        set: function (val) {\n            this._enabled = val;\n            if (this._startAnchor && this._endAnchor) {\n                this._startAnchor.tabIndex = this._endAnchor.tabIndex = this._enabled ? 0 : -1;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroys the focus trap by cleaning up the anchors.\n     * @return {?}\n     */\n    FocusTrap.prototype.destroy = function () {\n        if (this._startAnchor && this._startAnchor.parentNode) {\n            this._startAnchor.parentNode.removeChild(this._startAnchor);\n        }\n        if (this._endAnchor && this._endAnchor.parentNode) {\n            this._endAnchor.parentNode.removeChild(this._endAnchor);\n        }\n        this._startAnchor = this._endAnchor = null;\n    };\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @return {?}\n     */\n    FocusTrap.prototype.attachAnchors = function () {\n        var _this = this;\n        if (!this._startAnchor) {\n            this._startAnchor = this._createAnchor();\n        }\n        if (!this._endAnchor) {\n            this._endAnchor = this._createAnchor();\n        }\n        this._ngZone.runOutsideAngular(function () {\n            _this._startAnchor.addEventListener('focus', function () { return _this.focusLastTabbableElement(); });\n            _this._endAnchor.addEventListener('focus', function () { return _this.focusFirstTabbableElement(); });\n            _this._element.parentNode.insertBefore(_this._startAnchor, _this._element);\n            _this._element.parentNode.insertBefore(_this._endAnchor, _this._element.nextSibling);\n        });\n    };\n    /**\n     * Waits for microtask queue to empty, then focuses\n     * the first tabbable element within the focus trap region.\n     * @return {?}\n     */\n    FocusTrap.prototype.focusFirstTabbableElementWhenReady = function () {\n        var _this = this;\n        this._ngZone.onMicrotaskEmpty.first().subscribe(function () { return _this.focusFirstTabbableElement(); });\n    };\n    /**\n     * Waits for microtask queue to empty, then focuses\n     * the last tabbable element within the focus trap region.\n     * @return {?}\n     */\n    FocusTrap.prototype.focusLastTabbableElementWhenReady = function () {\n        var _this = this;\n        this._ngZone.onMicrotaskEmpty.first().subscribe(function () { return _this.focusLastTabbableElement(); });\n    };\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @return {?}\n     */\n    FocusTrap.prototype.focusFirstTabbableElement = function () {\n        var /** @type {?} */ redirectToElement = (this._element.querySelector('[cdk-focus-start]')) ||\n            this._getFirstTabbableElement(this._element);\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n    };\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @return {?}\n     */\n    FocusTrap.prototype.focusLastTabbableElement = function () {\n        var /** @type {?} */ focusTargets = this._element.querySelectorAll('[cdk-focus-end]');\n        var /** @type {?} */ redirectToElement = null;\n        if (focusTargets.length) {\n            redirectToElement = (focusTargets[focusTargets.length - 1]);\n        }\n        else {\n            redirectToElement = this._getLastTabbableElement(this._element);\n        }\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n    };\n    /**\n     * Get the first tabbable element from a DOM subtree (inclusive).\n     * @param {?} root\n     * @return {?}\n     */\n    FocusTrap.prototype._getFirstTabbableElement = function (root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\n        // back to `childNodes` which includes text nodes, comments etc.\n        var /** @type {?} */ children = root.children || root.childNodes;\n        for (var /** @type {?} */ i = 0; i < children.length; i++) {\n            var /** @type {?} */ tabbableChild = children[i].nodeType === Node.ELEMENT_NODE ?\n                this._getFirstTabbableElement(/** @type {?} */ (children[i])) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    };\n    /**\n     * Get the last tabbable element from a DOM subtree (inclusive).\n     * @param {?} root\n     * @return {?}\n     */\n    FocusTrap.prototype._getLastTabbableElement = function (root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        var /** @type {?} */ children = root.children || root.childNodes;\n        for (var /** @type {?} */ i = children.length - 1; i >= 0; i--) {\n            var /** @type {?} */ tabbableChild = children[i].nodeType === Node.ELEMENT_NODE ?\n                this._getLastTabbableElement(/** @type {?} */ (children[i])) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    };\n    /**\n     * Creates an anchor element.\n     * @return {?}\n     */\n    FocusTrap.prototype._createAnchor = function () {\n        var /** @type {?} */ anchor = document.createElement('div');\n        anchor.tabIndex = this._enabled ? 0 : -1;\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        return anchor;\n    };\n    return FocusTrap;\n}());\n/**\n * Factory that allows easy instantiation of focus traps.\n */\nvar FocusTrapFactory = (function () {\n    /**\n     * @param {?} _checker\n     * @param {?} _ngZone\n     */\n    function FocusTrapFactory(_checker, _ngZone) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n    }\n    /**\n     * @param {?} element\n     * @param {?=} deferAnchors\n     * @return {?}\n     */\n    FocusTrapFactory.prototype.create = function (element, deferAnchors) {\n        if (deferAnchors === void 0) { deferAnchors = false; }\n        return new FocusTrap(element, this._checker, this._ngZone, deferAnchors);\n    };\n    return FocusTrapFactory;\n}());\nFocusTrapFactory.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nFocusTrapFactory.ctorParameters = function () { return [\n    { type: InteractivityChecker, },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n]; };\n/**\n * Directive for trapping focus within a region.\n * @deprecated\n */\nvar FocusTrapDeprecatedDirective = (function () {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     */\n    function FocusTrapDeprecatedDirective(_elementRef, _focusTrapFactory) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    Object.defineProperty(FocusTrapDeprecatedDirective.prototype, \"disabled\", {\n        /**\n         * Whether the focus trap is active.\n         * @return {?}\n         */\n        get: function () { return !this.focusTrap.enabled; },\n        /**\n         * @param {?} val\n         * @return {?}\n         */\n        set: function (val) {\n            this.focusTrap.enabled = !coerceBooleanProperty(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    FocusTrapDeprecatedDirective.prototype.ngOnDestroy = function () {\n        this.focusTrap.destroy();\n    };\n    /**\n     * @return {?}\n     */\n    FocusTrapDeprecatedDirective.prototype.ngAfterContentInit = function () {\n        this.focusTrap.attachAnchors();\n    };\n    return FocusTrapDeprecatedDirective;\n}());\nFocusTrapDeprecatedDirective.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'cdk-focus-trap',\n            },] },\n];\n/**\n * @nocollapse\n */\nFocusTrapDeprecatedDirective.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: FocusTrapFactory, },\n]; };\nFocusTrapDeprecatedDirective.propDecorators = {\n    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\n/**\n * Directive for trapping focus within a region.\n */\nvar FocusTrapDirective = (function () {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     */\n    function FocusTrapDirective(_elementRef, _focusTrapFactory) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    Object.defineProperty(FocusTrapDirective.prototype, \"enabled\", {\n        /**\n         * Whether the focus trap is active.\n         * @return {?}\n         */\n        get: function () { return this.focusTrap.enabled; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this.focusTrap.enabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    FocusTrapDirective.prototype.ngOnDestroy = function () {\n        this.focusTrap.destroy();\n    };\n    /**\n     * @return {?}\n     */\n    FocusTrapDirective.prototype.ngAfterContentInit = function () {\n        this.focusTrap.attachAnchors();\n    };\n    return FocusTrapDirective;\n}());\nFocusTrapDirective.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[cdkTrapFocus]',\n                exportAs: 'cdkTrapFocus',\n            },] },\n];\n/**\n * @nocollapse\n */\nFocusTrapDirective.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: FocusTrapFactory, },\n]; };\nFocusTrapDirective.propDecorators = {\n    'enabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['cdkTrapFocus',] },],\n};\nvar LIVE_ANNOUNCER_ELEMENT_TOKEN = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"OpaqueToken\"]('liveAnnouncerElement');\nvar LiveAnnouncer = (function () {\n    /**\n     * @param {?} elementToken\n     */\n    function LiveAnnouncer(elementToken) {\n        // We inject the live element as `any` because the constructor signature cannot reference\n        // browser globals (HTMLElement) on non-browser environments, since having a class decorator\n        // causes TypeScript to preserve the constructor signature types.\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    /**\n     * Announces a message to screenreaders.\n     * @param {?} message Message to be announced to the screenreader\n     * @param {?=} politeness The politeness of the announcer element\n     * @return {?}\n     */\n    LiveAnnouncer.prototype.announce = function (message, politeness) {\n        var _this = this;\n        if (politeness === void 0) { politeness = 'polite'; }\n        this._liveElement.textContent = '';\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        setTimeout(function () { return _this._liveElement.textContent = message; }, 100);\n    };\n    /**\n     * Removes the aria-live element from the DOM.\n     * @return {?}\n     */\n    LiveAnnouncer.prototype._removeLiveElement = function () {\n        if (this._liveElement && this._liveElement.parentNode) {\n            this._liveElement.parentNode.removeChild(this._liveElement);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    LiveAnnouncer.prototype._createLiveElement = function () {\n        var /** @type {?} */ liveEl = document.createElement('div');\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        document.body.appendChild(liveEl);\n        return liveEl;\n    };\n    return LiveAnnouncer;\n}());\nLiveAnnouncer.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nLiveAnnouncer.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [LIVE_ANNOUNCER_ELEMENT_TOKEN,] },] },\n]; };\n/**\n * @param {?} parentDispatcher\n * @param {?} liveElement\n * @return {?}\n */\nfunction LIVE_ANNOUNCER_PROVIDER_FACTORY(parentDispatcher, liveElement) {\n    return parentDispatcher || new LiveAnnouncer(liveElement);\n}\nvar LIVE_ANNOUNCER_PROVIDER = {\n    // If there is already a LiveAnnouncer available, use that. Otherwise, provide a new one.\n    provide: LiveAnnouncer,\n    deps: [\n        [new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"](), new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"SkipSelf\"](), LiveAnnouncer],\n        [new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"](), new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"](LIVE_ANNOUNCER_ELEMENT_TOKEN)]\n    ],\n    useFactory: LIVE_ANNOUNCER_PROVIDER_FACTORY\n};\nvar supportedInputTypes;\n/**\n * @return {?} The input types supported by this browser.\n */\nfunction getSupportedInputTypes() {\n    if (!supportedInputTypes) {\n        var /** @type {?} */ featureTestInput_1 = document.createElement('input');\n        supportedInputTypes = new Set([\n            // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n            // first changing it to something else:\n            // The specified value \"\" does not conform to the required format.\n            // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n            'color',\n            'button',\n            'checkbox',\n            'date',\n            'datetime-local',\n            'email',\n            'file',\n            'hidden',\n            'image',\n            'month',\n            'number',\n            'password',\n            'radio',\n            'range',\n            'reset',\n            'search',\n            'submit',\n            'tel',\n            'text',\n            'time',\n            'url',\n            'week',\n        ].filter(function (value) {\n            featureTestInput_1.setAttribute('type', value);\n            return featureTestInput_1.type === value;\n        }));\n    }\n    return supportedInputTypes;\n}\nvar PlatformModule = (function () {\n    function PlatformModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    PlatformModule.forRoot = function () {\n        return {\n            ngModule: PlatformModule,\n            providers: [],\n        };\n    };\n    return PlatformModule;\n}());\nPlatformModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                providers: [Platform]\n            },] },\n];\n/**\n * @nocollapse\n */\nPlatformModule.ctorParameters = function () { return []; };\nvar A11yModule = (function () {\n    function A11yModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    A11yModule.forRoot = function () {\n        return {\n            ngModule: A11yModule,\n            providers: [],\n        };\n    };\n    return A11yModule;\n}());\nA11yModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [__WEBPACK_IMPORTED_MODULE_2__angular_common__[\"CommonModule\"], PlatformModule],\n                declarations: [FocusTrapDirective, FocusTrapDeprecatedDirective],\n                exports: [FocusTrapDirective, FocusTrapDeprecatedDirective],\n                providers: [InteractivityChecker, FocusTrapFactory, LIVE_ANNOUNCER_PROVIDER]\n            },] },\n];\n/**\n * @nocollapse\n */\nA11yModule.ctorParameters = function () { return []; };\n/**\n * The FullscreenOverlayContainer is the alternative to OverlayContainer\n * that supports correct displaying of overlay elements in Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n * It should be provided in the root component that way:\n * providers: [\n *   {provide: OverlayContainer, useClass: FullscreenOverlayContainer}\n * ],\n */\nvar FullscreenOverlayContainer = (function (_super) {\n    __extends(FullscreenOverlayContainer, _super);\n    function FullscreenOverlayContainer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    FullscreenOverlayContainer.prototype._createContainer = function () {\n        var _this = this;\n        _super.prototype._createContainer.call(this);\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener(function () { return _this._adjustParentForFullscreenChange(); });\n    };\n    /**\n     * @return {?}\n     */\n    FullscreenOverlayContainer.prototype._adjustParentForFullscreenChange = function () {\n        if (!this._containerElement) {\n            return;\n        }\n        var /** @type {?} */ fullscreenElement = this.getFullscreenElement();\n        var /** @type {?} */ parent = fullscreenElement || document.body;\n        parent.appendChild(this._containerElement);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    FullscreenOverlayContainer.prototype._addFullscreenChangeListener = function (fn) {\n        if (document.fullscreenEnabled) {\n            document.addEventListener('fullscreenchange', fn);\n        }\n        else if (document.webkitFullscreenEnabled) {\n            document.addEventListener('webkitfullscreenchange', fn);\n        }\n        else if (((document)).mozFullScreenEnabled) {\n            document.addEventListener('mozfullscreenchange', fn);\n        }\n        else if (((document)).msFullscreenEnabled) {\n            document.addEventListener('MSFullscreenChange', fn);\n        }\n    };\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     * @return {?}\n     */\n    FullscreenOverlayContainer.prototype.getFullscreenElement = function () {\n        return document.fullscreenElement ||\n            document.webkitFullscreenElement ||\n            ((document)).mozFullScreenElement ||\n            ((document)).msFullscreenElement ||\n            null;\n    };\n    return FullscreenOverlayContainer;\n}(OverlayContainer));\nFullscreenOverlayContainer.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nFullscreenOverlayContainer.ctorParameters = function () { return []; };\nvar GestureConfig = (function (_super) {\n    __extends(GestureConfig, _super);\n    function GestureConfig() {\n        var _this = _super.call(this) || this;\n        _this._hammer = typeof window !== 'undefined' ? ((window)).Hammer : null;\n        /* List of new event names to add to the gesture support list */\n        _this.events = _this._hammer ? [\n            'longpress',\n            'slide',\n            'slidestart',\n            'slideend',\n            'slideright',\n            'slideleft'\n        ] : [];\n        if (!_this._hammer && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"isDevMode\"])()) {\n            console.warn('Could not find HammerJS. Certain Angular Material ' +\n                'components may not work correctly.');\n        }\n        return _this;\n    }\n    /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param {?} element Element to which to assign the new HammerJS gestures.\n     * @return {?} Newly-created HammerJS instance.\n     */\n    GestureConfig.prototype.buildHammer = function (element) {\n        var /** @type {?} */ mc = new this._hammer(element);\n        // Default Hammer Recognizers.\n        var /** @type {?} */ pan = new this._hammer.Pan();\n        var /** @type {?} */ swipe = new this._hammer.Swipe();\n        var /** @type {?} */ press = new this._hammer.Press();\n        // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n        // Otherwise the previous `recognizeWith` will be dropped.\n        // TODO: Confirm threshold numbers with Material Design UX Team\n        var /** @type {?} */ slide = this._createRecognizer(pan, { event: 'slide', threshold: 0 }, swipe);\n        var /** @type {?} */ longpress = this._createRecognizer(press, { event: 'longpress', time: 500 });\n        // Overwrite the default `pan` event to use the swipe event.\n        pan.recognizeWith(swipe);\n        // Add customized gestures to Hammer manager\n        mc.add([swipe, press, pan, slide, longpress]);\n        return (mc);\n    };\n    /**\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\n     * @param {?} base\n     * @param {?} options\n     * @param {...?} inheritances\n     * @return {?}\n     */\n    GestureConfig.prototype._createRecognizer = function (base, options) {\n        var inheritances = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            inheritances[_i - 2] = arguments[_i];\n        }\n        var /** @type {?} */ recognizer = new ((base.constructor))(options);\n        inheritances.push(base);\n        inheritances.forEach(function (item) { return recognizer.recognizeWith(item); });\n        return recognizer;\n    };\n    return GestureConfig;\n}(__WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__[\"HammerGestureConfig\"]));\nGestureConfig.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nGestureConfig.ctorParameters = function () { return []; };\n/**\n * Class to be used to power selecting one or more options from a list.\n * \\@docs-private\n */\nvar SelectionModel = (function () {\n    /**\n     * @param {?=} _isMulti\n     * @param {?=} initiallySelectedValues\n     * @param {?=} _emitChanges\n     */\n    function SelectionModel(_isMulti, initiallySelectedValues, _emitChanges) {\n        if (_isMulti === void 0) { _isMulti = false; }\n        if (_emitChanges === void 0) { _emitChanges = true; }\n        var _this = this;\n        this._isMulti = _isMulti;\n        this._emitChanges = _emitChanges;\n        this._selection = new Set();\n        this._deselectedToEmit = [];\n        this._selectedToEmit = [];\n        /** Event emitted when the value has changed. */\n        this.onChange = this._emitChanges ? new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__[\"Subject\"]() : null;\n        if (initiallySelectedValues) {\n            if (_isMulti) {\n                initiallySelectedValues.forEach(function (value) { return _this._markSelected(value); });\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    Object.defineProperty(SelectionModel.prototype, \"selected\", {\n        /**\n         * Selected value(s).\n         * @return {?}\n         */\n        get: function () {\n            if (!this._selected) {\n                this._selected = Array.from(this._selection.values());\n            }\n            return this._selected;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Selects a value or an array of values.\n     * @param {?} value\n     * @return {?}\n     */\n    SelectionModel.prototype.select = function (value) {\n        this._markSelected(value);\n        this._emitChangeEvent();\n    };\n    /**\n     * Deselects a value or an array of values.\n     * @param {?} value\n     * @return {?}\n     */\n    SelectionModel.prototype.deselect = function (value) {\n        this._unmarkSelected(value);\n        this._emitChangeEvent();\n    };\n    /**\n     * Toggles a value between selected and deselected.\n     * @param {?} value\n     * @return {?}\n     */\n    SelectionModel.prototype.toggle = function (value) {\n        this.isSelected(value) ? this.deselect(value) : this.select(value);\n    };\n    /**\n     * Clears all of the selected values.\n     * @return {?}\n     */\n    SelectionModel.prototype.clear = function () {\n        this._unmarkAll();\n        this._emitChangeEvent();\n    };\n    /**\n     * Determines whether a value is selected.\n     * @param {?} value\n     * @return {?}\n     */\n    SelectionModel.prototype.isSelected = function (value) {\n        return this._selection.has(value);\n    };\n    /**\n     * Determines whether the model does not have a value.\n     * @return {?}\n     */\n    SelectionModel.prototype.isEmpty = function () {\n        return this._selection.size === 0;\n    };\n    /**\n     * Determines whether the model has a value.\n     * @return {?}\n     */\n    SelectionModel.prototype.hasValue = function () {\n        return !this.isEmpty();\n    };\n    /**\n     * Sorts the selected values based on a predicate function.\n     * @param {?=} predicate\n     * @return {?}\n     */\n    SelectionModel.prototype.sort = function (predicate) {\n        if (this._isMulti && this.selected) {\n            this._selected.sort(predicate);\n        }\n    };\n    /**\n     * Emits a change event and clears the records of selected and deselected values.\n     * @return {?}\n     */\n    SelectionModel.prototype._emitChangeEvent = function () {\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            var /** @type {?} */ eventData = new SelectionChange(this._selectedToEmit, this._deselectedToEmit);\n            this.onChange.next(eventData);\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n        this._selected = null;\n    };\n    /**\n     * Selects a value.\n     * @param {?} value\n     * @return {?}\n     */\n    SelectionModel.prototype._markSelected = function (value) {\n        if (!this.isSelected(value)) {\n            if (!this._isMulti) {\n                this._unmarkAll();\n            }\n            this._selection.add(value);\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    };\n    /**\n     * Deselects a value.\n     * @param {?} value\n     * @return {?}\n     */\n    SelectionModel.prototype._unmarkSelected = function (value) {\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    };\n    /**\n     * Clears out the selected values.\n     * @return {?}\n     */\n    SelectionModel.prototype._unmarkAll = function () {\n        var _this = this;\n        if (!this.isEmpty()) {\n            this._selection.forEach(function (value) { return _this._unmarkSelected(value); });\n        }\n    };\n    return SelectionModel;\n}());\n/**\n * Describes an event emitted when the value of a MdSelectionModel has changed.\n * \\@docs-private\n */\nvar SelectionChange = (function () {\n    /**\n     * @param {?=} added\n     * @param {?=} removed\n     */\n    function SelectionChange(added, removed) {\n        this.added = added;\n        this.removed = removed;\n    }\n    return SelectionChange;\n}());\n/**\n * Screenreaders will often fire fake mousedown events when a focusable element\n * is activated using the keyboard. We can typically distinguish between these faked\n * mousedown events and real mousedown events using the \"buttons\" property. While\n * real mousedowns will indicate the mouse button that was pressed (e.g. \"1\" for\n * the left mouse button), faked mousedowns will usually set the property value to 0.\n * @param {?} event\n * @return {?}\n */\nfunction isFakeMousedownFromScreenReader(event) {\n    return event.buttons === 0;\n}\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nvar UniqueSelectionDispatcher = (function () {\n    function UniqueSelectionDispatcher() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param {?} id ID of the item.\n     * @param {?} name Name of the item.\n     * @return {?}\n     */\n    UniqueSelectionDispatcher.prototype.notify = function (id, name) {\n        for (var _i = 0, _a = this._listeners; _i < _a.length; _i++) {\n            var listener = _a[_i];\n            listener(id, name);\n        }\n    };\n    /**\n     * Listen for future changes to item selection.\n     * @param {?} listener\n     * @return {?}\n     */\n    UniqueSelectionDispatcher.prototype.listen = function (listener) {\n        this._listeners.push(listener);\n    };\n    return UniqueSelectionDispatcher;\n}());\nUniqueSelectionDispatcher.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nUniqueSelectionDispatcher.ctorParameters = function () { return []; };\n/**\n * @param {?} parentDispatcher\n * @return {?}\n */\nfunction UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY(parentDispatcher) {\n    return parentDispatcher || new UniqueSelectionDispatcher();\n}\nvar UNIQUE_SELECTION_DISPATCHER_PROVIDER = {\n    // If there is already a dispatcher available, use that. Otherwise, provide a new one.\n    provide: UniqueSelectionDispatcher,\n    deps: [[new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"](), new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"SkipSelf\"](), UniqueSelectionDispatcher]],\n    useFactory: UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY\n};\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n// that a value of around 650ms seems appropriate.\nvar TOUCH_BUFFER_MS = 650;\n/**\n * Monitors mouse and keyboard events to determine the cause of focus events.\n */\nvar FocusOriginMonitor = (function () {\n    /**\n     * @param {?} _ngZone\n     */\n    function FocusOriginMonitor(_ngZone) {\n        var _this = this;\n        this._ngZone = _ngZone;\n        this._origin = null;\n        this._windowFocused = false;\n        this._elementInfo = new WeakMap();\n        this._ngZone.runOutsideAngular(function () { return _this._registerDocumentEvents(); });\n    }\n    /**\n     * Monitors focus on an element and applies appropriate CSS classes.\n     * @param {?} element The element to monitor\n     * @param {?} renderer The renderer to use to apply CSS classes to the element.\n     * @param {?} checkChildren Whether to count the element as focused when its children are focused.\n     * @return {?} An observable that emits when the focus state of the element changes.\n     *     When the element is blurred, null will be emitted.\n     */\n    FocusOriginMonitor.prototype.monitor = function (element, renderer, checkChildren) {\n        var _this = this;\n        // Check if we're already monitoring this element.\n        if (this._elementInfo.has(element)) {\n            var /** @type {?} */ info_1 = this._elementInfo.get(element);\n            info_1.checkChildren = checkChildren;\n            return info_1.subject.asObservable();\n        }\n        // Create monitored element info.\n        var /** @type {?} */ info = {\n            unlisten: null,\n            checkChildren: checkChildren,\n            renderer: renderer,\n            subject: new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__[\"Subject\"]()\n        };\n        this._elementInfo.set(element, info);\n        // Start listening. We need to listen in capture phase since focus events don't bubble.\n        var /** @type {?} */ focusListener = function (event) { return _this._onFocus(event, element); };\n        var /** @type {?} */ blurListener = function (event) { return _this._onBlur(event, element); };\n        this._ngZone.runOutsideAngular(function () {\n            element.addEventListener('focus', focusListener, true);\n            element.addEventListener('blur', blurListener, true);\n        });\n        // Create an unlisten function for later.\n        info.unlisten = function () {\n            element.removeEventListener('focus', focusListener, true);\n            element.removeEventListener('blur', blurListener, true);\n        };\n        return info.subject.asObservable();\n    };\n    /**\n     * Stops monitoring an element and removes all focus classes.\n     * @param {?} element The element to stop monitoring.\n     * @return {?}\n     */\n    FocusOriginMonitor.prototype.stopMonitoring = function (element) {\n        var /** @type {?} */ elementInfo = this._elementInfo.get(element);\n        if (elementInfo) {\n            elementInfo.unlisten();\n            elementInfo.subject.complete();\n            this._setClasses(element, null);\n            this._elementInfo.delete(element);\n        }\n    };\n    /**\n     * Focuses the element via the specified focus origin.\n     * @param {?} element The element to focus.\n     * @param {?} renderer The renderer to use to invoke the focus method on the element.\n     * @param {?} origin The focus origin.\n     * @return {?}\n     */\n    FocusOriginMonitor.prototype.focusVia = function (element, renderer, origin) {\n        this._setOriginForCurrentEventQueue(origin);\n        renderer.invokeElementMethod(element, 'focus');\n    };\n    /**\n     * Register necessary event listeners on the document and window.\n     * @return {?}\n     */\n    FocusOriginMonitor.prototype._registerDocumentEvents = function () {\n        var _this = this;\n        // Note: we listen to events in the capture phase so we can detect them even if the user stops\n        // propagation.\n        // On keydown record the origin and clear any touch event that may be in progress.\n        document.addEventListener('keydown', function () {\n            _this._lastTouchTarget = null;\n            _this._setOriginForCurrentEventQueue('keyboard');\n        }, true);\n        // On mousedown record the origin only if there is not touch target, since a mousedown can\n        // happen as a result of a touch event.\n        document.addEventListener('mousedown', function () {\n            if (!_this._lastTouchTarget) {\n                _this._setOriginForCurrentEventQueue('mouse');\n            }\n        }, true);\n        // When the touchstart event fires the focus event is not yet in the event queue. This means\n        // we can't rely on the trick used above (setting timeout of 0ms). Instead we wait 650ms to\n        // see if a focus happens.\n        document.addEventListener('touchstart', function (event) {\n            if (_this._touchTimeout != null) {\n                clearTimeout(_this._touchTimeout);\n            }\n            _this._lastTouchTarget = event.target;\n            _this._touchTimeout = setTimeout(function () { return _this._lastTouchTarget = null; }, TOUCH_BUFFER_MS);\n        }, true);\n        // Make a note of when the window regains focus, so we can restore the origin info for the\n        // focused element.\n        window.addEventListener('focus', function () {\n            _this._windowFocused = true;\n            setTimeout(function () { return _this._windowFocused = false; }, 0);\n        });\n    };\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param {?} element The element to update the classes on.\n     * @param {?} origin The focus origin.\n     * @return {?}\n     */\n    FocusOriginMonitor.prototype._setClasses = function (element, origin) {\n        var /** @type {?} */ renderer = this._elementInfo.get(element).renderer;\n        renderer.setElementClass(element, 'cdk-focused', !!origin);\n        renderer.setElementClass(element, 'cdk-touch-focused', origin === 'touch');\n        renderer.setElementClass(element, 'cdk-keyboard-focused', origin === 'keyboard');\n        renderer.setElementClass(element, 'cdk-mouse-focused', origin === 'mouse');\n        renderer.setElementClass(element, 'cdk-program-focused', origin === 'program');\n    };\n    /**\n     * Sets the origin and schedules an async function to clear it at the end of the event queue.\n     * @param {?} origin The origin to set.\n     * @return {?}\n     */\n    FocusOriginMonitor.prototype._setOriginForCurrentEventQueue = function (origin) {\n        var _this = this;\n        this._origin = origin;\n        setTimeout(function () { return _this._origin = null; }, 0);\n    };\n    /**\n     * Checks whether the given focus event was caused by a touchstart event.\n     * @param {?} event The focus event to check.\n     * @return {?} Whether the event was caused by a touch.\n     */\n    FocusOriginMonitor.prototype._wasCausedByTouch = function (event) {\n        // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\n        // Consider the following dom structure:\n        //\n        // <div #parent tabindex=\"0\" cdkFocusClasses>\n        //   <div #child (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // If the user touches the #child element and the #parent is programmatically focused as a\n        // result, this code will still consider it to have been caused by the touch event and will\n        // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\n        // relatively small edge-case that can be worked around by using\n        // focusVia(parentEl, renderer,  'program') to focus the parent element.\n        //\n        // If we decide that we absolutely must handle this case correctly, we can do so by listening\n        // for the first focus event after the touchstart, and then the first blur event after that\n        // focus event. When that blur event fires we know that whatever follows is not a result of the\n        // touchstart.\n        var /** @type {?} */ focusTarget = event.target;\n        return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n            (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n    };\n    /**\n     * Handles focus events on a registered element.\n     * @param {?} event The focus event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    FocusOriginMonitor.prototype._onFocus = function (event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        if (!this._elementInfo.get(element).checkChildren && element !== event.target) {\n            return;\n        }\n        // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\n        // 1) The window has just regained focus, in which case we want to restore the focused state of\n        //    the element from before the window blurred.\n        // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\n        // 3) The element was programmatically focused, in which case we should mark the origin as\n        //    'program'.\n        if (!this._origin) {\n            if (this._windowFocused && this._lastFocusOrigin) {\n                this._origin = this._lastFocusOrigin;\n            }\n            else if (this._wasCausedByTouch(event)) {\n                this._origin = 'touch';\n            }\n            else {\n                this._origin = 'program';\n            }\n        }\n        this._setClasses(element, this._origin);\n        this._elementInfo.get(element).subject.next(this._origin);\n        this._lastFocusOrigin = this._origin;\n        this._origin = null;\n    };\n    /**\n     * Handles blur events on a registered element.\n     * @param {?} event The blur event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    FocusOriginMonitor.prototype._onBlur = function (event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        if (this._elementInfo.get(element).checkChildren && event.relatedTarget instanceof Node &&\n            element.contains(event.relatedTarget)) {\n            return;\n        }\n        this._setClasses(element, null);\n        this._elementInfo.get(element).subject.next(null);\n    };\n    return FocusOriginMonitor;\n}());\nFocusOriginMonitor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nFocusOriginMonitor.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n]; };\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nvar CdkMonitorFocus = (function () {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusOriginMonitor\n     * @param {?} renderer\n     */\n    function CdkMonitorFocus(_elementRef, _focusOriginMonitor, renderer) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._focusOriginMonitor = _focusOriginMonitor;\n        this.cdkFocusChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this._focusOriginMonitor.monitor(this._elementRef.nativeElement, renderer, this._elementRef.nativeElement.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe(function (origin) { return _this.cdkFocusChange.emit(origin); });\n    }\n    /**\n     * @return {?}\n     */\n    CdkMonitorFocus.prototype.ngOnDestroy = function () {\n        this._focusOriginMonitor.stopMonitoring(this._elementRef.nativeElement);\n    };\n    return CdkMonitorFocus;\n}());\nCdkMonitorFocus.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n            },] },\n];\n/**\n * @nocollapse\n */\nCdkMonitorFocus.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: FocusOriginMonitor, },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n]; };\nCdkMonitorFocus.propDecorators = {\n    'cdkFocusChange': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n};\n/**\n * @param {?} parentDispatcher\n * @param {?} ngZone\n * @return {?}\n */\nfunction FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY(parentDispatcher, ngZone) {\n    return parentDispatcher || new FocusOriginMonitor(ngZone);\n}\nvar FOCUS_ORIGIN_MONITOR_PROVIDER = {\n    // If there is already a FocusOriginMonitor available, use that. Otherwise, provide a new one.\n    provide: FocusOriginMonitor,\n    deps: [[new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"](), new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"SkipSelf\"](), FocusOriginMonitor], __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"]],\n    useFactory: FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY\n};\n/**\n * Applies a CSS transform to an element, including browser-prefixed properties.\n * @param {?} element\n * @param {?} transformValue\n * @return {?}\n */\nfunction applyCssTransform(element, transformValue) {\n    // It's important to trim the result, because the browser will ignore the set operation\n    // if the string contains only whitespace.\n    var /** @type {?} */ value = transformValue.trim();\n    element.style.transform = value;\n    element.style.webkitTransform = value;\n}\nvar StyleModule = (function () {\n    function StyleModule() {\n    }\n    return StyleModule;\n}());\nStyleModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                declarations: [CdkMonitorFocus],\n                exports: [CdkMonitorFocus],\n                providers: [FOCUS_ORIGIN_MONITOR_PROVIDER],\n            },] },\n];\n/**\n * @nocollapse\n */\nStyleModule.ctorParameters = function () { return []; };\n/**\n * \\@docs-private\n */\nvar AnimationCurves = (function () {\n    function AnimationCurves() {\n    }\n    return AnimationCurves;\n}());\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/**\n * \\@docs-private\n */\nvar AnimationDurations = (function () {\n    function AnimationDurations() {\n    }\n    return AnimationDurations;\n}());\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n/**\n * Coerces a data-bound value (typically a string) to a number.\n * @param {?} value\n * @param {?=} fallbackValue\n * @return {?}\n */\nfunction coerceNumberProperty(value, fallbackValue) {\n    if (fallbackValue === void 0) { fallbackValue = 0; }\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return isNaN(parseFloat(/** @type {?} */ (value))) || isNaN(Number(value)) ? fallbackValue : Number(value);\n}\nvar MdCoreModule = (function () {\n    function MdCoreModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdCoreModule.forRoot = function () {\n        return {\n            ngModule: MdCoreModule,\n            providers: [],\n        };\n    };\n    return MdCoreModule;\n}());\nMdCoreModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [\n                    MdLineModule,\n                    RtlModule,\n                    MdRippleModule,\n                    ObserveContentModule,\n                    PortalModule,\n                    OverlayModule,\n                    A11yModule,\n                    MdOptionModule,\n                    MdSelectionModule,\n                ],\n                exports: [\n                    MdLineModule,\n                    RtlModule,\n                    MdRippleModule,\n                    ObserveContentModule,\n                    PortalModule,\n                    OverlayModule,\n                    A11yModule,\n                    MdOptionModule,\n                    MdSelectionModule,\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCoreModule.ctorParameters = function () { return []; };\n/**\n * Provider Expression that allows md-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * \\@docs-private\n */\nvar MD_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = {\n    provide: __WEBPACK_IMPORTED_MODULE_8__angular_forms__[\"NG_VALUE_ACCESSOR\"],\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return MdButtonToggleGroup; }),\n    multi: true\n};\nvar _uniqueIdCounter$1 = 0;\n/**\n * Change event object emitted by MdButtonToggle.\n */\nvar MdButtonToggleChange = (function () {\n    function MdButtonToggleChange() {\n    }\n    return MdButtonToggleChange;\n}());\n/**\n * Exclusive selection button toggle group that behaves like a radio-button group.\n */\nvar MdButtonToggleGroup = (function () {\n    function MdButtonToggleGroup() {\n        this._value = null;\n        this._name = \"md-button-toggle-group-\" + _uniqueIdCounter$1++;\n        this._disabled = null;\n        this._vertical = false;\n        this._selected = null;\n        this._isInitialized = false;\n        this._controlValueAccessorChangeFn = function (value) { };\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this.onTouched = function () { };\n        /** Child button toggle buttons. */\n        this._buttonToggles = null;\n        this._change = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n    }\n    /**\n     * @return {?}\n     */\n    MdButtonToggleGroup.prototype.ngAfterViewInit = function () {\n        this._isInitialized = true;\n    };\n    Object.defineProperty(MdButtonToggleGroup.prototype, \"name\", {\n        /**\n         * `name` attribute for the underlying `input` element.\n         * @return {?}\n         */\n        get: function () {\n            return this._name;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._name = value;\n            this._updateButtonToggleNames();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButtonToggleGroup.prototype, \"disabled\", {\n        /**\n         * Whether the toggle group is disabled.\n         * @return {?}\n         */\n        get: function () {\n            return this._disabled;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._disabled = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButtonToggleGroup.prototype, \"vertical\", {\n        /**\n         * Whether the toggle group is vertical.\n         * @return {?}\n         */\n        get: function () {\n            return this._vertical;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._vertical = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButtonToggleGroup.prototype, \"value\", {\n        /**\n         * Value of the toggle group.\n         * @return {?}\n         */\n        get: function () {\n            return this._value;\n        },\n        /**\n         * @param {?} newValue\n         * @return {?}\n         */\n        set: function (newValue) {\n            if (this._value != newValue) {\n                this._value = newValue;\n                this._updateSelectedButtonToggleFromValue();\n                // Only emit a change event if the view is completely initialized.\n                // We don't want to emit a change event for the initial values.\n                if (this._isInitialized) {\n                    this._emitChangeEvent();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButtonToggleGroup.prototype, \"selected\", {\n        /**\n         * Whether the toggle group is selected.\n         * @return {?}\n         */\n        get: function () {\n            return this._selected;\n        },\n        /**\n         * @param {?} selected\n         * @return {?}\n         */\n        set: function (selected) {\n            this._selected = selected;\n            this.value = selected ? selected.value : null;\n            if (selected && !selected.checked) {\n                selected.checked = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButtonToggleGroup.prototype, \"change\", {\n        /**\n         * Event emitted when the group's value changes.\n         * @return {?}\n         */\n        get: function () {\n            return this._change.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdButtonToggleGroup.prototype._updateButtonToggleNames = function () {\n        var _this = this;\n        if (this._buttonToggles) {\n            this._buttonToggles.forEach(function (toggle) {\n                toggle.name = _this._name;\n            });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdButtonToggleGroup.prototype._updateSelectedButtonToggleFromValue = function () {\n        var _this = this;\n        var /** @type {?} */ isAlreadySelected = this._selected != null && this._selected.value == this._value;\n        if (this._buttonToggles != null && !isAlreadySelected) {\n            var /** @type {?} */ matchingButtonToggle = this._buttonToggles.filter(function (buttonToggle) { return buttonToggle.value == _this._value; })[0];\n            if (matchingButtonToggle) {\n                this.selected = matchingButtonToggle;\n            }\n            else if (this.value == null) {\n                this.selected = null;\n                this._buttonToggles.forEach(function (buttonToggle) {\n                    buttonToggle.checked = false;\n                });\n            }\n        }\n    };\n    /**\n     * Dispatch change event with current selection and group value.\n     * @return {?}\n     */\n    MdButtonToggleGroup.prototype._emitChangeEvent = function () {\n        var /** @type {?} */ event = new MdButtonToggleChange();\n        event.source = this._selected;\n        event.value = this._value;\n        this._controlValueAccessorChangeFn(event.value);\n        this._change.emit(event);\n    };\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value Value to be set to the model.\n     * @return {?}\n     */\n    MdButtonToggleGroup.prototype.writeValue = function (value) {\n        this.value = value;\n    };\n    /**\n     * Registers a callback that will be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn On change callback function.\n     * @return {?}\n     */\n    MdButtonToggleGroup.prototype.registerOnChange = function (fn) {\n        this._controlValueAccessorChangeFn = fn;\n    };\n    /**\n     * Registers a callback that will be triggered when the control has been touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn On touch callback function.\n     * @return {?}\n     */\n    MdButtonToggleGroup.prototype.registerOnTouched = function (fn) {\n        this.onTouched = fn;\n    };\n    /**\n     * Toggles the disabled state of the component. Implemented as part of ControlValueAccessor.\n     * @param {?} isDisabled Whether the component should be disabled.\n     * @return {?}\n     */\n    MdButtonToggleGroup.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    return MdButtonToggleGroup;\n}());\nMdButtonToggleGroup.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'md-button-toggle-group:not([multiple]), mat-button-toggle-group:not([multiple])',\n                providers: [MD_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR],\n                host: {\n                    '[class.mat-button-toggle-group]': 'true',\n                    'role': 'radiogroup',\n                    '[class.mat-button-toggle-vertical]': 'vertical'\n                },\n                exportAs: 'mdButtonToggleGroup',\n            },] },\n];\n/**\n * @nocollapse\n */\nMdButtonToggleGroup.ctorParameters = function () { return []; };\nMdButtonToggleGroup.propDecorators = {\n    '_buttonToggles': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChildren\"], args: [__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return MdButtonToggle; }),] },],\n    'name': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'vertical': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'value': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'selected': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'change': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n};\n/**\n * Multiple selection button-toggle group. `ngModel` is not supported in this mode.\n */\nvar MdButtonToggleGroupMultiple = (function () {\n    function MdButtonToggleGroupMultiple() {\n        this._disabled = null;\n        this._vertical = false;\n    }\n    Object.defineProperty(MdButtonToggleGroupMultiple.prototype, \"disabled\", {\n        /**\n         * Whether the toggle group is disabled.\n         * @return {?}\n         */\n        get: function () {\n            return this._disabled;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._disabled = (value != null && value !== false) ? true : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButtonToggleGroupMultiple.prototype, \"vertical\", {\n        /**\n         * Whether the toggle group is vertical.\n         * @return {?}\n         */\n        get: function () {\n            return this._vertical;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._vertical = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return MdButtonToggleGroupMultiple;\n}());\nMdButtonToggleGroupMultiple.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'md-button-toggle-group[multiple], mat-button-toggle-group[multiple]',\n                exportAs: 'mdButtonToggleGroup',\n                host: {\n                    '[class.mat-button-toggle-group]': 'true',\n                    '[class.mat-button-toggle-vertical]': 'vertical'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdButtonToggleGroupMultiple.ctorParameters = function () { return []; };\nMdButtonToggleGroupMultiple.propDecorators = {\n    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'vertical': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\n/**\n * Single button inside of a toggle group.\n */\nvar MdButtonToggle = (function () {\n    /**\n     * @param {?} toggleGroup\n     * @param {?} toggleGroupMultiple\n     * @param {?} _buttonToggleDispatcher\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _focusOriginMonitor\n     */\n    function MdButtonToggle(toggleGroup, toggleGroupMultiple, _buttonToggleDispatcher, _renderer, _elementRef, _focusOriginMonitor) {\n        var _this = this;\n        this._buttonToggleDispatcher = _buttonToggleDispatcher;\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._focusOriginMonitor = _focusOriginMonitor;\n        this._checked = false;\n        this._disabled = null;\n        this._value = null;\n        this._isSingleSelector = null;\n        this._change = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this.buttonToggleGroup = toggleGroup;\n        this.buttonToggleGroupMultiple = toggleGroupMultiple;\n        if (this.buttonToggleGroup) {\n            _buttonToggleDispatcher.listen(function (id, name) {\n                if (id != _this.id && name == _this.name) {\n                    _this.checked = false;\n                }\n            });\n            this._type = 'radio';\n            this.name = this.buttonToggleGroup.name;\n            this._isSingleSelector = true;\n        }\n        else {\n            // Even if there is no group at all, treat the button toggle as a checkbox so it can be\n            // toggled on or off.\n            this._type = 'checkbox';\n            this._isSingleSelector = false;\n        }\n    }\n    Object.defineProperty(MdButtonToggle.prototype, \"inputId\", {\n        /**\n         * Unique ID for the underlying `input` element.\n         * @return {?}\n         */\n        get: function () {\n            return this.id + \"-input\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButtonToggle.prototype, \"checked\", {\n        /**\n         * Whether the button is checked.\n         * @return {?}\n         */\n        get: function () {\n            return this._checked;\n        },\n        /**\n         * @param {?} newCheckedState\n         * @return {?}\n         */\n        set: function (newCheckedState) {\n            if (this._isSingleSelector) {\n                if (newCheckedState) {\n                    // Notify all button toggles with the same name (in the same group) to un-check.\n                    this._buttonToggleDispatcher.notify(this.id, this.name);\n                }\n            }\n            this._checked = newCheckedState;\n            if (newCheckedState && this._isSingleSelector && this.buttonToggleGroup.value != this.value) {\n                this.buttonToggleGroup.selected = this;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButtonToggle.prototype, \"value\", {\n        /**\n         * MdButtonToggleGroup reads this to assign its own value.\n         * @return {?}\n         */\n        get: function () {\n            return this._value;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._value != value) {\n                if (this.buttonToggleGroup != null && this.checked) {\n                    this.buttonToggleGroup.value = value;\n                }\n                this._value = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButtonToggle.prototype, \"disabled\", {\n        /**\n         * Whether the button is disabled.\n         * @return {?}\n         */\n        get: function () {\n            return this._disabled || (this.buttonToggleGroup != null && this.buttonToggleGroup.disabled) ||\n                (this.buttonToggleGroupMultiple != null && this.buttonToggleGroupMultiple.disabled);\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._disabled = (value != null && value !== false) ? true : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButtonToggle.prototype, \"change\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._change.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdButtonToggle.prototype.ngOnInit = function () {\n        if (this.id == null) {\n            this.id = \"md-button-toggle-\" + _uniqueIdCounter$1++;\n        }\n        if (this.buttonToggleGroup && this._value == this.buttonToggleGroup.value) {\n            this._checked = true;\n        }\n        this._focusOriginMonitor.monitor(this._elementRef.nativeElement, this._renderer, true);\n    };\n    /**\n     * Focuses the button.\n     * @return {?}\n     */\n    MdButtonToggle.prototype.focus = function () {\n        this._renderer.invokeElementMethod(this._inputElement.nativeElement, 'focus');\n    };\n    /**\n     * Toggle the state of the current button toggle.\n     * @return {?}\n     */\n    MdButtonToggle.prototype._toggle = function () {\n        this.checked = !this.checked;\n    };\n    /**\n     * Checks the button toggle due to an interaction with the underlying native input.\n     * @param {?} event\n     * @return {?}\n     */\n    MdButtonToggle.prototype._onInputChange = function (event) {\n        event.stopPropagation();\n        if (this._isSingleSelector) {\n            // Propagate the change one-way via the group, which will in turn mark this\n            // button toggle as checked.\n            this.checked = true;\n            this.buttonToggleGroup.selected = this;\n            this.buttonToggleGroup.onTouched();\n        }\n        else {\n            this._toggle();\n        }\n        // Emit a change event when the native input does.\n        this._emitChangeEvent();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdButtonToggle.prototype._onInputClick = function (event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    };\n    /**\n     * Dispatch change event with current value.\n     * @return {?}\n     */\n    MdButtonToggle.prototype._emitChangeEvent = function () {\n        var /** @type {?} */ event = new MdButtonToggleChange();\n        event.source = this;\n        event.value = this._value;\n        this._change.emit(event);\n    };\n    return MdButtonToggle;\n}());\nMdButtonToggle.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-button-toggle, mat-button-toggle',\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-button-toggle-label\\\"> <input #input class=\\\"mat-button-toggle-input cdk-visually-hidden\\\" [type]=\\\"_type\\\" [id]=\\\"inputId\\\" [checked]=\\\"checked\\\" [disabled]=\\\"disabled\\\" [name]=\\\"name\\\" (change)=\\\"_onInputChange($event)\\\" (click)=\\\"_onInputClick($event)\\\"> <div class=\\\"mat-button-toggle-label-content\\\"> <ng-content></ng-content> </div> </label> <!-- the touchstart handler prevents the overlay from capturing the initial tap on touch devices --> <div class=\\\"mat-button-toggle-focus-overlay\\\" (touchstart)=\\\"$event.preventDefault()\\\"></div> \",\n                styles: [\".mat-button-toggle-group{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);position:relative;display:inline-flex;flex-direction:row;border-radius:2px;cursor:pointer;white-space:nowrap}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle-disabled .mat-button-toggle-label-content{cursor:default}.mat-button-toggle{white-space:nowrap;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;position:relative}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.mat-button-toggle-label-content{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;cursor:pointer}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{border-radius:inherit;pointer-events:none;opacity:0;position:absolute;top:0;left:0;right:0;bottom:0} /*# sourceMappingURL=button-toggle.css.map */ \"],\n                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None,\n                host: {\n                    '[class.mat-button-toggle]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdButtonToggle.ctorParameters = function () { return [\n    { type: MdButtonToggleGroup, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] },] },\n    { type: MdButtonToggleGroupMultiple, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] },] },\n    { type: UniqueSelectionDispatcher, },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: FocusOriginMonitor, },\n]; };\nMdButtonToggle.propDecorators = {\n    '_inputElement': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewChild\"], args: ['input',] },],\n    'id': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"HostBinding\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'name': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'checked': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"HostBinding\"], args: ['class.mat-button-toggle-checked',] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'value': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"HostBinding\"], args: ['class.mat-button-toggle-disabled',] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'change': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n};\nvar MdButtonToggleModule = (function () {\n    function MdButtonToggleModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdButtonToggleModule.forRoot = function () {\n        return {\n            ngModule: MdButtonToggleModule,\n            providers: []\n        };\n    };\n    return MdButtonToggleModule;\n}());\nMdButtonToggleModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [__WEBPACK_IMPORTED_MODULE_8__angular_forms__[\"FormsModule\"], CompatibilityModule],\n                exports: [\n                    MdButtonToggleGroup,\n                    MdButtonToggleGroupMultiple,\n                    MdButtonToggle,\n                    CompatibilityModule,\n                ],\n                declarations: [MdButtonToggleGroup, MdButtonToggleGroupMultiple, MdButtonToggle],\n                providers: [UNIQUE_SELECTION_DISPATCHER_PROVIDER, FocusOriginMonitor]\n            },] },\n];\n/**\n * @nocollapse\n */\nMdButtonToggleModule.ctorParameters = function () { return []; };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdButtonCssMatStyler = (function () {\n    function MdButtonCssMatStyler() {\n    }\n    return MdButtonCssMatStyler;\n}());\nMdButtonCssMatStyler.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'button[md-button], button[mat-button], a[md-button], a[mat-button]',\n                host: {\n                    '[class.mat-button]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdButtonCssMatStyler.ctorParameters = function () { return []; };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdRaisedButtonCssMatStyler = (function () {\n    function MdRaisedButtonCssMatStyler() {\n    }\n    return MdRaisedButtonCssMatStyler;\n}());\nMdRaisedButtonCssMatStyler.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'button[md-raised-button], button[mat-raised-button], ' +\n                    'a[md-raised-button], a[mat-raised-button]',\n                host: {\n                    '[class.mat-raised-button]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdRaisedButtonCssMatStyler.ctorParameters = function () { return []; };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdIconButtonCssMatStyler = (function () {\n    function MdIconButtonCssMatStyler() {\n    }\n    return MdIconButtonCssMatStyler;\n}());\nMdIconButtonCssMatStyler.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'button[md-icon-button], button[mat-icon-button], a[md-icon-button], a[mat-icon-button]',\n                host: {\n                    '[class.mat-icon-button]': 'true',\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdIconButtonCssMatStyler.ctorParameters = function () { return []; };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdFabCssMatStyler = (function () {\n    function MdFabCssMatStyler() {\n    }\n    return MdFabCssMatStyler;\n}());\nMdFabCssMatStyler.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'button[md-fab], button[mat-fab], a[md-fab], a[mat-fab]',\n                host: {\n                    '[class.mat-fab]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdFabCssMatStyler.ctorParameters = function () { return []; };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdMiniFabCssMatStyler = (function () {\n    function MdMiniFabCssMatStyler() {\n    }\n    return MdMiniFabCssMatStyler;\n}());\nMdMiniFabCssMatStyler.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'button[md-mini-fab], button[mat-mini-fab], a[md-mini-fab], a[mat-mini-fab]',\n                host: {\n                    '[class.mat-mini-fab]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdMiniFabCssMatStyler.ctorParameters = function () { return []; };\n/**\n * Material design button.\n */\nvar MdButton = (function () {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _renderer\n     * @param {?} _focusOriginMonitor\n     */\n    function MdButton(_elementRef, _renderer, _focusOriginMonitor) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._focusOriginMonitor = _focusOriginMonitor;\n        /** Whether the button is round. */\n        this._isRoundButton = this._hasAttributeWithPrefix('fab', 'mini-fab');\n        /** Whether the button is icon button. */\n        this._isIconButton = this._hasAttributeWithPrefix('icon-button');\n        this._disableRipple = false;\n        this._disabled = null;\n        this._focusOriginMonitor.monitor(this._elementRef.nativeElement, this._renderer, true);\n    }\n    Object.defineProperty(MdButton.prototype, \"disableRipple\", {\n        /**\n         * Whether the ripple effect for this button is disabled.\n         * @return {?}\n         */\n        get: function () { return this._disableRipple; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this._disableRipple = coerceBooleanProperty(v); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButton.prototype, \"disabled\", {\n        /**\n         * Whether the button is disabled.\n         * @return {?}\n         */\n        get: function () { return this._disabled; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._disabled = coerceBooleanProperty(value) ? true : null; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdButton.prototype.ngOnDestroy = function () {\n        this._focusOriginMonitor.stopMonitoring(this._elementRef.nativeElement);\n    };\n    Object.defineProperty(MdButton.prototype, \"color\", {\n        /**\n         * The color of the button. Can be `primary`, `accent`, or `warn`.\n         * @return {?}\n         */\n        get: function () { return this._color; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._updateColor(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} newColor\n     * @return {?}\n     */\n    MdButton.prototype._updateColor = function (newColor) {\n        this._setElementColor(this._color, false);\n        this._setElementColor(newColor, true);\n        this._color = newColor;\n    };\n    /**\n     * @param {?} color\n     * @param {?} isAdd\n     * @return {?}\n     */\n    MdButton.prototype._setElementColor = function (color, isAdd) {\n        if (color != null && color != '') {\n            this._renderer.setElementClass(this._getHostElement(), \"mat-\" + color, isAdd);\n        }\n    };\n    /**\n     * Focuses the button.\n     * @return {?}\n     */\n    MdButton.prototype.focus = function () {\n        this._renderer.invokeElementMethod(this._getHostElement(), 'focus');\n    };\n    /**\n     * @return {?}\n     */\n    MdButton.prototype._getHostElement = function () {\n        return this._elementRef.nativeElement;\n    };\n    /**\n     * @return {?}\n     */\n    MdButton.prototype._isRippleDisabled = function () {\n        return this.disableRipple || this.disabled;\n    };\n    /**\n     * Gets whether the button has one of the given attributes\n     * with either an 'md-' or 'mat-' prefix.\n     * @param {...?} unprefixedAttributeNames\n     * @return {?}\n     */\n    MdButton.prototype._hasAttributeWithPrefix = function () {\n        var _this = this;\n        var unprefixedAttributeNames = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            unprefixedAttributeNames[_i] = arguments[_i];\n        }\n        return unprefixedAttributeNames.some(function (suffix) {\n            var /** @type {?} */ el = _this._getHostElement();\n            return el.hasAttribute('md-' + suffix) || el.hasAttribute('mat-' + suffix);\n        });\n    };\n    return MdButton;\n}());\nMdButton.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'button[md-button], button[md-raised-button], button[md-icon-button],' +\n                    'button[md-fab], button[md-mini-fab],' +\n                    'button[mat-button], button[mat-raised-button], button[mat-icon-button],' +\n                    'button[mat-fab], button[mat-mini-fab]',\n                host: {\n                    '[disabled]': 'disabled',\n                },\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span> <div md-ripple *ngIf=\\\"!_isRippleDisabled()\\\" class=\\\"mat-button-ripple\\\" [class.mat-button-ripple-round]=\\\"_isRoundButton || _isIconButton\\\" [mdRippleCentered]=\\\"_isIconButton\\\" [mdRippleTrigger]=\\\"_getHostElement()\\\"></div> <!-- the touchstart handler prevents the overlay from capturing the initial tap on touch devices --> <div class=\\\"mat-button-focus-overlay\\\" (touchstart)=\\\"$event.preventDefault()\\\"></div> \",\n                styles: [\".mat-button,.mat-fab,.mat-icon-button,.mat-mini-fab,.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;font-size:14px;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-weight:500;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px}[disabled].mat-button,[disabled].mat-fab,[disabled].mat-icon-button,[disabled].mat-mini-fab,[disabled].mat-raised-button{cursor:default}.cdk-keyboard-focused.mat-button .mat-button-focus-overlay,.cdk-keyboard-focused.mat-fab .mat-button-focus-overlay,.cdk-keyboard-focused.mat-icon-button .mat-button-focus-overlay,.cdk-keyboard-focused.mat-mini-fab .mat-button-focus-overlay,.cdk-keyboard-focused.mat-raised-button .mat-button-focus-overlay{opacity:1}.mat-button::-moz-focus-inner,.mat-fab::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-mini-fab::-moz-focus-inner,.mat-raised-button::-moz-focus-inner{border:0}.mat-fab,.mat-mini-fab,.mat-raised-button{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-fab:not([disabled]):active,.mat-mini-fab:not([disabled]):active,.mat-raised-button:not([disabled]):active{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}[disabled].mat-fab,[disabled].mat-mini-fab,[disabled].mat-raised-button{box-shadow:none}.mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{transition:none;opacity:0}.mat-button:hover .mat-button-focus-overlay{opacity:1}.mat-fab{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab:not([disabled]):active{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-fab .mat-icon,.mat-fab i{padding:16px 0;line-height:24px}.mat-mini-fab{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab:not([disabled]):active{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-mini-fab .mat-icon,.mat-mini-fab i{padding:8px 0;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button,.mat-icon-button,.mat-raised-button{color:currentColor}.mat-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*{vertical-align:middle}.mat-button-focus-overlay,.mat-button-ripple{position:absolute;top:0;left:0;bottom:0;right:0}.mat-button-focus-overlay{background-color:rgba(0,0,0,.12);border-radius:inherit;pointer-events:none;opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}@media screen and (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:rgba(255,255,255,.5)}}.mat-button-ripple-round{border-radius:50%;z-index:1}@media screen and (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}} /*# sourceMappingURL=button.css.map */ \"],\n                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None,\n                changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectionStrategy\"].OnPush,\n            },] },\n];\n/**\n * @nocollapse\n */\nMdButton.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: FocusOriginMonitor, },\n]; };\nMdButton.propDecorators = {\n    'disableRipple': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'color': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\n/**\n * Raised Material design button.\n */\nvar MdAnchor = (function (_super) {\n    __extends(MdAnchor, _super);\n    /**\n     * @param {?} elementRef\n     * @param {?} renderer\n     * @param {?} focusOriginMonitor\n     */\n    function MdAnchor(elementRef, renderer, focusOriginMonitor) {\n        return _super.call(this, elementRef, renderer, focusOriginMonitor) || this;\n    }\n    Object.defineProperty(MdAnchor.prototype, \"tabIndex\", {\n        /**\n         * \\@docs-private\n         * @return {?}\n         */\n        get: function () {\n            return this.disabled ? -1 : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdAnchor.prototype, \"_isAriaDisabled\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.disabled ? 'true' : 'false';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdAnchor.prototype._haltDisabledEvents = function (event) {\n        // A disabled button shouldn't apply any actions\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    };\n    return MdAnchor;\n}(MdButton));\nMdAnchor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: \"a[md-button], a[md-raised-button], a[md-icon-button], a[md-fab], a[md-mini-fab],\\n             a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab], a[mat-mini-fab]\",\n                host: {\n                    '[attr.disabled]': 'disabled',\n                    '[attr.aria-disabled]': '_isAriaDisabled',\n                    '(click)': '_haltDisabledEvents($event)',\n                },\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span> <div md-ripple *ngIf=\\\"!_isRippleDisabled()\\\" class=\\\"mat-button-ripple\\\" [class.mat-button-ripple-round]=\\\"_isRoundButton || _isIconButton\\\" [mdRippleCentered]=\\\"_isIconButton\\\" [mdRippleTrigger]=\\\"_getHostElement()\\\"></div> <!-- the touchstart handler prevents the overlay from capturing the initial tap on touch devices --> <div class=\\\"mat-button-focus-overlay\\\" (touchstart)=\\\"$event.preventDefault()\\\"></div> \",\n                styles: [\".mat-button,.mat-fab,.mat-icon-button,.mat-mini-fab,.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;font-size:14px;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-weight:500;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px}[disabled].mat-button,[disabled].mat-fab,[disabled].mat-icon-button,[disabled].mat-mini-fab,[disabled].mat-raised-button{cursor:default}.cdk-keyboard-focused.mat-button .mat-button-focus-overlay,.cdk-keyboard-focused.mat-fab .mat-button-focus-overlay,.cdk-keyboard-focused.mat-icon-button .mat-button-focus-overlay,.cdk-keyboard-focused.mat-mini-fab .mat-button-focus-overlay,.cdk-keyboard-focused.mat-raised-button .mat-button-focus-overlay{opacity:1}.mat-button::-moz-focus-inner,.mat-fab::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-mini-fab::-moz-focus-inner,.mat-raised-button::-moz-focus-inner{border:0}.mat-fab,.mat-mini-fab,.mat-raised-button{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-fab:not([disabled]):active,.mat-mini-fab:not([disabled]):active,.mat-raised-button:not([disabled]):active{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}[disabled].mat-fab,[disabled].mat-mini-fab,[disabled].mat-raised-button{box-shadow:none}.mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{transition:none;opacity:0}.mat-button:hover .mat-button-focus-overlay{opacity:1}.mat-fab{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab:not([disabled]):active{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-fab .mat-icon,.mat-fab i{padding:16px 0;line-height:24px}.mat-mini-fab{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab:not([disabled]):active{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-mini-fab .mat-icon,.mat-mini-fab i{padding:8px 0;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button,.mat-icon-button,.mat-raised-button{color:currentColor}.mat-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*{vertical-align:middle}.mat-button-focus-overlay,.mat-button-ripple{position:absolute;top:0;left:0;bottom:0;right:0}.mat-button-focus-overlay{background-color:rgba(0,0,0,.12);border-radius:inherit;pointer-events:none;opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}@media screen and (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:rgba(255,255,255,.5)}}.mat-button-ripple-round{border-radius:50%;z-index:1}@media screen and (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}} /*# sourceMappingURL=button.css.map */ \"],\n                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None\n            },] },\n];\n/**\n * @nocollapse\n */\nMdAnchor.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: FocusOriginMonitor, },\n]; };\nMdAnchor.propDecorators = {\n    'tabIndex': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"HostBinding\"], args: ['tabIndex',] },],\n};\nvar MdButtonModule = (function () {\n    function MdButtonModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdButtonModule.forRoot = function () {\n        return {\n            ngModule: MdButtonModule,\n            providers: []\n        };\n    };\n    return MdButtonModule;\n}());\nMdButtonModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [\n                    __WEBPACK_IMPORTED_MODULE_2__angular_common__[\"CommonModule\"],\n                    MdRippleModule,\n                    CompatibilityModule,\n                    StyleModule,\n                ],\n                exports: [\n                    MdButton,\n                    MdAnchor,\n                    CompatibilityModule,\n                    MdButtonCssMatStyler,\n                    MdRaisedButtonCssMatStyler,\n                    MdIconButtonCssMatStyler,\n                    MdFabCssMatStyler,\n                    MdMiniFabCssMatStyler,\n                ],\n                declarations: [\n                    MdButton,\n                    MdAnchor,\n                    MdButtonCssMatStyler,\n                    MdRaisedButtonCssMatStyler,\n                    MdIconButtonCssMatStyler,\n                    MdFabCssMatStyler,\n                    MdMiniFabCssMatStyler,\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdButtonModule.ctorParameters = function () { return []; };\n/** Monotonically increasing integer used to auto-generate unique ids for checkbox components. */\nvar nextId = 0;\n/**\n * Provider Expression that allows md-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * \\@docs-private\n */\nvar MD_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: __WEBPACK_IMPORTED_MODULE_8__angular_forms__[\"NG_VALUE_ACCESSOR\"],\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return MdCheckbox; }),\n    multi: true\n};\nvar TransitionCheckState = {};\nTransitionCheckState.Init = 0;\nTransitionCheckState.Checked = 1;\nTransitionCheckState.Unchecked = 2;\nTransitionCheckState.Indeterminate = 3;\nTransitionCheckState[TransitionCheckState.Init] = \"Init\";\nTransitionCheckState[TransitionCheckState.Checked] = \"Checked\";\nTransitionCheckState[TransitionCheckState.Unchecked] = \"Unchecked\";\nTransitionCheckState[TransitionCheckState.Indeterminate] = \"Indeterminate\";\n/**\n * Change event object emitted by MdCheckbox.\n */\nvar MdCheckboxChange = (function () {\n    function MdCheckboxChange() {\n    }\n    return MdCheckboxChange;\n}());\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MdCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://www.google.com/design/spec/components/selection-controls.html\n */\nvar MdCheckbox = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _focusOriginMonitor\n     */\n    function MdCheckbox(_renderer, _elementRef, _changeDetectorRef, _focusOriginMonitor) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusOriginMonitor = _focusOriginMonitor;\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        /** A unique id for the checkbox. If one is not supplied, it is auto-generated. */\n        this.id = \"md-checkbox-\" + ++nextId;\n        /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n        this.labelPosition = 'after';\n        this._disabled = false;\n        /** Tabindex value that is passed to the underlying input element. */\n        this.tabIndex = 0;\n        /** Name value will be applied to the input element if present */\n        this.name = null;\n        /** Event emitted when the checkbox's `checked` value changes. */\n        this.change = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /** Event emitted when the checkbox's `indeterminate` value changes. */\n        this.indeterminateChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * \\@docs-private\n         */\n        this.onTouched = function () { };\n        this._currentAnimationClass = '';\n        this._currentCheckState = TransitionCheckState.Init;\n        this._checked = false;\n        this._indeterminate = false;\n        this._controlValueAccessorChangeFn = function (value) { };\n        this.color = 'accent';\n    }\n    Object.defineProperty(MdCheckbox.prototype, \"disableRipple\", {\n        /**\n         * Whether the ripple effect for this checkbox is disabled.\n         * @return {?}\n         */\n        get: function () { return this._disableRipple; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._disableRipple = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdCheckbox.prototype, \"inputId\", {\n        /**\n         * ID of the native input element inside `<md-checkbox>`\n         * @return {?}\n         */\n        get: function () {\n            return \"input-\" + this.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdCheckbox.prototype, \"required\", {\n        /**\n         * Whether the checkbox is required.\n         * @return {?}\n         */\n        get: function () { return this._required; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._required = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdCheckbox.prototype, \"align\", {\n        /**\n         * Whether or not the checkbox should appear before or after the label.\n         * @deprecated\n         * @return {?}\n         */\n        get: function () {\n            // align refers to the checkbox relative to the label, while labelPosition refers to the\n            // label relative to the checkbox. As such, they are inverted.\n            return this.labelPosition == 'after' ? 'start' : 'end';\n        },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) {\n            this.labelPosition = (v == 'start') ? 'after' : 'before';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdCheckbox.prototype, \"disabled\", {\n        /**\n         * Whether the checkbox is disabled.\n         * @return {?}\n         */\n        get: function () { return this._disabled; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._disabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdCheckbox.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        this._focusedSubscription = this._focusOriginMonitor\n            .monitor(this._inputElement.nativeElement, this._renderer, false)\n            .subscribe(function (focusOrigin) {\n            if (!_this._focusedRipple && (focusOrigin === 'keyboard' || focusOrigin === 'program')) {\n                _this._focusedRipple = _this._ripple.launch(0, 0, { persistent: true, centered: true });\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MdCheckbox.prototype.ngOnDestroy = function () {\n        this._focusOriginMonitor.stopMonitoring(this._inputElement.nativeElement);\n    };\n    Object.defineProperty(MdCheckbox.prototype, \"checked\", {\n        /**\n         * Whether the checkbox is checked. Note that setting `checked` will immediately set\n         * `indeterminate` to false.\n         * @return {?}\n         */\n        get: function () {\n            return this._checked;\n        },\n        /**\n         * @param {?} checked\n         * @return {?}\n         */\n        set: function (checked) {\n            var _this = this;\n            if (checked != this.checked) {\n                if (this._indeterminate) {\n                    Promise.resolve().then(function () {\n                        _this._indeterminate = false;\n                        _this.indeterminateChange.emit(_this._indeterminate);\n                    });\n                }\n                this._checked = checked;\n                this._changeDetectorRef.markForCheck();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdCheckbox.prototype, \"indeterminate\", {\n        /**\n         * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n         * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n         * checkable items. Note that whenever `checked` is set, indeterminate is immediately set to\n         * false. This differs from the web platform in that indeterminate state on native\n         * checkboxes is only remove when the user manually checks the checkbox (rather than setting the\n         * `checked` property programmatically). However, we feel that this behavior is more accommodating\n         * to the way consumers would envision using this component.\n         * @return {?}\n         */\n        get: function () {\n            return this._indeterminate;\n        },\n        /**\n         * @param {?} indeterminate\n         * @return {?}\n         */\n        set: function (indeterminate) {\n            var /** @type {?} */ changed = indeterminate != this._indeterminate;\n            this._indeterminate = indeterminate;\n            if (changed) {\n                if (this._indeterminate) {\n                    this._transitionCheckState(TransitionCheckState.Indeterminate);\n                }\n                else {\n                    this._transitionCheckState(this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n                }\n                this.indeterminateChange.emit(this._indeterminate);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdCheckbox.prototype, \"color\", {\n        /**\n         * The color of the button. Can be `primary`, `accent`, or `warn`.\n         * @return {?}\n         */\n        get: function () { return this._color; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._updateColor(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} newColor\n     * @return {?}\n     */\n    MdCheckbox.prototype._updateColor = function (newColor) {\n        this._setElementColor(this._color, false);\n        this._setElementColor(newColor, true);\n        this._color = newColor;\n    };\n    /**\n     * @param {?} color\n     * @param {?} isAdd\n     * @return {?}\n     */\n    MdCheckbox.prototype._setElementColor = function (color, isAdd) {\n        if (color != null && color != '') {\n            this._renderer.setElementClass(this._elementRef.nativeElement, \"mat-\" + color, isAdd);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdCheckbox.prototype._isRippleDisabled = function () {\n        return this.disableRipple || this.disabled;\n    };\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value Value to be set to the model.\n     * @return {?}\n     */\n    MdCheckbox.prototype.writeValue = function (value) {\n        this.checked = !!value;\n    };\n    /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Function to be called on change.\n     * @return {?}\n     */\n    MdCheckbox.prototype.registerOnChange = function (fn) {\n        this._controlValueAccessorChangeFn = fn;\n    };\n    /**\n     * Registers a callback to be triggered when the control has been touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be triggered when the checkbox is touched.\n     * @return {?}\n     */\n    MdCheckbox.prototype.registerOnTouched = function (fn) {\n        this.onTouched = fn;\n    };\n    /**\n     * Sets the checkbox's disabled state. Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled Whether the checkbox should be disabled.\n     * @return {?}\n     */\n    MdCheckbox.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    /**\n     * @param {?} newState\n     * @return {?}\n     */\n    MdCheckbox.prototype._transitionCheckState = function (newState) {\n        var /** @type {?} */ oldState = this._currentCheckState;\n        var /** @type {?} */ renderer = this._renderer;\n        var /** @type {?} */ elementRef = this._elementRef;\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            renderer.setElementClass(elementRef.nativeElement, this._currentAnimationClass, false);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            renderer.setElementClass(elementRef.nativeElement, this._currentAnimationClass, true);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdCheckbox.prototype._emitChangeEvent = function () {\n        var /** @type {?} */ event = new MdCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    };\n    /**\n     * Informs the component when we lose focus in order to style accordingly\n     * @return {?}\n     */\n    MdCheckbox.prototype._onInputBlur = function () {\n        this._removeFocusedRipple();\n        this.onTouched();\n    };\n    /**\n     * Toggles the `checked` state of the checkbox.\n     * @return {?}\n     */\n    MdCheckbox.prototype.toggle = function () {\n        this.checked = !this.checked;\n    };\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param {?} event\n     * @return {?}\n     */\n    MdCheckbox.prototype._onInputClick = function (event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n        this._removeFocusedRipple();\n        if (!this.disabled) {\n            this.toggle();\n            this._transitionCheckState(this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n    };\n    /**\n     * Focuses the checkbox.\n     * @return {?}\n     */\n    MdCheckbox.prototype.focus = function () {\n        this._focusOriginMonitor.focusVia(this._inputElement.nativeElement, this._renderer, 'program');\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdCheckbox.prototype._onInteractionEvent = function (event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    };\n    /**\n     * @param {?} oldState\n     * @param {?} newState\n     * @return {?}\n     */\n    MdCheckbox.prototype._getAnimationClassForCheckStateTransition = function (oldState, newState) {\n        var /** @type {?} */ animSuffix;\n        switch (oldState) {\n            case TransitionCheckState.Init:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === TransitionCheckState.Checked) {\n                    animSuffix = 'unchecked-checked';\n                }\n                else if (newState == TransitionCheckState.Indeterminate) {\n                    animSuffix = 'unchecked-indeterminate';\n                }\n                else {\n                    return '';\n                }\n                break;\n            case TransitionCheckState.Unchecked:\n                animSuffix = newState === TransitionCheckState.Checked ?\n                    'unchecked-checked' : 'unchecked-indeterminate';\n                break;\n            case TransitionCheckState.Checked:\n                animSuffix = newState === TransitionCheckState.Unchecked ?\n                    'checked-unchecked' : 'checked-indeterminate';\n                break;\n            case TransitionCheckState.Indeterminate:\n                animSuffix = newState === TransitionCheckState.Checked ?\n                    'indeterminate-checked' : 'indeterminate-unchecked';\n        }\n        return \"mat-checkbox-anim-\" + animSuffix;\n    };\n    /**\n     * Fades out the focused state ripple.\n     * @return {?}\n     */\n    MdCheckbox.prototype._removeFocusedRipple = function () {\n        if (this._focusedRipple) {\n            this._focusedRipple.fadeOut();\n            this._focusedRipple = null;\n        }\n    };\n    return MdCheckbox;\n}());\nMdCheckbox.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-checkbox, mat-checkbox',\n                template: \"<label class=\\\"mat-checkbox-layout\\\" #label> <div class=\\\"mat-checkbox-inner-container\\\"> <input #input class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\" [id]=\\\"inputId\\\" [required]=\\\"required\\\" [checked]=\\\"checked\\\" [value]=\\\"value\\\" [disabled]=\\\"disabled\\\" [name]=\\\"name\\\" [tabIndex]=\\\"tabIndex\\\" [indeterminate]=\\\"indeterminate\\\" [attr.aria-label]=\\\"ariaLabel\\\" [attr.aria-labelledby]=\\\"ariaLabelledby\\\" (blur)=\\\"_onInputBlur()\\\" (change)=\\\"_onInteractionEvent($event)\\\" (click)=\\\"_onInputClick($event)\\\"> <div md-ripple *ngIf=\\\"!_isRippleDisabled()\\\" class=\\\"mat-checkbox-ripple\\\" [mdRippleTrigger]=\\\"label\\\" [mdRippleCentered]=\\\"true\\\"></div> <div class=\\\"mat-checkbox-frame\\\"></div> <div class=\\\"mat-checkbox-background\\\"> <svg version=\\\"1.1\\\" class=\\\"mat-checkbox-checkmark\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" xml:space=\\\"preserve\\\"> <path class=\\\"mat-checkbox-checkmark-path\\\" fill=\\\"none\\\" stroke=\\\"white\\\" d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/> </svg> <!-- Element for rendering the indeterminate state checkbox. --> <div class=\\\"mat-checkbox-mixedmark\\\"></div> </div> </div> <span class=\\\"mat-checkbox-label\\\"> <ng-content></ng-content> </span> </label> \",\n                styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.91026}50%{animation-timing-function:cubic-bezier(0,0,.2,.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0,0,0,1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(.4,0,1,1);stroke-dashoffset:0}to{stroke-dashoffset:-22.91026}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0,0,.2,.1);opacity:1;transform:rotate(0)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(.14,0,0,1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0,0,.2,.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(.14,0,0,1);opacity:1;transform:rotate(0)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}100%,32.8%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-checkmark,.mat-checkbox-frame{bottom:0;left:0;position:absolute;right:0;top:0}.mat-checkbox-checkmark,.mat-checkbox-mixedmark{width:calc(100% - 4px)}.mat-checkbox-background,.mat-checkbox-frame{border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-checkbox-label{cursor:pointer}.mat-checkbox-layout{cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex}.mat-checkbox-inner-container{display:inline-block;height:20px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:20px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-layout .mat-checkbox-label{line-height:24px}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0,0,.2,.1);border-width:2px;border-style:solid}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0,0,.2,.1),opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-checkbox-checkmark{width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.91026;stroke-dasharray:22.91026;stroke-width:2.66667px}.mat-checkbox-mixedmark{height:2px;opacity:0;transform:scaleX(0) rotate(0)}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0s mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0s mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0s mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0s mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0s mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0s mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0s mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0s mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:.5s linear 0s mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:.5s linear 0s mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0s mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:.3s linear 0s mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox-ripple{position:absolute;left:-15px;top:-15px;right:-15px;bottom:-15px;border-radius:50%;z-index:1;pointer-events:none} /*# sourceMappingURL=checkbox.css.map */ \"],\n                host: {\n                    '[class.mat-checkbox]': 'true',\n                    '[class.mat-checkbox-indeterminate]': 'indeterminate',\n                    '[class.mat-checkbox-checked]': 'checked',\n                    '[class.mat-checkbox-disabled]': 'disabled',\n                    '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n                },\n                providers: [MD_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None,\n                changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectionStrategy\"].OnPush\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCheckbox.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectorRef\"], },\n    { type: FocusOriginMonitor, },\n]; };\nMdCheckbox.propDecorators = {\n    'ariaLabel': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['aria-label',] },],\n    'ariaLabelledby': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['aria-labelledby',] },],\n    'id': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'disableRipple': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'required': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'align': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'labelPosition': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'tabIndex': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'name': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'change': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    'indeterminateChange': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    'value': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    '_inputElement': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewChild\"], args: ['input',] },],\n    '_ripple': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewChild\"], args: [MdRipple,] },],\n    'checked': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'indeterminate': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'color': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\nvar MdCheckboxModule = (function () {\n    function MdCheckboxModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdCheckboxModule.forRoot = function () {\n        return {\n            ngModule: MdCheckboxModule,\n            providers: []\n        };\n    };\n    return MdCheckboxModule;\n}());\nMdCheckboxModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [__WEBPACK_IMPORTED_MODULE_2__angular_common__[\"CommonModule\"], MdRippleModule, CompatibilityModule],\n                exports: [MdCheckbox, CompatibilityModule],\n                declarations: [MdCheckbox],\n                providers: [FocusOriginMonitor]\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCheckboxModule.ctorParameters = function () { return []; };\n/**\n * Provider Expression that allows md-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * \\@docs-private\n */\nvar MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: __WEBPACK_IMPORTED_MODULE_8__angular_forms__[\"NG_VALUE_ACCESSOR\"],\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return MdRadioGroup; }),\n    multi: true\n};\nvar _uniqueIdCounter$2 = 0;\n/**\n * Change event object emitted by MdRadio and MdRadioGroup.\n */\nvar MdRadioChange = (function () {\n    function MdRadioChange() {\n    }\n    return MdRadioChange;\n}());\n/**\n * A group of radio buttons. May contain one or more `<md-radio-button>` elements.\n */\nvar MdRadioGroup = (function () {\n    function MdRadioGroup() {\n        this._value = null;\n        this._name = \"md-radio-group-\" + _uniqueIdCounter$2++;\n        this._disabled = false;\n        this._selected = null;\n        this._isInitialized = false;\n        /** The method to be called in order to update ngModel */\n        this._controlValueAccessorChangeFn = function (value) { };\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * \\@docs-private\n         */\n        this.onTouched = function () { };\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /** Child radio buttons. */\n        this._radios = null;\n        /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n        this.labelPosition = 'after';\n    }\n    Object.defineProperty(MdRadioGroup.prototype, \"name\", {\n        /**\n         * Name of the radio button group. All radio buttons inside this group will use this name.\n         * @return {?}\n         */\n        get: function () { return this._name; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._name = value;\n            this._updateRadioButtonNames();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdRadioGroup.prototype, \"align\", {\n        /**\n         * Alignment of the radio-buttons relative to their labels. Can be 'before' or 'after'.\n         * @deprecated\n         * @return {?}\n         */\n        get: function () {\n            // align refers to the checkbox relative to the label, while labelPosition refers to the\n            // label relative to the checkbox. As such, they are inverted.\n            return this.labelPosition == 'after' ? 'start' : 'end';\n        },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) {\n            this.labelPosition = (v == 'start') ? 'after' : 'before';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdRadioGroup.prototype, \"disabled\", {\n        /**\n         * Whether the radio button is disabled.\n         * @return {?}\n         */\n        get: function () { return this._disabled; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            // The presence of *any* disabled value makes the component disabled, *except* for false.\n            this._disabled = (value != null && value !== false) ? true : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdRadioGroup.prototype, \"value\", {\n        /**\n         * Value of the radio button.\n         * @return {?}\n         */\n        get: function () { return this._value; },\n        /**\n         * @param {?} newValue\n         * @return {?}\n         */\n        set: function (newValue) {\n            if (this._value != newValue) {\n                // Set this before proceeding to ensure no circular loop occurs with selection.\n                this._value = newValue;\n                this._updateSelectedRadioFromValue();\n                this._checkSelectedRadioButton();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdRadioGroup.prototype._checkSelectedRadioButton = function () {\n        if (this.selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    };\n    Object.defineProperty(MdRadioGroup.prototype, \"selected\", {\n        /**\n         * Whether the radio button is selected.\n         * @return {?}\n         */\n        get: function () { return this._selected; },\n        /**\n         * @param {?} selected\n         * @return {?}\n         */\n        set: function (selected) {\n            this._selected = selected;\n            this.value = selected ? selected.value : null;\n            this._checkSelectedRadioButton();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     * @return {?}\n     */\n    MdRadioGroup.prototype.ngAfterContentInit = function () {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MdRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MdRadioGroup.\n        this._isInitialized = true;\n    };\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     * @return {?}\n     */\n    MdRadioGroup.prototype._touch = function () {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdRadioGroup.prototype._updateRadioButtonNames = function () {\n        var _this = this;\n        if (this._radios) {\n            this._radios.forEach(function (radio) {\n                radio.name = _this.name;\n            });\n        }\n    };\n    /**\n     * Updates the `selected` radio button from the internal _value state.\n     * @return {?}\n     */\n    MdRadioGroup.prototype._updateSelectedRadioFromValue = function () {\n        var _this = this;\n        // If the value already matches the selected radio, do nothing.\n        var /** @type {?} */ isAlreadySelected = this._selected != null && this._selected.value == this._value;\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach(function (radio) {\n                radio.checked = _this.value == radio.value;\n                if (radio.checked) {\n                    _this._selected = radio;\n                }\n            });\n        }\n    };\n    /**\n     * Dispatch change event with current selection and group value.\n     * @return {?}\n     */\n    MdRadioGroup.prototype._emitChangeEvent = function () {\n        if (this._isInitialized) {\n            var /** @type {?} */ event = new MdRadioChange();\n            event.source = this._selected;\n            event.value = this._value;\n            this.change.emit(event);\n        }\n    };\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    MdRadioGroup.prototype.writeValue = function (value) {\n        this.value = value;\n    };\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    MdRadioGroup.prototype.registerOnChange = function (fn) {\n        this._controlValueAccessorChangeFn = fn;\n    };\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    MdRadioGroup.prototype.registerOnTouched = function (fn) {\n        this.onTouched = fn;\n    };\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled Whether the control should be disabled.\n     * @return {?}\n     */\n    MdRadioGroup.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    return MdRadioGroup;\n}());\nMdRadioGroup.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'md-radio-group, mat-radio-group',\n                providers: [MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n                host: {\n                    'role': 'radiogroup',\n                    '[class.mat-radio-group]': 'true',\n                },\n            },] },\n];\n/**\n * @nocollapse\n */\nMdRadioGroup.ctorParameters = function () { return []; };\nMdRadioGroup.propDecorators = {\n    'change': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    '_radios': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChildren\"], args: [__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return MdRadioButton; }),] },],\n    'name': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'align': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'labelPosition': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'value': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'selected': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\n/**\n * A radio-button. May be inside of\n */\nvar MdRadioButton = (function () {\n    /**\n     * @param {?} radioGroup\n     * @param {?} _elementRef\n     * @param {?} _renderer\n     * @param {?} _focusOriginMonitor\n     * @param {?} _radioDispatcher\n     */\n    function MdRadioButton(radioGroup, _elementRef, _renderer, _focusOriginMonitor, _radioDispatcher) {\n        var _this = this;\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._focusOriginMonitor = _focusOriginMonitor;\n        this._radioDispatcher = _radioDispatcher;\n        /** The unique ID for the radio button. */\n        this.id = \"md-radio-\" + _uniqueIdCounter$2++;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this._checked = false;\n        this._value = null;\n        this.radioGroup = radioGroup;\n        _radioDispatcher.listen(function (id, name) {\n            if (id != _this.id && name == _this.name) {\n                _this.checked = false;\n            }\n        });\n    }\n    Object.defineProperty(MdRadioButton.prototype, \"disableRipple\", {\n        /**\n         * Whether the ripple effect for this radio button is disabled.\n         * @return {?}\n         */\n        get: function () { return this._disableRipple; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._disableRipple = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdRadioButton.prototype, \"checked\", {\n        /**\n         * Whether this radio button is checked.\n         * @return {?}\n         */\n        get: function () {\n            return this._checked;\n        },\n        /**\n         * @param {?} newCheckedState\n         * @return {?}\n         */\n        set: function (newCheckedState) {\n            if (this._checked != newCheckedState) {\n                this._checked = newCheckedState;\n                if (newCheckedState && this.radioGroup && this.radioGroup.value != this.value) {\n                    this.radioGroup.selected = this;\n                }\n                else if (!newCheckedState && this.radioGroup && this.radioGroup.value == this.value) {\n                    // When unchecking the selected radio button, update the selected radio\n                    // property on the group.\n                    this.radioGroup.selected = null;\n                }\n                if (newCheckedState) {\n                    // Notify all radio buttons with the same name to un-check.\n                    this._radioDispatcher.notify(this.id, this.name);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdRadioButton.prototype, \"value\", {\n        /**\n         * The value of this radio button.\n         * @return {?}\n         */\n        get: function () {\n            return this._value;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._value != value) {\n                this._value = value;\n                if (this.radioGroup != null) {\n                    if (!this.checked) {\n                        // Update checked when the value changed to match the radio group's value\n                        this.checked = this.radioGroup.value == value;\n                    }\n                    if (this.checked) {\n                        this.radioGroup.selected = this;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdRadioButton.prototype, \"align\", {\n        /**\n         * Whether or not the radio-button should appear before or after the label.\n         * @deprecated\n         * @return {?}\n         */\n        get: function () {\n            // align refers to the checkbox relative to the label, while labelPosition refers to the\n            // label relative to the checkbox. As such, they are inverted.\n            return this.labelPosition == 'after' ? 'start' : 'end';\n        },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) {\n            this.labelPosition = (v == 'start') ? 'after' : 'before';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdRadioButton.prototype, \"labelPosition\", {\n        /**\n         * Whether the label should appear after or before the radio button. Defaults to 'after'\n         * @return {?}\n         */\n        get: function () {\n            return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._labelPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdRadioButton.prototype, \"disabled\", {\n        /**\n         * Whether the radio button is disabled.\n         * @return {?}\n         */\n        get: function () {\n            return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            // The presence of *any* disabled value makes the component disabled, *except* for false.\n            this._disabled = (value != null && value !== false) ? true : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdRadioButton.prototype, \"inputId\", {\n        /**\n         * ID of the native input element inside `<md-radio-button>`\n         * @return {?}\n         */\n        get: function () {\n            return this.id + \"-input\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Focuses the radio button.\n     * @return {?}\n     */\n    MdRadioButton.prototype.focus = function () {\n        this._focusOriginMonitor.focusVia(this._inputElement.nativeElement, this._renderer, 'keyboard');\n    };\n    /**\n     * @return {?}\n     */\n    MdRadioButton.prototype.ngOnInit = function () {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdRadioButton.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        this._focusOriginMonitorSubscription = this._focusOriginMonitor\n            .monitor(this._inputElement.nativeElement, this._renderer, false)\n            .subscribe(function (focusOrigin) {\n            if (focusOrigin === 'keyboard' && !_this._focusedRippleRef) {\n                _this._focusedRippleRef = _this._ripple.launch(0, 0, { persistent: true, centered: true });\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MdRadioButton.prototype.ngOnDestroy = function () {\n        this._focusOriginMonitor.stopMonitoring(this._inputElement.nativeElement);\n    };\n    /**\n     * Dispatch change event with current value.\n     * @return {?}\n     */\n    MdRadioButton.prototype._emitChangeEvent = function () {\n        var /** @type {?} */ event = new MdRadioChange();\n        event.source = this;\n        event.value = this._value;\n        this.change.emit(event);\n    };\n    /**\n     * @return {?}\n     */\n    MdRadioButton.prototype._isRippleDisabled = function () {\n        return this.disableRipple || this.disabled;\n    };\n    /**\n     * @return {?}\n     */\n    MdRadioButton.prototype._onInputBlur = function () {\n        if (this._focusedRippleRef) {\n            this._focusedRippleRef.fadeOut();\n            this._focusedRippleRef = null;\n        }\n        if (this.radioGroup) {\n            this.radioGroup._touch();\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdRadioButton.prototype._onInputClick = function (event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    };\n    /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     * @param {?} event\n     * @return {?}\n     */\n    MdRadioButton.prototype._onInputChange = function (event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        var /** @type {?} */ groupValueChanged = this.radioGroup && this.value != this.radioGroup.value;\n        this.checked = true;\n        this._emitChangeEvent();\n        if (this.radioGroup) {\n            this.radioGroup._controlValueAccessorChangeFn(this.value);\n            this.radioGroup._touch();\n            if (groupValueChanged) {\n                this.radioGroup._emitChangeEvent();\n            }\n        }\n    };\n    return MdRadioButton;\n}());\nMdRadioButton.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-radio-button, mat-radio-button',\n                template: \"<!-- TODO(jelbourn): render the radio on either side of the content --> <!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. --> <label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label> <!-- The actual 'radio' part of the control. --> <div class=\\\"mat-radio-container\\\"> <div class=\\\"mat-radio-outer-circle\\\"></div> <div class=\\\"mat-radio-inner-circle\\\"></div> <div md-ripple *ngIf=\\\"!_isRippleDisabled()\\\" class=\\\"mat-radio-ripple\\\" [mdRippleTrigger]=\\\"label\\\" [mdRippleCentered]=\\\"true\\\"></div> </div> <input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\" [id]=\\\"inputId\\\" [checked]=\\\"checked\\\" [disabled]=\\\"disabled\\\" [name]=\\\"name\\\" [attr.aria-label]=\\\"ariaLabel\\\" [attr.aria-labelledby]=\\\"ariaLabelledby\\\" (change)=\\\"_onInputChange($event)\\\" (blur)=\\\"_onInputBlur()\\\" (click)=\\\"_onInputClick($event)\\\"> <!-- The label content for radio control. --> <div class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\"> <ng-content></ng-content> </div> </label> \",\n                styles: [\".mat-radio-button{display:inline-block;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}.mat-radio-label{cursor:pointer;display:inline-flex;align-items:baseline;white-space:nowrap}.mat-radio-container{box-sizing:border-box;display:inline-block;height:20px;position:relative;width:20px;top:2px}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;transform:scale(0);width:20px}.mat-radio-checked .mat-radio-inner-circle{transform:scale(.5)}.mat-radio-label-content{display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-ripple{position:absolute;left:-15px;top:-15px;right:-15px;bottom:-15px;border-radius:50%;z-index:1;pointer-events:none} /*# sourceMappingURL=radio.css.map */ \"],\n                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None,\n                host: {\n                    '[class.mat-radio-button]': 'true',\n                    '[class.mat-radio-checked]': 'checked',\n                    '[class.mat-radio-disabled]': 'disabled',\n                    '[attr.id]': 'id',\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdRadioButton.ctorParameters = function () { return [\n    { type: MdRadioGroup, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] },] },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: FocusOriginMonitor, },\n    { type: UniqueSelectionDispatcher, },\n]; };\nMdRadioButton.propDecorators = {\n    'id': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'name': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'ariaLabel': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['aria-label',] },],\n    'ariaLabelledby': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['aria-labelledby',] },],\n    'disableRipple': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'checked': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'value': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'align': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'labelPosition': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'change': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    '_ripple': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewChild\"], args: [MdRipple,] },],\n    '_inputElement': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewChild\"], args: ['input',] },],\n};\nvar MdRadioModule = (function () {\n    function MdRadioModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdRadioModule.forRoot = function () {\n        return {\n            ngModule: MdRadioModule,\n            providers: [],\n        };\n    };\n    return MdRadioModule;\n}());\nMdRadioModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [__WEBPACK_IMPORTED_MODULE_2__angular_common__[\"CommonModule\"], MdRippleModule, CompatibilityModule],\n                exports: [MdRadioGroup, MdRadioButton, CompatibilityModule],\n                providers: [UNIQUE_SELECTION_DISPATCHER_PROVIDER, VIEWPORT_RULER_PROVIDER, FocusOriginMonitor],\n                declarations: [MdRadioGroup, MdRadioButton],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdRadioModule.ctorParameters = function () { return []; };\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nvar ListKeyManager = (function () {\n    /**\n     * @param {?} _items\n     */\n    function ListKeyManager(_items) {\n        this._items = _items;\n        this._activeItemIndex = null;\n        this._tabOut = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__[\"Subject\"]();\n        this._wrap = false;\n    }\n    /**\n     * Turns on wrapping mode, which ensures that the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     *\n     * @return {?} The ListKeyManager that the method was called on.\n     */\n    ListKeyManager.prototype.withWrap = function () {\n        this._wrap = true;\n        return this;\n    };\n    /**\n     * Sets the active item to the item at the index specified.\n     *\n     * @param {?} index The index of the item to be set as active.\n     * @return {?}\n     */\n    ListKeyManager.prototype.setActiveItem = function (index) {\n        this._activeItemIndex = index;\n        this._activeItem = this._items.toArray()[index];\n    };\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param {?} event Keyboard event to be used for determining which element should be active.\n     * @return {?}\n     */\n    ListKeyManager.prototype.onKeydown = function (event) {\n        switch (event.keyCode) {\n            case DOWN_ARROW:\n                this.setNextItemActive();\n                break;\n            case UP_ARROW:\n                this.setPreviousItemActive();\n                break;\n            case HOME:\n                this.setFirstItemActive();\n                break;\n            case END:\n                this.setLastItemActive();\n                break;\n            case TAB:\n                // Note that we shouldn't prevent the default action on tab.\n                this._tabOut.next(null);\n                return;\n            default:\n                return;\n        }\n        event.preventDefault();\n    };\n    Object.defineProperty(ListKeyManager.prototype, \"activeItemIndex\", {\n        /**\n         * Returns the index of the currently active item.\n         * @return {?}\n         */\n        get: function () {\n            return this._activeItemIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ListKeyManager.prototype, \"activeItem\", {\n        /**\n         * Returns the currently active item.\n         * @return {?}\n         */\n        get: function () {\n            return this._activeItem;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the active item to the first enabled item in the list.\n     * @return {?}\n     */\n    ListKeyManager.prototype.setFirstItemActive = function () {\n        this._setActiveItemByIndex(0, 1);\n    };\n    /**\n     * Sets the active item to the last enabled item in the list.\n     * @return {?}\n     */\n    ListKeyManager.prototype.setLastItemActive = function () {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    };\n    /**\n     * Sets the active item to the next enabled item in the list.\n     * @return {?}\n     */\n    ListKeyManager.prototype.setNextItemActive = function () {\n        this._activeItemIndex === null ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    };\n    /**\n     * Sets the active item to a previous enabled item in the list.\n     * @return {?}\n     */\n    ListKeyManager.prototype.setPreviousItemActive = function () {\n        this._activeItemIndex === null && this._wrap ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    };\n    /**\n     * Allows setting of the activeItemIndex without any other effects.\n     * @param {?} index The new activeItemIndex.\n     * @return {?}\n     */\n    ListKeyManager.prototype.updateActiveItemIndex = function (index) {\n        this._activeItemIndex = index;\n    };\n    Object.defineProperty(ListKeyManager.prototype, \"tabOut\", {\n        /**\n         * Observable that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         * @return {?}\n         */\n        get: function () {\n            return this._tabOut.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     * @param {?} delta\n     * @param {?=} items\n     * @return {?}\n     */\n    ListKeyManager.prototype._setActiveItemByDelta = function (delta, items) {\n        if (items === void 0) { items = this._items.toArray(); }\n        this._wrap ? this._setActiveInWrapMode(delta, items)\n            : this._setActiveInDefaultMode(delta, items);\n    };\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     * @param {?} delta\n     * @param {?} items\n     * @return {?}\n     */\n    ListKeyManager.prototype._setActiveInWrapMode = function (delta, items) {\n        // when active item would leave menu, wrap to beginning or end\n        this._activeItemIndex =\n            (this._activeItemIndex + delta + items.length) % items.length;\n        // skip all disabled menu items recursively until an enabled one is reached\n        if (items[this._activeItemIndex].disabled) {\n            this._setActiveInWrapMode(delta, items);\n        }\n        else {\n            this.setActiveItem(this._activeItemIndex);\n        }\n    };\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     * @param {?} delta\n     * @param {?} items\n     * @return {?}\n     */\n    ListKeyManager.prototype._setActiveInDefaultMode = function (delta, items) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta, items);\n    };\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     * @param {?} index\n     * @param {?} fallbackDelta\n     * @param {?=} items\n     * @return {?}\n     */\n    ListKeyManager.prototype._setActiveItemByIndex = function (index, fallbackDelta, items) {\n        if (items === void 0) { items = this._items.toArray(); }\n        if (!items[index]) {\n            return;\n        }\n        while (items[index].disabled) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    };\n    return ListKeyManager;\n}());\nvar FocusKeyManager = (function (_super) {\n    __extends(FocusKeyManager, _super);\n    /**\n     * @param {?} items\n     */\n    function FocusKeyManager(items) {\n        return _super.call(this, items) || this;\n    }\n    /**\n     * This method sets the active item to the item at the specified index.\n     * It also adds focuses the newly active item.\n     * @param {?} index\n     * @return {?}\n     */\n    FocusKeyManager.prototype.setActiveItem = function (index) {\n        _super.prototype.setActiveItem.call(this, index);\n        this.activeItem.focus();\n    };\n    return FocusKeyManager;\n}(ListKeyManager));\n/**\n * The following are all the animations for the md-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material md-select animation.\n */\n/**\n * This animation shrinks the placeholder text to 75% of its normal size and translates\n * it to either the top left corner (ltr) or top right corner (rtl) of the trigger,\n * depending on the text direction of the application.\n */\nvar transformPlaceholder = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"i\" /* trigger */])('transformPlaceholder', [\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"j\" /* state */])('floating-ltr', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({\n        top: '-22px',\n        left: '-2px',\n        transform: \"scale(0.75)\"\n    })),\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"j\" /* state */])('floating-rtl', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({\n        top: '-22px',\n        left: '2px',\n        transform: \"scale(0.75)\"\n    })),\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"k\" /* transition */])('* => *', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"l\" /* animate */])(\"400ms cubic-bezier(0.25, 0.8, 0.25, 1)\"))\n]);\n/**\n * This animation transforms the select's overlay panel on and off the page.\n *\n * When the panel is attached to the DOM, it expands its width 32px, scales it up to\n * 100% on the Y axis, fades in its border, and translates slightly up and to the\n * side to ensure the option text correctly overlaps the trigger text.\n *\n * When the panel is removed from the DOM, it simply fades out linearly.\n */\nvar transformPanel = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"i\" /* trigger */])('transformPanel', [\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"j\" /* state */])('showing', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({\n        opacity: 1,\n        minWidth: 'calc(100% + 32px)',\n        transform: \"scaleY(1)\"\n    })),\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"k\" /* transition */])('void => *', [\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({\n            opacity: 0,\n            minWidth: '100%',\n            transform: \"scaleY(0)\"\n        }),\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"l\" /* animate */])(\"150ms cubic-bezier(0.25, 0.8, 0.25, 1)\")\n    ]),\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"k\" /* transition */])('* => void', [\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"l\" /* animate */])('250ms 100ms linear', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({ opacity: 0 }))\n    ])\n]);\n/**\n * This animation fades in the background color and text content of the\n * select's options. It is time delayed to occur 100ms after the overlay\n * panel has transformed in.\n */\nvar fadeInContent = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"i\" /* trigger */])('fadeInContent', [\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"j\" /* state */])('showing', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({ opacity: 1 })),\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"k\" /* transition */])('void => showing', [\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({ opacity: 0 }),\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"l\" /* animate */])(\"150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)\")\n    ])\n]);\n/**\n * Exception thrown when attempting to change a select's `multiple` option after initialization.\n * \\@docs-private\n */\nvar MdSelectDynamicMultipleError = (function (_super) {\n    __extends(MdSelectDynamicMultipleError, _super);\n    function MdSelectDynamicMultipleError() {\n        return _super.call(this, 'Cannot change `multiple` mode of select after initialization.') || this;\n    }\n    return MdSelectDynamicMultipleError;\n}(MdError));\n/**\n * Exception thrown when attempting to assign a non-array value to a select in `multiple` mode.\n * Note that `undefined` and `null` are still valid values to allow for resetting the value.\n * \\@docs-private\n */\nvar MdSelectNonArrayValueError = (function (_super) {\n    __extends(MdSelectNonArrayValueError, _super);\n    function MdSelectNonArrayValueError() {\n        return _super.call(this, 'Cannot assign truthy non-array value to select in `multiple` mode.') || this;\n    }\n    return MdSelectNonArrayValueError;\n}(MdError));\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n/** The fixed height of every option element. */\nvar SELECT_OPTION_HEIGHT = 48;\n/** The max height of the select's overlay panel */\nvar SELECT_PANEL_MAX_HEIGHT = 256;\n/** The max number of options visible at once in the select panel. */\nvar SELECT_MAX_OPTIONS_DISPLAYED = 5;\n/** The fixed height of the select's trigger element. */\nvar SELECT_TRIGGER_HEIGHT = 30;\n/**\n * Must adjust for the difference in height between the option and the trigger,\n * so the text will align on the y axis.\n * (SELECT_OPTION_HEIGHT (48) - SELECT_TRIGGER_HEIGHT (30)) / 2 = 9\n */\nvar SELECT_OPTION_HEIGHT_ADJUSTMENT = 9;\n/** The panel's padding on the x-axis */\nvar SELECT_PANEL_PADDING_X = 16;\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * (SELECT_PADDING * 1.75) + 20 = 48\n * The padding is multiplied by 1.75 because the checkbox's margin is half the padding, and\n * the browser adds ~4px, because we're using inline elements.\n * The checkbox width is 20px.\n */\nvar SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.75 + 20;\n/**\n * The panel's padding on the y-axis. This padding indicates there are more\n * options available if you scroll.\n */\nvar SELECT_PANEL_PADDING_Y = 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nvar SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Change event object that is emitted when the select value has changed.\n */\nvar MdSelectChange = (function () {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    function MdSelectChange(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n    return MdSelectChange;\n}());\nvar MdSelect = (function () {\n    /**\n     * @param {?} _element\n     * @param {?} _renderer\n     * @param {?} _viewportRuler\n     * @param {?} _changeDetectorRef\n     * @param {?} _dir\n     * @param {?} _control\n     * @param {?} tabIndex\n     */\n    function MdSelect(_element, _renderer, _viewportRuler, _changeDetectorRef, _dir, _control, tabIndex) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._control = _control;\n        this._panelOpen = false;\n        this._required = false;\n        this._disabled = false;\n        this._scrollTop = 0;\n        this._multiple = false;\n        this._placeholderState = '';\n        /** View -> model callback called when value changes */\n        this._onChange = function (value) { };\n        /** View -> model callback called when select has been touched */\n        this._onTouched = function () { };\n        /** The IDs of child options to be passed to the aria-owns attribute. */\n        this._optionIds = '';\n        /** The value of the select panel's transform-origin property. */\n        this._transformOrigin = 'top';\n        /** Whether the panel's animation is done. */\n        this._panelDoneAnimating = false;\n        /**\n         * The x-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text when\n         * the panel opens. Will change based on LTR or RTL text direction.\n         */\n        this._offsetX = 0;\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        this._floatPlaceholder = 'auto';\n        /** Aria label of the select. If not specified, the placeholder will be used as label. */\n        this.ariaLabel = '';\n        /** Input that can be used to specify the `aria-labelledby` attribute. */\n        this.ariaLabelledby = '';\n        /** Event emitted when the select has been opened. */\n        this.onOpen = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /** Event emitted when the select has been closed. */\n        this.onClose = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /** Event emitted when the selected value has been changed by the user. */\n        this.change = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        if (this._control) {\n            this._control.valueAccessor = this;\n        }\n        this._tabIndex = parseInt(tabIndex) || 0;\n    }\n    Object.defineProperty(MdSelect.prototype, \"placeholder\", {\n        /**\n         * Placeholder to be shown if no value has been selected.\n         * @return {?}\n         */\n        get: function () { return this._placeholder; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            var _this = this;\n            this._placeholder = value;\n            // Must wait to record the trigger width to ensure placeholder width is included.\n            Promise.resolve(null).then(function () { return _this._triggerWidth = _this._getWidth(); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSelect.prototype, \"disabled\", {\n        /**\n         * Whether the component is disabled.\n         * @return {?}\n         */\n        get: function () { return this._disabled; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._disabled = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSelect.prototype, \"required\", {\n        /**\n         * Whether the component is required.\n         * @return {?}\n         */\n        get: function () { return this._required; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._required = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSelect.prototype, \"multiple\", {\n        /**\n         * Whether the user should be allowed to select multiple options.\n         * @return {?}\n         */\n        get: function () { return this._multiple; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._selectionModel) {\n                throw new MdSelectDynamicMultipleError();\n            }\n            this._multiple = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSelect.prototype, \"floatPlaceholder\", {\n        /**\n         * Whether to float the placeholder text.\n         * @return {?}\n         */\n        get: function () { return this._floatPlaceholder; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._floatPlaceholder = value || 'auto';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSelect.prototype, \"tabIndex\", {\n        /**\n         * Tab index for the select element.\n         * @return {?}\n         */\n        get: function () { return this._disabled ? -1 : this._tabIndex; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._tabIndex = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSelect.prototype, \"optionSelectionChanges\", {\n        /**\n         * Combined stream of all of the child options' change events.\n         * @return {?}\n         */\n        get: function () {\n            return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__[\"Observable\"].merge.apply(__WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__[\"Observable\"], this.options.map(function (option) { return option.onSelectionChange; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdSelect.prototype.ngOnInit = function () {\n        this._selectionModel = new SelectionModel(this.multiple, null, false);\n    };\n    /**\n     * @return {?}\n     */\n    MdSelect.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this._initKeyManager();\n        this._changeSubscription = this.options.changes.startWith(null).subscribe(function () {\n            _this._resetOptions();\n            if (_this._control) {\n                // Defer setting the value in order to avoid the \"Expression\n                // has changed after it was checked\" errors from Angular.\n                Promise.resolve(null).then(function () { return _this._setSelectionByValue(_this._control.value); });\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MdSelect.prototype.ngOnDestroy = function () {\n        this._dropSubscriptions();\n        if (this._changeSubscription) {\n            this._changeSubscription.unsubscribe();\n        }\n        if (this._tabSubscription) {\n            this._tabSubscription.unsubscribe();\n        }\n    };\n    /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    MdSelect.prototype.toggle = function () {\n        this.panelOpen ? this.close() : this.open();\n    };\n    /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    MdSelect.prototype.open = function () {\n        if (this.disabled || !this.options.length) {\n            return;\n        }\n        this._calculateOverlayPosition();\n        this._placeholderState = this._floatPlaceholderState();\n        this._panelOpen = true;\n    };\n    /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    MdSelect.prototype.close = function () {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            if (this._selectionModel.isEmpty()) {\n                this._placeholderState = '';\n            }\n            this._focusHost();\n        }\n    };\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    MdSelect.prototype.writeValue = function (value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    };\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    MdSelect.prototype.registerOnChange = function (fn) {\n        this._onChange = fn;\n    };\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    MdSelect.prototype.registerOnTouched = function (fn) {\n        this._onTouched = fn;\n    };\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    MdSelect.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    Object.defineProperty(MdSelect.prototype, \"panelOpen\", {\n        /**\n         * Whether or not the overlay panel is open.\n         * @return {?}\n         */\n        get: function () {\n            return this._panelOpen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSelect.prototype, \"selected\", {\n        /**\n         * The currently selected option.\n         * @return {?}\n         */\n        get: function () {\n            return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSelect.prototype, \"triggerValue\", {\n        /**\n         * The value displayed in the trigger.\n         * @return {?}\n         */\n        get: function () {\n            if (this._multiple) {\n                var /** @type {?} */ selectedOptions = this._selectionModel.selected.map(function (option) { return option.viewValue; });\n                if (this._isRtl()) {\n                    selectedOptions.reverse();\n                }\n                // TODO(crisbeto): delimiter should be configurable for proper localization.\n                return selectedOptions.join(', ');\n            }\n            return this._selectionModel.selected[0].viewValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    MdSelect.prototype._isRtl = function () {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    };\n    /**\n     * The width of the trigger element. This is necessary to match\n     * the overlay width to the trigger width.\n     * @return {?}\n     */\n    MdSelect.prototype._getWidth = function () {\n        return this._getTriggerRect().width;\n    };\n    /**\n     * Ensures the panel opens if activated by the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    MdSelect.prototype._handleKeydown = function (event) {\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this.open();\n        }\n    };\n    /**\n     * When the panel element is finished transforming in (though not fading in), it\n     * emits an event and focuses an option if the panel is open.\n     * @return {?}\n     */\n    MdSelect.prototype._onPanelDone = function () {\n        if (this.panelOpen) {\n            this._focusCorrectOption();\n            this.onOpen.emit();\n        }\n        else {\n            this.onClose.emit();\n            this._panelDoneAnimating = false;\n        }\n    };\n    /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     * @return {?}\n     */\n    MdSelect.prototype._onFadeInDone = function () {\n        this._panelDoneAnimating = this.panelOpen;\n    };\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    MdSelect.prototype._onBlur = function () {\n        if (!this.panelOpen) {\n            this._onTouched();\n        }\n    };\n    /**\n     * Sets the scroll position of the scroll container. This must be called after\n     * the overlay pane is attached or the scroll container element will not yet be\n     * present in the DOM.\n     * @return {?}\n     */\n    MdSelect.prototype._setScrollTop = function () {\n        var /** @type {?} */ scrollContainer = this.overlayDir.overlayRef.overlayElement.querySelector('.mat-select-panel');\n        scrollContainer.scrollTop = this._scrollTop;\n    };\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @param {?} value\n     * @return {?}\n     */\n    MdSelect.prototype._setSelectionByValue = function (value) {\n        var _this = this;\n        var /** @type {?} */ isArray = Array.isArray(value);\n        if (this.multiple && value && !isArray) {\n            throw new MdSelectNonArrayValueError();\n        }\n        if (isArray) {\n            this._clearSelection();\n            value.forEach(function (currentValue) { return _this._selectValue(currentValue); });\n            this._sortValues();\n        }\n        else if (!this._selectValue(value)) {\n            this._clearSelection();\n        }\n        this._setValueWidth();\n        if (this._selectionModel.isEmpty()) {\n            this._placeholderState = '';\n        }\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * Finds and selects and option based on its value.\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    MdSelect.prototype._selectValue = function (value) {\n        var /** @type {?} */ correspondingOption = this.options.find(function (option) { return option.value === value; });\n        if (correspondingOption) {\n            correspondingOption.select();\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    };\n    /**\n     * Clears the select trigger and deselects every option in the list.\n     * @param {?=} skip Option that should not be deselected.\n     * @return {?}\n     */\n    MdSelect.prototype._clearSelection = function (skip) {\n        this._selectionModel.clear();\n        this.options.forEach(function (option) {\n            if (option !== skip) {\n                option.deselect();\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MdSelect.prototype._getTriggerRect = function () {\n        return this.trigger.nativeElement.getBoundingClientRect();\n    };\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @return {?}\n     */\n    MdSelect.prototype._initKeyManager = function () {\n        var _this = this;\n        this._keyManager = new FocusKeyManager(this.options);\n        this._tabSubscription = this._keyManager.tabOut.subscribe(function () { return _this.close(); });\n    };\n    /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @return {?}\n     */\n    MdSelect.prototype._resetOptions = function () {\n        this._dropSubscriptions();\n        this._listenToOptions();\n        this._setOptionIds();\n        this._setOptionMultiple();\n    };\n    /**\n     * Listens to user-generated selection events on each option.\n     * @return {?}\n     */\n    MdSelect.prototype._listenToOptions = function () {\n        var _this = this;\n        this._optionSubscription = this.optionSelectionChanges\n            .filter(function (event) { return event.isUserInput; })\n            .subscribe(function (event) {\n            _this._onSelect(event.source);\n            _this._setValueWidth();\n            if (!_this.multiple) {\n                _this.close();\n            }\n        });\n    };\n    /**\n     * Invoked when an option is clicked.\n     * @param {?} option\n     * @return {?}\n     */\n    MdSelect.prototype._onSelect = function (option) {\n        var /** @type {?} */ wasSelected = this._selectionModel.isSelected(option);\n        if (this.multiple) {\n            this._selectionModel.toggle(option);\n            wasSelected ? option.deselect() : option.select();\n            this._sortValues();\n        }\n        else {\n            this._clearSelection(option);\n            this._selectionModel.select(option);\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n    };\n    /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     * @return {?}\n     */\n    MdSelect.prototype._sortValues = function () {\n        var _this = this;\n        if (this._multiple) {\n            this._selectionModel.clear();\n            this.options.forEach(function (option) {\n                if (option.selected) {\n                    _this._selectionModel.select(option);\n                }\n            });\n        }\n    };\n    /**\n     * Unsubscribes from all option subscriptions.\n     * @return {?}\n     */\n    MdSelect.prototype._dropSubscriptions = function () {\n        if (this._optionSubscription) {\n            this._optionSubscription.unsubscribe();\n            this._optionSubscription = null;\n        }\n    };\n    /**\n     * Emits change event to set the model value.\n     * @return {?}\n     */\n    MdSelect.prototype._propagateChanges = function () {\n        var /** @type {?} */ valueToEmit = Array.isArray(this.selected) ?\n            this.selected.map(function (option) { return option.value; }) :\n            this.selected.value;\n        this._onChange(valueToEmit);\n        this.change.emit(new MdSelectChange(this, valueToEmit));\n    };\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @return {?}\n     */\n    MdSelect.prototype._setOptionIds = function () {\n        this._optionIds = this.options.map(function (option) { return option.id; }).join(' ');\n    };\n    /**\n     * Sets the `multiple` property on each option. The promise is necessary\n     * in order to avoid Angular errors when modifying the property after init.\n     * TODO: there should be a better way of doing this.\n     * @return {?}\n     */\n    MdSelect.prototype._setOptionMultiple = function () {\n        var _this = this;\n        if (this.multiple) {\n            Promise.resolve(null).then(function () {\n                _this.options.forEach(function (option) { return option.multiple = _this.multiple; });\n            });\n        }\n    };\n    /**\n     * Must set the width of the selected option's value programmatically\n     * because it is absolutely positioned and otherwise will not clip\n     * overflow. The selection arrow is 9px wide, add 4px of padding = 13\n     * @return {?}\n     */\n    MdSelect.prototype._setValueWidth = function () {\n        this._selectedValueWidth = this._triggerWidth - 13;\n    };\n    /**\n     * Focuses the selected item. If no option is selected, it will focus\n     * the first item instead.\n     * @return {?}\n     */\n    MdSelect.prototype._focusCorrectOption = function () {\n        if (this._selectionModel.isEmpty()) {\n            this._keyManager.setFirstItemActive();\n        }\n        else {\n            this._keyManager.setActiveItem(this._getOptionIndex(this._selectionModel.selected[0]));\n        }\n    };\n    /**\n     * Focuses the host element when the panel closes.\n     * @return {?}\n     */\n    MdSelect.prototype._focusHost = function () {\n        this._renderer.invokeElementMethod(this._element.nativeElement, 'focus');\n    };\n    /**\n     * Gets the index of the provided option in the option list.\n     * @param {?} option\n     * @return {?}\n     */\n    MdSelect.prototype._getOptionIndex = function (option) {\n        return this.options.reduce(function (result, current, index) {\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    };\n    /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @return {?}\n     */\n    MdSelect.prototype._calculateOverlayPosition = function () {\n        this._offsetX = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X : SELECT_PANEL_PADDING_X;\n        if (!this._isRtl()) {\n            this._offsetX *= -1;\n        }\n        var /** @type {?} */ panelHeight = Math.min(this.options.length * SELECT_OPTION_HEIGHT, SELECT_PANEL_MAX_HEIGHT);\n        var /** @type {?} */ scrollContainerHeight = this.options.length * SELECT_OPTION_HEIGHT;\n        // The farthest the panel can be scrolled before it hits the bottom\n        var /** @type {?} */ maxScroll = scrollContainerHeight - panelHeight;\n        if (this._selectionModel.hasValue()) {\n            var /** @type {?} */ selectedIndex = this._getOptionIndex(this._selectionModel.selected[0]);\n            // We must maintain a scroll buffer so the selected option will be scrolled to the\n            // center of the overlay panel rather than the top.\n            var /** @type {?} */ scrollBuffer = panelHeight / 2;\n            this._scrollTop = this._calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll);\n            this._offsetY = this._calculateOverlayOffset(selectedIndex, scrollBuffer, maxScroll);\n        }\n        else {\n            // If no option is selected, the panel centers on the first option. In this case,\n            // we must only adjust for the height difference between the option element\n            // and the trigger element, then multiply it by -1 to ensure the panel moves\n            // in the correct direction up the page.\n            this._offsetY = (SELECT_OPTION_HEIGHT - SELECT_TRIGGER_HEIGHT) / 2 * -1;\n        }\n        this._checkOverlayWithinViewport(maxScroll);\n    };\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    MdSelect.prototype._calculateOverlayScroll = function (selectedIndex, scrollBuffer, maxScroll) {\n        var /** @type {?} */ optionOffsetFromScrollTop = SELECT_OPTION_HEIGHT * selectedIndex;\n        var /** @type {?} */ halfOptionHeight = SELECT_OPTION_HEIGHT / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        var /** @type {?} */ optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return clampValue(0, optimalScrollPosition, maxScroll);\n    };\n    /**\n     * Figures out the appropriate animation state for the placeholder.\n     * @return {?}\n     */\n    MdSelect.prototype._getPlaceholderAnimationState = function () {\n        if (this.floatPlaceholder === 'never') {\n            return '';\n        }\n        if (this.floatPlaceholder === 'always') {\n            return this._floatPlaceholderState();\n        }\n        return this._placeholderState;\n    };\n    /**\n     * Determines the CSS `visibility` of the placeholder element.\n     * @return {?}\n     */\n    MdSelect.prototype._getPlaceholderVisibility = function () {\n        return (this.floatPlaceholder !== 'never' || this._selectionModel.isEmpty()) ?\n            'visible' : 'hidden';\n    };\n    Object.defineProperty(MdSelect.prototype, \"_ariaLabel\", {\n        /**\n         * Returns the aria-label of the select component.\n         * @return {?}\n         */\n        get: function () {\n            // If an ariaLabelledby value has been set, the select should not overwrite the\n            // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n            return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    MdSelect.prototype._calculateOverlayOffset = function (selectedIndex, scrollBuffer, maxScroll) {\n        var /** @type {?} */ optionOffsetFromPanelTop;\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * SELECT_OPTION_HEIGHT;\n        }\n        else if (this._scrollTop === maxScroll) {\n            var /** @type {?} */ firstDisplayedIndex = this.options.length - SELECT_MAX_OPTIONS_DISPLAYED;\n            var /** @type {?} */ selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop =\n                selectedDisplayIndex * SELECT_OPTION_HEIGHT + SELECT_PANEL_PADDING_Y;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - SELECT_OPTION_HEIGHT / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height\n        // difference, multiplied by -1 to ensure that the overlay moves in the correct\n        // direction up the page.\n        return optionOffsetFromPanelTop * -1 - SELECT_OPTION_HEIGHT_ADJUSTMENT;\n    };\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    MdSelect.prototype._checkOverlayWithinViewport = function (maxScroll) {\n        var /** @type {?} */ viewportRect = this._viewportRuler.getViewportRect();\n        var /** @type {?} */ triggerRect = this._getTriggerRect();\n        var /** @type {?} */ topSpaceAvailable = triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        var /** @type {?} */ bottomSpaceAvailable = viewportRect.height - triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        var /** @type {?} */ panelHeightTop = Math.abs(this._offsetY);\n        var /** @type {?} */ totalPanelHeight = Math.min(this.options.length * SELECT_OPTION_HEIGHT, SELECT_PANEL_MAX_HEIGHT);\n        var /** @type {?} */ panelHeightBottom = totalPanelHeight - panelHeightTop - triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    };\n    /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    MdSelect.prototype._adjustPanelUp = function (panelHeightBottom, bottomSpaceAvailable) {\n        var /** @type {?} */ distanceBelowViewport = panelHeightBottom - bottomSpaceAvailable;\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = \"50% bottom 0px\";\n        }\n    };\n    /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    MdSelect.prototype._adjustPanelDown = function (panelHeightTop, topSpaceAvailable, maxScroll) {\n        var /** @type {?} */ distanceAboveViewport = panelHeightTop - topSpaceAvailable;\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = \"50% top 0px\";\n            return;\n        }\n    };\n    /**\n     * Sets the transform origin point based on the selected option.\n     * @return {?}\n     */\n    MdSelect.prototype._getOriginBasedOnOption = function () {\n        var /** @type {?} */ originY = Math.abs(this._offsetY) - SELECT_OPTION_HEIGHT_ADJUSTMENT + SELECT_OPTION_HEIGHT / 2;\n        return \"50% \" + originY + \"px 0px\";\n    };\n    /**\n     * Figures out the floating placeholder state value.\n     * @return {?}\n     */\n    MdSelect.prototype._floatPlaceholderState = function () {\n        return this._isRtl() ? 'floating-rtl' : 'floating-ltr';\n    };\n    return MdSelect;\n}());\nMdSelect.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-select, mat-select',\n                template: \"<div class=\\\"mat-select-trigger\\\" cdk-overlay-origin (click)=\\\"toggle()\\\" #origin=\\\"cdkOverlayOrigin\\\" #trigger> <span class=\\\"mat-select-placeholder\\\" [class.mat-floating-placeholder]=\\\"_selectionModel.hasValue()\\\" [@transformPlaceholder]=\\\"_getPlaceholderAnimationState()\\\" [style.visibility]=\\\"_getPlaceholderVisibility()\\\" [style.width.px]=\\\"_selectedValueWidth\\\"> {{ placeholder }} </span> <span class=\\\"mat-select-value\\\" *ngIf=\\\"_selectionModel.hasValue()\\\"> <span class=\\\"mat-select-value-text\\\">{{ triggerValue }}</span> </span> <span class=\\\"mat-select-arrow\\\"></span> <span class=\\\"mat-select-underline\\\"></span> </div> <ng-template cdk-connected-overlay [origin]=\\\"origin\\\" [open]=\\\"panelOpen\\\" hasBackdrop (backdropClick)=\\\"close()\\\" backdropClass=\\\"cdk-overlay-transparent-backdrop\\\" [positions]=\\\"_positions\\\" [minWidth]=\\\"_triggerWidth\\\" [offsetY]=\\\"_offsetY\\\" [offsetX]=\\\"_offsetX\\\" (attach)=\\\"_setScrollTop()\\\"> <div class=\\\"mat-select-panel\\\" [@transformPanel]=\\\"'showing'\\\" (@transformPanel.done)=\\\"_onPanelDone()\\\" (keydown)=\\\"_keyManager.onKeydown($event)\\\" [style.transformOrigin]=\\\"_transformOrigin\\\" [class.mat-select-panel-done-animating]=\\\"_panelDoneAnimating\\\"> <div class=\\\"mat-select-content\\\" [@fadeInContent]=\\\"'showing'\\\" (@fadeInContent.done)=\\\"_onFadeInDone()\\\"> <ng-content></ng-content> </div> </div> </ng-template> \",\n                styles: [\".mat-select{display:inline-block;outline:0;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}.mat-select-trigger{display:flex;align-items:center;height:30px;min-width:112px;cursor:pointer;position:relative;box-sizing:border-box;font-size:16px}[aria-disabled=true] .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-underline{position:absolute;bottom:0;left:0;right:0;height:1px}[aria-disabled=true] .mat-select-underline{background-image:linear-gradient(to right,rgba(0,0,0,.26) 0,rgba(0,0,0,.26) 33%,transparent 0);background-size:4px 1px;background-repeat:repeat-x;background-color:transparent;background-position:0 bottom}.mat-select-placeholder{position:relative;padding:0 2px;transform-origin:left top;flex-grow:1}.mat-select-placeholder.mat-floating-placeholder{top:-22px;left:-2px;text-align:left;transform:scale(.75)}[dir=rtl] .mat-select-placeholder{transform-origin:right top}[dir=rtl] .mat-select-placeholder.mat-floating-placeholder{left:2px;text-align:right}[aria-required=true] .mat-select-placeholder::after{content:'*'}.mat-select-value{position:absolute;max-width:calc(100% - 18px);flex-grow:1;top:0;left:0;bottom:0;display:flex;align-items:center}[dir=rtl] .mat-select-value{left:auto;right:0}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;line-height:30px}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%}@media screen and (-ms-high-contrast:active){.mat-select-panel{outline:solid 1px}} /*# sourceMappingURL=select.css.map */ \"],\n                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None,\n                host: {\n                    'role': 'listbox',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-label]': '_ariaLabel',\n                    '[attr.aria-labelledby]': 'ariaLabelledby',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': '_control?.invalid || \"false\"',\n                    '[attr.aria-owns]': '_optionIds',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select]': 'true',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    transformPlaceholder,\n                    transformPanel,\n                    fadeInContent\n                ],\n                exportAs: 'mdSelect',\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSelect.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: ViewportRuler, },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectorRef\"], },\n    { type: Dir, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] },] },\n    { type: __WEBPACK_IMPORTED_MODULE_8__angular_forms__[\"NgControl\"], decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] },] },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Attribute\"], args: ['tabindex',] },] },\n]; };\nMdSelect.propDecorators = {\n    'trigger': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewChild\"], args: ['trigger',] },],\n    'overlayDir': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewChild\"], args: [ConnectedOverlayDirective,] },],\n    'options': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChildren\"], args: [MdOption,] },],\n    'placeholder': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'required': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'multiple': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'floatPlaceholder': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'tabIndex': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'ariaLabel': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['aria-label',] },],\n    'ariaLabelledby': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['aria-labelledby',] },],\n    'onOpen': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    'onClose': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    'change': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n};\n/**\n * Clamps a value n between min and max values.\n * @param {?} min\n * @param {?} n\n * @param {?} max\n * @return {?}\n */\nfunction clampValue(min, n, max) {\n    return Math.min(Math.max(min, n), max);\n}\nvar MdSelectModule = (function () {\n    function MdSelectModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdSelectModule.forRoot = function () {\n        return {\n            ngModule: MdSelectModule,\n            providers: []\n        };\n    };\n    return MdSelectModule;\n}());\nMdSelectModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [\n                    __WEBPACK_IMPORTED_MODULE_2__angular_common__[\"CommonModule\"],\n                    OverlayModule,\n                    MdOptionModule,\n                    CompatibilityModule,\n                ],\n                exports: [MdSelect, MdOptionModule, CompatibilityModule],\n                declarations: [MdSelect],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSelectModule.ctorParameters = function () { return []; };\nvar MD_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: __WEBPACK_IMPORTED_MODULE_8__angular_forms__[\"NG_VALUE_ACCESSOR\"],\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return MdSlideToggle; }),\n    multi: true\n};\nvar MdSlideToggleChange = (function () {\n    function MdSlideToggleChange() {\n    }\n    return MdSlideToggleChange;\n}());\n// Increasing integer for generating unique ids for slide-toggle components.\nvar nextId$1 = 0;\n/**\n * Two-state control, which can be also called `switch`.\n */\nvar MdSlideToggle = (function () {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _renderer\n     * @param {?} _focusOriginMonitor\n     */\n    function MdSlideToggle(_elementRef, _renderer, _focusOriginMonitor) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._focusOriginMonitor = _focusOriginMonitor;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        this._uniqueId = \"md-slide-toggle-\" + ++nextId$1;\n        this._checked = false;\n        this._isMousedown = false;\n        this._slideRenderer = null;\n        this._disabled = false;\n        this._required = false;\n        this._disableRipple = false;\n        /** Name value will be applied to the input element if present */\n        this.name = null;\n        /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Used to specify the tabIndex value for the underlying input element. */\n        this.tabIndex = 0;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after' */\n        this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        this.ariaLabelledby = null;\n        this._change = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        this.change = this._change.asObservable();\n    }\n    Object.defineProperty(MdSlideToggle.prototype, \"disabled\", {\n        /**\n         * Whether the slide-toggle is disabled.\n         * @return {?}\n         */\n        get: function () { return this._disabled; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._disabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlideToggle.prototype, \"required\", {\n        /**\n         * Whether the slide-toggle is required.\n         * @return {?}\n         */\n        get: function () { return this._required; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._required = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlideToggle.prototype, \"disableRipple\", {\n        /**\n         * Whether the ripple effect for this slide-toggle is disabled.\n         * @return {?}\n         */\n        get: function () { return this._disableRipple; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._disableRipple = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlideToggle.prototype, \"inputId\", {\n        /**\n         * Returns the unique id for the visual hidden input.\n         * @return {?}\n         */\n        get: function () { return (this.id || this._uniqueId) + \"-input\"; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdSlideToggle.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this._slideRenderer = new SlideToggleRenderer(this._elementRef);\n        this._focusOriginMonitor\n            .monitor(this._inputElement.nativeElement, this._renderer, false)\n            .subscribe(function (focusOrigin) { return _this._onInputFocusChange(focusOrigin); });\n    };\n    /**\n     * @return {?}\n     */\n    MdSlideToggle.prototype.ngOnDestroy = function () {\n        this._focusOriginMonitor.stopMonitoring(this._inputElement.nativeElement);\n    };\n    /**\n     * The onChangeEvent method will be also called on click.\n     * This is because everything for the slide-toggle is wrapped inside of a label,\n     * which triggers a onChange event on click.\n     * @param {?} event\n     * @return {?}\n     */\n    MdSlideToggle.prototype._onChangeEvent = function (event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        // Once a drag is currently in progress, we do not want to toggle the slide-toggle on a click.\n        if (!this.disabled && !this._slideRenderer.dragging) {\n            this.toggle();\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdSlideToggle.prototype._onInputClick = function (event) {\n        this.onTouched();\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    };\n    /**\n     * @return {?}\n     */\n    MdSlideToggle.prototype._setMousedown = function () {\n        var _this = this;\n        // We only *show* the focus style when focus has come to the button via the keyboard.\n        // The Material Design spec is silent on this topic, and without doing this, the\n        // button continues to look :active after clicking.\n        // @see http://marcysutton.com/button-focus-hell/\n        this._isMousedown = true;\n        setTimeout(function () { return _this._isMousedown = false; }, 100);\n    };\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    MdSlideToggle.prototype.writeValue = function (value) {\n        this.checked = value;\n    };\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    MdSlideToggle.prototype.registerOnChange = function (fn) {\n        this.onChange = fn;\n    };\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    MdSlideToggle.prototype.registerOnTouched = function (fn) {\n        this.onTouched = fn;\n    };\n    /**\n     * Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    MdSlideToggle.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    /**\n     * Focuses the slide-toggle.\n     * @return {?}\n     */\n    MdSlideToggle.prototype.focus = function () {\n        this._focusOriginMonitor.focusVia(this._inputElement.nativeElement, this._renderer, 'program');\n    };\n    Object.defineProperty(MdSlideToggle.prototype, \"checked\", {\n        /**\n         * Whether the slide-toggle is checked.\n         * @return {?}\n         */\n        get: function () { return !!this._checked; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this.checked !== !!value) {\n                this._checked = value;\n                this.onChange(this._checked);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlideToggle.prototype, \"color\", {\n        /**\n         * The color of the slide-toggle. Can be primary, accent, or warn.\n         * @return {?}\n         */\n        get: function () { return this._color; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._updateColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Toggles the checked state of the slide-toggle.\n     * @return {?}\n     */\n    MdSlideToggle.prototype.toggle = function () {\n        this.checked = !this.checked;\n    };\n    /**\n     * Function is called whenever the focus changes for the input element.\n     * @param {?} focusOrigin\n     * @return {?}\n     */\n    MdSlideToggle.prototype._onInputFocusChange = function (focusOrigin) {\n        if (!this._focusRipple && focusOrigin === 'keyboard') {\n            // For keyboard focus show a persistent ripple as focus indicator.\n            this._focusRipple = this._ripple.launch(0, 0, { persistent: true, centered: true });\n        }\n        else if (!focusOrigin) {\n            this.onTouched();\n            // Fade out and clear the focus ripple if one is currently present.\n            if (this._focusRipple) {\n                this._focusRipple.fadeOut();\n                this._focusRipple = null;\n            }\n        }\n    };\n    /**\n     * @param {?} newColor\n     * @return {?}\n     */\n    MdSlideToggle.prototype._updateColor = function (newColor) {\n        this._setElementColor(this._color, false);\n        this._setElementColor(newColor, true);\n        this._color = newColor;\n    };\n    /**\n     * @param {?} color\n     * @param {?} isAdd\n     * @return {?}\n     */\n    MdSlideToggle.prototype._setElementColor = function (color, isAdd) {\n        if (color != null && color != '') {\n            this._renderer.setElementClass(this._elementRef.nativeElement, \"mat-\" + color, isAdd);\n        }\n    };\n    /**\n     * Emits the change event to the `change` output EventEmitter\n     * @return {?}\n     */\n    MdSlideToggle.prototype._emitChangeEvent = function () {\n        var /** @type {?} */ event = new MdSlideToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n        this._change.emit(event);\n    };\n    /**\n     * @return {?}\n     */\n    MdSlideToggle.prototype._onDragStart = function () {\n        if (!this.disabled) {\n            this._slideRenderer.startThumbDrag(this.checked);\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdSlideToggle.prototype._onDrag = function (event) {\n        if (this._slideRenderer.dragging) {\n            this._slideRenderer.updateThumbPosition(event.deltaX);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdSlideToggle.prototype._onDragEnd = function () {\n        var _this = this;\n        if (this._slideRenderer.dragging) {\n            var /** @type {?} */ _previousChecked = this.checked;\n            this.checked = this._slideRenderer.dragPercentage > 50;\n            if (_previousChecked !== this.checked) {\n                this._emitChangeEvent();\n            }\n            // The drag should be stopped outside of the current event handler, because otherwise the\n            // click event will be fired before and will revert the drag change.\n            setTimeout(function () { return _this._slideRenderer.stopThumbDrag(); });\n        }\n    };\n    return MdSlideToggle;\n}());\nMdSlideToggle.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-slide-toggle, mat-slide-toggle',\n                host: {\n                    '[class.mat-slide-toggle]': 'true',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '(mousedown)': '_setMousedown()'\n                },\n                template: \"<label class=\\\"mat-slide-toggle-label\\\" #label> <div class=\\\"mat-slide-toggle-bar\\\"> <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\" [id]=\\\"inputId\\\" [required]=\\\"required\\\" [tabIndex]=\\\"tabIndex\\\" [checked]=\\\"checked\\\" [disabled]=\\\"disabled\\\" [attr.name]=\\\"name\\\" [attr.aria-label]=\\\"ariaLabel\\\" [attr.aria-labelledby]=\\\"ariaLabelledby\\\" (change)=\\\"_onChangeEvent($event)\\\" (click)=\\\"_onInputClick($event)\\\"> <div class=\\\"mat-slide-toggle-thumb-container\\\" (slidestart)=\\\"_onDragStart()\\\" (slide)=\\\"_onDrag($event)\\\" (slideend)=\\\"_onDragEnd()\\\"> <div class=\\\"mat-slide-toggle-thumb\\\"></div> <div class=\\\"mat-slide-toggle-ripple\\\" md-ripple [mdRippleTrigger]=\\\"label\\\" [mdRippleCentered]=\\\"true\\\" [mdRippleDisabled]=\\\"disableRipple || disabled\\\"> </div> </div> </div> <span class=\\\"mat-slide-toggle-content\\\"> <ng-content></ng-content> </span> </label> \",\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;line-height:24px;white-space:nowrap;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;outline:0}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px,0,0)}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-content{font-size:14px;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-weight:500}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;cursor:pointer}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}.mat-slide-toggle-bar,[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-right:8px;margin-left:0}.mat-slide-toggle-label-before .mat-slide-toggle-bar,[dir=rtl] .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0,0,0);transition:all 80ms linear;transition-property:transform;cursor:-webkit-grab;cursor:grab}.mat-slide-toggle-thumb-container.mat-dragging{transition-duration:0s}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%;box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)}@media screen and (-ms-high-contrast:active){.mat-slide-toggle-thumb{background:#fff;border:solid 1px #000}}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;border-radius:8px}@media screen and (-ms-high-contrast:active){.mat-slide-toggle-bar{background:#fff}}.mat-slide-toggle-input{bottom:0;left:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}.mat-slide-toggle-ripple{position:absolute;top:-13px;left:-13px;height:46px;width:46px;border-radius:50%;z-index:1;pointer-events:none} /*# sourceMappingURL=slide-toggle.css.map */ \"],\n                providers: [MD_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None,\n                changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectionStrategy\"].OnPush\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSlideToggle.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: FocusOriginMonitor, },\n]; };\nMdSlideToggle.propDecorators = {\n    'name': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'id': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'tabIndex': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'labelPosition': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'ariaLabel': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['aria-label',] },],\n    'ariaLabelledby': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['aria-labelledby',] },],\n    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'required': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'disableRipple': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'change': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    '_inputElement': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewChild\"], args: ['input',] },],\n    '_ripple': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewChild\"], args: [MdRipple,] },],\n    'checked': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'color': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\n/**\n * Renderer for the Slide Toggle component, which separates DOM modification in its own class\n */\nvar SlideToggleRenderer = (function () {\n    /**\n     * @param {?} _elementRef\n     */\n    function SlideToggleRenderer(_elementRef) {\n        this._elementRef = _elementRef;\n        /** Whether the thumb is currently being dragged. */\n        this.dragging = false;\n        this._thumbEl = _elementRef.nativeElement.querySelector('.mat-slide-toggle-thumb-container');\n        this._thumbBarEl = _elementRef.nativeElement.querySelector('.mat-slide-toggle-bar');\n    }\n    /**\n     * Initializes the drag of the slide-toggle.\n     * @param {?} checked\n     * @return {?}\n     */\n    SlideToggleRenderer.prototype.startThumbDrag = function (checked) {\n        if (this.dragging) {\n            return;\n        }\n        this._thumbBarWidth = this._thumbBarEl.clientWidth - this._thumbEl.clientWidth;\n        this._thumbEl.classList.add('mat-dragging');\n        this._previousChecked = checked;\n        this.dragging = true;\n    };\n    /**\n     * Resets the current drag and returns the new checked value.\n     * @return {?}\n     */\n    SlideToggleRenderer.prototype.stopThumbDrag = function () {\n        if (!this.dragging) {\n            return;\n        }\n        this.dragging = false;\n        this._thumbEl.classList.remove('mat-dragging');\n        // Reset the transform because the component will take care of the thumb position after drag.\n        applyCssTransform(this._thumbEl, '');\n        return this.dragPercentage > 50;\n    };\n    /**\n     * Updates the thumb containers position from the specified distance.\n     * @param {?} distance\n     * @return {?}\n     */\n    SlideToggleRenderer.prototype.updateThumbPosition = function (distance) {\n        this.dragPercentage = this._getDragPercentage(distance);\n        // Calculate the moved distance based on the thumb bar width.\n        var /** @type {?} */ dragX = (this.dragPercentage / 100) * this._thumbBarWidth;\n        applyCssTransform(this._thumbEl, \"translate3d(\" + dragX + \"px, 0, 0)\");\n    };\n    /**\n     * Retrieves the percentage of thumb from the moved distance. Percentage as fraction of 100.\n     * @param {?} distance\n     * @return {?}\n     */\n    SlideToggleRenderer.prototype._getDragPercentage = function (distance) {\n        var /** @type {?} */ percentage = (distance / this._thumbBarWidth) * 100;\n        // When the toggle was initially checked, then we have to start the drag at the end.\n        if (this._previousChecked) {\n            percentage += 100;\n        }\n        return Math.max(0, Math.min(percentage, 100));\n    };\n    return SlideToggleRenderer;\n}());\nvar MdSlideToggleModule = (function () {\n    function MdSlideToggleModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdSlideToggleModule.forRoot = function () {\n        return {\n            ngModule: MdSlideToggleModule,\n            providers: []\n        };\n    };\n    return MdSlideToggleModule;\n}());\nMdSlideToggleModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [__WEBPACK_IMPORTED_MODULE_8__angular_forms__[\"FormsModule\"], MdRippleModule, CompatibilityModule],\n                exports: [MdSlideToggle, CompatibilityModule],\n                declarations: [MdSlideToggle],\n                providers: [\n                    FOCUS_ORIGIN_MONITOR_PROVIDER,\n                    { provide: __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__[\"HAMMER_GESTURE_CONFIG\"], useClass: GestureConfig }\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSlideToggleModule.ctorParameters = function () { return []; };\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nvar MIN_AUTO_TICK_SEPARATION = 30;\n/** The thumb gap size for a disabled slider. */\nvar DISABLED_THUMB_GAP = 7;\n/** The thumb gap size for a non-active slider at its minimum value. */\nvar MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/** The thumb gap size for an active slider at its minimum value. */\nvar MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows md-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n */\nvar MD_SLIDER_VALUE_ACCESSOR = {\n    provide: __WEBPACK_IMPORTED_MODULE_8__angular_forms__[\"NG_VALUE_ACCESSOR\"],\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return MdSlider; }),\n    multi: true\n};\n/**\n * A simple change event emitted by the MdSlider component.\n */\nvar MdSliderChange = (function () {\n    function MdSliderChange() {\n    }\n    return MdSliderChange;\n}());\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nvar MdSlider = (function () {\n    /**\n     * @param {?} renderer\n     * @param {?} _elementRef\n     * @param {?} _focusOriginMonitor\n     * @param {?} _dir\n     */\n    function MdSlider(renderer, _elementRef, _focusOriginMonitor, _dir) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._focusOriginMonitor = _focusOriginMonitor;\n        this._dir = _dir;\n        this._disabled = false;\n        this._invert = false;\n        this._max = 100;\n        this._min = 0;\n        this._step = 1;\n        this._thumbLabel = false;\n        this._tickInterval = 0;\n        this._value = null;\n        this._vertical = false;\n        this.color = 'accent';\n        /** Event emitted when the slider value has changed. */\n        this.change = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /** Event emitted when the slider thumb moves. */\n        this.input = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this.onTouched = function () { };\n        this._percent = 0;\n        /**\n         * Whether or not the thumb is sliding.\n         * Used to determine if there should be a transition for the thumb and fill track.\n         */\n        this._isSliding = false;\n        /**\n         * Whether or not the slider is active (clicked or sliding).\n         * Used to shrink and grow the thumb as according to the Material Design spec.\n         */\n        this._isActive = false;\n        this._tickIntervalPercent = 0;\n        this._renderer = null;\n        this._sliderDimensions = null;\n        this._controlValueAccessorChangeFn = function () { };\n        this._lastChangeValue = null;\n        this._lastInputValue = null;\n        this._focusOriginMonitor.monitor(this._elementRef.nativeElement, renderer, true)\n            .subscribe(function (origin) { return _this._isActive = !!origin && origin !== 'keyboard'; });\n        this._renderer = new SliderRenderer(this._elementRef);\n    }\n    Object.defineProperty(MdSlider.prototype, \"disabled\", {\n        /**\n         * Whether or not the slider is disabled.\n         * @return {?}\n         */\n        get: function () { return this._disabled; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._disabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"invert\", {\n        /**\n         * Whether the slider is inverted.\n         * @return {?}\n         */\n        get: function () { return this._invert; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._invert = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"max\", {\n        /**\n         * The maximum value that the slider can have.\n         * @return {?}\n         */\n        get: function () {\n            return this._max;\n        },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) {\n            this._max = coerceNumberProperty(v, this._max);\n            this._percent = this._calculatePercentage(this._value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"min\", {\n        /**\n         * The minimum value that the slider can have.\n         * @return {?}\n         */\n        get: function () {\n            return this._min;\n        },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) {\n            this._min = coerceNumberProperty(v, this._min);\n            // If the value wasn't explicitly set by the user, set it to the min.\n            if (this._value === null) {\n                this.value = this._min;\n            }\n            this._percent = this._calculatePercentage(this._value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"step\", {\n        /**\n         * The values at which the thumb will snap.\n         * @return {?}\n         */\n        get: function () { return this._step; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) {\n            this._step = coerceNumberProperty(v, this._step);\n            if (this._step % 1 !== 0) {\n                this._roundLabelTo = this._step.toString().split('.').pop().length;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"thumbLabel\", {\n        /**\n         * Whether or not to show the thumb label.\n         * @return {?}\n         */\n        get: function () { return this._thumbLabel; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._thumbLabel = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"_thumbLabelDeprecated\", {\n        /**\n         * @deprecated\n         * @return {?}\n         */\n        get: function () { return this._thumbLabel; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._thumbLabel = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"tickInterval\", {\n        /**\n         * How often to show ticks. Relative to the step so that a tick always appears on a step.\n         * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n         * @return {?}\n         */\n        get: function () { return this._tickInterval; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (value === 'auto') {\n                this._tickInterval = 'auto';\n            }\n            else if (typeof value === 'number' || typeof value === 'string') {\n                this._tickInterval = coerceNumberProperty(value, /** @type {?} */ (this._tickInterval));\n            }\n            else {\n                this._tickInterval = 0;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"_tickIntervalDeprecated\", {\n        /**\n         * @deprecated\n         * @return {?}\n         */\n        get: function () { return this.tickInterval; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this.tickInterval = v; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"value\", {\n        /**\n         * Value of the slider.\n         * @return {?}\n         */\n        get: function () {\n            // If the value needs to be read and it is still uninitialized, initialize it to the min.\n            if (this._value === null) {\n                this.value = this._min;\n            }\n            return this._value;\n        },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) {\n            this._value = coerceNumberProperty(v, this._value);\n            this._percent = this._calculatePercentage(this._value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"vertical\", {\n        /**\n         * Whether the slider is vertical.\n         * @return {?}\n         */\n        get: function () { return this._vertical; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._vertical = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"displayValue\", {\n        /**\n         * The value to be used for display purposes.\n         * @return {?}\n         */\n        get: function () {\n            // Note that this could be improved further by rounding something like 0.999 to 1 or\n            // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n            // every change detection cycle.\n            if (this._roundLabelTo && this.value % 1 !== 0) {\n                return this.value.toFixed(this._roundLabelTo);\n            }\n            return this.value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"percent\", {\n        /**\n         * The percentage of the slider that coincides with the value.\n         * @return {?}\n         */\n        get: function () { return this._clamp(this._percent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"_invertAxis\", {\n        /**\n         * Whether the axis of the slider is inverted.\n         * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n         * @return {?}\n         */\n        get: function () {\n            // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n            // top. However from a y-axis standpoint this is inverted.\n            return this.vertical ? !this.invert : this.invert;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"_isMinValue\", {\n        /**\n         * Whether the slider is at its minimum value.\n         * @return {?}\n         */\n        get: function () {\n            return this.percent === 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"_thumbGap\", {\n        /**\n         * The amount of space to leave between the slider thumb and the track fill & track background\n         * elements.\n         * @return {?}\n         */\n        get: function () {\n            if (this.disabled) {\n                return DISABLED_THUMB_GAP;\n            }\n            if (this._isMinValue && !this.thumbLabel) {\n                return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n            }\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"_trackBackgroundStyles\", {\n        /**\n         * CSS styles for the track background element.\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n            var /** @type {?} */ sign = this._invertMouseCoords ? '-' : '';\n            return {\n                'transform': \"translate\" + axis + \"(\" + sign + this._thumbGap + \"px) scale\" + axis + \"(\" + (1 - this.percent) + \")\"\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"_trackFillStyles\", {\n        /**\n         * CSS styles for the track fill element.\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n            var /** @type {?} */ sign = this._invertMouseCoords ? '' : '-';\n            return {\n                'transform': \"translate\" + axis + \"(\" + sign + this._thumbGap + \"px) scale\" + axis + \"(\" + this.percent + \")\"\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"_ticksContainerStyles\", {\n        /**\n         * CSS styles for the ticks container element.\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n            // For a horizontal slider in RTL languages we push the ticks container off the left edge\n            // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n            var /** @type {?} */ sign = !this.vertical && this._direction == 'rtl' ? '' : '-';\n            var /** @type {?} */ offset = this._tickIntervalPercent / 2 * 100;\n            return {\n                'transform': \"translate\" + axis + \"(\" + sign + offset + \"%)\"\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"_ticksStyles\", {\n        /**\n         * CSS styles for the ticks element.\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ tickSize = this._tickIntervalPercent * 100;\n            var /** @type {?} */ backgroundSize = this.vertical ? \"2px \" + tickSize + \"%\" : tickSize + \"% 2px\";\n            var /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n            // Depending on the direction we pushed the ticks container, push the ticks the opposite\n            // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n            // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n            var /** @type {?} */ sign = !this.vertical && this._direction == 'rtl' ? '-' : '';\n            var /** @type {?} */ rotate = !this.vertical && this._direction == 'rtl' ? ' rotate(180deg)' : '';\n            var /** @type {?} */ styles = {\n                'backgroundSize': backgroundSize,\n                // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n                'transform': \"translateZ(0) translate\" + axis + \"(\" + sign + tickSize / 2 + \"%)\" + rotate\n            };\n            if (this._isMinValue && this._thumbGap) {\n                var /** @type {?} */ side = this.vertical ?\n                    (this._invertAxis ? 'Bottom' : 'Top') :\n                    (this._invertAxis ? 'Right' : 'Left');\n                styles[\"padding\" + side] = this._thumbGap + \"px\";\n            }\n            return styles;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"_thumbContainerStyles\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n            // For a horizontal slider in RTL languages we push the thumb container off the left edge\n            // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n            var /** @type {?} */ invertOffset = (this._direction == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n            var /** @type {?} */ offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n            return {\n                'transform': \"translate\" + axis + \"(-\" + offset + \"%)\"\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"_invertMouseCoords\", {\n        /**\n         * Whether mouse events should be converted to a slider position by calculating their distance\n         * from the right or bottom edge of the slider as opposed to the top or left.\n         * @return {?}\n         */\n        get: function () {\n            return (this._direction == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"_direction\", {\n        /**\n         * The language direction for this slider element.\n         * @return {?}\n         */\n        get: function () {\n            return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdSlider.prototype.ngOnDestroy = function () {\n        this._focusOriginMonitor.stopMonitoring(this._elementRef.nativeElement);\n    };\n    /**\n     * @return {?}\n     */\n    MdSlider.prototype._onMouseenter = function () {\n        if (this.disabled) {\n            return;\n        }\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._renderer.getSliderDimensions();\n        this._updateTickIntervalPercent();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdSlider.prototype._onClick = function (event) {\n        if (this.disabled) {\n            return;\n        }\n        this._isSliding = false;\n        this._renderer.addFocus();\n        this._updateValueFromPosition({ x: event.clientX, y: event.clientY });\n        /* Emits a change and input event if the value changed. */\n        this._emitInputEvent();\n        this._emitValueIfChanged();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdSlider.prototype._onSlide = function (event) {\n        if (this.disabled) {\n            return;\n        }\n        // Prevent the slide from selecting anything else.\n        event.preventDefault();\n        this._updateValueFromPosition({ x: event.center.x, y: event.center.y });\n        // Native range elements always emit `input` events when the value changed while sliding.\n        this._emitInputEvent();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdSlider.prototype._onSlideStart = function (event) {\n        if (this.disabled) {\n            return;\n        }\n        // Simulate mouseenter in case this is a mobile device.\n        this._onMouseenter();\n        event.preventDefault();\n        this._isSliding = true;\n        this._renderer.addFocus();\n        this._updateValueFromPosition({ x: event.center.x, y: event.center.y });\n    };\n    /**\n     * @return {?}\n     */\n    MdSlider.prototype._onSlideEnd = function () {\n        this._isSliding = false;\n        this._emitValueIfChanged();\n    };\n    /**\n     * @return {?}\n     */\n    MdSlider.prototype._onFocus = function () {\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._renderer.getSliderDimensions();\n        this._updateTickIntervalPercent();\n    };\n    /**\n     * @return {?}\n     */\n    MdSlider.prototype._onBlur = function () {\n        this.onTouched();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdSlider.prototype._onKeydown = function (event) {\n        if (this.disabled) {\n            return;\n        }\n        switch (event.keyCode) {\n            case PAGE_UP:\n                this._increment(10);\n                break;\n            case PAGE_DOWN:\n                this._increment(-10);\n                break;\n            case END:\n                this.value = this.max;\n                break;\n            case HOME:\n                this.value = this.min;\n                break;\n            case LEFT_ARROW:\n                // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n                // inverted slider the thumb moves in that direction. However for a blind user, nothing\n                // about the slider indicates that it is inverted. They will expect left to be decrement,\n                // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n                // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n                // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n                // sighted users, therefore we do not swap the meaning.\n                this._increment(this._direction == 'rtl' ? 1 : -1);\n                break;\n            case UP_ARROW:\n                this._increment(1);\n                break;\n            case RIGHT_ARROW:\n                // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n                this._increment(this._direction == 'rtl' ? -1 : 1);\n                break;\n            case DOWN_ARROW:\n                this._increment(-1);\n                break;\n            default:\n                // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n                // it.\n                return;\n        }\n        this._isSliding = true;\n        event.preventDefault();\n    };\n    /**\n     * @return {?}\n     */\n    MdSlider.prototype._onKeyup = function () {\n        this._isSliding = false;\n    };\n    /**\n     * Increments the slider by the given number of steps (negative number decrements).\n     * @param {?} numSteps\n     * @return {?}\n     */\n    MdSlider.prototype._increment = function (numSteps) {\n        this.value = this._clamp(this.value + this.step * numSteps, this.min, this.max);\n        this._emitInputEvent();\n        this._emitValueIfChanged();\n    };\n    /**\n     * Calculate the new value from the new physical location. The value will always be snapped.\n     * @param {?} pos\n     * @return {?}\n     */\n    MdSlider.prototype._updateValueFromPosition = function (pos) {\n        if (!this._sliderDimensions) {\n            return;\n        }\n        var /** @type {?} */ offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n        var /** @type {?} */ size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n        var /** @type {?} */ posComponent = this.vertical ? pos.y : pos.x;\n        // The exact value is calculated from the event and used to find the closest snap value.\n        var /** @type {?} */ percent = this._clamp((posComponent - offset) / size);\n        if (this._invertMouseCoords) {\n            percent = 1 - percent;\n        }\n        var /** @type {?} */ exactValue = this._calculateValue(percent);\n        // This calculation finds the closest step by finding the closest whole number divisible by the\n        // step relative to the min.\n        var /** @type {?} */ closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n        // The value needs to snap to the min and max.\n        this.value = this._clamp(closestValue, this.min, this.max);\n    };\n    /**\n     * Emits a change event if the current value is different from the last emitted value.\n     * @return {?}\n     */\n    MdSlider.prototype._emitValueIfChanged = function () {\n        if (this.value != this._lastChangeValue) {\n            var /** @type {?} */ event = this._createChangeEvent();\n            this._lastChangeValue = this.value;\n            this._controlValueAccessorChangeFn(this.value);\n            this.change.emit(event);\n        }\n    };\n    /**\n     * Emits an input event when the current value is different from the last emitted value.\n     * @return {?}\n     */\n    MdSlider.prototype._emitInputEvent = function () {\n        if (this.value != this._lastInputValue) {\n            var /** @type {?} */ event = this._createChangeEvent();\n            this._lastInputValue = this.value;\n            this.input.emit(event);\n        }\n    };\n    /**\n     * Updates the amount of space between ticks as a percentage of the width of the slider.\n     * @return {?}\n     */\n    MdSlider.prototype._updateTickIntervalPercent = function () {\n        if (!this.tickInterval) {\n            return;\n        }\n        if (this.tickInterval == 'auto') {\n            var /** @type {?} */ trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n            var /** @type {?} */ pixelsPerStep = trackSize * this.step / (this.max - this.min);\n            var /** @type {?} */ stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n            var /** @type {?} */ pixelsPerTick = stepsPerTick * this.step;\n            this._tickIntervalPercent = pixelsPerTick / trackSize;\n        }\n        else {\n            this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n        }\n    };\n    /**\n     * Creates a slider change object from the specified value.\n     * @param {?=} value\n     * @return {?}\n     */\n    MdSlider.prototype._createChangeEvent = function (value) {\n        if (value === void 0) { value = this.value; }\n        var /** @type {?} */ event = new MdSliderChange();\n        event.source = this;\n        event.value = value;\n        return event;\n    };\n    /**\n     * Calculates the percentage of the slider that a value is.\n     * @param {?} value\n     * @return {?}\n     */\n    MdSlider.prototype._calculatePercentage = function (value) {\n        return (value - this.min) / (this.max - this.min);\n    };\n    /**\n     * Calculates the value a percentage of the slider corresponds to.\n     * @param {?} percentage\n     * @return {?}\n     */\n    MdSlider.prototype._calculateValue = function (percentage) {\n        return this.min + percentage * (this.max - this.min);\n    };\n    /**\n     * Return a number between two numbers.\n     * @param {?} value\n     * @param {?=} min\n     * @param {?=} max\n     * @return {?}\n     */\n    MdSlider.prototype._clamp = function (value, min, max) {\n        if (min === void 0) { min = 0; }\n        if (max === void 0) { max = 1; }\n        return Math.max(min, Math.min(value, max));\n    };\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    MdSlider.prototype.writeValue = function (value) {\n        this.value = value;\n    };\n    /**\n     * Registers a callback to eb triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    MdSlider.prototype.registerOnChange = function (fn) {\n        this._controlValueAccessorChangeFn = fn;\n    };\n    /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    MdSlider.prototype.registerOnTouched = function (fn) {\n        this.onTouched = fn;\n    };\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    MdSlider.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    return MdSlider;\n}());\nMdSlider.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-slider, mat-slider',\n                providers: [MD_SLIDER_VALUE_ACCESSOR],\n                host: {\n                    '[class.mat-slider]': 'true',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()',\n                    '(click)': '_onClick($event)',\n                    '(keydown)': '_onKeydown($event)',\n                    '(keyup)': '_onKeyup()',\n                    '(mouseenter)': '_onMouseenter()',\n                    '(slide)': '_onSlide($event)',\n                    '(slideend)': '_onSlideEnd()',\n                    '(slidestart)': '_onSlideStart($event)',\n                    'role': 'slider',\n                    'tabindex': '0',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.aria-valuemax]': 'max',\n                    '[attr.aria-valuemin]': 'min',\n                    '[attr.aria-valuenow]': 'value',\n                    '[class.mat-primary]': 'color == \"primary\"',\n                    '[class.mat-accent]': 'color != \"primary\" && color != \"warn\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.mat-slider-disabled]': 'disabled',\n                    '[class.mat-slider-has-ticks]': 'tickInterval',\n                    '[class.mat-slider-horizontal]': '!vertical',\n                    '[class.mat-slider-axis-inverted]': '_invertAxis',\n                    '[class.mat-slider-sliding]': '_isSliding',\n                    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n                    '[class.mat-slider-vertical]': 'vertical',\n                    '[class.mat-slider-min-value]': '_isMinValue',\n                    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\n                },\n                template: \"<div class=\\\"mat-slider-wrapper\\\"> <div class=\\\"mat-slider-track-wrapper\\\"> <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_trackBackgroundStyles\\\"></div> <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_trackFillStyles\\\"></div> </div> <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_ticksContainerStyles\\\"> <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_ticksStyles\\\"></div> </div> <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_thumbContainerStyles\\\"> <div class=\\\"mat-slider-focus-ring\\\"></div> <div class=\\\"mat-slider-thumb\\\"></div> <div class=\\\"mat-slider-thumb-label\\\"> <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span> </div> </div> </div> \",\n                styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:0;vertical-align:middle}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{box-sizing:border-box;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),opacity .4s cubic-bezier(.25,.8,.25,1)}.cdk-keyboard-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(.7);transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),border-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform .4s cubic-bezier(.25,.8,.25,1),border-radius .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-label-text{z-index:1;font-size:12px;font-weight:700;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-sliding .mat-slider-thumb-container,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-track-fill{transition-duration:0s}.mat-slider-has-ticks .mat-slider-wrapper::after{content:'';position:absolute;border:0 solid rgba(0,0,0,.6);opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.cdk-focused .mat-slider-thumb-label-text{opacity:1}.cdk-mouse-focused .mat-slider-thumb,.cdk-program-focused .mat-slider-thumb,.cdk-touch-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.mat-slider-horizontal .mat-slider-ticks{background:repeating-linear-gradient(to right,rgba(0,0,0,.6),rgba(0,0,0,.6) 2px,transparent 0,transparent) repeat;background:-moz-repeating-linear-gradient(.0001deg,rgba(0,0,0,.6),rgba(0,0,0,.6) 2px,transparent 0,transparent) repeat;background-clip:content-box;height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{background:repeating-linear-gradient(to bottom,rgba(0,0,0,.6),rgba(0,0,0,.6) 2px,transparent 0,transparent) repeat;background-clip:content-box;width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%} /*# sourceMappingURL=slider.css.map */ \"],\n                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None,\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSlider.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: FocusOriginMonitor, },\n    { type: Dir, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] },] },\n]; };\nMdSlider.propDecorators = {\n    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'invert': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'max': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'min': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'step': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'thumbLabel': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    '_thumbLabelDeprecated': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['thumb-label',] },],\n    'tickInterval': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    '_tickIntervalDeprecated': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['tick-interval',] },],\n    'value': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'vertical': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'color': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'change': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    'input': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n};\n/**\n * Renderer class in order to keep all dom manipulation in one place and outside of the main class.\n * \\@docs-private\n */\nvar SliderRenderer = (function () {\n    /**\n     * @param {?} elementRef\n     */\n    function SliderRenderer(elementRef) {\n        this._sliderElement = elementRef.nativeElement;\n    }\n    /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     * @return {?}\n     */\n    SliderRenderer.prototype.getSliderDimensions = function () {\n        var /** @type {?} */ wrapperElement = this._sliderElement.querySelector('.mat-slider-wrapper');\n        return wrapperElement.getBoundingClientRect();\n    };\n    /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     * @return {?}\n     */\n    SliderRenderer.prototype.addFocus = function () {\n        this._sliderElement.focus();\n    };\n    return SliderRenderer;\n}());\nvar MdSliderModule = (function () {\n    function MdSliderModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdSliderModule.forRoot = function () {\n        return {\n            ngModule: MdSliderModule,\n            providers: []\n        };\n    };\n    return MdSliderModule;\n}());\nMdSliderModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [__WEBPACK_IMPORTED_MODULE_2__angular_common__[\"CommonModule\"], __WEBPACK_IMPORTED_MODULE_8__angular_forms__[\"FormsModule\"], CompatibilityModule, StyleModule, RtlModule],\n                exports: [MdSlider, CompatibilityModule],\n                declarations: [MdSlider],\n                providers: [{ provide: __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__[\"HAMMER_GESTURE_CONFIG\"], useClass: GestureConfig }]\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSliderModule.ctorParameters = function () { return []; };\n/**\n * Exception thrown when two MdSidenav are matching the same side.\n */\nvar MdDuplicatedSidenavError = (function (_super) {\n    __extends(MdDuplicatedSidenavError, _super);\n    /**\n     * @param {?} align\n     */\n    function MdDuplicatedSidenavError(align) {\n        return _super.call(this, \"A sidenav was already declared for 'align=\\\"\" + align + \"\\\"'\") || this;\n    }\n    return MdDuplicatedSidenavError;\n}(MdError));\n/**\n * Sidenav toggle promise result.\n */\nvar MdSidenavToggleResult = (function () {\n    /**\n     * @param {?} type\n     * @param {?} animationFinished\n     */\n    function MdSidenavToggleResult(type, animationFinished) {\n        this.type = type;\n        this.animationFinished = animationFinished;\n    }\n    return MdSidenavToggleResult;\n}());\n/**\n * <md-sidenav> component.\n *\n * This component corresponds to the drawer of the sidenav.\n *\n * Please refer to README.md for examples on how to use it.\n */\nvar MdSidenav = (function () {\n    /**\n     * @param {?} _elementRef The DOM element reference. Used for transition and width calculation.\n     *     If not available we do not hook on transitions.\n     * @param {?} _renderer\n     * @param {?} _focusTrapFactory\n     */\n    function MdSidenav(_elementRef, _renderer, _focusTrapFactory) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._align = 'start';\n        /** Mode of the sidenav; whether 'over' or 'side'. */\n        this.mode = 'over';\n        this._disableClose = false;\n        /** Whether the sidenav is opened. */\n        this._opened = false;\n        /** Event emitted when the sidenav is being opened. Use this to synchronize animations. */\n        this.onOpenStart = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /** Event emitted when the sidenav is fully opened. */\n        this.onOpen = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /** Event emitted when the sidenav is being closed. Use this to synchronize animations. */\n        this.onCloseStart = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /** Event emitted when the sidenav is fully closed. */\n        this.onClose = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /** Event emitted when the sidenav alignment changes. */\n        this.onAlignChanged = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this._toggleAnimationPromise = null;\n        this._resolveToggleAnimationPromise = null;\n        this._elementFocusedBeforeSidenavWasOpened = null;\n        this.onOpen.subscribe(function () {\n            _this._elementFocusedBeforeSidenavWasOpened = document.activeElement;\n            if (_this.isFocusTrapEnabled && _this._focusTrap) {\n                _this._focusTrap.focusFirstTabbableElementWhenReady();\n            }\n        });\n        this.onClose.subscribe(function () {\n            if (_this._elementFocusedBeforeSidenavWasOpened instanceof HTMLElement) {\n                _this._renderer.invokeElementMethod(_this._elementFocusedBeforeSidenavWasOpened, 'focus');\n            }\n            else {\n                _this._renderer.invokeElementMethod(_this._elementRef.nativeElement, 'blur');\n            }\n            _this._elementFocusedBeforeSidenavWasOpened = null;\n        });\n    }\n    Object.defineProperty(MdSidenav.prototype, \"align\", {\n        /**\n         * Direction which the sidenav is aligned in.\n         * @return {?}\n         */\n        get: function () { return this._align; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            // Make sure we have a valid value.\n            value = (value == 'end') ? 'end' : 'start';\n            if (value != this._align) {\n                this._align = value;\n                this.onAlignChanged.emit();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"disableClose\", {\n        /**\n         * Whether the sidenav can be closed with the escape key or not.\n         * @return {?}\n         */\n        get: function () { return this._disableClose; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._disableClose = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"isFocusTrapEnabled\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            // The focus trap is only enabled when the sidenav is open in any mode other than side.\n            return this.opened && this.mode !== 'side';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdSidenav.prototype.ngAfterContentInit = function () {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._focusTrap.enabled = this.isFocusTrapEnabled;\n        // This can happen when the sidenav is set to opened in\n        // the template and the transition hasn't ended.\n        if (this._toggleAnimationPromise) {\n            this._resolveToggleAnimationPromise(true);\n            this._toggleAnimationPromise = this._resolveToggleAnimationPromise = null;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdSidenav.prototype.ngOnDestroy = function () {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    };\n    Object.defineProperty(MdSidenav.prototype, \"opened\", {\n        /**\n         * Whether the sidenav is opened. We overload this because we trigger an event when it\n         * starts or end.\n         * @return {?}\n         */\n        get: function () { return this._opened; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) {\n            this.toggle(coerceBooleanProperty(v));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Open this sidenav, and return a Promise that will resolve when it's fully opened (or get\n     * rejected if it didn't).\n     * @return {?}\n     */\n    MdSidenav.prototype.open = function () {\n        return this.toggle(true);\n    };\n    /**\n     * Close this sidenav, and return a Promise that will resolve when it's fully closed (or get\n     * rejected if it didn't).\n     * @return {?}\n     */\n    MdSidenav.prototype.close = function () {\n        return this.toggle(false);\n    };\n    /**\n     * Toggle this sidenav. This is equivalent to calling open() when it's already opened, or\n     * close() when it's closed.\n     * @param {?=} isOpen Whether the sidenav should be open.\n     * @return {?} Resolves with the result of whether the sidenav was opened or closed.\n     */\n    MdSidenav.prototype.toggle = function (isOpen) {\n        var _this = this;\n        if (isOpen === void 0) { isOpen = !this.opened; }\n        // Shortcut it if we're already opened.\n        if (isOpen === this.opened) {\n            return this._toggleAnimationPromise ||\n                Promise.resolve(new MdSidenavToggleResult(isOpen ? 'open' : 'close', true));\n        }\n        this._opened = isOpen;\n        if (this._focusTrap) {\n            this._focusTrap.enabled = this.isFocusTrapEnabled;\n        }\n        if (isOpen) {\n            this.onOpenStart.emit();\n        }\n        else {\n            this.onCloseStart.emit();\n        }\n        if (this._toggleAnimationPromise) {\n            this._resolveToggleAnimationPromise(false);\n        }\n        this._toggleAnimationPromise = new Promise(function (resolve) {\n            _this._resolveToggleAnimationPromise = function (animationFinished) { return resolve(new MdSidenavToggleResult(isOpen ? 'open' : 'close', animationFinished)); };\n        });\n        return this._toggleAnimationPromise;\n    };\n    /**\n     * Handles the keyboard events.\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    MdSidenav.prototype.handleKeydown = function (event) {\n        if (event.keyCode === ESCAPE && !this.disableClose) {\n            this.close();\n            event.stopPropagation();\n        }\n    };\n    /**\n     * When transition has finished, set the internal state for classes and emit the proper event.\n     * The event passed is actually of type TransitionEvent, but that type is not available in\n     * Android so we use any.\n     * @param {?} transitionEvent\n     * @return {?}\n     */\n    MdSidenav.prototype._onTransitionEnd = function (transitionEvent) {\n        if (transitionEvent.target == this._elementRef.nativeElement\n            && transitionEvent.propertyName.endsWith('transform')) {\n            if (this._opened) {\n                this.onOpen.emit();\n            }\n            else {\n                this.onClose.emit();\n            }\n            if (this._toggleAnimationPromise) {\n                this._resolveToggleAnimationPromise(true);\n                this._toggleAnimationPromise = this._resolveToggleAnimationPromise = null;\n            }\n        }\n    };\n    Object.defineProperty(MdSidenav.prototype, \"_isClosing\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return !this._opened && !!this._toggleAnimationPromise;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"_isOpening\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._opened && !!this._toggleAnimationPromise;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"_isClosed\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return !this._opened && !this._toggleAnimationPromise;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"_isOpened\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._opened && !this._toggleAnimationPromise;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"_isEnd\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.align == 'end';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"_modeSide\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.mode == 'side';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"_modeOver\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.mode == 'over';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"_modePush\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.mode == 'push';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"_width\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (this._elementRef.nativeElement) {\n                return this._elementRef.nativeElement.offsetWidth;\n            }\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return MdSidenav;\n}());\nMdSidenav.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-sidenav, mat-sidenav',\n                // TODO(mmalerba): move template to separate file.\n                template: \"<ng-content></ng-content> \",\n                host: {\n                    '[class.mat-sidenav]': 'true',\n                    '(transitionend)': '_onTransitionEnd($event)',\n                    '(keydown)': 'handleKeydown($event)',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-sidenav-closed]': '_isClosed',\n                    '[class.mat-sidenav-closing]': '_isClosing',\n                    '[class.mat-sidenav-end]': '_isEnd',\n                    '[class.mat-sidenav-opened]': '_isOpened',\n                    '[class.mat-sidenav-opening]': '_isOpening',\n                    '[class.mat-sidenav-over]': '_modeOver',\n                    '[class.mat-sidenav-push]': '_modePush',\n                    '[class.mat-sidenav-side]': '_modeSide',\n                    'tabIndex': '-1'\n                },\n                changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectionStrategy\"].OnPush,\n                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None,\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSidenav.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: FocusTrapFactory, },\n]; };\nMdSidenav.propDecorators = {\n    'align': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'mode': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'disableClose': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'onOpenStart': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"], args: ['open-start',] },],\n    'onOpen': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"], args: ['open',] },],\n    'onCloseStart': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"], args: ['close-start',] },],\n    'onClose': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"], args: ['close',] },],\n    'onAlignChanged': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"], args: ['align-changed',] },],\n    'opened': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\n/**\n * <md-sidenav-container> component.\n *\n * This is the parent component to one or two <md-sidenav>s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nvar MdSidenavContainer = (function () {\n    /**\n     * @param {?} _dir\n     * @param {?} _element\n     * @param {?} _renderer\n     * @param {?} _ngZone\n     */\n    function MdSidenavContainer(_dir, _element, _renderer, _ngZone) {\n        var _this = this;\n        this._dir = _dir;\n        this._element = _element;\n        this._renderer = _renderer;\n        this._ngZone = _ngZone;\n        /** Event emitted when the sidenav backdrop is clicked. */\n        this.backdropClick = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /** Whether to enable open/close trantions. */\n        this._enableTransitions = false;\n        // If a `Dir` directive exists up the tree, listen direction changes and update the left/right\n        // properties to point to the proper start/end.\n        if (_dir != null) {\n            _dir.dirChange.subscribe(function () { return _this._validateDrawers(); });\n        }\n    }\n    Object.defineProperty(MdSidenavContainer.prototype, \"start\", {\n        /**\n         * The sidenav child with the `start` alignment.\n         * @return {?}\n         */\n        get: function () { return this._start; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenavContainer.prototype, \"end\", {\n        /**\n         * The sidenav child with the `end` alignment.\n         * @return {?}\n         */\n        get: function () { return this._end; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdSidenavContainer.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        // On changes, assert on consistency.\n        this._sidenavs.changes.subscribe(function () { return _this._validateDrawers(); });\n        this._sidenavs.forEach(function (sidenav) {\n            _this._watchSidenavToggle(sidenav);\n            _this._watchSidenavAlign(sidenav);\n        });\n        this._validateDrawers();\n        // Give the view a chance to render the initial state, then enable transitions.\n        this._ngZone.onMicrotaskEmpty.first().subscribe(function () { return _this._enableTransitions = true; });\n    };\n    /**\n     * Subscribes to sidenav events in order to set a class on the main container element when the\n     * sidenav is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     * @param {?} sidenav\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._watchSidenavToggle = function (sidenav) {\n        var _this = this;\n        if (!sidenav || sidenav.mode === 'side') {\n            return;\n        }\n        sidenav.onOpen.subscribe(function () { return _this._setContainerClass(sidenav, true); });\n        sidenav.onClose.subscribe(function () { return _this._setContainerClass(sidenav, false); });\n    };\n    /**\n     * Subscribes to sidenav onAlignChanged event in order to re-validate drawers when the align\n     * changes.\n     * @param {?} sidenav\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._watchSidenavAlign = function (sidenav) {\n        var _this = this;\n        if (!sidenav) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping sides at the same time.\n        sidenav.onAlignChanged.subscribe(function () { return _this._ngZone.onMicrotaskEmpty.first().subscribe(function () { return _this._validateDrawers(); }); });\n    };\n    /**\n     * Toggles the 'mat-sidenav-opened' class on the main 'md-sidenav-container' element.\n     * @param {?} sidenav\n     * @param {?} bool\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._setContainerClass = function (sidenav, bool) {\n        this._renderer.setElementClass(this._element.nativeElement, 'mat-sidenav-opened', bool);\n    };\n    /**\n     * Validate the state of the sidenav children components.\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._validateDrawers = function () {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end sidenav.\n        // NOTE: We must call toArray on _sidenavs even though it's iterable\n        // (see https://github.com/Microsoft/TypeScript/issues/3164).\n        for (var _i = 0, _a = this._sidenavs.toArray(); _i < _a.length; _i++) {\n            var sidenav = _a[_i];\n            if (sidenav.align == 'end') {\n                if (this._end != null) {\n                    throw new MdDuplicatedSidenavError('end');\n                }\n                this._end = sidenav;\n            }\n            else {\n                if (this._start != null) {\n                    throw new MdDuplicatedSidenavError('start');\n                }\n                this._start = sidenav;\n            }\n        }\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir == null || this._dir.value == 'ltr') {\n            this._left = this._start;\n            this._right = this._end;\n        }\n        else {\n            this._left = this._end;\n            this._right = this._start;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._onBackdropClicked = function () {\n        this.backdropClick.emit();\n        this._closeModalSidenav();\n    };\n    /**\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._closeModalSidenav = function () {\n        // Close all open sidenav's where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter(function (sidenav) { return sidenav && !sidenav.disableClose && sidenav.mode !== 'side'; })\n            .forEach(function (sidenav) { return sidenav.close(); });\n    };\n    /**\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._isShowingBackdrop = function () {\n        return (this._isSidenavOpen(this._start) && this._start.mode != 'side')\n            || (this._isSidenavOpen(this._end) && this._end.mode != 'side');\n    };\n    /**\n     * @param {?} side\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._isSidenavOpen = function (side) {\n        return side != null && side.opened;\n    };\n    /**\n     * Return the width of the sidenav, if it's in the proper mode and opened.\n     * This may relayout the view, so do not call this often.\n     * @param {?} sidenav\n     * @param {?} mode\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._getSidenavEffectiveWidth = function (sidenav, mode) {\n        return (this._isSidenavOpen(sidenav) && sidenav.mode == mode) ? sidenav._width : 0;\n    };\n    /**\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._getMarginLeft = function () {\n        return this._getSidenavEffectiveWidth(this._left, 'side');\n    };\n    /**\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._getMarginRight = function () {\n        return this._getSidenavEffectiveWidth(this._right, 'side');\n    };\n    /**\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._getPositionLeft = function () {\n        return this._getSidenavEffectiveWidth(this._left, 'push');\n    };\n    /**\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._getPositionRight = function () {\n        return this._getSidenavEffectiveWidth(this._right, 'push');\n    };\n    /**\n     * Returns the horizontal offset for the content area.  There should never be a value for both\n     * left and right, so by subtracting the right value from the left value, we should always get\n     * the appropriate offset.\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._getPositionOffset = function () {\n        return this._getPositionLeft() - this._getPositionRight();\n    };\n    /**\n     * This is using [ngStyle] rather than separate [style...] properties because [style.transform]\n     * doesn't seem to work right now.\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._getStyles = function () {\n        return {\n            marginLeft: this._getMarginLeft() + \"px\",\n            marginRight: this._getMarginRight() + \"px\",\n            transform: \"translate3d(\" + this._getPositionOffset() + \"px, 0, 0)\"\n        };\n    };\n    return MdSidenavContainer;\n}());\nMdSidenavContainer.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-sidenav-container, mat-sidenav-container',\n                // Do not use ChangeDetectionStrategy.OnPush. It does not work for this component because\n                // technically it is a sibling of MdSidenav (on the content tree) and isn't updated when MdSidenav\n                // changes its state.\n                template: \"<div class=\\\"mat-sidenav-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" [class.mat-sidenav-shown]=\\\"_isShowingBackdrop()\\\"></div> <ng-content select=\\\"md-sidenav, mat-sidenav\\\"></ng-content> <div class=\\\"mat-sidenav-content\\\" [ngStyle]=\\\"_getStyles()\\\" cdk-scrollable> <ng-content></ng-content> </div> \",\n                styles: [\".mat-sidenav-container{position:relative;transform:translate3d(0,0,0);box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-sidenav-container[fullscreen]{position:absolute;top:0;left:0;right:0;bottom:0}.mat-sidenav-container[fullscreen].mat-sidenav-opened{overflow:hidden}.mat-sidenav-backdrop{position:absolute;top:0;left:0;right:0;bottom:0;display:block;z-index:2;visibility:hidden}.mat-sidenav-backdrop.mat-sidenav-shown{visibility:visible}@media screen and (-ms-high-contrast:active){.mat-sidenav-backdrop{opacity:.5}}.mat-sidenav-content{position:relative;transform:translate3d(0,0,0);display:block;height:100%;overflow:auto}.mat-sidenav{position:relative;transform:translate3d(0,0,0);display:block;position:absolute;top:0;bottom:0;z-index:3;min-width:5vw;outline:0;box-sizing:border-box;height:100%;overflow-y:auto;transform:translate3d(-100%,0,0)}.mat-sidenav.mat-sidenav-closed{visibility:hidden}.mat-sidenav.mat-sidenav-opened,.mat-sidenav.mat-sidenav-opening{transform:translate3d(0,0,0)}.mat-sidenav.mat-sidenav-side{z-index:1}.mat-sidenav.mat-sidenav-end{right:0;transform:translate3d(100%,0,0)}.mat-sidenav.mat-sidenav-end.mat-sidenav-closed{visibility:hidden}.mat-sidenav.mat-sidenav-end.mat-sidenav-opened,.mat-sidenav.mat-sidenav-end.mat-sidenav-opening{transform:translate3d(0,0,0)}[dir=rtl] .mat-sidenav{transform:translate3d(100%,0,0)}[dir=rtl] .mat-sidenav.mat-sidenav-closed{visibility:hidden}[dir=rtl] .mat-sidenav.mat-sidenav-opened,[dir=rtl] .mat-sidenav.mat-sidenav-opening{transform:translate3d(0,0,0)}[dir=rtl] .mat-sidenav.mat-sidenav-end{left:0;right:auto;transform:translate3d(-100%,0,0)}[dir=rtl] .mat-sidenav.mat-sidenav-end.mat-sidenav-closed{visibility:hidden}[dir=rtl] .mat-sidenav.mat-sidenav-end.mat-sidenav-opened,[dir=rtl] .mat-sidenav.mat-sidenav-end.mat-sidenav-opening{transform:translate3d(0,0,0)}.mat-sidenav.mat-sidenav-opened:not(.mat-sidenav-side),.mat-sidenav.mat-sidenav-opening:not(.mat-sidenav-side){box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)} /*# sourceMappingURL=sidenav.css.map */ \",\n                    \".mat-sidenav-transition .mat-sidenav{transition:transform .4s cubic-bezier(.25,.8,.25,1)}.mat-sidenav-transition .mat-sidenav-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-sidenav-transition .mat-sidenav-backdrop.mat-sidenav-shown{transition:background-color .4s cubic-bezier(.25,.8,.25,1)} /*# sourceMappingURL=sidenav-transitions.css.map */ \"],\n                host: {\n                    '[class.mat-sidenav-container]': 'true',\n                    '[class.mat-sidenav-transition]': '_enableTransitions',\n                },\n                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None,\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSidenavContainer.ctorParameters = function () { return [\n    { type: Dir, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] },] },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n]; };\nMdSidenavContainer.propDecorators = {\n    '_sidenavs': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChildren\"], args: [MdSidenav,] },],\n    'backdropClick': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n};\nvar MdSidenavModule = (function () {\n    function MdSidenavModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdSidenavModule.forRoot = function () {\n        return {\n            ngModule: MdSidenavModule,\n            providers: []\n        };\n    };\n    return MdSidenavModule;\n}());\nMdSidenavModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [__WEBPACK_IMPORTED_MODULE_2__angular_common__[\"CommonModule\"], CompatibilityModule, A11yModule, OverlayModule],\n                exports: [MdSidenavContainer, MdSidenav, CompatibilityModule],\n                declarations: [MdSidenavContainer, MdSidenav],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSidenavModule.ctorParameters = function () { return []; };\nvar MdListDivider = (function () {\n    function MdListDivider() {\n    }\n    return MdListDivider;\n}());\nMdListDivider.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'md-divider, mat-divider'\n            },] },\n];\n/**\n * @nocollapse\n */\nMdListDivider.ctorParameters = function () { return []; };\n/**\n * Token used to inject the list type into child MdListItem components so they can know whether\n * they're in a nav list (and thus should use an MdRipple).\n */\nvar LIST_TYPE_TOKEN = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"OpaqueToken\"]('list_type');\nvar NORMAL_LIST_TYPE = 'normal_list_type';\nvar NAV_LIST_TYPE = 'nav_list_type';\nvar MdList = (function () {\n    function MdList() {\n    }\n    return MdList;\n}());\nMdList.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-list, mat-list, md-nav-list, mat-nav-list',\n                host: {\n                    'role': 'list'\n                },\n                template: '<ng-content></ng-content>',\n                styles: [\".mat-list,.mat-nav-list{padding-top:8px;display:block}.mat-list .mat-subheader,.mat-nav-list .mat-subheader{display:block;box-sizing:border-box;height:48px;padding:16px;margin:0;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:14px;font-weight:500}.mat-list .mat-subheader:first-child,.mat-nav-list .mat-subheader:first-child{margin-top:-8px}.mat-list .mat-list-item,.mat-nav-list .mat-list-item{display:block}.mat-list .mat-list-item .mat-list-item-content,.mat-nav-list .mat-list-item .mat-list-item-content{display:flex;flex-direction:row;align-items:center;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;box-sizing:border-box;font-size:16px;height:48px;padding:0 16px;position:relative}.mat-list .mat-list-item.mat-list-item-avatar .mat-list-item-content,.mat-nav-list .mat-list-item.mat-list-item-avatar .mat-list-item-content{height:56px}.mat-list .mat-list-item.mat-2-line .mat-list-item-content,.mat-nav-list .mat-list-item.mat-2-line .mat-list-item-content{height:72px}.mat-list .mat-list-item.mat-3-line .mat-list-item-content,.mat-nav-list .mat-list-item.mat-3-line .mat-list-item-content{height:88px}.mat-list .mat-list-item.mat-multi-line .mat-list-item-content,.mat-nav-list .mat-list-item.mat-multi-line .mat-list-item-content{height:100%;padding:8px 16px}.mat-list .mat-list-item .mat-list-text,.mat-nav-list .mat-list-item .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0 16px}.mat-list .mat-list-item .mat-list-text>*,.mat-nav-list .mat-list-item .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list .mat-list-item .mat-list-text:empty,.mat-nav-list .mat-list-item .mat-list-text:empty{display:none}.mat-list .mat-list-item .mat-list-text:first-child,.mat-nav-list .mat-list-item .mat-list-text:first-child{padding:0}.mat-list .mat-list-item .mat-list-avatar,.mat-nav-list .mat-list-item .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%}.mat-list .mat-list-item .mat-list-icon,.mat-nav-list .mat-list-item .mat-list-icon{width:24px;height:24px;border-radius:50%;padding:4px}.mat-list .mat-list-item .mat-line,.mat-nav-list .mat-list-item .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-list .mat-list-item .mat-line:nth-child(n+2),.mat-nav-list .mat-list-item .mat-line:nth-child(n+2){font-size:14px}.mat-list[dense],.mat-nav-list[dense]{padding-top:4px;display:block}.mat-list[dense] .mat-subheader,.mat-nav-list[dense] .mat-subheader{display:block;box-sizing:border-box;height:40px;padding:16px;margin:0;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:13px;font-weight:500}.mat-list[dense] .mat-subheader:first-child,.mat-nav-list[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list[dense] .mat-list-item,.mat-nav-list[dense] .mat-list-item{display:block}.mat-list[dense] .mat-list-item .mat-list-item-content,.mat-nav-list[dense] .mat-list-item .mat-list-item-content{display:flex;flex-direction:row;align-items:center;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;box-sizing:border-box;font-size:13px;height:40px;padding:0 16px;position:relative}.mat-list[dense] .mat-list-item.mat-list-item-avatar .mat-list-item-content,.mat-nav-list[dense] .mat-list-item.mat-list-item-avatar .mat-list-item-content{height:48px}.mat-list[dense] .mat-list-item.mat-2-line .mat-list-item-content,.mat-nav-list[dense] .mat-list-item.mat-2-line .mat-list-item-content{height:60px}.mat-list[dense] .mat-list-item.mat-3-line .mat-list-item-content,.mat-nav-list[dense] .mat-list-item.mat-3-line .mat-list-item-content{height:76px}.mat-list[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-nav-list[dense] .mat-list-item.mat-multi-line .mat-list-item-content{height:100%;padding:8px 16px}.mat-list[dense] .mat-list-item .mat-list-text,.mat-nav-list[dense] .mat-list-item .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0 16px}.mat-list[dense] .mat-list-item .mat-list-text>*,.mat-nav-list[dense] .mat-list-item .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list[dense] .mat-list-item .mat-list-text:empty,.mat-nav-list[dense] .mat-list-item .mat-list-text:empty{display:none}.mat-list[dense] .mat-list-item .mat-list-text:first-child,.mat-nav-list[dense] .mat-list-item .mat-list-text:first-child{padding:0}.mat-list[dense] .mat-list-item .mat-list-avatar,.mat-nav-list[dense] .mat-list-item .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%}.mat-list[dense] .mat-list-item .mat-list-icon,.mat-nav-list[dense] .mat-list-item .mat-list-icon{width:24px;height:24px;border-radius:50%;padding:4px}.mat-list[dense] .mat-list-item .mat-line,.mat-nav-list[dense] .mat-list-item .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-list[dense] .mat-list-item .mat-line:nth-child(n+2),.mat-nav-list[dense] .mat-list-item .mat-line:nth-child(n+2){font-size:13px}.mat-divider{display:block;border-top-style:solid;border-top-width:1px;margin:0}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item-content{cursor:pointer}.mat-nav-list .mat-list-item-content.mat-list-item-focus,.mat-nav-list .mat-list-item-content:hover{outline:0} /*# sourceMappingURL=list.css.map */ \"],\n                providers: [{ provide: LIST_TYPE_TOKEN, useValue: NORMAL_LIST_TYPE }],\n                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None\n            },] },\n];\n/**\n * @nocollapse\n */\nMdList.ctorParameters = function () { return []; };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdListCssMatStyler = (function () {\n    function MdListCssMatStyler() {\n    }\n    return MdListCssMatStyler;\n}());\nMdListCssMatStyler.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'md-list, mat-list',\n                host: {\n                    '[class.mat-list]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdListCssMatStyler.ctorParameters = function () { return []; };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdNavListCssMatStyler = (function () {\n    function MdNavListCssMatStyler() {\n    }\n    return MdNavListCssMatStyler;\n}());\nMdNavListCssMatStyler.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'md-nav-list, mat-nav-list',\n                host: {\n                    '[class.mat-nav-list]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdNavListCssMatStyler.ctorParameters = function () { return []; };\n/**\n * Directive to set the ListType token to NAV_LIST_TYPE.\n */\nvar MdNavListTokenSetter = (function () {\n    function MdNavListTokenSetter() {\n    }\n    return MdNavListTokenSetter;\n}());\nMdNavListTokenSetter.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'md-nav-list, mat-nav-list',\n                providers: [{ provide: LIST_TYPE_TOKEN, useValue: NAV_LIST_TYPE }],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdNavListTokenSetter.ctorParameters = function () { return []; };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdDividerCssMatStyler = (function () {\n    function MdDividerCssMatStyler() {\n    }\n    return MdDividerCssMatStyler;\n}());\nMdDividerCssMatStyler.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'md-divider, mat-divider',\n                host: {\n                    '[class.mat-divider]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdDividerCssMatStyler.ctorParameters = function () { return []; };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdListAvatarCssMatStyler = (function () {\n    function MdListAvatarCssMatStyler() {\n    }\n    return MdListAvatarCssMatStyler;\n}());\nMdListAvatarCssMatStyler.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[md-list-avatar], [mat-list-avatar]',\n                host: {\n                    '[class.mat-list-avatar]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdListAvatarCssMatStyler.ctorParameters = function () { return []; };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdListIconCssMatStyler = (function () {\n    function MdListIconCssMatStyler() {\n    }\n    return MdListIconCssMatStyler;\n}());\nMdListIconCssMatStyler.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[md-list-icon], [mat-list-icon]',\n                host: {\n                    '[class.mat-list-icon]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdListIconCssMatStyler.ctorParameters = function () { return []; };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdListSubheaderCssMatStyler = (function () {\n    function MdListSubheaderCssMatStyler() {\n    }\n    return MdListSubheaderCssMatStyler;\n}());\nMdListSubheaderCssMatStyler.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[md-subheader], [mat-subheader]',\n                host: {\n                    '[class.mat-subheader]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdListSubheaderCssMatStyler.ctorParameters = function () { return []; };\nvar MdListItem = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _element\n     * @param {?} _listType\n     */\n    function MdListItem(_renderer, _element, _listType) {\n        this._renderer = _renderer;\n        this._element = _element;\n        this._listType = _listType;\n        /**\n         * Whether the ripple effect on click should be disabled. This applies only to list items that\n         * are children of an md-nav-list; md-list items never have ripples.\n         */\n        this.disableRipple = false;\n        this._hasFocus = false;\n    }\n    Object.defineProperty(MdListItem.prototype, \"_hasAvatar\", {\n        /**\n         * @param {?} avatar\n         * @return {?}\n         */\n        set: function (avatar) {\n            this._renderer.setElementClass(this._element.nativeElement, 'mat-list-item-avatar', avatar != null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdListItem.prototype.ngAfterContentInit = function () {\n        this._lineSetter = new MdLineSetter(this._lines, this._renderer, this._element);\n    };\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    MdListItem.prototype.isRippleEnabled = function () {\n        return !this.disableRipple && (this._listType === NAV_LIST_TYPE);\n    };\n    /**\n     * @return {?}\n     */\n    MdListItem.prototype._handleFocus = function () {\n        this._hasFocus = true;\n    };\n    /**\n     * @return {?}\n     */\n    MdListItem.prototype._handleBlur = function () {\n        this._hasFocus = false;\n    };\n    return MdListItem;\n}());\nMdListItem.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-list-item, mat-list-item, a[md-list-item], a[mat-list-item]',\n                host: {\n                    'role': 'listitem',\n                    '(focus)': '_handleFocus()',\n                    '(blur)': '_handleBlur()',\n                    '[class.mat-list-item]': 'true',\n                },\n                template: \"<div class=\\\"mat-list-item-content\\\" [class.mat-list-item-focus]=\\\"_hasFocus\\\" md-ripple [mdRippleDisabled]=\\\"!isRippleEnabled()\\\"> <ng-content select=\\\"[md-list-avatar],[md-list-icon], [mat-list-avatar], [mat-list-icon]\\\"></ng-content> <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[md-line], [mat-line]\\\"></ng-content></div> <ng-content></ng-content> </div> \",\n                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None\n            },] },\n];\n/**\n * @nocollapse\n */\nMdListItem.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [LIST_TYPE_TOKEN,] },] },\n]; };\nMdListItem.propDecorators = {\n    'disableRipple': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    '_lines': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChildren\"], args: [MdLine,] },],\n    '_hasAvatar': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChild\"], args: [MdListAvatarCssMatStyler,] },],\n};\nvar MdListModule = (function () {\n    function MdListModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdListModule.forRoot = function () {\n        return {\n            ngModule: MdListModule,\n            providers: []\n        };\n    };\n    return MdListModule;\n}());\nMdListModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [MdLineModule, MdRippleModule, CompatibilityModule],\n                exports: [\n                    MdList,\n                    MdListItem,\n                    MdListDivider,\n                    MdListAvatarCssMatStyler,\n                    MdLineModule,\n                    CompatibilityModule,\n                    MdListIconCssMatStyler,\n                    MdListCssMatStyler,\n                    MdNavListCssMatStyler,\n                    MdDividerCssMatStyler,\n                    MdListSubheaderCssMatStyler,\n                    MdNavListTokenSetter,\n                ],\n                declarations: [\n                    MdList,\n                    MdListItem,\n                    MdListDivider,\n                    MdListAvatarCssMatStyler,\n                    MdListIconCssMatStyler,\n                    MdListCssMatStyler,\n                    MdNavListCssMatStyler,\n                    MdDividerCssMatStyler,\n                    MdListSubheaderCssMatStyler,\n                    MdNavListTokenSetter,\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdListModule.ctorParameters = function () { return []; };\n/**\n * Converts values into strings. Falsy values become empty strings.\n * \\@docs-private\n * @param {?} value\n * @return {?}\n */\nfunction coerceToString(value) {\n    return \"\" + (value || '');\n}\n/**\n * Converts a value that might be a string into a number.\n * \\@docs-private\n * @param {?} value\n * @return {?}\n */\nfunction coerceToNumber(value) {\n    return typeof value === 'string' ? parseInt(value, 10) : value;\n}\nvar MdGridTile = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _element\n     */\n    function MdGridTile(_renderer, _element) {\n        this._renderer = _renderer;\n        this._element = _element;\n        this._rowspan = 1;\n        this._colspan = 1;\n    }\n    Object.defineProperty(MdGridTile.prototype, \"rowspan\", {\n        /**\n         * Amount of rows that the grid tile takes up.\n         * @return {?}\n         */\n        get: function () { return this._rowspan; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._rowspan = coerceToNumber(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdGridTile.prototype, \"colspan\", {\n        /**\n         * Amount of columns that the grid tile takes up.\n         * @return {?}\n         */\n        get: function () { return this._colspan; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._colspan = coerceToNumber(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n     * \"Changed after checked\" errors that would occur with HostBinding.\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    MdGridTile.prototype._setStyle = function (property, value) {\n        this._renderer.setElementStyle(this._element.nativeElement, property, value);\n    };\n    return MdGridTile;\n}());\nMdGridTile.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-grid-tile, mat-grid-tile',\n                host: {\n                    'role': 'listitem',\n                    '[class.mat-grid-tile]': 'true',\n                },\n                template: \"<!-- TODO(kara): Revisit why this is a figure.--> <figure class=\\\"mat-figure\\\"> <ng-content></ng-content> </figure>\",\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{display:flex;position:absolute;align-items:center;justify-content:center;height:100%;top:0;right:0;bottom:0;left:0;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-footer,.mat-grid-tile .mat-grid-tile-header{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;font-size:16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-footer .mat-line,.mat-grid-tile .mat-grid-tile-header .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile .mat-grid-tile-footer .mat-line:nth-child(n+2),.mat-grid-tile .mat-grid-tile-header .mat-line:nth-child(n+2){font-size:12px}.mat-grid-tile .mat-grid-tile-footer>*,.mat-grid-tile .mat-grid-tile-header>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-tile-footer.mat-2-line,.mat-grid-tile .mat-grid-tile-header.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none} /*# sourceMappingURL=grid-list.css.map */ \"],\n                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None,\n            },] },\n];\n/**\n * @nocollapse\n */\nMdGridTile.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n]; };\nMdGridTile.propDecorators = {\n    'rowspan': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'colspan': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\nvar MdGridTileText = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _element\n     */\n    function MdGridTileText(_renderer, _element) {\n        this._renderer = _renderer;\n        this._element = _element;\n    }\n    /**\n     * @return {?}\n     */\n    MdGridTileText.prototype.ngAfterContentInit = function () {\n        this._lineSetter = new MdLineSetter(this._lines, this._renderer, this._element);\n    };\n    return MdGridTileText;\n}());\nMdGridTileText.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-grid-tile-header, mat-grid-tile-header, md-grid-tile-footer, mat-grid-tile-footer',\n                template: \"<ng-content select=\\\"[md-grid-avatar], [mat-grid-avatar]\\\"></ng-content> <div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[md-line], [mat-line]\\\"></ng-content></div> <ng-content></ng-content> \"\n            },] },\n];\n/**\n * @nocollapse\n */\nMdGridTileText.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n]; };\nMdGridTileText.propDecorators = {\n    '_lines': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChildren\"], args: [MdLine,] },],\n};\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdGridAvatarCssMatStyler = (function () {\n    function MdGridAvatarCssMatStyler() {\n    }\n    return MdGridAvatarCssMatStyler;\n}());\nMdGridAvatarCssMatStyler.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[md-grid-avatar], [mat-grid-avatar]',\n                host: {\n                    '[class.mat-grid-avatar]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdGridAvatarCssMatStyler.ctorParameters = function () { return []; };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdGridTileHeaderCssMatStyler = (function () {\n    function MdGridTileHeaderCssMatStyler() {\n    }\n    return MdGridTileHeaderCssMatStyler;\n}());\nMdGridTileHeaderCssMatStyler.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'md-grid-tile-header, mat-grid-tile-header',\n                host: {\n                    '[class.mat-grid-tile-header]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdGridTileHeaderCssMatStyler.ctorParameters = function () { return []; };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdGridTileFooterCssMatStyler = (function () {\n    function MdGridTileFooterCssMatStyler() {\n    }\n    return MdGridTileFooterCssMatStyler;\n}());\nMdGridTileFooterCssMatStyler.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'md-grid-tile-footer, mat-grid-tile-footer',\n                host: {\n                    '[class.mat-grid-tile-footer]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdGridTileFooterCssMatStyler.ctorParameters = function () { return []; };\n/**\n * Exception thrown when cols property is missing from grid-list\n * \\@docs-private\n */\nvar MdGridListColsError = (function (_super) {\n    __extends(MdGridListColsError, _super);\n    function MdGridListColsError() {\n        return _super.call(this, \"md-grid-list: must pass in number of columns. Example: <md-grid-list cols=\\\"3\\\">\") || this;\n    }\n    return MdGridListColsError;\n}(MdError));\n/**\n * Exception thrown when a tile's colspan is longer than the number of cols in list\n * \\@docs-private\n */\nvar MdGridTileTooWideError = (function (_super) {\n    __extends(MdGridTileTooWideError, _super);\n    /**\n     * @param {?} cols\n     * @param {?} listLength\n     */\n    function MdGridTileTooWideError(cols, listLength) {\n        return _super.call(this, \"md-grid-list: tile with colspan \" + cols + \" is wider than grid with cols=\\\"\" + listLength + \"\\\".\") || this;\n    }\n    return MdGridTileTooWideError;\n}(MdError));\n/**\n * Exception thrown when an invalid ratio is passed in as a rowHeight\n * \\@docs-private\n */\nvar MdGridListBadRatioError = (function (_super) {\n    __extends(MdGridListBadRatioError, _super);\n    /**\n     * @param {?} value\n     */\n    function MdGridListBadRatioError(value) {\n        return _super.call(this, \"md-grid-list: invalid ratio given for row-height: \\\"\" + value + \"\\\"\") || this;\n    }\n    return MdGridListBadRatioError;\n}(MdError));\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n *\n * \\@docs-private\n */\nvar TileCoordinator = (function () {\n    /**\n     * @param {?} numColumns\n     * @param {?} tiles\n     */\n    function TileCoordinator(numColumns, tiles) {\n        var _this = this;\n        /** Index at which the search for the next gap will start. */\n        this.columnIndex = 0;\n        /** The current row index. */\n        this.rowIndex = 0;\n        this.tracker = new Array(numColumns);\n        this.tracker.fill(0, 0, this.tracker.length);\n        this.positions = tiles.map(function (tile) { return _this._trackTile(tile); });\n    }\n    Object.defineProperty(TileCoordinator.prototype, \"rowCount\", {\n        /**\n         * Gets the total number of rows occupied by tiles\n         * @return {?}\n         */\n        get: function () { return this.rowIndex + 1; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TileCoordinator.prototype, \"rowspan\", {\n        /**\n         * Gets the total span of rows occupied by tiles.\n         * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ lastRowMax = Math.max.apply(Math, this.tracker);\n            // if any of the tiles has a rowspan that pushes it beyond the total row count,\n            // add the difference to the rowcount\n            return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Calculates the row and col position of a tile.\n     * @param {?} tile\n     * @return {?}\n     */\n    TileCoordinator.prototype._trackTile = function (tile) {\n        // Find a gap large enough for this tile.\n        var /** @type {?} */ gapStartIndex = this._findMatchingGap(tile.colspan);\n        // Place tile in the resulting gap.\n        this._markTilePosition(gapStartIndex, tile);\n        // The next time we look for a gap, the search will start at columnIndex, which should be\n        // immediately after the tile that has just been placed.\n        this.columnIndex = gapStartIndex + tile.colspan;\n        return new TilePosition(this.rowIndex, gapStartIndex);\n    };\n    /**\n     * Finds the next available space large enough to fit the tile.\n     * @param {?} tileCols\n     * @return {?}\n     */\n    TileCoordinator.prototype._findMatchingGap = function (tileCols) {\n        if (tileCols > this.tracker.length) {\n            throw new MdGridTileTooWideError(tileCols, this.tracker.length);\n        }\n        // Start index is inclusive, end index is exclusive.\n        var /** @type {?} */ gapStartIndex = -1;\n        var /** @type {?} */ gapEndIndex = -1;\n        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n        do {\n            // If we've reached the end of the row, go to the next row.\n            if (this.columnIndex + tileCols > this.tracker.length) {\n                this._nextRow();\n                continue;\n            }\n            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n            // If there are no more empty spaces in this row at all, move on to the next row.\n            if (gapStartIndex == -1) {\n                this._nextRow();\n                continue;\n            }\n            gapEndIndex = this._findGapEndIndex(gapStartIndex);\n            // If a gap large enough isn't found, we want to start looking immediately after the current\n            // gap on the next iteration.\n            this.columnIndex = gapStartIndex + 1;\n        } while (gapEndIndex - gapStartIndex < tileCols);\n        return gapStartIndex;\n    };\n    /**\n     * Move \"down\" to the next row.\n     * @return {?}\n     */\n    TileCoordinator.prototype._nextRow = function () {\n        this.columnIndex = 0;\n        this.rowIndex++;\n        // Decrement all spaces by one to reflect moving down one row.\n        for (var /** @type {?} */ i = 0; i < this.tracker.length; i++) {\n            this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n        }\n    };\n    /**\n     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n     * The gap ends when a non-zero value is found.\n     * @param {?} gapStartIndex\n     * @return {?}\n     */\n    TileCoordinator.prototype._findGapEndIndex = function (gapStartIndex) {\n        for (var /** @type {?} */ i = gapStartIndex + 1; i < this.tracker.length; i++) {\n            if (this.tracker[i] != 0) {\n                return i;\n            }\n        }\n        // The gap ends with the end of the row.\n        return this.tracker.length;\n    };\n    /**\n     * Update the tile tracker to account for the given tile in the given space.\n     * @param {?} start\n     * @param {?} tile\n     * @return {?}\n     */\n    TileCoordinator.prototype._markTilePosition = function (start, tile) {\n        for (var /** @type {?} */ i = 0; i < tile.colspan; i++) {\n            this.tracker[start + i] = tile.rowspan;\n        }\n    };\n    return TileCoordinator;\n}());\n/**\n * Simple data structure for tile position (row, col).\n * \\@docs-private\n */\nvar TilePosition = (function () {\n    /**\n     * @param {?} row\n     * @param {?} col\n     */\n    function TilePosition(row, col) {\n        this.row = row;\n        this.col = col;\n    }\n    return TilePosition;\n}());\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * \\@docs-private\n */\nvar TileStyler = (function () {\n    function TileStyler() {\n        this._rows = 0;\n        this._rowspan = 0;\n    }\n    /**\n     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n     * because these properties haven't been calculated by that point.\n     *\n     * @param {?} gutterSize Size of the grid's gutter.\n     * @param {?} tracker Instance of the TileCoordinator.\n     * @param {?} cols Amount of columns in the grid.\n     * @param {?} direction Layout direction of the grid.\n     * @return {?}\n     */\n    TileStyler.prototype.init = function (gutterSize, tracker, cols, direction) {\n        this._gutterSize = normalizeUnits(gutterSize);\n        this._rows = tracker.rowCount;\n        this._rowspan = tracker.rowspan;\n        this._cols = cols;\n        this._direction = direction;\n    };\n    /**\n     * Computes the amount of space a single 1x1 tile would take up (width or height).\n     * Used as a basis for other calculations.\n     * @param {?} sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n     * @param {?} gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n     * @return {?} The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n     */\n    TileStyler.prototype.getBaseTileSize = function (sizePercent, gutterFraction) {\n        // Take the base size percent (as would be if evenly dividing the size between cells),\n        // and then subtracting the size of one gutter. However, since there are no gutters on the\n        // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n        // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n        // edge evenly among the cells).\n        return \"(\" + sizePercent + \"% - ( \" + this._gutterSize + \" * \" + gutterFraction + \" ))\";\n    };\n    /**\n     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} offset Number of tiles that have already been rendered in the row/column.\n     * @return {?} Position of the tile as a CSS calc() expression.\n     */\n    TileStyler.prototype.getTilePosition = function (baseSize, offset) {\n        // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n        // row/column (offset).\n        return calc(\"(\" + baseSize + \" + \" + this._gutterSize + \") * \" + offset);\n    };\n    /**\n     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} span The tile's rowspan or colspan.\n     * @return {?} Size of the tile as a CSS calc() expression.\n     */\n    TileStyler.prototype.getTileSize = function (baseSize, span) {\n        return \"(\" + baseSize + \" * \" + span + \") + (\" + (span - 1) + \" * \" + this._gutterSize + \")\";\n    };\n    /**\n     * Sets the style properties to be applied to a tile for the given row and column index.\n     * @param {?} tile Tile to which to apply the styling.\n     * @param {?} rowIndex Index of the tile's row.\n     * @param {?} colIndex Index of the tile's column.\n     * @return {?}\n     */\n    TileStyler.prototype.setStyle = function (tile, rowIndex, colIndex) {\n        // Percent of the available horizontal space that one column takes up.\n        var /** @type {?} */ percentWidthPerTile = 100 / this._cols;\n        // Fraction of the vertical gutter size that each column takes up.\n        // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n        var /** @type {?} */ gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n        this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n        this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    };\n    /**\n     * Sets the horizontal placement of the tile in the list.\n     * @param {?} tile\n     * @param {?} colIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    TileStyler.prototype.setColStyles = function (tile, colIndex, percentWidth, gutterWidth) {\n        // Base horizontal size of a column.\n        var /** @type {?} */ baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n        // The width and horizontal position of each tile is always calculated the same way, but the\n        // height and vertical position depends on the rowMode.\n        var /** @type {?} */ side = this._direction === 'ltr' ? 'left' : 'right';\n        tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n        tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n    };\n    /**\n     * Calculates the total size taken up by gutters across one axis of a list.\n     * @return {?}\n     */\n    TileStyler.prototype.getGutterSpan = function () {\n        return this._gutterSize + \" * (\" + this._rowspan + \" - 1)\";\n    };\n    /**\n     * Calculates the total size taken up by tiles across one axis of a list.\n     * @param {?} tileHeight Height of the tile.\n     * @return {?}\n     */\n    TileStyler.prototype.getTileSpan = function (tileHeight) {\n        return this._rowspan + \" * \" + this.getTileSize(tileHeight, 1);\n    };\n    /**\n     * Sets the vertical placement of the tile in the list.\n     * This method will be implemented by each type of TileStyler.\n     * \\@docs-private\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    TileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) { };\n    /**\n     * Calculates the computed height and returns the correct style property to set.\n     * This method will be implemented by each type of TileStyler.\n     * \\@docs-private\n     * @return {?}\n     */\n    TileStyler.prototype.getComputedHeight = function () { return null; };\n    return TileStyler;\n}());\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example <md-grid-list cols=\"3\" rowHeight=\"100px\">\n * \\@docs-private\n */\nvar FixedTileStyler = (function (_super) {\n    __extends(FixedTileStyler, _super);\n    /**\n     * @param {?} fixedRowHeight\n     */\n    function FixedTileStyler(fixedRowHeight) {\n        var _this = _super.call(this) || this;\n        _this.fixedRowHeight = fixedRowHeight;\n        return _this;\n    }\n    /**\n     * @param {?} gutterSize\n     * @param {?} tracker\n     * @param {?} cols\n     * @param {?} direction\n     * @return {?}\n     */\n    FixedTileStyler.prototype.init = function (gutterSize, tracker, cols, direction) {\n        _super.prototype.init.call(this, gutterSize, tracker, cols, direction);\n        this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n    };\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    FixedTileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) {\n        tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n    };\n    /**\n     * @return {?}\n     */\n    FixedTileStyler.prototype.getComputedHeight = function () {\n        return [\n            'height', calc(this.getTileSpan(this.fixedRowHeight) + \" + \" + this.getGutterSpan())\n        ];\n    };\n    return FixedTileStyler;\n}(TileStyler));\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example <md-grid-list cols=\"3\" rowHeight=\"3:1\">\n * \\@docs-private\n */\nvar RatioTileStyler = (function (_super) {\n    __extends(RatioTileStyler, _super);\n    /**\n     * @param {?} value\n     */\n    function RatioTileStyler(value) {\n        var _this = _super.call(this) || this;\n        _this._parseRatio(value);\n        return _this;\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    RatioTileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) {\n        var /** @type {?} */ percentHeightPerTile = percentWidth / this.rowHeightRatio;\n        this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n        // Use paddingTop and marginTop to maintain the given aspect ratio, as\n        // a percentage-based value for these properties is applied versus the *width* of the\n        // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n        tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n        tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n    };\n    /**\n     * @return {?}\n     */\n    RatioTileStyler.prototype.getComputedHeight = function () {\n        return [\n            'paddingBottom', calc(this.getTileSpan(this.baseTileHeight) + \" + \" + this.getGutterSpan())\n        ];\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RatioTileStyler.prototype._parseRatio = function (value) {\n        var /** @type {?} */ ratioParts = value.split(':');\n        if (ratioParts.length !== 2) {\n            throw new MdGridListBadRatioError(value);\n        }\n        this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n    };\n    return RatioTileStyler;\n}(TileStyler));\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example <md-grid-list cols=\"3\" rowHeight=\"fit\">\n *\n * \\@docs-private\n */\nvar FitTileStyler = (function (_super) {\n    __extends(FitTileStyler, _super);\n    function FitTileStyler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    FitTileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) {\n        // Percent of the available vertical space that one row takes up.\n        var /** @type {?} */ percentHeightPerTile = 100 / this._rowspan;\n        // Fraction of the horizontal gutter size that each column takes up.\n        var /** @type {?} */ gutterHeightPerTile = (this._rows - 1) / this._rows;\n        // Base vertical size of a column.\n        var /** @type {?} */ baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n        tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n    };\n    return FitTileStyler;\n}(TileStyler));\n/**\n * Wraps a CSS string in a calc function\n * @param {?} exp\n * @return {?}\n */\nfunction calc(exp) { return \"calc(\" + exp + \")\"; }\n/**\n * Appends pixels to a CSS string if no units are given.\n * @param {?} value\n * @return {?}\n */\nfunction normalizeUnits(value) {\n    return (value.match(/px|em|rem/)) ? value : value + 'px';\n}\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\nvar MD_FIT_MODE = 'fit';\nvar MdGridList = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _element\n     * @param {?} _dir\n     */\n    function MdGridList(_renderer, _element, _dir) {\n        this._renderer = _renderer;\n        this._element = _element;\n        this._dir = _dir;\n        this._gutter = '1px';\n    }\n    Object.defineProperty(MdGridList.prototype, \"cols\", {\n        /**\n         * Amount of columns in the grid list.\n         * @return {?}\n         */\n        get: function () { return this._cols; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._cols = coerceToNumber(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdGridList.prototype, \"gutterSize\", {\n        /**\n         * Size of the grid list's gutter in pixels.\n         * @return {?}\n         */\n        get: function () { return this._gutter; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._gutter = coerceToString(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdGridList.prototype, \"rowHeight\", {\n        /**\n         * Set internal representation of row height from the user-provided value.\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._rowHeight = coerceToString(value);\n            this._setTileStyler();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdGridList.prototype.ngOnInit = function () {\n        this._checkCols();\n        this._checkRowHeight();\n    };\n    /**\n     * The layout calculation is fairly cheap if nothing changes, so there's little cost\n     * to run it frequently.\n     * @return {?}\n     */\n    MdGridList.prototype.ngAfterContentChecked = function () {\n        this._layoutTiles();\n    };\n    /**\n     * Throw a friendly error if cols property is missing\n     * @return {?}\n     */\n    MdGridList.prototype._checkCols = function () {\n        if (!this.cols) {\n            throw new MdGridListColsError();\n        }\n    };\n    /**\n     * Default to equal width:height if rowHeight property is missing\n     * @return {?}\n     */\n    MdGridList.prototype._checkRowHeight = function () {\n        if (!this._rowHeight) {\n            this._tileStyler = new RatioTileStyler('1:1');\n        }\n    };\n    /**\n     * Creates correct Tile Styler subtype based on rowHeight passed in by user\n     * @return {?}\n     */\n    MdGridList.prototype._setTileStyler = function () {\n        if (this._rowHeight === MD_FIT_MODE) {\n            this._tileStyler = new FitTileStyler();\n        }\n        else if (this._rowHeight && this._rowHeight.indexOf(':') > -1) {\n            this._tileStyler = new RatioTileStyler(this._rowHeight);\n        }\n        else {\n            this._tileStyler = new FixedTileStyler(this._rowHeight);\n        }\n    };\n    /**\n     * Computes and applies the size and position for all children grid tiles.\n     * @return {?}\n     */\n    MdGridList.prototype._layoutTiles = function () {\n        var _this = this;\n        var /** @type {?} */ tracker = new TileCoordinator(this.cols, this._tiles);\n        var /** @type {?} */ direction = this._dir ? this._dir.value : 'ltr';\n        this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n        this._tiles.forEach(function (tile, index) {\n            var /** @type {?} */ pos = tracker.positions[index];\n            _this._tileStyler.setStyle(tile, pos.row, pos.col);\n        });\n        this._setListStyle(this._tileStyler.getComputedHeight());\n    };\n    /**\n     * Sets style on the main grid-list element, given the style name and value.\n     * @param {?} style\n     * @return {?}\n     */\n    MdGridList.prototype._setListStyle = function (style$$1) {\n        if (style$$1) {\n            this._renderer.setElementStyle(this._element.nativeElement, style$$1[0], style$$1[1]);\n        }\n    };\n    return MdGridList;\n}());\nMdGridList.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-grid-list, mat-grid-list',\n                template: \"<div> <ng-content></ng-content> </div>\",\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{display:flex;position:absolute;align-items:center;justify-content:center;height:100%;top:0;right:0;bottom:0;left:0;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-footer,.mat-grid-tile .mat-grid-tile-header{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;font-size:16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-footer .mat-line,.mat-grid-tile .mat-grid-tile-header .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile .mat-grid-tile-footer .mat-line:nth-child(n+2),.mat-grid-tile .mat-grid-tile-header .mat-line:nth-child(n+2){font-size:12px}.mat-grid-tile .mat-grid-tile-footer>*,.mat-grid-tile .mat-grid-tile-header>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-tile-footer.mat-2-line,.mat-grid-tile .mat-grid-tile-header.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none} /*# sourceMappingURL=grid-list.css.map */ \"],\n                host: {\n                    'role': 'list',\n                    '[class.mat-grid-list]': 'true',\n                },\n                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None,\n            },] },\n];\n/**\n * @nocollapse\n */\nMdGridList.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: Dir, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] },] },\n]; };\nMdGridList.propDecorators = {\n    '_tiles': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChildren\"], args: [MdGridTile,] },],\n    'cols': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'gutterSize': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'rowHeight': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\nvar MdGridListModule = (function () {\n    function MdGridListModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdGridListModule.forRoot = function () {\n        return {\n            ngModule: MdGridListModule,\n            providers: []\n        };\n    };\n    return MdGridListModule;\n}());\nMdGridListModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [MdLineModule, CompatibilityModule],\n                exports: [\n                    MdGridList,\n                    MdGridTile,\n                    MdGridTileText,\n                    MdLineModule,\n                    CompatibilityModule,\n                    MdGridTileHeaderCssMatStyler,\n                    MdGridTileFooterCssMatStyler,\n                    MdGridAvatarCssMatStyler\n                ],\n                declarations: [\n                    MdGridList,\n                    MdGridTile,\n                    MdGridTileText,\n                    MdGridTileHeaderCssMatStyler,\n                    MdGridTileFooterCssMatStyler,\n                    MdGridAvatarCssMatStyler\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdGridListModule.ctorParameters = function () { return []; };\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MdCardContent = (function () {\n    function MdCardContent() {\n    }\n    return MdCardContent;\n}());\nMdCardContent.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'md-card-content, mat-card-content',\n                host: {\n                    '[class.mat-card-content]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardContent.ctorParameters = function () { return []; };\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MdCardTitle = (function () {\n    function MdCardTitle() {\n    }\n    return MdCardTitle;\n}());\nMdCardTitle.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'md-card-title, mat-card-title',\n                host: {\n                    '[class.mat-card-title]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardTitle.ctorParameters = function () { return []; };\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MdCardSubtitle = (function () {\n    function MdCardSubtitle() {\n    }\n    return MdCardSubtitle;\n}());\nMdCardSubtitle.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'md-card-subtitle, mat-card-subtitle',\n                host: {\n                    '[class.mat-card-subtitle]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardSubtitle.ctorParameters = function () { return []; };\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MdCardActions = (function () {\n    function MdCardActions() {\n    }\n    return MdCardActions;\n}());\nMdCardActions.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'md-card-actions, mat-card-actions',\n                host: {\n                    '[class.mat-card-actions]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardActions.ctorParameters = function () { return []; };\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MdCardFooter = (function () {\n    function MdCardFooter() {\n    }\n    return MdCardFooter;\n}());\nMdCardFooter.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'md-card-footer, mat-card-footer',\n                host: {\n                    '[class.mat-card-footer]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardFooter.ctorParameters = function () { return []; };\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MdCardSmImage = (function () {\n    function MdCardSmImage() {\n    }\n    return MdCardSmImage;\n}());\nMdCardSmImage.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[md-card-sm-image], [mat-card-sm-image]',\n                host: {\n                    '[class.mat-card-sm-image]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardSmImage.ctorParameters = function () { return []; };\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MdCardMdImage = (function () {\n    function MdCardMdImage() {\n    }\n    return MdCardMdImage;\n}());\nMdCardMdImage.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[md-card-md-image], [mat-card-md-image]',\n                host: {\n                    '[class.mat-card-md-image]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardMdImage.ctorParameters = function () { return []; };\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MdCardLgImage = (function () {\n    function MdCardLgImage() {\n    }\n    return MdCardLgImage;\n}());\nMdCardLgImage.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[md-card-lg-image], [mat-card-lg-image]',\n                host: {\n                    'class.mat-card-lg-image': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardLgImage.ctorParameters = function () { return []; };\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MdCardImage = (function () {\n    function MdCardImage() {\n    }\n    return MdCardImage;\n}());\nMdCardImage.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[md-card-image], [mat-card-image]',\n                host: {\n                    '[class.mat-card-image]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardImage.ctorParameters = function () { return []; };\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MdCardXlImage = (function () {\n    function MdCardXlImage() {\n    }\n    return MdCardXlImage;\n}());\nMdCardXlImage.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[md-card-xl-image], [mat-card-xl-image]',\n                host: {\n                    '[class.mat-card-xl-image]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardXlImage.ctorParameters = function () { return []; };\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MdCardAvatar = (function () {\n    function MdCardAvatar() {\n    }\n    return MdCardAvatar;\n}());\nMdCardAvatar.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[md-card-avatar], [mat-card-avatar]',\n                host: {\n                    '[class.mat-card-avatar]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardAvatar.ctorParameters = function () { return []; };\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - md-card-title\n * - md-card-subtitle\n * - md-card-content\n * - md-card-actions\n * - md-card-footer\n */\nvar MdCard = (function () {\n    function MdCard() {\n    }\n    return MdCard;\n}());\nMdCard.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-card, mat-card',\n                template: \"<ng-content></ng-content> \",\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(.4,0,.2,1);will-change:box-shadow;display:block;position:relative;padding:24px;border-radius:2px;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}.mat-card:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}@media screen and (-ms-high-contrast:active){.mat-card{outline:solid 1px}}.mat-card-flat{box-shadow:none}.mat-card-actions,.mat-card-content,.mat-card-subtitle,.mat-card-title{display:block;margin-bottom:16px}.mat-card-title{font-size:24px;font-weight:400}.mat-card-subtitle{font-size:14px}.mat-card-content{font-size:14px}.mat-card-actions{margin-left:-16px;margin-right:-16px;padding:8px 0}.mat-card-actions[align=end]{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 48px);margin:0 -24px 16px -24px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-footer{position:absolute;width:100%;min-height:5px;bottom:0;left:0}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button{margin:0 4px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header-text{margin:0 8px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0}.mat-card-header .mat-card-title{font-size:14px}.mat-card-lg-image,.mat-card-md-image,.mat-card-sm-image{margin:-8px 0}.mat-card-title-group{display:flex;justify-content:space-between;margin:0 -8px}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}@media (max-width:600px){.mat-card{padding:24px 16px}.mat-card-actions{margin-left:-8px;margin-right:-8px}.mat-card-image{width:calc(100% + 32px);margin:16px -16px}.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}.mat-card-header{margin:-8px 0 0 0}}.mat-card-content>:first-child,.mat-card>:first-child{margin-top:0}.mat-card-content>:last-child,.mat-card>:last-child{margin-bottom:0}.mat-card-image:first-child{margin-top:-24px}.mat-card>.mat-card-actions:last-child{margin-bottom:-16px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child{margin-left:0;margin-right:0}.mat-card-subtitle:not(:first-child),.mat-card-title:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px} /*# sourceMappingURL=card.css.map */ \"],\n                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None,\n                changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectionStrategy\"].OnPush,\n                host: {\n                    '[class.mat-card]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCard.ctorParameters = function () { return []; };\n/**\n * Component intended to be used within the `<md-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * \\@docs-private\n */\nvar MdCardHeader = (function () {\n    function MdCardHeader() {\n    }\n    return MdCardHeader;\n}());\nMdCardHeader.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-card-header, mat-card-header',\n                template: \"<ng-content select=\\\"[md-card-avatar], [mat-card-avatar]\\\"></ng-content> <div class=\\\"mat-card-header-text\\\"> <ng-content select=\\\"md-card-title, mat-card-title, md-card-subtitle, mat-card-subtitle\\\"></ng-content> </div> <ng-content></ng-content> \",\n                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None,\n                changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectionStrategy\"].OnPush,\n                host: {\n                    '[class.mat-card-header]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardHeader.ctorParameters = function () { return []; };\n/**\n * Component intended to be used within the <md-card> component. It adds styles for a preset\n * layout that groups an image with a title section.\n * \\@docs-private\n */\nvar MdCardTitleGroup = (function () {\n    function MdCardTitleGroup() {\n    }\n    return MdCardTitleGroup;\n}());\nMdCardTitleGroup.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-card-title-group, mat-card-title-group',\n                template: \"<div> <ng-content select=\\\"md-card-title, mat-card-title, md-card-subtitle, mat-card-subtitle\\\"></ng-content> </div> <ng-content select=\\\"img\\\"></ng-content> <ng-content></ng-content> \",\n                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None,\n                changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectionStrategy\"].OnPush,\n                host: {\n                    '[class.mat-card-title-group]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardTitleGroup.ctorParameters = function () { return []; };\nvar MdCardModule = (function () {\n    function MdCardModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdCardModule.forRoot = function () {\n        return {\n            ngModule: MdCardModule,\n            providers: []\n        };\n    };\n    return MdCardModule;\n}());\nMdCardModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [CompatibilityModule],\n                exports: [\n                    MdCard,\n                    MdCardHeader,\n                    MdCardTitleGroup,\n                    MdCardContent,\n                    MdCardTitle,\n                    MdCardSubtitle,\n                    MdCardActions,\n                    MdCardFooter,\n                    MdCardSmImage,\n                    MdCardMdImage,\n                    MdCardLgImage,\n                    MdCardImage,\n                    MdCardXlImage,\n                    MdCardAvatar,\n                    CompatibilityModule,\n                ],\n                declarations: [\n                    MdCard, MdCardHeader, MdCardTitleGroup, MdCardContent, MdCardTitle, MdCardSubtitle,\n                    MdCardActions, MdCardFooter, MdCardSmImage, MdCardMdImage, MdCardLgImage, MdCardImage,\n                    MdCardXlImage, MdCardAvatar,\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardModule.ctorParameters = function () { return []; };\n/**\n * Material design styled Chip component. Used inside the MdChipList component.\n */\nvar MdChip = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function MdChip(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /** Whether or not the chip is disabled. Disabled chips cannot be focused. */\n        this._disabled = null;\n        /** Whether or not the chip is selected. */\n        this._selected = false;\n        /** The palette color of selected chips. */\n        this._color = 'primary';\n        /** Emitted when the chip is focused. */\n        this.onFocus = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /** Emitted when the chip is selected. */\n        this.select = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /** Emitted when the chip is deselected. */\n        this.deselect = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /** Emitted when the chip is destroyed. */\n        this.destroy = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n    }\n    /**\n     * @return {?}\n     */\n    MdChip.prototype.ngOnInit = function () {\n        this._addDefaultCSSClass();\n        this._updateColor(this._color);\n    };\n    /**\n     * @return {?}\n     */\n    MdChip.prototype.ngOnDestroy = function () {\n        this.destroy.emit({ chip: this });\n    };\n    Object.defineProperty(MdChip.prototype, \"disabled\", {\n        /**\n         * Whether or not the chip is disabled.\n         * @return {?}\n         */\n        get: function () {\n            return this._disabled;\n        },\n        /**\n         * Sets the disabled state of the chip.\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._disabled = coerceBooleanProperty(value) ? true : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdChip.prototype, \"_isAriaDisabled\", {\n        /**\n         * A String representation of the current disabled state.\n         * @return {?}\n         */\n        get: function () {\n            return String(coerceBooleanProperty(this.disabled));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdChip.prototype, \"selected\", {\n        /**\n         * Whether or not this chip is selected.\n         * @return {?}\n         */\n        get: function () {\n            return this._selected;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._selected = coerceBooleanProperty(value);\n            if (this._selected) {\n                this.select.emit({ chip: this });\n            }\n            else {\n                this.deselect.emit({ chip: this });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Toggles the current selected state of this chip.\n     * @return {?} Whether the chip is selected.\n     */\n    MdChip.prototype.toggleSelected = function () {\n        this.selected = !this.selected;\n        return this.selected;\n    };\n    Object.defineProperty(MdChip.prototype, \"color\", {\n        /**\n         * The color of the chip. Can be `primary`, `accent`, or `warn`.\n         * @return {?}\n         */\n        get: function () {\n            return this._color;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._updateColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows for programmatic focusing of the chip.\n     * @return {?}\n     */\n    MdChip.prototype.focus = function () {\n        this._renderer.invokeElementMethod(this._elementRef.nativeElement, 'focus');\n        this.onFocus.emit({ chip: this });\n    };\n    /**\n     * Ensures events fire properly upon click.\n     * @param {?} event\n     * @return {?}\n     */\n    MdChip.prototype._handleClick = function (event) {\n        // Check disabled\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        else {\n            this.focus();\n        }\n    };\n    /**\n     * Initializes the appropriate CSS classes based on the chip type (basic or standard).\n     * @return {?}\n     */\n    MdChip.prototype._addDefaultCSSClass = function () {\n        var /** @type {?} */ el = this._elementRef.nativeElement;\n        // Always add the `mat-chip` class\n        el.classList.add('mat-chip');\n        // If we are a basic chip, also add the `mat-basic-chip` class for :not() targeting\n        if (el.nodeName.toLowerCase() == 'mat-basic-chip' || el.hasAttribute('mat-basic-chip') ||\n            el.nodeName.toLowerCase() == 'md-basic-chip' || el.hasAttribute('md-basic-chip')) {\n            el.classList.add('mat-basic-chip');\n        }\n    };\n    /**\n     * Updates the private _color variable and the native element.\n     * @param {?} newColor\n     * @return {?}\n     */\n    MdChip.prototype._updateColor = function (newColor) {\n        this._setElementColor(this._color, false);\n        this._setElementColor(newColor, true);\n        this._color = newColor;\n    };\n    /**\n     * Sets the mat-color on the native element.\n     * @param {?} color\n     * @param {?} isAdd\n     * @return {?}\n     */\n    MdChip.prototype._setElementColor = function (color, isAdd) {\n        if (color != null && color != '') {\n            this._renderer.setElementClass(this._elementRef.nativeElement, \"mat-\" + color, isAdd);\n        }\n    };\n    return MdChip;\n}());\nMdChip.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{\n                selector: \"md-basic-chip, [md-basic-chip], md-chip, [md-chip],\\n             mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]\",\n                template: \"<ng-content></ng-content>\",\n                host: {\n                    '[class.mat-chip]': 'true',\n                    'tabindex': '-1',\n                    'role': 'option',\n                    '[class.mat-chip-selected]': 'selected',\n                    '[attr.disabled]': 'disabled',\n                    '[attr.aria-disabled]': '_isAriaDisabled',\n                    '(click)': '_handleClick($event)'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdChip.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n]; };\nMdChip.propDecorators = {\n    'select': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    'deselect': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    'destroy': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'selected': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'color': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\n/**\n * A material design chips component (named ChipList for it's similarity to the List component).\n *\n * Example:\n *\n *     <md-chip-list>\n *       <md-chip>Chip 1<md-chip>\n *       <md-chip>Chip 2<md-chip>\n *     </md-chip-list>\n */\nvar MdChipList = (function () {\n    /**\n     * @param {?} _elementRef\n     */\n    function MdChipList(_elementRef) {\n        this._elementRef = _elementRef;\n        this._subscribed = new WeakMap();\n        /** Whether or not the chip is selectable. */\n        this._selectable = true;\n    }\n    /**\n     * @return {?}\n     */\n    MdChipList.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this._keyManager = new FocusKeyManager(this.chips).withWrap();\n        // Go ahead and subscribe all of the initial chips\n        this._subscribeChips(this.chips);\n        // When the list changes, re-subscribe\n        this.chips.changes.subscribe(function (chips) {\n            _this._subscribeChips(chips);\n        });\n    };\n    Object.defineProperty(MdChipList.prototype, \"selectable\", {\n        /**\n         * Whether or not this chip is selectable. When a chip is not selectable,\n         * it's selected state is always ignored.\n         * @return {?}\n         */\n        get: function () {\n            return this._selectable;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._selectable = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Programmatically focus the chip list. This in turn focuses the first\n     * non-disabled chip in this chip list.\n     * @return {?}\n     */\n    MdChipList.prototype.focus = function () {\n        // TODO: ARIA says this should focus the first `selected` chip.\n        this._keyManager.setFirstItemActive();\n    };\n    /**\n     * Passes relevant key presses to our key manager.\n     * @param {?} event\n     * @return {?}\n     */\n    MdChipList.prototype._keydown = function (event) {\n        var /** @type {?} */ target = (event.target);\n        // If they are on a chip, check for space/left/right, otherwise pass to our key manager\n        if (target && target.classList.contains('mat-chip')) {\n            switch (event.keyCode) {\n                case SPACE:\n                    // If we are selectable, toggle the focused chip\n                    if (this.selectable) {\n                        this._toggleSelectOnFocusedChip();\n                    }\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                    break;\n                case LEFT_ARROW:\n                    this._keyManager.setPreviousItemActive();\n                    event.preventDefault();\n                    break;\n                case RIGHT_ARROW:\n                    this._keyManager.setNextItemActive();\n                    event.preventDefault();\n                    break;\n                default:\n                    this._keyManager.onKeydown(event);\n            }\n        }\n    };\n    /**\n     * Toggles the selected state of the currently focused chip.\n     * @return {?}\n     */\n    MdChipList.prototype._toggleSelectOnFocusedChip = function () {\n        // Allow disabling of chip selection\n        if (!this.selectable) {\n            return;\n        }\n        var /** @type {?} */ focusedIndex = this._keyManager.activeItemIndex;\n        if (this._isValidIndex(focusedIndex)) {\n            var /** @type {?} */ focusedChip = this.chips.toArray()[focusedIndex];\n            if (focusedChip) {\n                focusedChip.toggleSelected();\n            }\n        }\n    };\n    /**\n     * Iterate through the list of chips and add them to our list of\n     * subscribed chips.\n     *\n     * @param {?} chips The list of chips to be subscribed.\n     * @return {?}\n     */\n    MdChipList.prototype._subscribeChips = function (chips) {\n        var _this = this;\n        chips.forEach(function (chip) { return _this._addChip(chip); });\n    };\n    /**\n     * Add a specific chip to our subscribed list. If the chip has\n     * already been subscribed, this ensures it is only subscribed\n     * once.\n     *\n     * @param {?} chip The chip to be subscribed (or checked for existing\n     * subscription).\n     * @return {?}\n     */\n    MdChipList.prototype._addChip = function (chip) {\n        var _this = this;\n        // If we've already been subscribed to a parent, do nothing\n        if (this._subscribed.has(chip)) {\n            return;\n        }\n        // Watch for focus events outside of the keyboard navigation\n        chip.onFocus.subscribe(function () {\n            var /** @type {?} */ chipIndex = _this.chips.toArray().indexOf(chip);\n            if (_this._isValidIndex(chipIndex)) {\n                _this._keyManager.updateActiveItemIndex(chipIndex);\n            }\n        });\n        // On destroy, remove the item from our list, and check focus\n        chip.destroy.subscribe(function () {\n            var /** @type {?} */ chipIndex = _this.chips.toArray().indexOf(chip);\n            if (_this._isValidIndex(chipIndex)) {\n                // Check whether the chip is the last item\n                if (chipIndex < _this.chips.length - 1) {\n                    _this._keyManager.setActiveItem(chipIndex);\n                }\n                else if (chipIndex - 1 >= 0) {\n                    _this._keyManager.setActiveItem(chipIndex - 1);\n                }\n            }\n            _this._subscribed.delete(chip);\n            chip.destroy.unsubscribe();\n        });\n        this._subscribed.set(chip, true);\n    };\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of chips.\n     */\n    MdChipList.prototype._isValidIndex = function (index) {\n        return index >= 0 && index < this.chips.length;\n    };\n    return MdChipList;\n}());\nMdChipList.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-chip-list, mat-chip-list',\n                template: \"<div class=\\\"mat-chip-list-wrapper\\\"><ng-content></ng-content></div>\",\n                host: {\n                    // Properties\n                    'tabindex': '0',\n                    'role': 'listbox',\n                    '[class.mat-chip-list]': 'true',\n                    // Events\n                    '(focus)': 'focus()',\n                    '(keydown)': '_keydown($event)'\n                },\n                queries: {\n                    chips: new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChildren\"](MdChip)\n                },\n                styles: [\".mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:flex-start}.mat-chip-list-wrapper .mat-chip:not(.mat-basic-chip){margin:0 3px 0 3px}.mat-chip-list-wrapper .mat-chip:not(.mat-basic-chip):first-child{margin-left:0;margin-right:3px}[dir=rtl] .mat-chip-list-wrapper .mat-chip:not(.mat-basic-chip):first-child{margin-left:3px;margin-right:0}.mat-chip-list-wrapper .mat-chip:not(.mat-basic-chip):last-child{margin-left:3px;margin-right:0}[dir=rtl] .mat-chip-list-wrapper .mat-chip:not(.mat-basic-chip):last-child{margin-left:0;margin-right:3px}.mat-chip:not(.mat-basic-chip){display:inline-block;padding:8px 12px 8px 12px;border-radius:24px;font-size:13px;line-height:16px}.mat-chip-list-stacked .mat-chip-list-wrapper{display:block}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-chip:not(.mat-basic-chip){display:block;margin:0;margin-bottom:8px}[dir=rtl] .mat-chip-list-stacked .mat-chip-list-wrapper .mat-chip:not(.mat-basic-chip){margin:0;margin-bottom:8px}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-chip:not(.mat-basic-chip):last-child,[dir=rtl] .mat-chip-list-stacked .mat-chip-list-wrapper .mat-chip:not(.mat-basic-chip):last-child{margin-bottom:0} /*# sourceMappingURL=chips.css.map */ \"],\n                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None,\n                changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectionStrategy\"].OnPush\n            },] },\n];\n/**\n * @nocollapse\n */\nMdChipList.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n]; };\nMdChipList.propDecorators = {\n    'selectable': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\nvar MdChipsModule = (function () {\n    function MdChipsModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdChipsModule.forRoot = function () {\n        return {\n            ngModule: MdChipsModule,\n            providers: []\n        };\n    };\n    return MdChipsModule;\n}());\nMdChipsModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [],\n                exports: [MdChipList, MdChip],\n                declarations: [MdChipList, MdChip]\n            },] },\n];\n/**\n * @nocollapse\n */\nMdChipsModule.ctorParameters = function () { return []; };\n/**\n * Exception thrown when attempting to load an icon with a name that cannot be found.\n * \\@docs-private\n */\nvar MdIconNameNotFoundError = (function (_super) {\n    __extends(MdIconNameNotFoundError, _super);\n    /**\n     * @param {?} iconName\n     */\n    function MdIconNameNotFoundError(iconName) {\n        return _super.call(this, \"Unable to find icon with the name \\\"\" + iconName + \"\\\"\") || this;\n    }\n    return MdIconNameNotFoundError;\n}(MdError));\n/**\n * Exception thrown when attempting to load SVG content that does not contain the expected\n * <svg> tag.\n * \\@docs-private\n */\nvar MdIconSvgTagNotFoundError = (function (_super) {\n    __extends(MdIconSvgTagNotFoundError, _super);\n    function MdIconSvgTagNotFoundError() {\n        return _super.call(this, '<svg> tag not found') || this;\n    }\n    return MdIconSvgTagNotFoundError;\n}(MdError));\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * \\@docs-private\n */\nvar SvgIconConfig = (function () {\n    /**\n     * @param {?} url\n     */\n    function SvgIconConfig(url) {\n        this.url = url;\n        this.svgElement = null;\n    }\n    return SvgIconConfig;\n}());\n/** Returns the cache key to use for an icon namespace and name. */\nvar iconKey = function (namespace, name) { return namespace + ':' + name; };\n/**\n * Service to register and display icons used by the <md-icon> component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nvar MdIconRegistry = (function () {\n    /**\n     * @param {?} _http\n     * @param {?} _sanitizer\n     */\n    function MdIconRegistry(_http, _sanitizer) {\n        this._http = _http;\n        this._sanitizer = _sanitizer;\n        this._svgIconConfigs = new Map();\n        this._iconSetConfigs = new Map();\n        this._cachedIconsByUrl = new Map();\n        this._inProgressUrlFetches = new Map();\n        this._fontCssClassesByAlias = new Map();\n        this._defaultFontSetClass = 'material-icons';\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @return {?}\n     */\n    MdIconRegistry.prototype.addSvgIcon = function (iconName, url) {\n        return this.addSvgIconInNamespace('', iconName, url);\n    };\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @return {?}\n     */\n    MdIconRegistry.prototype.addSvgIconInNamespace = function (namespace, iconName, url) {\n        var /** @type {?} */ key = iconKey(namespace, iconName);\n        this._svgIconConfigs.set(key, new SvgIconConfig(url));\n        return this;\n    };\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @param {?} url\n     * @return {?}\n     */\n    MdIconRegistry.prototype.addSvgIconSet = function (url) {\n        return this.addSvgIconSetInNamespace('', url);\n    };\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} url\n     * @return {?}\n     */\n    MdIconRegistry.prototype.addSvgIconSetInNamespace = function (namespace, url) {\n        var /** @type {?} */ config = new SvgIconConfig(url);\n        if (this._iconSetConfigs.has(namespace)) {\n            this._iconSetConfigs.get(namespace).push(config);\n        }\n        else {\n            this._iconSetConfigs.set(namespace, [config]);\n        }\n        return this;\n    };\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an mdIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the <md-icon> element.\n     *\n     * @param {?} alias Alias for the font.\n     * @param {?=} className Class name override to be used instead of the alias.\n     * @return {?}\n     */\n    MdIconRegistry.prototype.registerFontClassAlias = function (alias, className) {\n        if (className === void 0) { className = alias; }\n        this._fontCssClassesByAlias.set(alias, className);\n        return this;\n    };\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     * @param {?} alias\n     * @return {?}\n     */\n    MdIconRegistry.prototype.classNameForFontAlias = function (alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    };\n    /**\n     * Sets the CSS class name to be used for icon fonts when an <md-icon> component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @param {?} className\n     * @return {?}\n     */\n    MdIconRegistry.prototype.setDefaultFontSetClass = function (className) {\n        this._defaultFontSetClass = className;\n        return this;\n    };\n    /**\n     * Returns the CSS class name to be used for icon fonts when an <md-icon> component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     * @return {?}\n     */\n    MdIconRegistry.prototype.getDefaultFontSetClass = function () {\n        return this._defaultFontSetClass;\n    };\n    /**\n     * Returns an Observable that produces the icon (as an <svg> DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param {?} safeUrl URL from which to fetch the SVG icon.\n     * @return {?}\n     */\n    MdIconRegistry.prototype.getSvgIconFromUrl = function (safeUrl) {\n        var _this = this;\n        var /** @type {?} */ url = this._sanitizer.sanitize(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"SecurityContext\"].RESOURCE_URL, safeUrl);\n        if (this._cachedIconsByUrl.has(url)) {\n            return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__[\"Observable\"].of(cloneSvg(this._cachedIconsByUrl.get(url)));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(url))\n            .do(function (svg) { return _this._cachedIconsByUrl.set(url, svg); })\n            .map(function (svg) { return cloneSvg(svg); });\n    };\n    /**\n     * Returns an Observable that produces the icon (as an <svg> DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an MdIconNameNotFoundError.\n     *\n     * @param {?} name Name of the icon to be retrieved.\n     * @param {?=} namespace Namespace in which to look for the icon.\n     * @return {?}\n     */\n    MdIconRegistry.prototype.getNamedSvgIcon = function (name, namespace) {\n        if (namespace === void 0) { namespace = ''; }\n        // Return (copy of) cached icon if possible.\n        var /** @type {?} */ key = iconKey(namespace, name);\n        if (this._svgIconConfigs.has(key)) {\n            return this._getSvgFromConfig(this._svgIconConfigs.get(key));\n        }\n        // See if we have any icon sets registered for the namespace.\n        var /** @type {?} */ iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__[\"Observable\"].throw(new MdIconNameNotFoundError(key));\n    };\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     * @param {?} config\n     * @return {?}\n     */\n    MdIconRegistry.prototype._getSvgFromConfig = function (config) {\n        if (config.svgElement) {\n            // We already have the SVG element for this icon, return a copy.\n            return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__[\"Observable\"].of(cloneSvg(config.svgElement));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config)\n                .do(function (svg) { return config.svgElement = svg; })\n                .map(function (svg) { return cloneSvg(svg); });\n        }\n    };\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new <svg> element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * MdIconNameNotFoundError if no icon with the specified name can be found.\n     * @param {?} name\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    MdIconRegistry.prototype._getSvgFromIconSetConfigs = function (name, iconSetConfigs) {\n        var _this = this;\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        var /** @type {?} */ namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__[\"Observable\"].of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        var /** @type {?} */ iconSetFetchRequests = iconSetConfigs\n            .filter(function (iconSetConfig) { return !iconSetConfig.svgElement; })\n            .map(function (iconSetConfig) { return _this._loadSvgIconSetFromConfig(iconSetConfig)\n            .catch(function (err, caught) {\n            var /** @type {?} */ url = _this._sanitizer.sanitize(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"SecurityContext\"].RESOURCE_URL, iconSetConfig.url);\n            // Swallow errors fetching individual URLs so the combined Observable won't\n            // necessarily fail.\n            console.log(\"Loading icon set URL: \" + url + \" failed: \" + err);\n            return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__[\"Observable\"].of(null);\n        })\n            .do(function (svg) {\n            // Cache SVG element.\n            if (svg) {\n                iconSetConfig.svgElement = svg;\n            }\n        }); });\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__[\"Observable\"].forkJoin(iconSetFetchRequests)\n            .map(function (ignoredResults) {\n            var /** @type {?} */ foundIcon = _this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            if (!foundIcon) {\n                throw new MdIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        });\n    };\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @param {?} iconName\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    MdIconRegistry.prototype._extractIconWithNameFromAnySet = function (iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (var /** @type {?} */ i = iconSetConfigs.length - 1; i >= 0; i--) {\n            var /** @type {?} */ config = iconSetConfigs[i];\n            if (config.svgElement) {\n                var /** @type {?} */ foundIcon = this._extractSvgIconFromSet(config.svgElement, iconName);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    };\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @param {?} config\n     * @return {?}\n     */\n    MdIconRegistry.prototype._loadSvgIconFromConfig = function (config) {\n        var _this = this;\n        return this._fetchUrl(config.url)\n            .map(function (svgText) { return _this._createSvgElementForSingleIcon(svgText); });\n    };\n    /**\n     * Loads the content of the icon set URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @param {?} config\n     * @return {?}\n     */\n    MdIconRegistry.prototype._loadSvgIconSetFromConfig = function (config) {\n        var _this = this;\n        // TODO: Document that icons should only be loaded from trusted sources.\n        return this._fetchUrl(config.url)\n            .map(function (svgText) { return _this._svgElementFromString(svgText); });\n    };\n    /**\n     * Creates a DOM element from the given SVG string, and adds default attributes.\n     * @param {?} responseText\n     * @return {?}\n     */\n    MdIconRegistry.prototype._createSvgElementForSingleIcon = function (responseText) {\n        var /** @type {?} */ svg = this._svgElementFromString(responseText);\n        this._setSvgAttributes(svg);\n        return svg;\n    };\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @param {?} iconSet\n     * @param {?} iconName\n     * @return {?}\n     */\n    MdIconRegistry.prototype._extractSvgIconFromSet = function (iconSet, iconName) {\n        var /** @type {?} */ iconNode = iconSet.querySelector('#' + iconName);\n        if (!iconNode) {\n            return null;\n        }\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconNode.tagName.toLowerCase() == 'svg') {\n            return this._setSvgAttributes(/** @type {?} */ (iconNode.cloneNode(true)));\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        var /** @type {?} */ svg = this._svgElementFromString('<svg></svg>');\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconNode.cloneNode(true));\n        return this._setSvgAttributes(svg);\n    };\n    /**\n     * Creates a DOM element from the given SVG string.\n     * @param {?} str\n     * @return {?}\n     */\n    MdIconRegistry.prototype._svgElementFromString = function (str) {\n        // TODO: Is there a better way than innerHTML? Renderer doesn't appear to have a method for\n        // creating an element from an HTML string.\n        var /** @type {?} */ div = document.createElement('DIV');\n        div.innerHTML = str;\n        var /** @type {?} */ svg = (div.querySelector('svg'));\n        if (!svg) {\n            throw new MdIconSvgTagNotFoundError();\n        }\n        return svg;\n    };\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     * @param {?} svg\n     * @return {?}\n     */\n    MdIconRegistry.prototype._setSvgAttributes = function (svg) {\n        if (!svg.getAttribute('xmlns')) {\n            svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n        }\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        return svg;\n    };\n    /**\n     * Returns an Observable which produces the string contents of the given URL. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     * @param {?} safeUrl\n     * @return {?}\n     */\n    MdIconRegistry.prototype._fetchUrl = function (safeUrl) {\n        var _this = this;\n        var /** @type {?} */ url = this._sanitizer.sanitize(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"SecurityContext\"].RESOURCE_URL, safeUrl);\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        if (this._inProgressUrlFetches.has(url)) {\n            return this._inProgressUrlFetches.get(url);\n        }\n        // TODO(jelbourn): for some reason, the `finally` operator \"loses\" the generic type on the\n        // Observable. Figure out why and fix it.\n        var /** @type {?} */ req = (this._http.get(url)\n            .map(function (response) { return response.text(); })\n            .finally(function () {\n            _this._inProgressUrlFetches.delete(url);\n        })\n            .share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    };\n    return MdIconRegistry;\n}());\nMdIconRegistry.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nMdIconRegistry.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_12__angular_http__[\"Http\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__[\"DomSanitizer\"], },\n]; };\n/**\n * Clones an SVGElement while preserving type information.\n * @param {?} svg\n * @return {?}\n */\nfunction cloneSvg(svg) {\n    return (svg.cloneNode(true));\n}\n/**\n * Exception thrown when an invalid icon name is passed to an md-icon component.\n */\nvar MdIconInvalidNameError = (function (_super) {\n    __extends(MdIconInvalidNameError, _super);\n    /**\n     * @param {?} iconName\n     */\n    function MdIconInvalidNameError(iconName) {\n        return _super.call(this, \"Invalid icon name: \\\"\" + iconName + \"\\\"\") || this;\n    }\n    return MdIconInvalidNameError;\n}(MdError));\n/**\n * Component to display an icon. It can be used in the following ways:\n * - Specify the svgSrc input to load an SVG icon from a URL. The SVG content is directly inlined\n *   as a child of the <md-icon> component, so that CSS styles can easily be applied to it.\n *   The URL is loaded via an XMLHttpRequest, so it must be on the same domain as the page or its\n *   server must be configured to allow cross-domain requests.\n *   Example:\n *     <md-icon svgSrc=\"assets/arrow.svg\"></md-icon>\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MdIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     <md-icon svgIcon=\"left-arrow\"></md-icon>\n *     <md-icon svgIcon=\"animals:cat\"></md-icon>\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the <md-icon>\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MdIconRegistry.registerFontClassAlias.\n *   Examples:\n *     <md-icon>home</md-icon>\n *     <md-icon fontSet=\"myfont\">sun</md-icon>\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     <md-icon fontSet=\"fa\" fontIcon=\"alarm\"></md-icon>\n */\nvar MdIcon = (function () {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _renderer\n     * @param {?} _mdIconRegistry\n     */\n    function MdIcon(_elementRef, _renderer, _mdIconRegistry) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._mdIconRegistry = _mdIconRegistry;\n        /** Screenreader label for the icon. */\n        this.hostAriaLabel = '';\n    }\n    Object.defineProperty(MdIcon.prototype, \"color\", {\n        /**\n         * Color of the icon.\n         * @return {?}\n         */\n        get: function () { return this._color; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._updateColor(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} newColor\n     * @return {?}\n     */\n    MdIcon.prototype._updateColor = function (newColor) {\n        this._setElementColor(this._color, false);\n        this._setElementColor(newColor, true);\n        this._color = newColor;\n    };\n    /**\n     * @param {?} color\n     * @param {?} isAdd\n     * @return {?}\n     */\n    MdIcon.prototype._setElementColor = function (color, isAdd) {\n        if (color != null && color != '') {\n            this._renderer.setElementClass(this._elementRef.nativeElement, \"mat-\" + color, isAdd);\n        }\n    };\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws a MdIconInvalidNameError if the name contains two or more ':' separators.\n     * Examples:\n     *   'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws MdIconInvalidNameError)\n     * @param {?} iconName\n     * @return {?}\n     */\n    MdIcon.prototype._splitIconName = function (iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        var /** @type {?} */ parts = iconName.split(':');\n        switch (parts.length) {\n            case 1:\n                // Use default namespace.\n                return ['', parts[0]];\n            case 2:\n                return (parts);\n            default:\n                throw new MdIconInvalidNameError(iconName);\n        }\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MdIcon.prototype.ngOnChanges = function (changes) {\n        var _this = this;\n        var /** @type {?} */ changedInputs = Object.keys(changes);\n        // Only update the inline SVG icon if the inputs changed, to avoid unnecessary DOM operations.\n        if (changedInputs.indexOf('svgIcon') != -1 || changedInputs.indexOf('svgSrc') != -1) {\n            if (this.svgIcon) {\n                var _a = this._splitIconName(this.svgIcon), namespace = _a[0], iconName = _a[1];\n                this._mdIconRegistry.getNamedSvgIcon(iconName, namespace).first().subscribe(function (svg) { return _this._setSvgElement(svg); }, function (err) { return console.log(\"Error retrieving icon: \" + err.message); });\n            }\n        }\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n        this._updateAriaLabel();\n    };\n    /**\n     * @return {?}\n     */\n    MdIcon.prototype.ngOnInit = function () {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <md-icon>arrow</md-icon>. In this case we need to add a CSS class for the default font.\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdIcon.prototype.ngAfterViewChecked = function () {\n        // Update aria label here because it may depend on the projected text content.\n        // (e.g. <md-icon>home</md-icon> should use 'home').\n        this._updateAriaLabel();\n    };\n    /**\n     * @return {?}\n     */\n    MdIcon.prototype._updateAriaLabel = function () {\n        var /** @type {?} */ ariaLabel = this._getAriaLabel();\n        if (ariaLabel && ariaLabel !== this._previousAriaLabel) {\n            this._previousAriaLabel = ariaLabel;\n            this._renderer.setElementAttribute(this._elementRef.nativeElement, 'aria-label', ariaLabel);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdIcon.prototype._getAriaLabel = function () {\n        // If the parent provided an aria-label attribute value, use it as-is. Otherwise look for a\n        // reasonable value from the alt attribute, font icon name, SVG icon name, or (for ligatures)\n        // the text content of the directive.\n        var /** @type {?} */ label = this.hostAriaLabel ||\n            this.alt ||\n            this.fontIcon ||\n            this._splitIconName(this.svgIcon)[1];\n        if (label) {\n            return label;\n        }\n        // The \"content\" of an SVG icon is not a useful label.\n        if (this._usingFontIcon()) {\n            var /** @type {?} */ text = this._elementRef.nativeElement.textContent;\n            if (text) {\n                return text;\n            }\n        }\n        // TODO: Warn here in dev mode.\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    MdIcon.prototype._usingFontIcon = function () {\n        return !this.svgIcon;\n    };\n    /**\n     * @param {?} svg\n     * @return {?}\n     */\n    MdIcon.prototype._setSvgElement = function (svg) {\n        var /** @type {?} */ layoutElement = this._elementRef.nativeElement;\n        // Remove existing child nodes and add the new SVG element.\n        // We would use renderer.detachView(Array.from(layoutElement.childNodes)) here,\n        // but it fails in IE11: https://github.com/angular/angular/issues/6327\n        layoutElement.innerHTML = '';\n        this._renderer.projectNodes(layoutElement, [svg]);\n    };\n    /**\n     * @return {?}\n     */\n    MdIcon.prototype._updateFontIconClasses = function () {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        var /** @type {?} */ elem = this._elementRef.nativeElement;\n        var /** @type {?} */ fontSetClass = this.fontSet ?\n            this._mdIconRegistry.classNameForFontAlias(this.fontSet) :\n            this._mdIconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                this._renderer.setElementClass(elem, this._previousFontSetClass, false);\n            }\n            if (fontSetClass) {\n                this._renderer.setElementClass(elem, fontSetClass, true);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                this._renderer.setElementClass(elem, this._previousFontIconClass, false);\n            }\n            if (this.fontIcon) {\n                this._renderer.setElementClass(elem, this.fontIcon, true);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    };\n    return MdIcon;\n}());\nMdIcon.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ template: '<ng-content></ng-content>',\n                selector: 'md-icon, mat-icon',\n                styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px} /*# sourceMappingURL=icon.css.map */ \"],\n                host: {\n                    'role': 'img',\n                    '[class.mat-icon]': 'true',\n                },\n                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None,\n                changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectionStrategy\"].OnPush,\n            },] },\n];\n/**\n * @nocollapse\n */\nMdIcon.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: MdIconRegistry, },\n]; };\nMdIcon.propDecorators = {\n    'svgIcon': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'fontSet': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'fontIcon': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'alt': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'hostAriaLabel': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['aria-label',] },],\n    'color': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\n/**\n * @param {?} parentRegistry\n * @param {?} http\n * @param {?} sanitizer\n * @return {?}\n */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, http, sanitizer) {\n    return parentRegistry || new MdIconRegistry(http, sanitizer);\n}\nvar ICON_REGISTRY_PROVIDER = {\n    // If there is already an MdIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MdIconRegistry,\n    deps: [[new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"](), new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"SkipSelf\"](), MdIconRegistry], __WEBPACK_IMPORTED_MODULE_12__angular_http__[\"Http\"], __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__[\"DomSanitizer\"]],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\nvar MdIconModule = (function () {\n    function MdIconModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdIconModule.forRoot = function () {\n        return {\n            ngModule: MdIconModule,\n            providers: [],\n        };\n    };\n    return MdIconModule;\n}());\nMdIconModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [__WEBPACK_IMPORTED_MODULE_12__angular_http__[\"HttpModule\"], CompatibilityModule],\n                exports: [MdIcon, CompatibilityModule],\n                declarations: [MdIcon],\n                providers: [ICON_REGISTRY_PROVIDER],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdIconModule.ctorParameters = function () { return []; };\n// TODO(josephperrott): Benchpress tests.\n/** A single degree in radians. */\nvar DEGREE_IN_RADIANS = Math.PI / 180;\n/** Duration of the indeterminate animation. */\nvar DURATION_INDETERMINATE = 667;\n/** Duration of the indeterminate animation. */\nvar DURATION_DETERMINATE = 225;\n/** Start animation value of the indeterminate animation */\nvar startIndeterminate = 3;\n/** End animation value of the indeterminate animation */\nvar endIndeterminate = 80;\n/* Maximum angle for the arc. The angle can't be exactly 360, because the arc becomes hidden. */\nvar MAX_ANGLE = 359.99 / 100;\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdProgressSpinnerCssMatStyler = (function () {\n    function MdProgressSpinnerCssMatStyler() {\n    }\n    return MdProgressSpinnerCssMatStyler;\n}());\nMdProgressSpinnerCssMatStyler.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'md-progress-spinner, mat-progress-spinner',\n                host: {\n                    '[class.mat-progress-spinner]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdProgressSpinnerCssMatStyler.ctorParameters = function () { return []; };\n/**\n * <md-progress-spinner> component.\n */\nvar MdProgressSpinner = (function () {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _elementRef\n     * @param {?} _renderer\n     */\n    function MdProgressSpinner(_ngZone, _elementRef, _renderer) {\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._lastAnimationId = 0;\n        this._mode = 'determinate';\n        this._color = 'primary';\n    }\n    Object.defineProperty(MdProgressSpinner.prototype, \"_ariaValueMin\", {\n        /**\n         * Values for aria max and min are only defined as numbers when in a determinate mode.  We do this\n         * because voiceover does not report the progress indicator as indeterminate if the aria min\n         * and/or max value are number values.\n         * @return {?}\n         */\n        get: function () {\n            return this.mode == 'determinate' ? 0 : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdProgressSpinner.prototype, \"_ariaValueMax\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.mode == 'determinate' ? 100 : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdProgressSpinner.prototype, \"interdeterminateInterval\", {\n        /**\n         * \\@docs-private\n         * @return {?}\n         */\n        get: function () {\n            return this._interdeterminateInterval;\n        },\n        /**\n         * \\@docs-private\n         * @param {?} interval\n         * @return {?}\n         */\n        set: function (interval) {\n            clearInterval(this._interdeterminateInterval);\n            this._interdeterminateInterval = interval;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clean up any animations that were running.\n     * @return {?}\n     */\n    MdProgressSpinner.prototype.ngOnDestroy = function () {\n        this._cleanupIndeterminateAnimation();\n    };\n    Object.defineProperty(MdProgressSpinner.prototype, \"color\", {\n        /**\n         * The color of the progress-spinner. Can be primary, accent, or warn.\n         * @return {?}\n         */\n        get: function () { return this._color; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._updateColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdProgressSpinner.prototype, \"value\", {\n        /**\n         * Value of the progress circle. It is bound to the host as the attribute aria-valuenow.\n         * @return {?}\n         */\n        get: function () {\n            if (this.mode == 'determinate') {\n                return this._value;\n            }\n        },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) {\n            if (v != null && this.mode == 'determinate') {\n                var /** @type {?} */ newValue = clamp(v);\n                this._animateCircle(this.value || 0, newValue);\n                this._value = newValue;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdProgressSpinner.prototype, \"mode\", {\n        /**\n         * Mode of the progress circle\n         *\n         * Input must be one of the values from ProgressMode, defaults to 'determinate'.\n         * mode is bound to the host as the attribute host.\n         * @return {?}\n         */\n        get: function () {\n            return this._mode;\n        },\n        /**\n         * @param {?} mode\n         * @return {?}\n         */\n        set: function (mode) {\n            if (mode !== this._mode) {\n                if (mode === 'indeterminate') {\n                    this._startIndeterminateAnimation();\n                }\n                else {\n                    this._cleanupIndeterminateAnimation();\n                    this._animateCircle(0, this._value);\n                }\n                this._mode = mode;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Animates the circle from one percentage value to another.\n     *\n     * @param {?} animateFrom The percentage of the circle filled starting the animation.\n     * @param {?} animateTo The percentage of the circle filled ending the animation.\n     * @param {?=} ease The easing function to manage the pace of change in the animation.\n     * @param {?=} duration The length of time to show the animation, in milliseconds.\n     * @param {?=} rotation The starting angle of the circle fill, with 0° represented at the top center\n     *    of the circle.\n     * @return {?}\n     */\n    MdProgressSpinner.prototype._animateCircle = function (animateFrom, animateTo, ease, duration, rotation) {\n        var _this = this;\n        if (ease === void 0) { ease = linearEase; }\n        if (duration === void 0) { duration = DURATION_DETERMINATE; }\n        if (rotation === void 0) { rotation = 0; }\n        var /** @type {?} */ id = ++this._lastAnimationId;\n        var /** @type {?} */ startTime = Date.now();\n        var /** @type {?} */ changeInValue = animateTo - animateFrom;\n        // No need to animate it if the values are the same\n        if (animateTo === animateFrom) {\n            this._renderArc(animateTo, rotation);\n        }\n        else {\n            var /** @type {?} */ animation_1 = function () {\n                var /** @type {?} */ elapsedTime = Math.max(0, Math.min(Date.now() - startTime, duration));\n                _this._renderArc(ease(elapsedTime, animateFrom, changeInValue, duration), rotation);\n                // Prevent overlapping animations by checking if a new animation has been called for and\n                // if the animation has lasted longer than the animation duration.\n                if (id === _this._lastAnimationId && elapsedTime < duration) {\n                    requestAnimationFrame(animation_1);\n                }\n            };\n            // Run the animation outside of Angular's zone, in order to avoid\n            // hitting ZoneJS and change detection on each frame.\n            this._ngZone.runOutsideAngular(animation_1);\n        }\n    };\n    /**\n     * Starts the indeterminate animation interval, if it is not already running.\n     * @return {?}\n     */\n    MdProgressSpinner.prototype._startIndeterminateAnimation = function () {\n        var _this = this;\n        var /** @type {?} */ rotationStartPoint = 0;\n        var /** @type {?} */ start = startIndeterminate;\n        var /** @type {?} */ end = endIndeterminate;\n        var /** @type {?} */ duration = DURATION_INDETERMINATE;\n        var /** @type {?} */ animate$$1 = function () {\n            _this._animateCircle(start, end, materialEase, duration, rotationStartPoint);\n            // Prevent rotation from reaching Number.MAX_SAFE_INTEGER.\n            rotationStartPoint = (rotationStartPoint + end) % 100;\n            var /** @type {?} */ temp = start;\n            start = -end;\n            end = -temp;\n        };\n        if (!this.interdeterminateInterval) {\n            this._ngZone.runOutsideAngular(function () {\n                _this.interdeterminateInterval = setInterval(animate$$1, duration + 50, 0, false);\n                animate$$1();\n            });\n        }\n    };\n    /**\n     * Removes interval, ending the animation.\n     * @return {?}\n     */\n    MdProgressSpinner.prototype._cleanupIndeterminateAnimation = function () {\n        this.interdeterminateInterval = null;\n    };\n    /**\n     * Renders the arc onto the SVG element. Proxies `getArc` while setting the proper\n     * DOM attribute on the `<path>`.\n     * @param {?} currentValue\n     * @param {?=} rotation\n     * @return {?}\n     */\n    MdProgressSpinner.prototype._renderArc = function (currentValue, rotation) {\n        if (rotation === void 0) { rotation = 0; }\n        // Caches the path reference so it doesn't have to be looked up every time.\n        var /** @type {?} */ path = this._path = this._path || this._elementRef.nativeElement.querySelector('path');\n        // Ensure that the path was found. This may not be the case if the\n        // animation function fires too early.\n        if (path) {\n            path.setAttribute('d', getSvgArc(currentValue, rotation));\n        }\n    };\n    /**\n     * Updates the color of the progress-spinner by adding the new palette class to the element\n     * and removing the old one.\n     * @param {?} newColor\n     * @return {?}\n     */\n    MdProgressSpinner.prototype._updateColor = function (newColor) {\n        this._setElementColor(this._color, false);\n        this._setElementColor(newColor, true);\n        this._color = newColor;\n    };\n    /**\n     * Sets the given palette class on the component element.\n     * @param {?} color\n     * @param {?} isAdd\n     * @return {?}\n     */\n    MdProgressSpinner.prototype._setElementColor = function (color, isAdd) {\n        if (color != null && color != '') {\n            this._renderer.setElementClass(this._elementRef.nativeElement, \"mat-\" + color, isAdd);\n        }\n    };\n    return MdProgressSpinner;\n}());\nMdProgressSpinner.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-progress-spinner, mat-progress-spinner',\n                host: {\n                    'role': 'progressbar',\n                    '[attr.aria-valuemin]': '_ariaValueMin',\n                    '[attr.aria-valuemax]': '_ariaValueMax'\n                },\n                template: \"<!-- preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's center. The center of the circle will remain at the center of the md-progress-spinner element containing the SVG. --> <svg viewBox=\\\"0 0 100 100\\\" preserveAspectRatio=\\\"xMidYMid meet\\\"> <path></path> </svg> \",\n                styles: [\":host{display:block;height:100px;width:100px;overflow:hidden}:host svg{height:100%;width:100%;transform-origin:center}:host path{fill:transparent;stroke-width:10px;transition:stroke .3s cubic-bezier(.35,0,.25,1)}:host[mode=indeterminate] svg{animation-duration:5.25s,2.887s;animation-name:mat-progress-spinner-sporadic-rotate,mat-progress-spinner-linear-rotate;animation-timing-function:cubic-bezier(.35,0,.25,1),linear;animation-iteration-count:infinite;transition:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-sporadic-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}} /*# sourceMappingURL=progress-spinner.css.map */ \"],\n                changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectionStrategy\"].OnPush,\n            },] },\n];\n/**\n * @nocollapse\n */\nMdProgressSpinner.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n]; };\nMdProgressSpinner.propDecorators = {\n    'color': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'value': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"HostBinding\"], args: ['attr.aria-valuenow',] },],\n    'mode': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"HostBinding\"], args: ['attr.mode',] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\n/**\n * <md-spinner> component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate <md-progress-spinner> instance.\n */\nvar MdSpinner = (function (_super) {\n    __extends(MdSpinner, _super);\n    /**\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} renderer\n     */\n    function MdSpinner(elementRef, ngZone, renderer) {\n        var _this = _super.call(this, ngZone, elementRef, renderer) || this;\n        _this.mode = 'indeterminate';\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    MdSpinner.prototype.ngOnDestroy = function () {\n        // The `ngOnDestroy` from `MdProgressSpinner` should be called explicitly, because\n        // in certain cases Angular won't call it (e.g. when using AoT and in unit tests).\n        _super.prototype.ngOnDestroy.call(this);\n    };\n    return MdSpinner;\n}(MdProgressSpinner));\nMdSpinner.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-spinner, mat-spinner',\n                host: {\n                    'role': 'progressbar',\n                    'mode': 'indeterminate',\n                    '[class.mat-spinner]': 'true',\n                },\n                template: \"<!-- preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's center. The center of the circle will remain at the center of the md-progress-spinner element containing the SVG. --> <svg viewBox=\\\"0 0 100 100\\\" preserveAspectRatio=\\\"xMidYMid meet\\\"> <path></path> </svg> \",\n                styles: [\":host{display:block;height:100px;width:100px;overflow:hidden}:host svg{height:100%;width:100%;transform-origin:center}:host path{fill:transparent;stroke-width:10px;transition:stroke .3s cubic-bezier(.35,0,.25,1)}:host[mode=indeterminate] svg{animation-duration:5.25s,2.887s;animation-name:mat-progress-spinner-sporadic-rotate,mat-progress-spinner-linear-rotate;animation-timing-function:cubic-bezier(.35,0,.25,1),linear;animation-iteration-count:infinite;transition:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-sporadic-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}} /*# sourceMappingURL=progress-spinner.css.map */ \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSpinner.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n]; };\n/**\n * Clamps a value to be between 0 and 100.\n * @param {?} v\n * @return {?}\n */\nfunction clamp(v) {\n    return Math.max(0, Math.min(100, v));\n}\n/**\n * Converts Polar coordinates to Cartesian.\n * @param {?} radius\n * @param {?} pathRadius\n * @param {?} angleInDegrees\n * @return {?}\n */\nfunction polarToCartesian(radius, pathRadius, angleInDegrees) {\n    var /** @type {?} */ angleInRadians = (angleInDegrees - 90) * DEGREE_IN_RADIANS;\n    return (radius + (pathRadius * Math.cos(angleInRadians))) +\n        ',' + (radius + (pathRadius * Math.sin(angleInRadians)));\n}\n/**\n * Easing function for linear animation.\n * @param {?} currentTime\n * @param {?} startValue\n * @param {?} changeInValue\n * @param {?} duration\n * @return {?}\n */\nfunction linearEase(currentTime, startValue, changeInValue, duration) {\n    return changeInValue * currentTime / duration + startValue;\n}\n/**\n * Easing function to match material design indeterminate animation.\n * @param {?} currentTime\n * @param {?} startValue\n * @param {?} changeInValue\n * @param {?} duration\n * @return {?}\n */\nfunction materialEase(currentTime, startValue, changeInValue, duration) {\n    var /** @type {?} */ time = currentTime / duration;\n    var /** @type {?} */ timeCubed = Math.pow(time, 3);\n    var /** @type {?} */ timeQuad = Math.pow(time, 4);\n    var /** @type {?} */ timeQuint = Math.pow(time, 5);\n    return startValue + changeInValue * ((6 * timeQuint) + (-15 * timeQuad) + (10 * timeCubed));\n}\n/**\n * Determines the path value to define the arc.  Converting percentage values to to polar\n * coordinates on the circle, and then to cartesian coordinates in the viewport.\n *\n * @param {?} currentValue The current percentage value of the progress circle, the percentage of the\n *    circle to fill.\n * @param {?} rotation The starting point of the circle with 0 being the 0 degree point.\n * @return {?} A string for an SVG path representing a circle filled from the starting point to the\n *    percentage value provided.\n */\nfunction getSvgArc(currentValue, rotation) {\n    var /** @type {?} */ startPoint = rotation || 0;\n    var /** @type {?} */ radius = 50;\n    var /** @type {?} */ pathRadius = 40;\n    var /** @type {?} */ startAngle = startPoint * MAX_ANGLE;\n    var /** @type {?} */ endAngle = currentValue * MAX_ANGLE;\n    var /** @type {?} */ start = polarToCartesian(radius, pathRadius, startAngle);\n    var /** @type {?} */ end = polarToCartesian(radius, pathRadius, endAngle + startAngle);\n    var /** @type {?} */ arcSweep = endAngle < 0 ? 0 : 1;\n    var /** @type {?} */ largeArcFlag;\n    if (endAngle < 0) {\n        largeArcFlag = endAngle >= -180 ? 0 : 1;\n    }\n    else {\n        largeArcFlag = endAngle <= 180 ? 0 : 1;\n    }\n    return \"M\" + start + \"A\" + pathRadius + \",\" + pathRadius + \" 0 \" + largeArcFlag + \",\" + arcSweep + \" \" + end;\n}\nvar MdProgressSpinnerModule = (function () {\n    function MdProgressSpinnerModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdProgressSpinnerModule.forRoot = function () {\n        return {\n            ngModule: MdProgressSpinnerModule,\n            providers: []\n        };\n    };\n    return MdProgressSpinnerModule;\n}());\nMdProgressSpinnerModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [CompatibilityModule],\n                exports: [\n                    MdProgressSpinner,\n                    MdSpinner,\n                    CompatibilityModule,\n                    MdProgressSpinnerCssMatStyler\n                ],\n                declarations: [\n                    MdProgressSpinner,\n                    MdSpinner,\n                    MdProgressSpinnerCssMatStyler\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdProgressSpinnerModule.ctorParameters = function () { return []; };\n/**\n * <md-progress-bar> component.\n */\nvar MdProgressBar = (function () {\n    function MdProgressBar() {\n        /** Color of the progress bar. */\n        this.color = 'primary';\n        this._value = 0;\n        this._bufferValue = 0;\n        /**\n         * Mode of the progress bar.\n         *\n         * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n         * 'determinate'.\n         * Mirrored to mode attribute.\n         */\n        this.mode = 'determinate';\n    }\n    Object.defineProperty(MdProgressBar.prototype, \"value\", {\n        /**\n         * Value of the progressbar. Defaults to zero. Mirrored to aria-valuenow.\n         * @return {?}\n         */\n        get: function () { return this._value; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this._value = clamp$1(v || 0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdProgressBar.prototype, \"bufferValue\", {\n        /**\n         * Buffer value of the progress bar. Defaults to zero.\n         * @return {?}\n         */\n        get: function () { return this._bufferValue; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this._bufferValue = clamp$1(v || 0); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the current transform value for the progress bar's primary indicator.\n     * @return {?}\n     */\n    MdProgressBar.prototype._primaryTransform = function () {\n        var /** @type {?} */ scale = this.value / 100;\n        return { transform: \"scaleX(\" + scale + \")\" };\n    };\n    /**\n     * Gets the current transform value for the progress bar's buffer indicator.  Only used if the\n     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n     * @return {?}\n     */\n    MdProgressBar.prototype._bufferTransform = function () {\n        if (this.mode == 'buffer') {\n            var /** @type {?} */ scale = this.bufferValue / 100;\n            return { transform: \"scaleX(\" + scale + \")\" };\n        }\n    };\n    return MdProgressBar;\n}());\nMdProgressBar.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-progress-bar, mat-progress-bar',\n                host: {\n                    'role': 'progressbar',\n                    'aria-valuemin': '0',\n                    'aria-valuemax': '100',\n                    '[class.mat-primary]': 'color == \"primary\"',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.mat-progress-bar]': 'true',\n                },\n                template: \"<!-- The background div is named as such because it appears below the other divs and is not sized based on values. --> <div class=\\\"mat-progress-bar-background mat-progress-bar-element\\\"></div> <div class=\\\"mat-progress-bar-buffer mat-progress-bar-element\\\" [ngStyle]=\\\"_bufferTransform()\\\"></div> <div class=\\\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\\\" [ngStyle]=\\\"_primaryTransform()\\\"></div> <div class=\\\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\\\"></div> \",\n                styles: [\":host{display:block;height:5px;overflow:hidden;position:relative;transform:translateZ(0);transition:opacity 250ms linear;width:100%}:host .mat-progress-bar-element,:host .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}:host .mat-progress-bar-background{background-repeat:repeat-x;background-size:10px 4px;display:none}:host .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease,stroke .3s cubic-bezier(.35,0,.25,1)}:host .mat-progress-bar-secondary{display:none}:host .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease,stroke .3s cubic-bezier(.35,0,.25,1)}:host .mat-progress-bar-fill::after{animation:none;content:'';display:inline-block;left:0}:host[mode=query]{transform:rotateZ(180deg)}:host[mode=indeterminate] .mat-progress-bar-fill,:host[mode=query] .mat-progress-bar-fill{transition:none}:host[mode=indeterminate] .mat-progress-bar-primary,:host[mode=query] .mat-progress-bar-primary{animation:mat-progress-bar-primary-indeterminate-translate 2s infinite linear;left:-145.166611%}:host[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,:host[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{animation:mat-progress-bar-primary-indeterminate-scale 2s infinite linear}:host[mode=indeterminate] .mat-progress-bar-secondary,:host[mode=query] .mat-progress-bar-secondary{animation:mat-progress-bar-secondary-indeterminate-translate 2s infinite linear;left:-54.888891%;display:block}:host[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,:host[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{animation:mat-progress-bar-secondary-indeterminate-scale 2s infinite linear}:host[mode=buffer] .mat-progress-bar-background{animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}:host-context([dir=rtl]){transform:rotateY(180deg)}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(.5,0,.70173,.49582);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(.30244,.38135,.55,.95635);transform:translateX(83.67142%)}100%{transform:translateX(200.61106%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(.08)}36.65%{animation-timing-function:cubic-bezier(.33473,.12482,.78584,1);transform:scaleX(.08)}69.15%{animation-timing-function:cubic-bezier(.06,.11,.6,1);transform:scaleX(.66148)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:translateX(37.65191%)}48.35%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:translateX(84.38617%)}100%{transform:translateX(160.27778%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:scaleX(.08)}19.15%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:scaleX(.4571)}44.15%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:scaleX(.72796)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-10px)}} /*# sourceMappingURL=progress-bar.css.map */ \"],\n                changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectionStrategy\"].OnPush,\n            },] },\n];\n/**\n * @nocollapse\n */\nMdProgressBar.ctorParameters = function () { return []; };\nMdProgressBar.propDecorators = {\n    'color': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'value': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"HostBinding\"], args: ['attr.aria-valuenow',] },],\n    'bufferValue': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'mode': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"HostBinding\"], args: ['attr.mode',] },],\n};\n/**\n * Clamps a value to be between two numbers, by default 0 and 100.\n * @param {?} v\n * @param {?=} min\n * @param {?=} max\n * @return {?}\n */\nfunction clamp$1(v, min, max) {\n    if (min === void 0) { min = 0; }\n    if (max === void 0) { max = 100; }\n    return Math.max(min, Math.min(max, v));\n}\nvar MdProgressBarModule = (function () {\n    function MdProgressBarModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdProgressBarModule.forRoot = function () {\n        return {\n            ngModule: MdProgressBarModule,\n            providers: []\n        };\n    };\n    return MdProgressBarModule;\n}());\nMdProgressBarModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [__WEBPACK_IMPORTED_MODULE_2__angular_common__[\"CommonModule\"], CompatibilityModule],\n                exports: [MdProgressBar, CompatibilityModule],\n                declarations: [MdProgressBar],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdProgressBarModule.ctorParameters = function () { return []; };\n/**\n * \\@docs-private\n */\nvar MdInputContainerPlaceholderConflictError = (function (_super) {\n    __extends(MdInputContainerPlaceholderConflictError, _super);\n    function MdInputContainerPlaceholderConflictError() {\n        return _super.call(this, 'Placeholder attribute and child element were both specified.') || this;\n    }\n    return MdInputContainerPlaceholderConflictError;\n}(MdError));\n/**\n * \\@docs-private\n */\nvar MdInputContainerUnsupportedTypeError = (function (_super) {\n    __extends(MdInputContainerUnsupportedTypeError, _super);\n    /**\n     * @param {?} type\n     */\n    function MdInputContainerUnsupportedTypeError(type) {\n        return _super.call(this, \"Input type \\\"\" + type + \"\\\" isn't supported by md-input-container.\") || this;\n    }\n    return MdInputContainerUnsupportedTypeError;\n}(MdError));\n/**\n * \\@docs-private\n */\nvar MdInputContainerDuplicatedHintError = (function (_super) {\n    __extends(MdInputContainerDuplicatedHintError, _super);\n    /**\n     * @param {?} align\n     */\n    function MdInputContainerDuplicatedHintError(align) {\n        return _super.call(this, \"A hint was already declared for 'align=\\\"\" + align + \"\\\"'.\") || this;\n    }\n    return MdInputContainerDuplicatedHintError;\n}(MdError));\n/**\n * \\@docs-private\n */\nvar MdInputContainerMissingMdInputError = (function (_super) {\n    __extends(MdInputContainerMissingMdInputError, _super);\n    function MdInputContainerMissingMdInputError() {\n        return _super.call(this, 'md-input-container must contain an mdInput directive. Did you forget to add mdInput ' +\n            'to the native input or textarea element?') || this;\n    }\n    return MdInputContainerMissingMdInputError;\n}(MdError));\n// Invalid input type. Using one of these will throw an MdInputContainerUnsupportedTypeError.\nvar MD_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'color',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\nvar nextUniqueId$1 = 0;\n/**\n * The placeholder directive. The content can declare this to implement more\n * complex placeholders.\n */\nvar MdPlaceholder = (function () {\n    function MdPlaceholder() {\n    }\n    return MdPlaceholder;\n}());\nMdPlaceholder.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'md-placeholder, mat-placeholder'\n            },] },\n];\n/**\n * @nocollapse\n */\nMdPlaceholder.ctorParameters = function () { return []; };\n/**\n * The hint directive, used to tag content as hint labels (going under the input).\n */\nvar MdHint = (function () {\n    function MdHint() {\n        // Whether to align the hint label at the start or end of the line.\n        this.align = 'start';\n        // Unique ID for the hint. Used for the aria-describedby on the input.\n        this.id = \"md-input-hint-\" + nextUniqueId$1++;\n    }\n    return MdHint;\n}());\nMdHint.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'md-hint, mat-hint',\n                host: {\n                    '[class.mat-hint]': 'true',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdHint.ctorParameters = function () { return []; };\nMdHint.propDecorators = {\n    'align': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'id': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\n/**\n * Directive, used to display a single error message under the input.\n */\nvar MdErrorDirective = (function () {\n    function MdErrorDirective() {\n    }\n    return MdErrorDirective;\n}());\nMdErrorDirective.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'md-error, mat-error',\n                host: {\n                    '[class.mat-input-error]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdErrorDirective.ctorParameters = function () { return []; };\n/**\n * The input prefix.\n */\nvar MdPrefix = (function () {\n    function MdPrefix() {\n    }\n    return MdPrefix;\n}());\nMdPrefix.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[mdPrefix], [matPrefix], [md-prefix]'\n            },] },\n];\n/**\n * @nocollapse\n */\nMdPrefix.ctorParameters = function () { return []; };\n/**\n * The input suffix.\n */\nvar MdSuffix = (function () {\n    function MdSuffix() {\n    }\n    return MdSuffix;\n}());\nMdSuffix.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[mdSuffix], [matSuffix], [md-suffix]'\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSuffix.ctorParameters = function () { return []; };\n/**\n * The input directive, used to mark the input that `MdInputContainer` is wrapping.\n */\nvar MdInputDirective = (function () {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _renderer\n     * @param {?} _ngControl\n     */\n    function MdInputDirective(_elementRef, _renderer, _ngControl) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._ngControl = _ngControl;\n        this._type = 'text';\n        this._placeholder = '';\n        this._disabled = false;\n        this._required = false;\n        /** Whether the element is focused or not. */\n        this.focused = false;\n        /**\n         * Emits an event when the placeholder changes so that the `md-input-container` can re-validate.\n         */\n        this._placeholderChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter(function (t) { return getSupportedInputTypes().has(t); });\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n    Object.defineProperty(MdInputDirective.prototype, \"disabled\", {\n        /**\n         * Whether the element is disabled.\n         * @return {?}\n         */\n        get: function () {\n            return this._ngControl ? this._ngControl.disabled : this._disabled;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._disabled = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInputDirective.prototype, \"id\", {\n        /**\n         * Unique id of the element.\n         * @return {?}\n         */\n        get: function () { return this._id; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._id = value || this._uid; },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    Object.defineProperty(MdInputDirective.prototype, \"placeholder\", {\n        /**\n         * Placeholder attribute of the element.\n         * @return {?}\n         */\n        get: function () { return this._placeholder; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._placeholder !== value) {\n                this._placeholder = value;\n                this._placeholderChange.emit(this._placeholder);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInputDirective.prototype, \"required\", {\n        /**\n         * Whether the element is required.\n         * @return {?}\n         */\n        get: function () { return this._required; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._required = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInputDirective.prototype, \"type\", {\n        /**\n         * Input type of the element.\n         * @return {?}\n         */\n        get: function () { return this._type; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._type = value || 'text';\n            this._validateType();\n            // When using Angular inputs, developers are no longer able to set the properties on the native\n            // input element. To ensure that bindings for `type` work, we need to sync the setter\n            // with the native property. Textarea elements don't support the type property or attribute.\n            if (!this._isTextarea() && getSupportedInputTypes().has(this._type)) {\n                this._renderer.setElementProperty(this._elementRef.nativeElement, 'type', this._type);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInputDirective.prototype, \"value\", {\n        /**\n         * The input element's value.\n         * @return {?}\n         */\n        get: function () { return this._elementRef.nativeElement.value; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._elementRef.nativeElement.value = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInputDirective.prototype, \"empty\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return !this._isNeverEmpty() &&\n                (this.value == null || this.value === '') &&\n                // Check if the input contains bad input. If so, we know that it only appears empty because\n                // the value failed to parse. From the user's perspective it is not empty.\n                // TODO(mmalerba): Add e2e test for bad input case.\n                !this._isBadInput();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInputDirective.prototype, \"_uid\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cachedUid = this._cachedUid || \"md-input-\" + nextUniqueId$1++; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Focuses the input element.\n     * @return {?}\n     */\n    MdInputDirective.prototype.focus = function () { this._renderer.invokeElementMethod(this._elementRef.nativeElement, 'focus'); };\n    /**\n     * @return {?}\n     */\n    MdInputDirective.prototype._onFocus = function () { this.focused = true; };\n    /**\n     * @return {?}\n     */\n    MdInputDirective.prototype._onBlur = function () { this.focused = false; };\n    /**\n     * @return {?}\n     */\n    MdInputDirective.prototype._onInput = function () {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    };\n    /**\n     * Make sure the input is a supported type.\n     * @return {?}\n     */\n    MdInputDirective.prototype._validateType = function () {\n        if (MD_INPUT_INVALID_TYPES.indexOf(this._type) !== -1) {\n            throw new MdInputContainerUnsupportedTypeError(this._type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdInputDirective.prototype._isNeverEmpty = function () { return this._neverEmptyInputTypes.indexOf(this._type) !== -1; };\n    /**\n     * @return {?}\n     */\n    MdInputDirective.prototype._isBadInput = function () {\n        return ((this._elementRef.nativeElement)).validity.badInput;\n    };\n    /**\n     * Determines if the component host is a textarea. If not recognizable it returns false.\n     * @return {?}\n     */\n    MdInputDirective.prototype._isTextarea = function () {\n        var /** @type {?} */ nativeElement = this._elementRef.nativeElement;\n        return nativeElement ? nativeElement.nodeName.toLowerCase() === 'textarea' : false;\n    };\n    return MdInputDirective;\n}());\nMdInputDirective.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: \"input[mdInput], textarea[mdInput], input[matInput], textarea[matInput]\",\n                host: {\n                    '[class.mat-input-element]': 'true',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[id]': 'id',\n                    '[placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.aria-describedby]': 'ariaDescribedby || null',\n                    '(blur)': '_onBlur()',\n                    '(focus)': '_onFocus()',\n                    '(input)': '_onInput()',\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdInputDirective.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_8__angular_forms__[\"NgControl\"], decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Self\"] },] },\n]; };\nMdInputDirective.propDecorators = {\n    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'id': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'placeholder': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'required': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'type': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    '_placeholderChange': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n};\n/**\n * Component that represents a text input. It encapsulates the <input> HTMLElement and\n * improve on its behaviour, along with styling it according to the Material Design.\n */\nvar MdInputContainer = (function () {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     */\n    function MdInputContainer(_changeDetectorRef, _parentForm, _parentFormGroup) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        /** Alignment of the input container's content. */\n        this.align = 'start';\n        /** Color of the input divider, based on the theme. */\n        this.color = 'primary';\n        /** State of the md-hint and md-error animations. */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = \"md-input-hint-\" + nextUniqueId$1++;\n        this._floatPlaceholder = 'auto';\n    }\n    Object.defineProperty(MdInputContainer.prototype, \"dividerColor\", {\n        /**\n         * @deprecated Use color instead.\n         * @return {?}\n         */\n        get: function () { return this.color; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this.color = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInputContainer.prototype, \"_shouldAlwaysFloat\", {\n        /**\n         * Whether the floating label should always float or not.\n         * @return {?}\n         */\n        get: function () { return this._floatPlaceholder === 'always'; },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    Object.defineProperty(MdInputContainer.prototype, \"_canPlaceholderFloat\", {\n        /**\n         * Whether the placeholder can float or not.\n         * @return {?}\n         */\n        get: function () { return this._floatPlaceholder !== 'never'; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInputContainer.prototype, \"hintLabel\", {\n        /**\n         * Text for the input hint.\n         * @return {?}\n         */\n        get: function () { return this._hintLabel; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._hintLabel = value;\n            this._processHints();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInputContainer.prototype, \"floatPlaceholder\", {\n        /**\n         * Whether the placeholder should always float, never float or float as the user types.\n         * @return {?}\n         */\n        get: function () { return this._floatPlaceholder; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._floatPlaceholder = value || 'auto';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdInputContainer.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        if (!this._mdInputChild) {\n            throw new MdInputContainerMissingMdInputError();\n        }\n        this._processHints();\n        this._validatePlaceholders();\n        // Re-validate when things change.\n        this._hintChildren.changes.subscribe(function () { return _this._processHints(); });\n        this._mdInputChild._placeholderChange.subscribe(function () { return _this._validatePlaceholders(); });\n    };\n    /**\n     * @return {?}\n     */\n    MdInputContainer.prototype.ngAfterViewInit = function () {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    };\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    MdInputContainer.prototype._shouldForward = function (prop) {\n        var /** @type {?} */ control = this._mdInputChild ? this._mdInputChild._ngControl : null;\n        return control && ((control))[prop];\n    };\n    /**\n     * Whether the input has a placeholder.\n     * @return {?}\n     */\n    MdInputContainer.prototype._hasPlaceholder = function () { return !!(this._mdInputChild.placeholder || this._placeholderChild); };\n    /**\n     * Focuses the underlying input.\n     * @return {?}\n     */\n    MdInputContainer.prototype._focusInput = function () { this._mdInputChild.focus(); };\n    /**\n     * Whether the input container is in an error state.\n     * @return {?}\n     */\n    MdInputContainer.prototype._isErrorState = function () {\n        var /** @type {?} */ control = this._mdInputChild._ngControl;\n        var /** @type {?} */ isInvalid = control && control.invalid;\n        var /** @type {?} */ isTouched = control && control.touched;\n        var /** @type {?} */ isSubmitted = (this._parentFormGroup && this._parentFormGroup.submitted) ||\n            (this._parentForm && this._parentForm.submitted);\n        return !!(isInvalid && (isTouched || isSubmitted));\n    };\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    MdInputContainer.prototype._getDisplayedMessages = function () {\n        return (this._errorChildren.length > 0 && this._isErrorState()) ? 'error' : 'hint';\n    };\n    /**\n     * Ensure that there is only one placeholder (either `input` attribute or child element with the\n     * `md-placeholder` attribute.\n     * @return {?}\n     */\n    MdInputContainer.prototype._validatePlaceholders = function () {\n        if (this._mdInputChild.placeholder && this._placeholderChild) {\n            throw new MdInputContainerPlaceholderConflictError();\n        }\n    };\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @return {?}\n     */\n    MdInputContainer.prototype._processHints = function () {\n        this._validateHints();\n        this._syncAriaDescribedby();\n    };\n    /**\n     * Ensure that there is a maximum of one of each `<md-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @return {?}\n     */\n    MdInputContainer.prototype._validateHints = function () {\n        var _this = this;\n        if (this._hintChildren) {\n            var /** @type {?} */ startHint_1 = null;\n            var /** @type {?} */ endHint_1 = null;\n            this._hintChildren.forEach(function (hint) {\n                if (hint.align == 'start') {\n                    if (startHint_1 || _this.hintLabel) {\n                        throw new MdInputContainerDuplicatedHintError('start');\n                    }\n                    startHint_1 = hint;\n                }\n                else if (hint.align == 'end') {\n                    if (endHint_1) {\n                        throw new MdInputContainerDuplicatedHintError('end');\n                    }\n                    endHint_1 = hint;\n                }\n            });\n        }\n    };\n    /**\n     * Sets the child input's `aria-describedby` to a space-separated list of the ids\n     * of the currently-specified hints, as well as a generated id for the hint label.\n     * @return {?}\n     */\n    MdInputContainer.prototype._syncAriaDescribedby = function () {\n        var /** @type {?} */ ids = [];\n        var /** @type {?} */ startHint = this._hintChildren ?\n            this._hintChildren.find(function (hint) { return hint.align === 'start'; }) : null;\n        var /** @type {?} */ endHint = this._hintChildren ?\n            this._hintChildren.find(function (hint) { return hint.align === 'end'; }) : null;\n        if (startHint) {\n            ids.push(startHint.id);\n        }\n        else if (this._hintLabel) {\n            ids.push(this._hintLabelId);\n        }\n        if (endHint) {\n            ids.push(endHint.id);\n        }\n        this._mdInputChild.ariaDescribedby = ids.join(' ');\n    };\n    return MdInputContainer;\n}());\nMdInputContainer.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-input-container, mat-input-container',\n                template: \"<div class=\\\"mat-input-wrapper\\\"> <div class=\\\"mat-input-table\\\"> <div class=\\\"mat-input-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\"> <!-- TODO(andrewseguin): remove [md-prefix] --> <ng-content select=\\\"[mdPrefix], [matPrefix], [md-prefix]\\\"></ng-content> </div> <div class=\\\"mat-input-infix\\\" [class.mat-end]=\\\"align == 'end'\\\"> <ng-content selector=\\\"input, textarea\\\"></ng-content> <span class=\\\"mat-input-placeholder-wrapper\\\"> <label class=\\\"mat-input-placeholder\\\" [attr.for]=\\\"_mdInputChild.id\\\" [class.mat-empty]=\\\"_mdInputChild.empty && !_shouldAlwaysFloat\\\" [class.mat-float]=\\\"_canPlaceholderFloat\\\" [class.mat-accent]=\\\"color == 'accent'\\\" [class.mat-warn]=\\\"color == 'warn'\\\" *ngIf=\\\"_hasPlaceholder()\\\"> <ng-content select=\\\"md-placeholder, mat-placeholder\\\"></ng-content> {{_mdInputChild.placeholder}} <span class=\\\"mat-placeholder-required\\\" *ngIf=\\\"_mdInputChild.required\\\">*</span> </label> </span> </div> <div class=\\\"mat-input-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\"> <!-- TODO(andrewseguin): remove [md-suffix] --> <ng-content select=\\\"[mdSuffix], [matSuffix], [md-suffix]\\\"></ng-content> </div> </div> <div class=\\\"mat-input-underline\\\" [class.mat-disabled]=\\\"_mdInputChild.disabled\\\"> <span class=\\\"mat-input-ripple\\\" [class.mat-accent]=\\\"color == 'accent'\\\" [class.mat-warn]=\\\"color == 'warn'\\\"></span> </div> <div class=\\\"mat-input-subscript-wrapper\\\" [ngSwitch]=\\\"_getDisplayedMessages()\\\"> <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\"> <ng-content select=\\\"md-error, mat-error\\\"></ng-content> </div> <div class=\\\"mat-input-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\"> <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div> <ng-content select=\\\"md-hint, mat-hint\\\"></ng-content> </div> </div> </div> \",\n                styles: [\".mat-input-container{display:inline-block;position:relative;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;line-height:normal;text-align:left}[dir=rtl] .mat-input-container{text-align:right}.mat-input-container .mat-icon{width:auto;height:auto;font-size:100%;vertical-align:top}.mat-input-wrapper{margin:1em 0;padding-bottom:6px}.mat-input-table{display:inline-table;flex-flow:column;vertical-align:bottom;width:100%}.mat-input-table>*{display:table-cell}.mat-input-infix{position:relative}.mat-input-element{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;width:100%;vertical-align:bottom}.mat-end .mat-input-element{text-align:right}[dir=rtl] .mat-end .mat-input-element{text-align:left}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element:-webkit-autofill+.mat-input-placeholder-wrapper .mat-float{display:block;transform:translateY(-1.35em) scale(.75);width:133.33333%;transition:none}.mat-input-element::placeholder{color:transparent}.mat-input-element::-moz-placeholder{color:transparent}.mat-input-element::-webkit-input-placeholder{color:transparent}.mat-input-element:-ms-input-placeholder{color:transparent}.mat-input-placeholder{position:absolute;left:0;top:0;font-size:100%;pointer-events:none;z-index:1;padding-top:1em;width:100%;display:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform:translateY(0);transform-origin:bottom left;transition:transform .4s cubic-bezier(.25,.8,.25,1),color .4s cubic-bezier(.25,.8,.25,1),width .4s cubic-bezier(.25,.8,.25,1)}.mat-input-placeholder.mat-empty{display:block;cursor:text}.mat-focused .mat-input-placeholder.mat-float,.mat-input-placeholder.mat-float:not(.mat-empty){display:block;transform:translateY(-1.35em) scale(.75);width:133.33333%}[dir=rtl] .mat-input-placeholder{transform-origin:bottom right;left:auto;right:0}.mat-input-placeholder:not(.mat-empty){transition:none}.mat-input-placeholder-wrapper{position:absolute;left:0;top:-1em;width:100%;padding-top:1em;overflow:hidden;pointer-events:none;transform:translate3d(0,0,0)}.mat-input-placeholder-wrapper::after{content:'';display:inline-table}.mat-input-underline{position:absolute;height:1px;width:100%;margin-top:4px;border-top-width:1px;border-top-style:solid}.mat-input-underline.mat-disabled{background-image:linear-gradient(to right,rgba(0,0,0,.26) 0,rgba(0,0,0,.26) 33%,transparent 0);background-size:4px 1px;background-repeat:repeat-x;border-top:0;background-position:0}.mat-input-underline .mat-input-ripple{position:absolute;height:2px;z-index:1;top:-1px;width:100%;transform-origin:top;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-focused .mat-input-underline .mat-input-ripple{opacity:1}.mat-input-subscript-wrapper{position:absolute;font-size:75%;top:100%;width:100%;margin-top:-1em;overflow:hidden}.mat-input-hint-wrapper::after,.mat-input-hint-wrapper::before{content:' ';display:table}.mat-input-hint-wrapper::after{clear:both}.mat-hint{display:block;float:left}.mat-hint.mat-right{float:right}[dir=rtl] .mat-hint{float:right}[dir=rtl] .mat-hint.mat-right{float:left}.mat-input-error{display:block}.mat-input-prefix,.mat-input-suffix{width:.1px;white-space:nowrap} /*# sourceMappingURL=input-container.css.map */ \"],\n                animations: [\n                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"i\" /* trigger */])('transitionMessages', [\n                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"j\" /* state */])('enter', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({ opacity: 1, transform: 'translateY(0%)' })),\n                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"k\" /* transition */])('void => enter', [\n                            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({ opacity: 0, transform: 'translateY(-100%)' }),\n                            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"l\" /* animate */])('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n                        ])\n                    ])\n                ],\n                host: {\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null',\n                    '[class.mat-input-container]': 'true',\n                    '[class.mat-input-invalid]': '_isErrorState()',\n                    '[class.mat-focused]': '_mdInputChild.focused',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '(click)': '_focusInput()',\n                },\n                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None,\n            },] },\n];\n/**\n * @nocollapse\n */\nMdInputContainer.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectorRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_8__angular_forms__[\"NgForm\"], decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] },] },\n    { type: __WEBPACK_IMPORTED_MODULE_8__angular_forms__[\"FormGroupDirective\"], decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] },] },\n]; };\nMdInputContainer.propDecorators = {\n    'align': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'color': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'dividerColor': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'hintLabel': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'floatPlaceholder': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    '_mdInputChild': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChild\"], args: [MdInputDirective,] },],\n    '_placeholderChild': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChild\"], args: [MdPlaceholder,] },],\n    '_errorChildren': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChildren\"], args: [MdErrorDirective,] },],\n    '_hintChildren': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChildren\"], args: [MdHint,] },],\n    '_prefixChildren': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChildren\"], args: [MdPrefix,] },],\n    '_suffixChildren': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChildren\"], args: [MdSuffix,] },],\n};\n/**\n * Directive to automatically resize a textarea to fit its content.\n */\nvar MdTextareaAutosize = (function () {\n    /**\n     * @param {?} _elementRef\n     */\n    function MdTextareaAutosize(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    Object.defineProperty(MdTextareaAutosize.prototype, \"mdAutosizeMinRows\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.minRows;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this.minRows = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTextareaAutosize.prototype, \"mdAutosizeMaxRows\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.maxRows;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this.maxRows = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTextareaAutosize.prototype, \"_minHeight\", {\n        /**\n         * The minimum height of the textarea as determined by minRows.\n         * @return {?}\n         */\n        get: function () {\n            return this.minRows ? this.minRows * this._cachedLineHeight + \"px\" : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTextareaAutosize.prototype, \"_maxHeight\", {\n        /**\n         * The maximum height of the textarea as determined by maxRows.\n         * @return {?}\n         */\n        get: function () {\n            return this.maxRows ? this.maxRows * this._cachedLineHeight + \"px\" : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdTextareaAutosize.prototype.ngOnInit = function () {\n        this._cacheTextareaLineHeight();\n        this.resizeToFitContent();\n    };\n    /**\n     * Cache the height of a single-row textarea.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     * @return {?}\n     */\n    MdTextareaAutosize.prototype._cacheTextareaLineHeight = function () {\n        var /** @type {?} */ textarea = (this._elementRef.nativeElement);\n        // Use a clone element because we have to override some styles.\n        var /** @type {?} */ textareaClone = (textarea.cloneNode(false));\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        textarea.parentNode.appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.offsetHeight;\n        textarea.parentNode.removeChild(textareaClone);\n    };\n    /**\n     * Resize the textarea to fit its content.\n     * @return {?}\n     */\n    MdTextareaAutosize.prototype.resizeToFitContent = function () {\n        var /** @type {?} */ textarea = (this._elementRef.nativeElement);\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        textarea.style.height = 'auto';\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = textarea.scrollHeight + \"px\";\n    };\n    return MdTextareaAutosize;\n}());\nMdTextareaAutosize.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'textarea[md-autosize], textarea[mdTextareaAutosize],' +\n                    'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'mdTextareaAutosize',\n                host: {\n                    '(input)': 'resizeToFitContent()',\n                    '[style.min-height]': '_minHeight',\n                    '[style.max-height]': '_maxHeight',\n                },\n            },] },\n];\n/**\n * @nocollapse\n */\nMdTextareaAutosize.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n]; };\nMdTextareaAutosize.propDecorators = {\n    'minRows': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'mdAutosizeMinRows': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'maxRows': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'mdAutosizeMaxRows': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\nvar MdInputModule = (function () {\n    function MdInputModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdInputModule.forRoot = function () {\n        return {\n            ngModule: MdInputModule,\n            providers: [],\n        };\n    };\n    return MdInputModule;\n}());\nMdInputModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                declarations: [\n                    MdErrorDirective,\n                    MdHint,\n                    MdInputContainer,\n                    MdInputDirective,\n                    MdPlaceholder,\n                    MdPrefix,\n                    MdSuffix,\n                    MdTextareaAutosize,\n                ],\n                imports: [\n                    __WEBPACK_IMPORTED_MODULE_2__angular_common__[\"CommonModule\"],\n                    __WEBPACK_IMPORTED_MODULE_8__angular_forms__[\"FormsModule\"],\n                    PlatformModule,\n                ],\n                exports: [\n                    MdErrorDirective,\n                    MdHint,\n                    MdInputContainer,\n                    MdInputDirective,\n                    MdPlaceholder,\n                    MdPrefix,\n                    MdSuffix,\n                    MdTextareaAutosize,\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdInputModule.ctorParameters = function () { return []; };\n/**\n * Configuration used when opening a snack-bar.\n */\nvar MdSnackBarConfig = (function () {\n    function MdSnackBarConfig() {\n        /** The politeness level for the MdAriaLiveAnnouncer announcement. */\n        this.politeness = 'assertive';\n        /** Message to be announced by the MdAriaLiveAnnouncer */\n        this.announcementMessage = '';\n        /** The view container to place the overlay for the snack bar into. */\n        this.viewContainerRef = null;\n        /** The length of time in milliseconds to wait before automatically dismissing the snack bar. */\n        this.duration = 0;\n    }\n    return MdSnackBarConfig;\n}());\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n */\nvar MdSnackBarRef = (function () {\n    /**\n     * @param {?} instance\n     * @param {?} containerInstance\n     * @param {?} _overlayRef\n     */\n    function MdSnackBarRef(instance, containerInstance, _overlayRef) {\n        var _this = this;\n        this._overlayRef = _overlayRef;\n        this._afterClosed = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__[\"Subject\"]();\n        this._onAction = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__[\"Subject\"]();\n        // Sets the readonly instance of the snack bar content component.\n        this._instance = instance;\n        this.containerInstance = containerInstance;\n        // Dismiss snackbar on action.\n        this.onAction().subscribe(function () { return _this.dismiss(); });\n        containerInstance._onExit().subscribe(function () { return _this._finishDismiss(); });\n    }\n    Object.defineProperty(MdSnackBarRef.prototype, \"instance\", {\n        /**\n         * The instance of the component making up the content of the snack bar.\n         * @return {?}\n         */\n        get: function () {\n            return this._instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Dismisses the snack bar.\n     * @return {?}\n     */\n    MdSnackBarRef.prototype.dismiss = function () {\n        if (!this._afterClosed.closed) {\n            this.containerInstance.exit();\n        }\n    };\n    /**\n     * Marks the snackbar action clicked.\n     * @return {?}\n     */\n    MdSnackBarRef.prototype._action = function () {\n        if (!this._onAction.closed) {\n            this._onAction.next();\n            this._onAction.complete();\n        }\n    };\n    /**\n     * Marks the snackbar as opened\n     * @return {?}\n     */\n    MdSnackBarRef.prototype._open = function () {\n        if (!this._afterOpened.closed) {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }\n    };\n    /**\n     * Cleans up the DOM after closing.\n     * @return {?}\n     */\n    MdSnackBarRef.prototype._finishDismiss = function () {\n        this._overlayRef.dispose();\n        this._afterClosed.next();\n        this._afterClosed.complete();\n    };\n    /**\n     * Gets an observable that is notified when the snack bar is finished closing.\n     * @return {?}\n     */\n    MdSnackBarRef.prototype.afterDismissed = function () {\n        return this._afterClosed.asObservable();\n    };\n    /**\n     * Gets an observable that is notified when the snack bar has opened and appeared.\n     * @return {?}\n     */\n    MdSnackBarRef.prototype.afterOpened = function () {\n        return this.containerInstance._onEnter();\n    };\n    /**\n     * Gets an observable that is notified when the snack bar action is called.\n     * @return {?}\n     */\n    MdSnackBarRef.prototype.onAction = function () {\n        return this._onAction.asObservable();\n    };\n    return MdSnackBarRef;\n}());\n/**\n * Error that is thrown when attempting to attach a snack bar that is already attached.\n * \\@docs-private\n */\nvar MdSnackBarContentAlreadyAttached = (function (_super) {\n    __extends(MdSnackBarContentAlreadyAttached, _super);\n    function MdSnackBarContentAlreadyAttached() {\n        return _super.call(this, 'Attempting to attach snack bar content after content is already attached') || this;\n    }\n    return MdSnackBarContentAlreadyAttached;\n}(MdError));\n// TODO(jelbourn): we can't use constants from animation.ts here because you can't use\n// a text interpolation in anything that is analyzed statically with ngc (for AoT compile).\nvar SHOW_ANIMATION = '225ms cubic-bezier(0.4,0.0,1,1)';\nvar HIDE_ANIMATION = '195ms cubic-bezier(0.0,0.0,0.2,1)';\n/**\n * Internal component that wraps user-provided snack bar content.\n * \\@docs-private\n */\nvar MdSnackBarContainer = (function (_super) {\n    __extends(MdSnackBarContainer, _super);\n    /**\n     * @param {?} _ngZone\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function MdSnackBarContainer(_ngZone, _renderer, _elementRef) {\n        var _this = _super.call(this) || this;\n        _this._ngZone = _ngZone;\n        _this._renderer = _renderer;\n        _this._elementRef = _elementRef;\n        _this.onExit = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__[\"Subject\"]();\n        _this.onEnter = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__[\"Subject\"]();\n        /** The state of the snack bar animations. */\n        _this.animationState = 'initial';\n        return _this;\n    }\n    /**\n     * Attach a component portal as content to this snack bar container.\n     * @template T\n     * @param {?} portal\n     * @return {?}\n     */\n    MdSnackBarContainer.prototype.attachComponentPortal = function (portal) {\n        if (this._portalHost.hasAttached()) {\n            throw new MdSnackBarContentAlreadyAttached();\n        }\n        if (this.snackBarConfig.extraClasses) {\n            // Not the most efficient way of adding classes, but the renderer doesn't allow us\n            // to pass in an array or a space-separated list.\n            for (var _i = 0, _a = this.snackBarConfig.extraClasses; _i < _a.length; _i++) {\n                var cssClass = _a[_i];\n                this._renderer.setElementClass(this._elementRef.nativeElement, cssClass, true);\n            }\n        }\n        return this._portalHost.attachComponentPortal(portal);\n    };\n    /**\n     * Attach a template portal as content to this snack bar container.\n     * @param {?} portal\n     * @return {?}\n     */\n    MdSnackBarContainer.prototype.attachTemplatePortal = function (portal) {\n        throw Error('Not yet implemented');\n    };\n    /**\n     * Handle end of animations, updating the state of the snackbar.\n     * @param {?} event\n     * @return {?}\n     */\n    MdSnackBarContainer.prototype.onAnimationEnd = function (event) {\n        var _this = this;\n        if (event.toState === 'void' || event.toState === 'complete') {\n            this._completeExit();\n        }\n        if (event.toState === 'visible') {\n            this._ngZone.run(function () {\n                _this.onEnter.next();\n                _this.onEnter.complete();\n            });\n        }\n    };\n    /**\n     * Begin animation of snack bar entrance into view.\n     * @return {?}\n     */\n    MdSnackBarContainer.prototype.enter = function () {\n        this.animationState = 'visible';\n    };\n    /**\n     * Returns an observable resolving when the enter animation completes.\n     * @return {?}\n     */\n    MdSnackBarContainer.prototype._onEnter = function () {\n        this.animationState = 'visible';\n        return this.onEnter.asObservable();\n    };\n    /**\n     * Begin animation of the snack bar exiting from view.\n     * @return {?}\n     */\n    MdSnackBarContainer.prototype.exit = function () {\n        this.animationState = 'complete';\n        return this._onExit();\n    };\n    /**\n     * Returns an observable that completes after the closing animation is done.\n     * @return {?}\n     */\n    MdSnackBarContainer.prototype._onExit = function () {\n        return this.onExit.asObservable();\n    };\n    /**\n     * Makes sure the exit callbacks have been invoked when the element is destroyed.\n     * @return {?}\n     */\n    MdSnackBarContainer.prototype.ngOnDestroy = function () {\n        this._completeExit();\n    };\n    /**\n     * Waits for the zone to settle before removing the element. Helps prevent\n     * errors where we end up removing an element which is in the middle of an animation.\n     * @return {?}\n     */\n    MdSnackBarContainer.prototype._completeExit = function () {\n        var _this = this;\n        this._ngZone.onMicrotaskEmpty.first().subscribe(function () {\n            _this.onExit.next();\n            _this.onExit.complete();\n        });\n    };\n    return MdSnackBarContainer;\n}(BasePortalHost));\nMdSnackBarContainer.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'snack-bar-container',\n                template: \"<ng-template cdkPortalHost></ng-template> \",\n                styles: [\":host{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12);background:#323232;border-radius:2px;box-sizing:content-box;display:block;height:20px;max-width:568px;min-width:288px;overflow:hidden;padding:14px 24px;transform:translateY(100%)}@media screen and (-ms-high-contrast:active){:host{border:solid 1px}} /*# sourceMappingURL=snack-bar-container.css.map */ \"],\n                host: {\n                    'role': 'alert',\n                    '[@state]': 'animationState',\n                    '(@state.done)': 'onAnimationEnd($event)'\n                },\n                animations: [\n                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"i\" /* trigger */])('state', [\n                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"j\" /* state */])('initial', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({ transform: 'translateY(100%)' })),\n                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"j\" /* state */])('visible', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({ transform: 'translateY(0%)' })),\n                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"j\" /* state */])('complete', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({ transform: 'translateY(100%)' })),\n                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"k\" /* transition */])('visible => complete', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"l\" /* animate */])(HIDE_ANIMATION)),\n                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"k\" /* transition */])('initial => visible, void => visible', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"l\" /* animate */])(SHOW_ANIMATION)),\n                    ])\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSnackBarContainer.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n]; };\nMdSnackBarContainer.propDecorators = {\n    '_portalHost': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewChild\"], args: [PortalHostDirective,] },],\n};\n/**\n * A component used to open as the default snack bar, matching material spec.\n * This should only be used internally by the snack bar service.\n */\nvar SimpleSnackBar = (function () {\n    function SimpleSnackBar() {\n    }\n    /**\n     * Dismisses the snack bar.\n     * @return {?}\n     */\n    SimpleSnackBar.prototype.dismiss = function () {\n        this.snackBarRef._action();\n    };\n    Object.defineProperty(SimpleSnackBar.prototype, \"hasAction\", {\n        /**\n         * If the action button should be shown.\n         * @return {?}\n         */\n        get: function () { return !!this.action; },\n        enumerable: true,\n        configurable: true\n    });\n    return SimpleSnackBar;\n}());\nSimpleSnackBar.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'simple-snack-bar',\n                template: \"<span class=\\\"mat-simple-snackbar-message\\\">{{message}}</span> <button class=\\\"mat-simple-snackbar-action\\\" *ngIf=\\\"hasAction\\\" (click)=\\\"dismiss()\\\">{{action}}</button> \",\n                styles: [\":host{display:flex;justify-content:space-between;color:#fff;line-height:20px;font-size:14px;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}.mat-simple-snackbar-message{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-simple-snackbar-action{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;background:0 0;margin:-5px 0 0;padding:5px;text-transform:uppercase;color:inherit;line-height:inherit;flex-shrink:0;font-family:inherit;font-size:inherit;font-weight:600} /*# sourceMappingURL=simple-snack-bar.css.map */ \"],\n                host: {\n                    '[class.mat-simple-snackbar]': 'true',\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nSimpleSnackBar.ctorParameters = function () { return []; };\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param {?} dest The object which will have properties copied to it.\n * @param {...?} sources The source objects from which properties will be copied.\n * @return {?}\n */\nfunction extendObject(dest) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    if (dest == null) {\n        throw TypeError('Cannot convert undefined or null to object');\n    }\n    for (var _a = 0, sources_1 = sources; _a < sources_1.length; _a++) {\n        var source = sources_1[_a];\n        if (source != null) {\n            for (var /** @type {?} */ key in source) {\n                if (source.hasOwnProperty(key)) {\n                    dest[key] = source[key];\n                }\n            }\n        }\n    }\n    return dest;\n}\n/**\n * Service to dispatch Material Design snack bar messages.\n */\nvar MdSnackBar = (function () {\n    /**\n     * @param {?} _overlay\n     * @param {?} _live\n     * @param {?} _parentSnackBar\n     */\n    function MdSnackBar(_overlay, _live, _parentSnackBar) {\n        this._overlay = _overlay;\n        this._live = _live;\n        this._parentSnackBar = _parentSnackBar;\n    }\n    Object.defineProperty(MdSnackBar.prototype, \"_openedSnackBarRef\", {\n        /**\n         * Reference to the currently opened snackbar at *any* level.\n         * @return {?}\n         */\n        get: function () {\n            return this._parentSnackBar ?\n                this._parentSnackBar._openedSnackBarRef : this._snackBarRefAtThisLevel;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._parentSnackBar) {\n                this._parentSnackBar._openedSnackBarRef = value;\n            }\n            else {\n                this._snackBarRefAtThisLevel = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates and dispatches a snack bar with a custom component for the content, removing any\n     * currently opened snack bars.\n     *\n     * @template T\n     * @param {?} component Component to be instantiated.\n     * @param {?=} config Extra configuration for the snack bar.\n     * @return {?}\n     */\n    MdSnackBar.prototype.openFromComponent = function (component, config) {\n        var _this = this;\n        config = _applyConfigDefaults(config);\n        var /** @type {?} */ overlayRef = this._createOverlay();\n        var /** @type {?} */ snackBarContainer = this._attachSnackBarContainer(overlayRef, config);\n        var /** @type {?} */ snackBarRef = this._attachSnackbarContent(component, snackBarContainer, overlayRef);\n        // When the snackbar is dismissed, clear the reference to it.\n        snackBarRef.afterDismissed().subscribe(function () {\n            // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n            if (_this._openedSnackBarRef == snackBarRef) {\n                _this._openedSnackBarRef = null;\n            }\n        });\n        // If a snack bar is already in view, dismiss it and enter the new snack bar after exit\n        // animation is complete.\n        if (this._openedSnackBarRef) {\n            this._openedSnackBarRef.afterDismissed().subscribe(function () {\n                snackBarRef.containerInstance.enter();\n            });\n            this._openedSnackBarRef.dismiss();\n        }\n        else {\n            snackBarRef.containerInstance.enter();\n        }\n        // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\n        if (config.duration > 0) {\n            snackBarRef.afterOpened().subscribe(function () {\n                setTimeout(function () { return snackBarRef.dismiss(); }, config.duration);\n            });\n        }\n        this._live.announce(config.announcementMessage, config.politeness);\n        this._openedSnackBarRef = snackBarRef;\n        return this._openedSnackBarRef;\n    };\n    /**\n     * Opens a snackbar with a message and an optional action.\n     * @param {?} message The message to show in the snackbar.\n     * @param {?=} action The label for the snackbar action.\n     * @param {?=} config Additional configuration options for the snackbar.\n     * @return {?}\n     */\n    MdSnackBar.prototype.open = function (message, action, config) {\n        if (action === void 0) { action = ''; }\n        if (config === void 0) { config = {}; }\n        config.announcementMessage = message;\n        var /** @type {?} */ simpleSnackBarRef = this.openFromComponent(SimpleSnackBar, config);\n        simpleSnackBarRef.instance.snackBarRef = simpleSnackBarRef;\n        simpleSnackBarRef.instance.message = message;\n        simpleSnackBarRef.instance.action = action;\n        return simpleSnackBarRef;\n    };\n    /**\n     * Dismisses the currently-visible snack bar.\n     * @return {?}\n     */\n    MdSnackBar.prototype.dismiss = function () {\n        if (this._openedSnackBarRef) {\n            this._openedSnackBarRef.dismiss();\n        }\n    };\n    /**\n     * Attaches the snack bar container component to the overlay.\n     * @param {?} overlayRef\n     * @param {?} config\n     * @return {?}\n     */\n    MdSnackBar.prototype._attachSnackBarContainer = function (overlayRef, config) {\n        var /** @type {?} */ containerPortal = new ComponentPortal(MdSnackBarContainer, config.viewContainerRef);\n        var /** @type {?} */ containerRef = overlayRef.attach(containerPortal);\n        containerRef.instance.snackBarConfig = config;\n        return containerRef.instance;\n    };\n    /**\n     * Places a new component as the content of the snack bar container.\n     * @template T\n     * @param {?} component\n     * @param {?} container\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    MdSnackBar.prototype._attachSnackbarContent = function (component, container, overlayRef) {\n        var /** @type {?} */ portal = new ComponentPortal(component);\n        var /** @type {?} */ contentRef = container.attachComponentPortal(portal);\n        return new MdSnackBarRef(contentRef.instance, container, overlayRef);\n    };\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @return {?}\n     */\n    MdSnackBar.prototype._createOverlay = function () {\n        var /** @type {?} */ state$$1 = new OverlayState();\n        state$$1.positionStrategy = this._overlay.position().global()\n            .centerHorizontally()\n            .bottom('0');\n        return this._overlay.create(state$$1);\n    };\n    return MdSnackBar;\n}());\nMdSnackBar.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nMdSnackBar.ctorParameters = function () { return [\n    { type: Overlay, },\n    { type: LiveAnnouncer, },\n    { type: MdSnackBar, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"SkipSelf\"] },] },\n]; };\n/**\n * Applies default options to the snackbar config.\n * @param {?} config The configuration to which the defaults will be applied.\n * @return {?} The new configuration object with defaults applied.\n */\nfunction _applyConfigDefaults(config) {\n    return extendObject(new MdSnackBarConfig(), config);\n}\nvar MdSnackBarModule = (function () {\n    function MdSnackBarModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdSnackBarModule.forRoot = function () {\n        return {\n            ngModule: MdSnackBarModule,\n            providers: []\n        };\n    };\n    return MdSnackBarModule;\n}());\nMdSnackBarModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [\n                    OverlayModule,\n                    PortalModule,\n                    __WEBPACK_IMPORTED_MODULE_2__angular_common__[\"CommonModule\"],\n                    CompatibilityModule,\n                ],\n                exports: [MdSnackBarContainer, CompatibilityModule],\n                declarations: [MdSnackBarContainer, SimpleSnackBar],\n                entryComponents: [MdSnackBarContainer, SimpleSnackBar],\n                providers: [MdSnackBar, LIVE_ANNOUNCER_PROVIDER]\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSnackBarModule.ctorParameters = function () { return []; };\n/**\n * Used to flag tab labels for use with the portal directive\n */\nvar MdTabLabel = (function (_super) {\n    __extends(MdTabLabel, _super);\n    /**\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     */\n    function MdTabLabel(templateRef, viewContainerRef) {\n        return _super.call(this, templateRef, viewContainerRef) || this;\n    }\n    return MdTabLabel;\n}(TemplatePortalDirective));\nMdTabLabel.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[md-tab-label], [mat-tab-label]',\n            },] },\n];\n/**\n * @nocollapse\n */\nMdTabLabel.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"TemplateRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewContainerRef\"], },\n]; };\nvar MdTab = (function () {\n    /**\n     * @param {?} _viewContainerRef\n     */\n    function MdTab(_viewContainerRef) {\n        this._viewContainerRef = _viewContainerRef;\n        /** The plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        this._contentPortal = null;\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        this._disabled = false;\n    }\n    Object.defineProperty(MdTab.prototype, \"content\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._contentPortal; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTab.prototype, \"disabled\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._disabled; },\n        /**\n         * Whether the tab is disabled\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._disabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdTab.prototype.ngOnInit = function () {\n        this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\n    };\n    return MdTab;\n}());\nMdTab.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-tab, mat-tab',\n                template: \"<!-- Create a template for the content of the <md-tab> so that we can grab a reference to this TemplateRef and use it in a Portal to render the tab content in the appropriate place in the tab-group. --> <ng-template><ng-content></ng-content></ng-template> \",\n            },] },\n];\n/**\n * @nocollapse\n */\nMdTab.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewContainerRef\"], },\n]; };\nMdTab.propDecorators = {\n    'templateLabel': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChild\"], args: [MdTabLabel,] },],\n    '_content': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewChild\"], args: [__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"TemplateRef\"],] },],\n    'textLabel': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['label',] },],\n    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\n/** Used to generate unique ID's for each tab component */\nvar nextId$2 = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nvar MdTabChangeEvent = (function () {\n    function MdTabChangeEvent() {\n    }\n    return MdTabChangeEvent;\n}());\n/**\n * Material design tab-group component.  Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://www.google.com/design/spec/components/tabs.html\n */\nvar MdTabGroup = (function () {\n    /**\n     * @param {?} _renderer\n     */\n    function MdTabGroup(_renderer) {\n        this._renderer = _renderer;\n        this._isInitialized = false;\n        this._indexToSelect = 0;\n        this._tabBodyWrapperHeight = null;\n        this._dynamicHeight = false;\n        this._selectedIndex = null;\n        /** Position of the tab header. */\n        this.headerPosition = 'above';\n        this._onFocusChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this._onSelectChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"](true);\n        this._groupId = nextId$2++;\n    }\n    Object.defineProperty(MdTabGroup.prototype, \"dynamicHeight\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._dynamicHeight; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._dynamicHeight = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTabGroup.prototype, \"_dynamicHeightDeprecated\", {\n        /**\n         * @deprecated\n         * @return {?}\n         */\n        get: function () { return this._dynamicHeight; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._dynamicHeight = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTabGroup.prototype, \"selectedIndex\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._selectedIndex; },\n        /**\n         * The index of the active tab.\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._indexToSelect = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTabGroup.prototype, \"selectedIndexChange\", {\n        /**\n         * Output to enable support for two-way binding on ([selectedIndex])\n         * @return {?}\n         */\n        get: function () {\n            return this.selectChange.map(function (event) { return event.index; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTabGroup.prototype, \"focusChange\", {\n        /**\n         * Event emitted when focus has changed within a tab group.\n         * @return {?}\n         */\n        get: function () {\n            return this._onFocusChange.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTabGroup.prototype, \"selectChange\", {\n        /**\n         * Event emitted when the tab selection has changed.\n         * @return {?}\n         */\n        get: function () {\n            return this._onSelectChange.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    MdTabGroup.prototype.ngAfterContentChecked = function () {\n        var _this = this;\n        // Clamp the next selected index to the bounds of 0 and the tabs length. Note the `|| 0`, which\n        // ensures that values like NaN can't get through and which would otherwise throw the\n        // component into an infinite loop (since Math.max(NaN, 0) === NaN).\n        this._indexToSelect =\n            Math.min(this._tabs.length - 1, Math.max(this._indexToSelect || 0, 0));\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != this._indexToSelect && this._selectedIndex != null) {\n            this._onSelectChange.emit(this._createChangeEvent(this._indexToSelect));\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach(function (tab, index) {\n            tab.position = index - _this._indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (_this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = _this._indexToSelect - _this._selectedIndex;\n            }\n        });\n        this._selectedIndex = this._indexToSelect;\n    };\n    /**\n     * Waits one frame for the view to update, then updates the ink bar\n     * Note: This must be run outside of the zone or it will create an infinite change detection loop.\n     * @return {?}\n     */\n    MdTabGroup.prototype.ngAfterViewChecked = function () {\n        this._isInitialized = true;\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    MdTabGroup.prototype._focusChanged = function (index) {\n        this._onFocusChange.emit(this._createChangeEvent(index));\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    MdTabGroup.prototype._createChangeEvent = function (index) {\n        var /** @type {?} */ event = new MdTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    };\n    /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    MdTabGroup.prototype._getTabLabelId = function (i) {\n        return \"md-tab-label-\" + this._groupId + \"-\" + i;\n    };\n    /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    MdTabGroup.prototype._getTabContentId = function (i) {\n        return \"md-tab-content-\" + this._groupId + \"-\" + i;\n    };\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n    MdTabGroup.prototype._setTabBodyWrapperHeight = function (tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        this._renderer.setElementStyle(this._tabBodyWrapper.nativeElement, 'height', this._tabBodyWrapperHeight + 'px');\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            this._renderer.setElementStyle(this._tabBodyWrapper.nativeElement, 'height', tabHeight + 'px');\n        }\n    };\n    /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n    MdTabGroup.prototype._removeTabBodyWrapperHeight = function () {\n        this._tabBodyWrapperHeight = this._tabBodyWrapper.nativeElement.clientHeight;\n        this._renderer.setElementStyle(this._tabBodyWrapper.nativeElement, 'height', '');\n    };\n    return MdTabGroup;\n}());\nMdTabGroup.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-tab-group, mat-tab-group',\n                template: \"<md-tab-header [selectedIndex]=\\\"selectedIndex\\\" #tabHeader (indexFocused)=\\\"_focusChanged($event)\\\" (selectFocusedIndex)=\\\"selectedIndex = $event\\\"> <div class=\\\"mat-tab-label\\\" role=\\\"tab\\\" md-tab-label-wrapper md-ripple *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabLabelId(i)\\\" [tabIndex]=\\\"selectedIndex == i ? 0 : -1\\\" [attr.aria-controls]=\\\"_getTabContentId(i)\\\" [attr.aria-selected]=\\\"selectedIndex == i\\\" [class.mat-tab-label-active]=\\\"selectedIndex == i\\\" [disabled]=\\\"tab.disabled\\\" (click)=\\\"tabHeader.focusIndex = selectedIndex = i\\\"> <!-- If there is a label template, use it. --> <ng-template [ngIf]=\\\"tab.templateLabel\\\"> <ng-template [cdkPortalHost]=\\\"tab.templateLabel\\\"></ng-template> </ng-template> <!-- If there is not a label template, fall back to the text label. --> <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template> </div> </md-tab-header> <div class=\\\"mat-tab-body-wrapper\\\" #tabBodyWrapper> <md-tab-body role=\\\"tabpanel\\\" *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabContentId(i)\\\" [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\" [class.mat-tab-body-active]=\\\"selectedIndex == i\\\" [content]=\\\"tab.content\\\" [position]=\\\"tab.position\\\" [origin]=\\\"tab.origin\\\" (onCentered)=\\\"_removeTabBodyWrapperHeight()\\\" (onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\"> </md-tab-body> </div> \",\n                styles: [\":host{display:flex;flex-direction:column;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}:host.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{line-height:48px;height:48px;padding:0 12px;font-size:14px;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-weight:500;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;position:relative}.mat-tab-label:focus{outline:0;opacity:1}@media (max-width:600px){.mat-tab-label{min-width:72px}}:host[mat-stretch-tabs] .mat-tab-label,:host[md-stretch-tabs] .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}.mat-tab-body{position:absolute;top:0;left:0;right:0;bottom:0;display:block;overflow:hidden}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}:host.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}.mat-tab-disabled{cursor:default;pointer-events:none} /*# sourceMappingURL=tab-group.css.map */ \"],\n                host: {\n                    '[class.mat-tab-group]': 'true',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdTabGroup.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n]; };\nMdTabGroup.propDecorators = {\n    '_tabs': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChildren\"], args: [MdTab,] },],\n    '_tabBodyWrapper': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewChild\"], args: ['tabBodyWrapper',] },],\n    'dynamicHeight': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    '_dynamicHeightDeprecated': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['md-dynamic-height',] },],\n    'selectedIndex': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'headerPosition': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'selectedIndexChange': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    'focusChange': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    'selectChange': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n};\n/**\n * Used in the `md-tab-group` view to display tab labels.\n * \\@docs-private\n */\nvar MdTabLabelWrapper = (function () {\n    /**\n     * @param {?} elementRef\n     * @param {?} _renderer\n     */\n    function MdTabLabelWrapper(elementRef, _renderer) {\n        this.elementRef = elementRef;\n        this._renderer = _renderer;\n        this._disabled = false;\n    }\n    Object.defineProperty(MdTabLabelWrapper.prototype, \"disabled\", {\n        /**\n         * Whether the element is disabled.\n         * @return {?}\n         */\n        get: function () { return this._disabled; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._disabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets focus on the wrapper element\n     * @return {?}\n     */\n    MdTabLabelWrapper.prototype.focus = function () {\n        this._renderer.invokeElementMethod(this.elementRef.nativeElement, 'focus');\n    };\n    /**\n     * @return {?}\n     */\n    MdTabLabelWrapper.prototype.getOffsetLeft = function () {\n        return this.elementRef.nativeElement.offsetLeft;\n    };\n    /**\n     * @return {?}\n     */\n    MdTabLabelWrapper.prototype.getOffsetWidth = function () {\n        return this.elementRef.nativeElement.offsetWidth;\n    };\n    return MdTabLabelWrapper;\n}());\nMdTabLabelWrapper.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[md-tab-label-wrapper], [mat-tab-label-wrapper]',\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdTabLabelWrapper.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n]; };\nMdTabLabelWrapper.propDecorators = {\n    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\nvar MdInkBar = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     */\n    function MdInkBar(_renderer, _elementRef, _ngZone) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param {?} element\n     * @return {?}\n     */\n    MdInkBar.prototype.alignToElement = function (element) {\n        var _this = this;\n        this.show();\n        this._ngZone.runOutsideAngular(function () {\n            requestAnimationFrame(function () {\n                _this._renderer.setElementStyle(_this._elementRef.nativeElement, 'left', _this._getLeftPosition(element));\n                _this._renderer.setElementStyle(_this._elementRef.nativeElement, 'width', _this._getElementWidth(element));\n            });\n        });\n    };\n    /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n    MdInkBar.prototype.show = function () {\n        this._renderer.setElementStyle(this._elementRef.nativeElement, 'visibility', 'visible');\n    };\n    /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n    MdInkBar.prototype.hide = function () {\n        this._renderer.setElementStyle(this._elementRef.nativeElement, 'visibility', 'hidden');\n    };\n    /**\n     * Generates the pixel distance from the left based on the provided element in string format.\n     * @param {?} element\n     * @return {?}\n     */\n    MdInkBar.prototype._getLeftPosition = function (element) {\n        return element ? element.offsetLeft + 'px' : '0';\n    };\n    /**\n     * Generates the pixel width from the provided element in string format.\n     * @param {?} element\n     * @return {?}\n     */\n    MdInkBar.prototype._getElementWidth = function (element) {\n        return element ? element.offsetWidth + 'px' : '0';\n    };\n    return MdInkBar;\n}());\nMdInkBar.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'md-ink-bar, mat-ink-bar',\n                host: {\n                    '[class.mat-ink-bar]': 'true',\n                },\n            },] },\n];\n/**\n * @nocollapse\n */\nMdInkBar.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n]; };\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nvar MdTabNavBar = (function () {\n    /**\n     * @param {?} _dir\n     */\n    function MdTabNavBar(_dir) {\n        var _this = this;\n        this._dir = _dir;\n        if (_dir) {\n            this._directionChange = _dir.dirChange.subscribe(function () { return _this._alignInkBar(); });\n        }\n    }\n    /**\n     * Notifies the component that the active link has been changed.\n     * @param {?} element\n     * @return {?}\n     */\n    MdTabNavBar.prototype.updateActiveLink = function (element) {\n        this._activeLinkChanged = this._activeLinkElement != element;\n        this._activeLinkElement = element;\n    };\n    /**\n     * Checks if the active link has been changed and, if so, will update the ink bar.\n     * @return {?}\n     */\n    MdTabNavBar.prototype.ngAfterContentChecked = function () {\n        if (this._activeLinkChanged) {\n            this._alignInkBar();\n            this._activeLinkChanged = false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdTabNavBar.prototype.ngOnDestroy = function () {\n        if (this._directionChange) {\n            this._directionChange.unsubscribe();\n            this._directionChange = null;\n        }\n    };\n    /**\n     * Aligns the ink bar to the active link.\n     * @return {?}\n     */\n    MdTabNavBar.prototype._alignInkBar = function () {\n        this._inkBar.alignToElement(this._activeLinkElement.nativeElement);\n    };\n    return MdTabNavBar;\n}());\nMdTabNavBar.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: '[md-tab-nav-bar], [mat-tab-nav-bar]',\n                template: \"<div class=\\\"mat-tab-links\\\"> <ng-content></ng-content> <md-ink-bar></md-ink-bar> </div> \",\n                styles: [\".mat-tab-nav-bar{overflow:hidden;position:relative;flex-shrink:0}.mat-tab-links{position:relative}.mat-tab-link{line-height:48px;height:48px;padding:0 12px;font-size:14px;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-weight:500;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-block;vertical-align:top;text-decoration:none;position:relative;overflow:hidden}.mat-tab-link:focus{outline:0;opacity:1}@media (max-width:600px){.mat-tab-link{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0} /*# sourceMappingURL=tab-nav-bar.css.map */ \"],\n                host: {\n                    '[class.mat-tab-nav-bar]': 'true',\n                },\n                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None,\n            },] },\n];\n/**\n * @nocollapse\n */\nMdTabNavBar.ctorParameters = function () { return [\n    { type: Dir, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] },] },\n]; };\nMdTabNavBar.propDecorators = {\n    '_inkBar': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewChild\"], args: [MdInkBar,] },],\n};\n/**\n * Link inside of a `md-tab-nav-bar`.\n */\nvar MdTabLink = (function () {\n    /**\n     * @param {?} _mdTabNavBar\n     * @param {?} _elementRef\n     */\n    function MdTabLink(_mdTabNavBar, _elementRef) {\n        this._mdTabNavBar = _mdTabNavBar;\n        this._elementRef = _elementRef;\n        this._isActive = false;\n    }\n    Object.defineProperty(MdTabLink.prototype, \"active\", {\n        /**\n         * Whether the link is active.\n         * @return {?}\n         */\n        get: function () { return this._isActive; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._isActive = value;\n            if (value) {\n                this._mdTabNavBar.updateActiveLink(this._elementRef);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return MdTabLink;\n}());\nMdTabLink.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[md-tab-link], [mat-tab-link]',\n                host: {\n                    '[class.mat-tab-link]': 'true',\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdTabLink.ctorParameters = function () { return [\n    { type: MdTabNavBar, },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n]; };\nMdTabLink.propDecorators = {\n    'active': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\n/**\n * Simple directive that extends the ripple and matches the selector of the MdTabLink. This\n * adds the ripple behavior to nav bar labels.\n */\nvar MdTabLinkRipple = (function (_super) {\n    __extends(MdTabLinkRipple, _super);\n    /**\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} ruler\n     * @param {?} globalOptions\n     */\n    function MdTabLinkRipple(elementRef, ngZone, ruler, globalOptions) {\n        return _super.call(this, elementRef, ngZone, ruler, globalOptions) || this;\n    }\n    return MdTabLinkRipple;\n}(MdRipple));\nMdTabLinkRipple.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[md-tab-link], [mat-tab-link]',\n                host: {\n                    '[class.mat-tab-link]': 'true',\n                },\n            },] },\n];\n/**\n * @nocollapse\n */\nMdTabLinkRipple.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n    { type: ViewportRuler, },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [MD_RIPPLE_GLOBAL_OPTIONS,] },] },\n]; };\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nvar MdTabBody = (function () {\n    /**\n     * @param {?} _dir\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     */\n    function MdTabBody(_dir, _elementRef, _changeDetectorRef) {\n        this._dir = _dir;\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this.onCentering = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this.onCentered = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"](true);\n        /** Whether the element is allowed to be animated. */\n        this._canBeAnimated = false;\n    }\n    Object.defineProperty(MdTabBody.prototype, \"position\", {\n        /**\n         * @param {?} position\n         * @return {?}\n         */\n        set: function (position) {\n            if (position < 0) {\n                this._position = this._getLayoutDirection() == 'ltr' ? 'left' : 'right';\n            }\n            else if (position > 0) {\n                this._position = this._getLayoutDirection() == 'ltr' ? 'right' : 'left';\n            }\n            else {\n                this._position = 'center';\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTabBody.prototype, \"origin\", {\n        /**\n         * The origin position from which this tab should appear when it is centered into view.\n         * @param {?} origin\n         * @return {?}\n         */\n        set: function (origin) {\n            if (origin == null) {\n                return;\n            }\n            var /** @type {?} */ dir = this._getLayoutDirection();\n            if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n                this._origin = 'left';\n            }\n            else {\n                this._origin = 'right';\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    MdTabBody.prototype.ngOnInit = function () {\n        if (this._position == 'center' && this._origin) {\n            this._position = this._origin == 'left' ? 'left-origin-center' : 'right-origin-center';\n        }\n    };\n    /**\n     * After the view has been set, check if the tab content is set to the center and attach the\n     * content if it is not already attached.\n     * @return {?}\n     */\n    MdTabBody.prototype.ngAfterViewChecked = function () {\n        if (this._isCenterPosition(this._position) && !this._portalHost.hasAttached()) {\n            this._portalHost.attach(this._content);\n        }\n    };\n    /**\n     * After the content has been checked, determines whether the element should be allowed to\n     * animate. This has to be limited, because under a specific set of circumstances (see #2151),\n     * the animations can be triggered too early, which either crashes Chrome by putting it into an\n     * infinite loop (with Angular < 2.3.0) or throws an error because the element doesn't have a\n     * computed style (with Angular > 2.3.0). This can alternatively be determined by checking the\n     * transform: canBeAnimated = getComputedStyle(element) !== '', however document.contains should\n     * be faster since it doesn't cause a reflow.\n     *\n     * TODO: This can safely be removed after we stop supporting Angular < 2.4.2. The fix landed via\n     * https://github.com/angular/angular/commit/21030e9a1cf30e8101399d8535ed72d847a23ba6\n     * @return {?}\n     */\n    MdTabBody.prototype.ngAfterContentChecked = function () {\n        if (!this._canBeAnimated) {\n            this._canBeAnimated = document.body.contains(this._elementRef.nativeElement);\n            if (this._canBeAnimated) {\n                this._changeDetectorRef.markForCheck();\n            }\n        }\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    MdTabBody.prototype._onTranslateTabStarted = function (e) {\n        if (this._isCenterPosition(e.toState)) {\n            this.onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    MdTabBody.prototype._onTranslateTabComplete = function (e) {\n        // If the end state is that the tab is not centered, then detach the content.\n        if (!this._isCenterPosition(e.toState) && !this._isCenterPosition(this._position)) {\n            this._portalHost.detach();\n        }\n        // If the transition to the center is complete, emit an event.\n        if (this._isCenterPosition(e.toState) && this._isCenterPosition(this._position)) {\n            this.onCentered.emit();\n        }\n    };\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    MdTabBody.prototype._getLayoutDirection = function () {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    };\n    /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n    MdTabBody.prototype._isCenterPosition = function (position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    };\n    return MdTabBody;\n}());\nMdTabBody.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-tab-body, mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content [@translateTab]=\\\"_canBeAnimated ? _position : null\\\" (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\" (@translateTab.done)=\\\"_onTranslateTabComplete($event)\\\"> <ng-template cdkPortalHost></ng-template> </div> \",\n                styles: [\".mat-tab-body-content{height:100%} /*# sourceMappingURL=tab-body.css.map */ \"],\n                host: {\n                    '[class.mat-tab-body]': 'true',\n                },\n                animations: [\n                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"i\" /* trigger */])('translateTab', [\n                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"j\" /* state */])('left', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({ transform: 'translate3d(-100%, 0, 0)' })),\n                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"j\" /* state */])('left-origin-center', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({ transform: 'translate3d(0, 0, 0)' })),\n                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"j\" /* state */])('right-origin-center', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({ transform: 'translate3d(0, 0, 0)' })),\n                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"j\" /* state */])('center', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({ transform: 'translate3d(0, 0, 0)' })),\n                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"j\" /* state */])('right', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({ transform: 'translate3d(100%, 0, 0)' })),\n                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"k\" /* transition */])('* => left, * => right, left => center, right => center', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"l\" /* animate */])('500ms cubic-bezier(0.35, 0, 0.25, 1)')),\n                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"k\" /* transition */])('void => left-origin-center', [\n                            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({ transform: 'translate3d(-100%, 0, 0)' }),\n                            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"l\" /* animate */])('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n                        ]),\n                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"k\" /* transition */])('void => right-origin-center', [\n                            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({ transform: 'translate3d(100%, 0, 0)' }),\n                            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"l\" /* animate */])('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n                        ])\n                    ])\n                ]\n            },] },\n];\n/**\n * @nocollapse\n */\nMdTabBody.ctorParameters = function () { return [\n    { type: Dir, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] },] },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectorRef\"], },\n]; };\nMdTabBody.propDecorators = {\n    '_portalHost': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewChild\"], args: [PortalHostDirective,] },],\n    'onCentering': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    'onCentered': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    '_content': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['content',] },],\n    'position': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['position',] },],\n    'origin': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['origin',] },],\n};\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nvar EXAGGERATED_OVERSCROLL = 60;\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * \\@docs-private\n */\nvar MdTabHeader = (function () {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dir\n     */\n    function MdTabHeader(_elementRef, _dir) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._focusIndex = 0;\n        this._scrollDistance = 0;\n        this._selectedIndexChanged = false;\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n    }\n    Object.defineProperty(MdTabHeader.prototype, \"selectedIndex\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._selectedIndex; },\n        /**\n         * The index of the active tab.\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._selectedIndexChanged = this._selectedIndex != value;\n            this._selectedIndex = value;\n            this._focusIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdTabHeader.prototype.ngAfterContentChecked = function () {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._labelWrappers.length) {\n            this._updatePagination();\n            this._tabLabelCount = this._labelWrappers.length;\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdTabHeader.prototype._handleKeydown = function (event) {\n        switch (event.keyCode) {\n            case RIGHT_ARROW:\n                this._focusNextTab();\n                break;\n            case LEFT_ARROW:\n                this._focusPreviousTab();\n                break;\n            case ENTER:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                break;\n        }\n    };\n    /**\n     * Aligns the ink bar to the selected tab on load.\n     * @return {?}\n     */\n    MdTabHeader.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this._alignInkBarToSelectedTab();\n        if (this._dir) {\n            this._directionChange = this._dir.dirChange.subscribe(function () { return _this._alignInkBarToSelectedTab(); });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdTabHeader.prototype.ngOnDestroy = function () {\n        if (this._directionChange) {\n            this._directionChange.unsubscribe();\n            this._directionChange = null;\n        }\n    };\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n    MdTabHeader.prototype._onContentChanges = function () {\n        this._updatePagination();\n        this._alignInkBarToSelectedTab();\n    };\n    /**\n     * Updating the view whether pagination should be enabled or not\n     * @return {?}\n     */\n    MdTabHeader.prototype._updatePagination = function () {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    };\n    Object.defineProperty(MdTabHeader.prototype, \"focusIndex\", {\n        /**\n         * Tracks which element has focus; used for keyboard navigation\n         * @return {?}\n         */\n        get: function () { return this._focusIndex; },\n        /**\n         * When the focus index is set, we must manually send focus to the correct label\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (!this._isValidIndex(value) || this._focusIndex == value) {\n                return;\n            }\n            this._focusIndex = value;\n            this.indexFocused.emit(value);\n            this._setTabFocus(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    MdTabHeader.prototype._isValidIndex = function (index) {\n        if (!this._labelWrappers) {\n            return true;\n        }\n        var /** @type {?} */ tab = this._labelWrappers ? this._labelWrappers.toArray()[index] : null;\n        return tab && !tab.disabled;\n    };\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n    MdTabHeader.prototype._setTabFocus = function (tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._labelWrappers && this._labelWrappers.length) {\n            this._labelWrappers.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            var /** @type {?} */ containerEl = this._tabListContainer.nativeElement;\n            var /** @type {?} */ dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    };\n    /**\n     * Moves the focus towards the beginning or the end of the list depending on the offset provided.\n     * Valid offsets are 1 and -1.\n     * @param {?} offset\n     * @return {?}\n     */\n    MdTabHeader.prototype._moveFocus = function (offset) {\n        if (this._labelWrappers) {\n            var /** @type {?} */ tabs = this._labelWrappers.toArray();\n            for (var /** @type {?} */ i = this.focusIndex + offset; i < tabs.length && i >= 0; i += offset) {\n                if (this._isValidIndex(i)) {\n                    this.focusIndex = i;\n                    return;\n                }\n            }\n        }\n    };\n    /**\n     * Increment the focus index by 1 until a valid tab is found.\n     * @return {?}\n     */\n    MdTabHeader.prototype._focusNextTab = function () {\n        this._moveFocus(this._getLayoutDirection() == 'ltr' ? 1 : -1);\n    };\n    /**\n     * Decrement the focus index by 1 until a valid tab is found.\n     * @return {?}\n     */\n    MdTabHeader.prototype._focusPreviousTab = function () {\n        this._moveFocus(this._getLayoutDirection() == 'ltr' ? -1 : 1);\n    };\n    /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n    MdTabHeader.prototype._getLayoutDirection = function () {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    };\n    /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n    MdTabHeader.prototype._updateTabScrollPosition = function () {\n        var /** @type {?} */ translateX = this.scrollDistance + 'px';\n        if (this._getLayoutDirection() == 'ltr') {\n            translateX = '-' + translateX;\n        }\n        applyCssTransform(this._tabList.nativeElement, \"translate3d(\" + translateX + \", 0, 0)\");\n    };\n    Object.defineProperty(MdTabHeader.prototype, \"scrollDistance\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._scrollDistance; },\n        /**\n         * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) {\n            this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), v));\n            // Mark that the scroll distance has changed so that after the view is checked, the CSS\n            // transformation can move the header.\n            this._scrollDistanceChanged = true;\n            this._checkScrollingControls();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} scrollDir\n     * @return {?}\n     */\n    MdTabHeader.prototype._scrollHeader = function (scrollDir) {\n        var /** @type {?} */ viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        this.scrollDistance += (scrollDir == 'before' ? -1 : 1) * viewLength / 3;\n    };\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    MdTabHeader.prototype._scrollToLabel = function (labelIndex) {\n        var /** @type {?} */ selectedLabel = this._labelWrappers\n            ? this._labelWrappers.toArray()[labelIndex]\n            : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        var /** @type {?} */ viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        var /** @type {?} */ labelBeforePos, /** @type {?} */ labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = selectedLabel.getOffsetLeft();\n            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - selectedLabel.getOffsetLeft();\n            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n        }\n        var /** @type {?} */ beforeVisiblePos = this.scrollDistance;\n        var /** @type {?} */ afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    };\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    MdTabHeader.prototype._checkPaginationEnabled = function () {\n        this._showPaginationControls =\n            this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n        if (!this._showPaginationControls) {\n            this.scrollDistance = 0;\n        }\n    };\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    MdTabHeader.prototype._checkScrollingControls = function () {\n        // Check if the pagination arrows should be activated.\n        this._disableScrollBefore = this.scrollDistance == 0;\n        this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n    };\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    MdTabHeader.prototype._getMaxScrollDistance = function () {\n        var /** @type {?} */ lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        var /** @type {?} */ viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return lengthOfTabList - viewLength;\n    };\n    /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n    MdTabHeader.prototype._alignInkBarToSelectedTab = function () {\n        var /** @type {?} */ selectedLabelWrapper = this._labelWrappers && this._labelWrappers.length\n            ? this._labelWrappers.toArray()[this.selectedIndex].elementRef.nativeElement\n            : null;\n        this._inkBar.alignToElement(selectedLabelWrapper);\n    };\n    return MdTabHeader;\n}());\nMdTabHeader.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-tab-header, mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\" aria-hidden=\\\"true\\\" md-ripple [mdRippleDisabled]=\\\"_disableScrollBefore\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\" (click)=\\\"_scrollHeader('before')\\\"> <div class=\\\"mat-tab-header-pagination-chevron\\\"></div> </div> <div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\"> <div class=\\\"mat-tab-list\\\" #tabList role=\\\"tablist\\\" (cdkObserveContent)=\\\"_onContentChanges()\\\"> <div class=\\\"mat-tab-labels\\\"> <ng-content></ng-content> </div> <md-ink-bar></md-ink-bar> </div> </div> <div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\" aria-hidden=\\\"true\\\" md-ripple [mdRippleDisabled]=\\\"_disableScrollAfter\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\" (click)=\\\"_scrollHeader('after')\\\"> <div class=\\\"mat-tab-header-pagination-chevron\\\"></div> </div> \",\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-label{line-height:48px;height:48px;padding:0 12px;font-size:14px;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-weight:500;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;position:relative}.mat-tab-label:focus{outline:0;opacity:1}@media (max-width:600px){.mat-tab-label{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.mat-tab-header-pagination{position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:#ccc}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-labels{display:flex} /*# sourceMappingURL=tab-header.css.map */ \"],\n                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdTabHeader.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: Dir, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] },] },\n]; };\nMdTabHeader.propDecorators = {\n    '_labelWrappers': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChildren\"], args: [MdTabLabelWrapper,] },],\n    '_inkBar': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewChild\"], args: [MdInkBar,] },],\n    '_tabListContainer': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewChild\"], args: ['tabListContainer',] },],\n    '_tabList': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewChild\"], args: ['tabList',] },],\n    'selectedIndex': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'selectFocusedIndex': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    'indexFocused': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n};\nvar MdTabsModule = (function () {\n    function MdTabsModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdTabsModule.forRoot = function () {\n        return {\n            ngModule: MdTabsModule,\n            providers: []\n        };\n    };\n    return MdTabsModule;\n}());\nMdTabsModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [\n                    __WEBPACK_IMPORTED_MODULE_2__angular_common__[\"CommonModule\"],\n                    PortalModule,\n                    MdRippleModule,\n                    ObserveContentModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MdTabGroup,\n                    MdTabLabel,\n                    MdTab,\n                    MdTabNavBar,\n                    MdTabLink,\n                    MdTabLinkRipple\n                ],\n                declarations: [\n                    MdTabGroup,\n                    MdTabLabel,\n                    MdTab,\n                    MdInkBar,\n                    MdTabLabelWrapper,\n                    MdTabNavBar,\n                    MdTabLink,\n                    MdTabBody,\n                    MdTabLinkRipple,\n                    MdTabHeader\n                ],\n                providers: [VIEWPORT_RULER_PROVIDER, SCROLL_DISPATCHER_PROVIDER],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdTabsModule.ctorParameters = function () { return []; };\nvar MdToolbarRow = (function () {\n    function MdToolbarRow() {\n    }\n    return MdToolbarRow;\n}());\nMdToolbarRow.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'md-toolbar-row, mat-toolbar-row',\n                host: {\n                    '[class.mat-toolbar-row]': 'true',\n                },\n            },] },\n];\n/**\n * @nocollapse\n */\nMdToolbarRow.ctorParameters = function () { return []; };\nvar MdToolbar = (function () {\n    /**\n     * @param {?} elementRef\n     * @param {?} renderer\n     */\n    function MdToolbar(elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n    }\n    Object.defineProperty(MdToolbar.prototype, \"color\", {\n        /**\n         * The color of the toolbar. Can be primary, accent, or warn.\n         * @return {?}\n         */\n        get: function () {\n            return this._color;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._updateColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} newColor\n     * @return {?}\n     */\n    MdToolbar.prototype._updateColor = function (newColor) {\n        this._setElementColor(this._color, false);\n        this._setElementColor(newColor, true);\n        this._color = newColor;\n    };\n    /**\n     * @param {?} color\n     * @param {?} isAdd\n     * @return {?}\n     */\n    MdToolbar.prototype._setElementColor = function (color, isAdd) {\n        if (color != null && color != '') {\n            this.renderer.setElementClass(this.elementRef.nativeElement, \"mat-\" + color, isAdd);\n        }\n    };\n    return MdToolbar;\n}());\nMdToolbar.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-toolbar, mat-toolbar',\n                template: \"<div class=\\\"mat-toolbar-layout\\\"> <md-toolbar-row> <ng-content></ng-content> </md-toolbar-row> <ng-content select=\\\"md-toolbar-row, mat-toolbar-row\\\"></ng-content> </div> \",\n                styles: [\".mat-toolbar{display:flex;box-sizing:border-box;width:100%;font-size:20px;font-weight:500;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;padding:0 16px;flex-direction:column}.mat-toolbar .mat-toolbar-row{display:flex;box-sizing:border-box;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar{min-height:64px}.mat-toolbar-row{height:64px}@media (max-width:600px){.mat-toolbar{min-height:56px}.mat-toolbar-row{height:56px}} /*# sourceMappingURL=toolbar.css.map */ \"],\n                host: {\n                    '[class.mat-toolbar]': 'true',\n                    'role': 'toolbar'\n                },\n                changeDetection: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectionStrategy\"].OnPush,\n                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None\n            },] },\n];\n/**\n * @nocollapse\n */\nMdToolbar.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n]; };\nMdToolbar.propDecorators = {\n    'color': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\nvar MdToolbarModule = (function () {\n    function MdToolbarModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdToolbarModule.forRoot = function () {\n        return {\n            ngModule: MdToolbarModule,\n            providers: []\n        };\n    };\n    return MdToolbarModule;\n}());\nMdToolbarModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [CompatibilityModule],\n                exports: [MdToolbar, MdToolbarRow, CompatibilityModule],\n                declarations: [MdToolbar, MdToolbarRow],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdToolbarModule.ctorParameters = function () { return []; };\n/**\n * Exception thrown when a tooltip has an invalid position.\n * \\@docs-private\n */\nvar MdTooltipInvalidPositionError = (function (_super) {\n    __extends(MdTooltipInvalidPositionError, _super);\n    /**\n     * @param {?} position\n     */\n    function MdTooltipInvalidPositionError(position) {\n        return _super.call(this, \"Tooltip position \\\"\" + position + \"\\\" is invalid.\") || this;\n    }\n    return MdTooltipInvalidPositionError;\n}(MdError));\n/** Time in ms to delay before changing the tooltip visibility to hidden */\nvar TOUCHEND_HIDE_DELAY = 1500;\n/** Time in ms to throttle repositioning after scroll events. */\nvar SCROLL_THROTTLE_MS = 20;\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.google.com/components/tooltips.html\n */\nvar MdTooltip = (function () {\n    /**\n     * @param {?} _overlay\n     * @param {?} _elementRef\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewContainerRef\n     * @param {?} _ngZone\n     * @param {?} _renderer\n     * @param {?} _platform\n     * @param {?} _dir\n     */\n    function MdTooltip(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _renderer, _platform, _dir) {\n        var _this = this;\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._renderer = _renderer;\n        this._platform = _platform;\n        this._dir = _dir;\n        this._position = 'below';\n        this._disabled = false;\n        /** The default delay in ms before showing the tooltip after show is called */\n        this.showDelay = 0;\n        /** The default delay in ms before hiding the tooltip after hide is called */\n        this.hideDelay = 0;\n        // The mouse events shouldn't be bound on iOS devices, because\n        // they can prevent the first tap from firing it's click event.\n        if (!_platform.IOS) {\n            _renderer.listen(_elementRef.nativeElement, 'mouseenter', function () { return _this.show(); });\n            _renderer.listen(_elementRef.nativeElement, 'mouseleave', function () { return _this.hide(); });\n        }\n    }\n    Object.defineProperty(MdTooltip.prototype, \"position\", {\n        /**\n         * Allows the user to define the position of the tooltip relative to the parent element\n         * @return {?}\n         */\n        get: function () { return this._position; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (value !== this._position) {\n                this._position = value;\n                // TODO(andrewjs): When the overlay's position can be dynamically changed, do not destroy\n                // the tooltip.\n                if (this._tooltipInstance) {\n                    this._disposeTooltip();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTooltip.prototype, \"disabled\", {\n        /**\n         * Disables the display of the tooltip.\n         * @return {?}\n         */\n        get: function () { return this._disabled; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._disabled = coerceBooleanProperty(value);\n            // If tooltip is disabled, hide immediately.\n            if (this._disabled) {\n                this.hide(0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTooltip.prototype, \"_positionDeprecated\", {\n        /**\n         * @deprecated\n         * @return {?}\n         */\n        get: function () { return this._position; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._position = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTooltip.prototype, \"message\", {\n        /**\n         * The message to be displayed in the tooltip\n         * @return {?}\n         */\n        get: function () { return this._message; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._message = value;\n            if (this._tooltipInstance) {\n                this._setTooltipMessage(this._message);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTooltip.prototype, \"_deprecatedMessage\", {\n        /**\n         * @deprecated\n         * @return {?}\n         */\n        get: function () { return this.message; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this.message = v; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTooltip.prototype, \"_matMessage\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.message; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this.message = v; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTooltip.prototype, \"_matPosition\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.position; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this.position = v; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTooltip.prototype, \"_matDisabled\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.disabled; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this.disabled = v; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTooltip.prototype, \"_matHideDelay\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.hideDelay; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this.hideDelay = v; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTooltip.prototype, \"_matShowDelay\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.showDelay; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this.showDelay = v; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdTooltip.prototype.ngOnInit = function () {\n        var _this = this;\n        // When a scroll on the page occurs, update the position in case this tooltip needs\n        // to be repositioned.\n        this.scrollSubscription = this._scrollDispatcher.scrolled(SCROLL_THROTTLE_MS, function () {\n            if (_this._overlayRef) {\n                _this._overlayRef.updatePosition();\n            }\n        });\n    };\n    /**\n     * Dispose the tooltip when destroyed.\n     * @return {?}\n     */\n    MdTooltip.prototype.ngOnDestroy = function () {\n        if (this._tooltipInstance) {\n            this._disposeTooltip();\n        }\n        if (this.scrollSubscription) {\n            this.scrollSubscription.unsubscribe();\n        }\n    };\n    /**\n     * Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    MdTooltip.prototype.show = function (delay) {\n        if (delay === void 0) { delay = this.showDelay; }\n        if (this.disabled || !this._message || !this._message.trim()) {\n            return;\n        }\n        if (!this._tooltipInstance) {\n            this._createTooltip();\n        }\n        this._setTooltipMessage(this._message);\n        this._tooltipInstance.show(this._position, delay);\n    };\n    /**\n     * Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    MdTooltip.prototype.hide = function (delay) {\n        if (delay === void 0) { delay = this.hideDelay; }\n        if (this._tooltipInstance) {\n            this._tooltipInstance.hide(delay);\n        }\n    };\n    /**\n     * Shows/hides the tooltip\n     * @return {?}\n     */\n    MdTooltip.prototype.toggle = function () {\n        this._isTooltipVisible() ? this.hide() : this.show();\n    };\n    /**\n     * Returns true if the tooltip is currently visible to the user\n     * @return {?}\n     */\n    MdTooltip.prototype._isTooltipVisible = function () {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    };\n    /**\n     * Create the tooltip to display\n     * @return {?}\n     */\n    MdTooltip.prototype._createTooltip = function () {\n        var _this = this;\n        this._createOverlay();\n        var /** @type {?} */ portal = new ComponentPortal(TooltipComponent, this._viewContainerRef);\n        this._tooltipInstance = this._overlayRef.attach(portal).instance;\n        // Dispose the overlay when finished the shown tooltip.\n        this._tooltipInstance.afterHidden().subscribe(function () {\n            // Check first if the tooltip has already been removed through this components destroy.\n            if (_this._tooltipInstance) {\n                _this._disposeTooltip();\n            }\n        });\n    };\n    /**\n     * Create the overlay config and position strategy\n     * @return {?}\n     */\n    MdTooltip.prototype._createOverlay = function () {\n        var _this = this;\n        var /** @type {?} */ origin = this._getOrigin();\n        var /** @type {?} */ position = this._getOverlayPosition();\n        // Create connected position strategy that listens for scroll events to reposition.\n        // After position changes occur and the overlay is clipped by a parent scrollable then\n        // close the tooltip.\n        var /** @type {?} */ strategy = this._overlay.position().connectedTo(this._elementRef, origin, position);\n        strategy.withScrollableContainers(this._scrollDispatcher.getScrollContainers(this._elementRef));\n        strategy.onPositionChange.subscribe(function (change) {\n            if (change.scrollableViewProperties.isOverlayClipped &&\n                _this._tooltipInstance && _this._tooltipInstance.isVisible()) {\n                _this.hide(0);\n            }\n        });\n        var /** @type {?} */ config = new OverlayState();\n        config.positionStrategy = strategy;\n        this._overlayRef = this._overlay.create(config);\n    };\n    /**\n     * Disposes the current tooltip and the overlay it is attached to\n     * @return {?}\n     */\n    MdTooltip.prototype._disposeTooltip = function () {\n        this._overlayRef.dispose();\n        this._overlayRef = null;\n        this._tooltipInstance = null;\n    };\n    /**\n     * Returns the origin position based on the user's position preference\n     * @return {?}\n     */\n    MdTooltip.prototype._getOrigin = function () {\n        if (this.position == 'above' || this.position == 'below') {\n            return { originX: 'center', originY: this.position == 'above' ? 'top' : 'bottom' };\n        }\n        var /** @type {?} */ isDirectionLtr = !this._dir || this._dir.value == 'ltr';\n        if (this.position == 'left' ||\n            this.position == 'before' && isDirectionLtr ||\n            this.position == 'after' && !isDirectionLtr) {\n            return { originX: 'start', originY: 'center' };\n        }\n        if (this.position == 'right' ||\n            this.position == 'after' && isDirectionLtr ||\n            this.position == 'before' && !isDirectionLtr) {\n            return { originX: 'end', originY: 'center' };\n        }\n        throw new MdTooltipInvalidPositionError(this.position);\n    };\n    /**\n     * Returns the overlay position based on the user's preference\n     * @return {?}\n     */\n    MdTooltip.prototype._getOverlayPosition = function () {\n        if (this.position == 'above') {\n            return { overlayX: 'center', overlayY: 'bottom' };\n        }\n        if (this.position == 'below') {\n            return { overlayX: 'center', overlayY: 'top' };\n        }\n        var /** @type {?} */ isLtr = !this._dir || this._dir.value == 'ltr';\n        if (this.position == 'left' ||\n            this.position == 'before' && isLtr ||\n            this.position == 'after' && !isLtr) {\n            return { overlayX: 'end', overlayY: 'center' };\n        }\n        if (this.position == 'right' ||\n            this.position == 'after' && isLtr ||\n            this.position == 'before' && !isLtr) {\n            return { overlayX: 'start', overlayY: 'center' };\n        }\n        throw new MdTooltipInvalidPositionError(this.position);\n    };\n    /**\n     * Updates the tooltip message and repositions the overlay according to the new message length\n     * @param {?} message\n     * @return {?}\n     */\n    MdTooltip.prototype._setTooltipMessage = function (message) {\n        var _this = this;\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        this._tooltipInstance.message = message;\n        this._ngZone.onMicrotaskEmpty.first().subscribe(function () {\n            if (_this._tooltipInstance) {\n                _this._overlayRef.updatePosition();\n            }\n        });\n    };\n    return MdTooltip;\n}());\nMdTooltip.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[md-tooltip], [mdTooltip], [mat-tooltip], [matTooltip]',\n                host: {\n                    '(longpress)': 'show()',\n                    '(touchend)': 'hide(' + TOUCHEND_HIDE_DELAY + ')',\n                },\n                exportAs: 'mdTooltip',\n            },] },\n];\n/**\n * @nocollapse\n */\nMdTooltip.ctorParameters = function () { return [\n    { type: Overlay, },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: ScrollDispatcher, },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewContainerRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: Platform, },\n    { type: Dir, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] },] },\n]; };\nMdTooltip.propDecorators = {\n    'position': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['mdTooltipPosition',] },],\n    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['mdTooltipDisabled',] },],\n    '_positionDeprecated': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['tooltip-position',] },],\n    'showDelay': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['mdTooltipShowDelay',] },],\n    'hideDelay': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['mdTooltipHideDelay',] },],\n    'message': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['mdTooltip',] },],\n    '_deprecatedMessage': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['md-tooltip',] },],\n    '_matMessage': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['matTooltip',] },],\n    '_matPosition': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['matTooltipPosition',] },],\n    '_matDisabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['matTooltipDisabled',] },],\n    '_matHideDelay': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['matTooltipHideDelay',] },],\n    '_matShowDelay': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['matTooltipShowDelay',] },],\n};\n/**\n * Internal component that wraps the tooltip's content.\n * \\@docs-private\n */\nvar TooltipComponent = (function () {\n    /**\n     * @param {?} _dir\n     * @param {?} _changeDetectorRef\n     */\n    function TooltipComponent(_dir, _changeDetectorRef) {\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Property watched by the animation framework to show or hide the tooltip */\n        this._visibility = 'initial';\n        /** Whether interactions on the page should close the tooltip */\n        this._closeOnInteraction = false;\n        /** The transform origin used in the animation for showing and hiding the tooltip */\n        this._transformOrigin = 'bottom';\n        this._onHide = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__[\"Subject\"]();\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param {?} position Position of the tooltip.\n     * @param {?} delay Amount of milliseconds to the delay showing the tooltip.\n     * @return {?}\n     */\n    TooltipComponent.prototype.show = function (position, delay) {\n        var _this = this;\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        // Body interactions should cancel the tooltip if there is a delay in showing.\n        this._closeOnInteraction = true;\n        this._setTransformOrigin(position);\n        this._showTimeoutId = setTimeout(function () {\n            _this._visibility = 'visible';\n            // If this was set to true immediately, then a body click that triggers show() would\n            // trigger interaction and close the tooltip right after it was displayed.\n            _this._closeOnInteraction = false;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            _this._changeDetectorRef.markForCheck();\n            setTimeout(function () { _this._closeOnInteraction = true; }, 0);\n        }, delay);\n    };\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param {?} delay Amount of milliseconds to delay showing the tooltip.\n     * @return {?}\n     */\n    TooltipComponent.prototype.hide = function (delay) {\n        var _this = this;\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId) {\n            clearTimeout(this._showTimeoutId);\n        }\n        this._hideTimeoutId = setTimeout(function () {\n            _this._visibility = 'hidden';\n            _this._closeOnInteraction = false;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            _this._changeDetectorRef.markForCheck();\n        }, delay);\n    };\n    /**\n     * Returns an observable that notifies when the tooltip has been hidden from view\n     * @return {?}\n     */\n    TooltipComponent.prototype.afterHidden = function () {\n        return this._onHide.asObservable();\n    };\n    /**\n     * Whether the tooltip is being displayed\n     * @return {?}\n     */\n    TooltipComponent.prototype.isVisible = function () {\n        return this._visibility === 'visible';\n    };\n    /**\n     * Sets the tooltip transform origin according to the tooltip position\n     * @param {?} value\n     * @return {?}\n     */\n    TooltipComponent.prototype._setTransformOrigin = function (value) {\n        var /** @type {?} */ isLtr = !this._dir || this._dir.value == 'ltr';\n        switch (value) {\n            case 'before':\n                this._transformOrigin = isLtr ? 'right' : 'left';\n                break;\n            case 'after':\n                this._transformOrigin = isLtr ? 'left' : 'right';\n                break;\n            case 'left':\n                this._transformOrigin = 'right';\n                break;\n            case 'right':\n                this._transformOrigin = 'left';\n                break;\n            case 'above':\n                this._transformOrigin = 'bottom';\n                break;\n            case 'below':\n                this._transformOrigin = 'top';\n                break;\n            default: throw new MdTooltipInvalidPositionError(value);\n        }\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    TooltipComponent.prototype._afterVisibilityAnimation = function (e) {\n        if (e.toState === 'hidden' && !this.isVisible()) {\n            this._onHide.next();\n        }\n    };\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.google.com/components/tooltips.html#tooltips-interaction\n     * @return {?}\n     */\n    TooltipComponent.prototype._handleBodyInteraction = function () {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    };\n    return TooltipComponent;\n}());\nTooltipComponent.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-tooltip-component, mat-tooltip-component',\n                template: \"<div class=\\\"mat-tooltip\\\" [style.transform-origin]=\\\"_transformOrigin\\\" [@state]=\\\"_visibility\\\" (@state.done)=\\\"_afterVisibilityAnimation($event)\\\"> {{message}} </div>\",\n                styles: [\":host{pointer-events:none}.mat-tooltip{color:#fff;padding:6px 8px;border-radius:2px;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:10px;margin:14px;max-width:250px}@media screen and (-ms-high-contrast:active){.mat-tooltip{outline:solid 1px}} /*# sourceMappingURL=tooltip.css.map */ \"],\n                animations: [\n                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"i\" /* trigger */])('state', [\n                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"j\" /* state */])('void', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({ transform: 'scale(0)' })),\n                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"j\" /* state */])('initial', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({ transform: 'scale(0)' })),\n                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"j\" /* state */])('visible', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({ transform: 'scale(1)' })),\n                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"j\" /* state */])('hidden', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({ transform: 'scale(0)' })),\n                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"k\" /* transition */])('* => visible', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"l\" /* animate */])('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"k\" /* transition */])('* => hidden', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"l\" /* animate */])('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n                    ])\n                ],\n                host: {\n                    '(body:click)': 'this._handleBodyInteraction()'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nTooltipComponent.ctorParameters = function () { return [\n    { type: Dir, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] },] },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ChangeDetectorRef\"], },\n]; };\nvar MdTooltipModule = (function () {\n    function MdTooltipModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdTooltipModule.forRoot = function () {\n        return {\n            ngModule: MdTooltipModule,\n            providers: []\n        };\n    };\n    return MdTooltipModule;\n}());\nMdTooltipModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [OverlayModule, CompatibilityModule, PlatformModule],\n                exports: [MdTooltip, TooltipComponent, CompatibilityModule],\n                declarations: [MdTooltip, TooltipComponent],\n                entryComponents: [TooltipComponent],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdTooltipModule.ctorParameters = function () { return []; };\n/**\n * Exception thrown when menu trigger doesn't have a valid md-menu instance\n * \\@docs-private\n */\nvar MdMenuMissingError = (function (_super) {\n    __extends(MdMenuMissingError, _super);\n    function MdMenuMissingError() {\n        return _super.call(this, \"md-menu-trigger: must pass in an md-menu instance.\\n\\n    Example:\\n      <md-menu #menu=\\\"mdMenu\\\"></md-menu>\\n      <button [mdMenuTriggerFor]=\\\"menu\\\"></button>\\n    \") || this;\n    }\n    return MdMenuMissingError;\n}(MdError));\n/**\n * Exception thrown when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * \\@docs-private\n */\nvar MdMenuInvalidPositionX = (function (_super) {\n    __extends(MdMenuInvalidPositionX, _super);\n    function MdMenuInvalidPositionX() {\n        return _super.call(this, \"x-position value must be either 'before' or after'.\\n      Example: <md-menu x-position=\\\"before\\\" #menu=\\\"mdMenu\\\"></md-menu>\\n    \") || this;\n    }\n    return MdMenuInvalidPositionX;\n}(MdError));\n/**\n * Exception thrown when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * \\@docs-private\n */\nvar MdMenuInvalidPositionY = (function (_super) {\n    __extends(MdMenuInvalidPositionY, _super);\n    function MdMenuInvalidPositionY() {\n        return _super.call(this, \"y-position value must be either 'above' or below'.\\n      Example: <md-menu y-position=\\\"above\\\" #menu=\\\"mdMenu\\\"></md-menu>\\n    \") || this;\n    }\n    return MdMenuInvalidPositionY;\n}(MdError));\n/**\n * This directive is intended to be used inside an md-menu tag.\n * It exists mostly to set the role attribute.\n */\nvar MdMenuItem = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function MdMenuItem(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._disabled = false;\n    }\n    /**\n     * Focuses the menu item.\n     * @return {?}\n     */\n    MdMenuItem.prototype.focus = function () {\n        this._renderer.invokeElementMethod(this._getHostElement(), 'focus');\n    };\n    Object.defineProperty(MdMenuItem.prototype, \"disabled\", {\n        /**\n         * Whether the menu item is disabled.\n         * @return {?}\n         */\n        get: function () { return this._disabled; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._disabled = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Used to set the `tabindex`.\n     * @return {?}\n     */\n    MdMenuItem.prototype._getTabIndex = function () {\n        return this._disabled ? '-1' : '0';\n    };\n    /**\n     * Used to set the HTML `disabled` attribute. Necessary for links to be disabled properly.\n     * @return {?}\n     */\n    MdMenuItem.prototype._getDisabledAttr = function () {\n        return this._disabled ? true : null;\n    };\n    /**\n     * Returns the host DOM element.\n     * @return {?}\n     */\n    MdMenuItem.prototype._getHostElement = function () {\n        return this._elementRef.nativeElement;\n    };\n    /**\n     * Prevents the default element actions if it is disabled.\n     * @param {?} event\n     * @return {?}\n     */\n    MdMenuItem.prototype._checkDisabled = function (event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n    return MdMenuItem;\n}());\nMdMenuItem.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: '[md-menu-item], [mat-menu-item]',\n                host: {\n                    'role': 'menuitem',\n                    '[class.mat-menu-item]': 'true',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.disabled]': '_getDisabledAttr()',\n                    '(click)': '_checkDisabled($event)',\n                },\n                template: \"<ng-content></ng-content> <div class=\\\"mat-menu-ripple\\\" *ngIf=\\\"!disabled\\\" md-ripple [mdRippleTrigger]=\\\"_getHostElement()\\\"> </div> \",\n                exportAs: 'mdMenuItem'\n            },] },\n];\n/**\n * @nocollapse\n */\nMdMenuItem.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n]; };\nMdMenuItem.propDecorators = {\n    'disabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\n/**\n * Below are all the animations for the md-menu component.\n * Animation duration and timing values are based on AngularJS Material.\n */\n/**\n * This animation controls the menu panel's entry and exit from the page.\n *\n * When the menu panel is added to the DOM, it scales in and fades in its border.\n *\n * When the menu panel is removed from the DOM, it simply fades out after a brief\n * delay to display the ripple.\n */\n// TODO(kara): switch to :enter and :leave once Mobile Safari is sorted out.\nvar transformMenu = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"i\" /* trigger */])('transformMenu', [\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"j\" /* state */])('showing', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({\n        opacity: 1,\n        transform: \"scale(1)\"\n    })),\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"k\" /* transition */])('void => *', [\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({\n            opacity: 0,\n            transform: \"scale(0)\"\n        }),\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"l\" /* animate */])(\"200ms cubic-bezier(0.25, 0.8, 0.25, 1)\")\n    ]),\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"k\" /* transition */])('* => void', [\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"l\" /* animate */])('50ms 100ms linear', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({ opacity: 0 }))\n    ])\n]);\n/**\n * This animation fades in the background color and content of the menu panel\n * after its containing element is scaled in.\n */\nvar fadeInItems = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"i\" /* trigger */])('fadeInItems', [\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"j\" /* state */])('showing', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({ opacity: 1 })),\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"k\" /* transition */])('void => *', [\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({ opacity: 0 }),\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"l\" /* animate */])(\"200ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)\")\n    ])\n]);\n// TODO(kara): prevent-close functionality\nvar MdMenu = (function () {\n    /**\n     * @param {?} posX\n     * @param {?} posY\n     * @param {?} deprecatedPosX\n     * @param {?} deprecatedPosY\n     */\n    function MdMenu(posX, posY, deprecatedPosX, deprecatedPosY) {\n        /** Config object to be passed into the menu's ngClass */\n        this._classList = {};\n        /** Position of the menu in the X axis. */\n        this.positionX = 'after';\n        /** Position of the menu in the Y axis. */\n        this.positionY = 'below';\n        this.overlapTrigger = true;\n        /** Event emitted when the menu is closed. */\n        this.close = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        // TODO(kara): Remove kebab-case attributes after next release\n        if (deprecatedPosX) {\n            this._setPositionX(deprecatedPosX);\n        }\n        if (deprecatedPosY) {\n            this._setPositionY(deprecatedPosY);\n        }\n        if (posX) {\n            this._setPositionX(posX);\n        }\n        if (posY) {\n            this._setPositionY(posY);\n        }\n        this.setPositionClasses(this.positionX, this.positionY);\n    }\n    /**\n     * @return {?}\n     */\n    MdMenu.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this._keyManager = new FocusKeyManager(this.items).withWrap();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(function () {\n            _this._emitCloseEvent();\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MdMenu.prototype.ngOnDestroy = function () {\n        if (this._tabSubscription) {\n            this._tabSubscription.unsubscribe();\n        }\n    };\n    Object.defineProperty(MdMenu.prototype, \"classList\", {\n        /**\n         * This method takes classes set on the host md-menu element and applies them on the\n         * menu template that displays in the overlay container.  Otherwise, it's difficult\n         * to style the containing menu from outside the component.\n         * @param {?} classes list of class names\n         * @return {?}\n         */\n        set: function (classes) {\n            this._classList = classes.split(' ').reduce(function (obj, className) {\n                obj[className] = true;\n                return obj;\n            }, {});\n            this.setPositionClasses(this.positionX, this.positionY);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Focus the first item in the menu. This method is used by the menu trigger\n     * to focus the first item when the menu is opened by the ENTER key.\n     * @return {?}\n     */\n    MdMenu.prototype.focusFirstItem = function () {\n        this._keyManager.setFirstItemActive();\n    };\n    /**\n     * This emits a close event to which the trigger is subscribed. When emitted, the\n     * trigger will close the menu.\n     * @return {?}\n     */\n    MdMenu.prototype._emitCloseEvent = function () {\n        this.close.emit();\n    };\n    /**\n     * @param {?} pos\n     * @return {?}\n     */\n    MdMenu.prototype._setPositionX = function (pos) {\n        if (pos !== 'before' && pos !== 'after') {\n            throw new MdMenuInvalidPositionX();\n        }\n        this.positionX = pos;\n    };\n    /**\n     * @param {?} pos\n     * @return {?}\n     */\n    MdMenu.prototype._setPositionY = function (pos) {\n        if (pos !== 'above' && pos !== 'below') {\n            throw new MdMenuInvalidPositionY();\n        }\n        this.positionY = pos;\n    };\n    /**\n     * It's necessary to set position-based classes to ensure the menu panel animation\n     * folds out from the correct direction.\n     * @param {?} posX\n     * @param {?} posY\n     * @return {?}\n     */\n    MdMenu.prototype.setPositionClasses = function (posX, posY) {\n        this._classList['mat-menu-before'] = posX == 'before';\n        this._classList['mat-menu-after'] = posX == 'after';\n        this._classList['mat-menu-above'] = posY == 'above';\n        this._classList['mat-menu-below'] = posY == 'below';\n    };\n    return MdMenu;\n}());\nMdMenu.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-menu, mat-menu',\n                host: { 'role': 'menu' },\n                template: \"<ng-template> <div class=\\\"mat-menu-panel\\\" [ngClass]=\\\"_classList\\\" (keydown)=\\\"_keyManager.onKeydown($event)\\\" (click)=\\\"_emitCloseEvent()\\\" [@transformMenu]=\\\"'showing'\\\"> <div class=\\\"mat-menu-content\\\" [@fadeInItems]=\\\"'showing'\\\"> <ng-content></ng-content> </div> </div> </ng-template> \",\n                styles: [\".mat-menu-panel{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh + 48px)}.mat-menu-panel.mat-menu-after.mat-menu-below{transform-origin:left top}.mat-menu-panel.mat-menu-after.mat-menu-above{transform-origin:left bottom}.mat-menu-panel.mat-menu-before.mat-menu-below{transform-origin:right top}.mat-menu-panel.mat-menu-before.mat-menu-above{transform-origin:right bottom}[dir=rtl] .mat-menu-panel.mat-menu-after.mat-menu-below{transform-origin:right top}[dir=rtl] .mat-menu-panel.mat-menu-after.mat-menu-above{transform-origin:right bottom}[dir=rtl] .mat-menu-panel.mat-menu-before.mat-menu-below{transform-origin:left top}[dir=rtl] .mat-menu-panel.mat-menu-before.mat-menu-above{transform-origin:left bottom}@media screen and (-ms-high-contrast:active){.mat-menu-panel{outline:solid 1px}}.mat-menu-content{padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;font-size:16px;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;text-align:left;text-decoration:none;position:relative}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px}button.mat-menu-item{width:100%}.mat-menu-ripple{position:absolute;top:0;left:0;bottom:0;right:0} /*# sourceMappingURL=menu.css.map */ \"],\n                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None,\n                animations: [\n                    transformMenu,\n                    fadeInItems\n                ],\n                exportAs: 'mdMenu'\n            },] },\n];\n/**\n * @nocollapse\n */\nMdMenu.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Attribute\"], args: ['xPosition',] },] },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Attribute\"], args: ['yPosition',] },] },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Attribute\"], args: ['x-position',] },] },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Attribute\"], args: ['y-position',] },] },\n]; };\nMdMenu.propDecorators = {\n    'templateRef': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewChild\"], args: [__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"TemplateRef\"],] },],\n    'items': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChildren\"], args: [MdMenuItem,] },],\n    'overlapTrigger': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'classList': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['class',] },],\n    'close': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n};\n/**\n * This directive is intended to be used in conjunction with an md-menu tag.  It is\n * responsible for toggling the display of the provided menu instance.\n */\nvar MdMenuTrigger = (function () {\n    /**\n     * @param {?} _overlay\n     * @param {?} _element\n     * @param {?} _viewContainerRef\n     * @param {?} _renderer\n     * @param {?} _dir\n     */\n    function MdMenuTrigger(_overlay, _element, _viewContainerRef, _renderer, _dir) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._renderer = _renderer;\n        this._dir = _dir;\n        this._menuOpen = false;\n        this._openedByMouse = false;\n        /** Event emitted when the associated menu is opened. */\n        this.onMenuOpen = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /** Event emitted when the associated menu is closed. */\n        this.onMenuClose = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n    }\n    Object.defineProperty(MdMenuTrigger.prototype, \"_deprecatedMdMenuTriggerFor\", {\n        /**\n         * @deprecated\n         * @return {?}\n         */\n        get: function () { return this.menu; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this.menu = v; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdMenuTrigger.prototype, \"_deprecatedMatMenuTriggerFor\", {\n        /**\n         * @deprecated\n         * @return {?}\n         */\n        get: function () { return this.menu; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this.menu = v; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdMenuTrigger.prototype, \"_matMenuTriggerFor\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.menu; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this.menu = v; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdMenuTrigger.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        this._checkMenu();\n        this.menu.close.subscribe(function () { return _this.closeMenu(); });\n    };\n    /**\n     * @return {?}\n     */\n    MdMenuTrigger.prototype.ngOnDestroy = function () { this.destroyMenu(); };\n    Object.defineProperty(MdMenuTrigger.prototype, \"menuOpen\", {\n        /**\n         * Whether the menu is open.\n         * @return {?}\n         */\n        get: function () { return this._menuOpen; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Toggles the menu between the open and closed states.\n     * @return {?}\n     */\n    MdMenuTrigger.prototype.toggleMenu = function () {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    };\n    /**\n     * Opens the menu.\n     * @return {?}\n     */\n    MdMenuTrigger.prototype.openMenu = function () {\n        if (!this._menuOpen) {\n            this._createOverlay();\n            this._overlayRef.attach(this._portal);\n            this._subscribeToBackdrop();\n            this._initMenu();\n        }\n    };\n    /**\n     * Closes the menu.\n     * @return {?}\n     */\n    MdMenuTrigger.prototype.closeMenu = function () {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n            this._backdropSubscription.unsubscribe();\n            this._resetMenu();\n        }\n    };\n    /**\n     * Removes the menu from the DOM.\n     * @return {?}\n     */\n    MdMenuTrigger.prototype.destroyMenu = function () {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n            this._cleanUpSubscriptions();\n        }\n    };\n    /**\n     * Focuses the menu trigger.\n     * @return {?}\n     */\n    MdMenuTrigger.prototype.focus = function () {\n        this._renderer.invokeElementMethod(this._element.nativeElement, 'focus');\n    };\n    Object.defineProperty(MdMenuTrigger.prototype, \"dir\", {\n        /**\n         * The text direction of the containing app.\n         * @return {?}\n         */\n        get: function () {\n            return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * This method ensures that the menu closes when the overlay backdrop is clicked.\n     * We do not use first() here because doing so would not catch clicks from within\n     * the menu, and it would fail to unsubscribe properly. Instead, we unsubscribe\n     * explicitly when the menu is closed or destroyed.\n     * @return {?}\n     */\n    MdMenuTrigger.prototype._subscribeToBackdrop = function () {\n        var _this = this;\n        this._backdropSubscription = this._overlayRef.backdropClick().subscribe(function () {\n            _this.menu._emitCloseEvent();\n        });\n    };\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     * @return {?}\n     */\n    MdMenuTrigger.prototype._initMenu = function () {\n        this._setIsMenuOpen(true);\n        // Should only set focus if opened via the keyboard, so keyboard users can\n        // can easily navigate menu items. According to spec, mouse users should not\n        // see the focus style.\n        if (!this._openedByMouse) {\n            this.menu.focusFirstItem();\n        }\n    };\n    ;\n    /**\n     * This method resets the menu when it's closed, most importantly restoring\n     * focus to the menu trigger if the menu was opened via the keyboard.\n     * @return {?}\n     */\n    MdMenuTrigger.prototype._resetMenu = function () {\n        this._setIsMenuOpen(false);\n        // Focus only needs to be reset to the host element if the menu was opened\n        // by the keyboard and manually shifted to the first menu item.\n        if (!this._openedByMouse) {\n            this.focus();\n        }\n        this._openedByMouse = false;\n    };\n    /**\n     * @param {?} isOpen\n     * @return {?}\n     */\n    MdMenuTrigger.prototype._setIsMenuOpen = function (isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.onMenuOpen.emit() : this.onMenuClose.emit();\n    };\n    /**\n     *  This method checks that a valid instance of MdMenu has been passed into\n     *  mdMenuTriggerFor. If not, an exception is thrown.\n     * @return {?}\n     */\n    MdMenuTrigger.prototype._checkMenu = function () {\n        if (!this.menu) {\n            throw new MdMenuMissingError();\n        }\n    };\n    /**\n     *  This method creates the overlay from the provided menu's template and saves its\n     *  OverlayRef so that it can be attached to the DOM when openMenu is called.\n     * @return {?}\n     */\n    MdMenuTrigger.prototype._createOverlay = function () {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n            var /** @type {?} */ config = this._getOverlayConfig();\n            this._subscribeToPositions(/** @type {?} */ (config.positionStrategy));\n            this._overlayRef = this._overlay.create(config);\n        }\n    };\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @return {?} OverlayState\n     */\n    MdMenuTrigger.prototype._getOverlayConfig = function () {\n        var /** @type {?} */ overlayState = new OverlayState();\n        overlayState.positionStrategy = this._getPosition()\n            .withDirection(this.dir);\n        overlayState.hasBackdrop = true;\n        overlayState.backdropClass = 'cdk-overlay-transparent-backdrop';\n        overlayState.direction = this.dir;\n        return overlayState;\n    };\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     * @param {?} position\n     * @return {?}\n     */\n    MdMenuTrigger.prototype._subscribeToPositions = function (position) {\n        var _this = this;\n        this._positionSubscription = position.onPositionChange.subscribe(function (change) {\n            var /** @type {?} */ posX = change.connectionPair.originX === 'start' ? 'after' : 'before';\n            var /** @type {?} */ posY = change.connectionPair.originY === 'top' ? 'below' : 'above';\n            if (!_this.menu.overlapTrigger) {\n                posY = posY === 'below' ? 'above' : 'below';\n            }\n            _this.menu.setPositionClasses(posX, posY);\n        });\n    };\n    /**\n     * This method builds the position strategy for the overlay, so the menu is properly connected\n     * to the trigger.\n     * @return {?} ConnectedPositionStrategy\n     */\n    MdMenuTrigger.prototype._getPosition = function () {\n        var _a = this.menu.positionX === 'before' ? ['end', 'start'] : ['start', 'end'], posX = _a[0], fallbackX = _a[1];\n        var _b = this.menu.positionY === 'above' ? ['bottom', 'top'] : ['top', 'bottom'], overlayY = _b[0], fallbackOverlayY = _b[1];\n        var /** @type {?} */ originY = overlayY;\n        var /** @type {?} */ fallbackOriginY = fallbackOverlayY;\n        if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            fallbackOriginY = fallbackOverlayY === 'top' ? 'bottom' : 'top';\n        }\n        return this._overlay.position()\n            .connectedTo(this._element, { originX: posX, originY: originY }, { overlayX: posX, overlayY: overlayY })\n            .withFallbackPosition({ originX: fallbackX, originY: originY }, { overlayX: fallbackX, overlayY: overlayY })\n            .withFallbackPosition({ originX: posX, originY: fallbackOriginY }, { overlayX: posX, overlayY: fallbackOverlayY })\n            .withFallbackPosition({ originX: fallbackX, originY: fallbackOriginY }, { overlayX: fallbackX, overlayY: fallbackOverlayY });\n    };\n    /**\n     * @return {?}\n     */\n    MdMenuTrigger.prototype._cleanUpSubscriptions = function () {\n        if (this._backdropSubscription) {\n            this._backdropSubscription.unsubscribe();\n        }\n        if (this._positionSubscription) {\n            this._positionSubscription.unsubscribe();\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdMenuTrigger.prototype._handleMousedown = function (event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            this._openedByMouse = true;\n        }\n    };\n    return MdMenuTrigger;\n}());\nMdMenuTrigger.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: \"[md-menu-trigger-for], [mat-menu-trigger-for],\\n             [mdMenuTriggerFor], [matMenuTriggerFor]\",\n                host: {\n                    'aria-haspopup': 'true',\n                    '(mousedown)': '_handleMousedown($event)',\n                    '(click)': 'toggleMenu()',\n                },\n                exportAs: 'mdMenuTrigger'\n            },] },\n];\n/**\n * @nocollapse\n */\nMdMenuTrigger.ctorParameters = function () { return [\n    { type: Overlay, },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewContainerRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: Dir, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] },] },\n]; };\nMdMenuTrigger.propDecorators = {\n    '_deprecatedMdMenuTriggerFor': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['md-menu-trigger-for',] },],\n    '_deprecatedMatMenuTriggerFor': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['mat-menu-trigger-for',] },],\n    '_matMenuTriggerFor': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['matMenuTriggerFor',] },],\n    'menu': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['mdMenuTriggerFor',] },],\n    'onMenuOpen': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n    'onMenuClose': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n};\nvar MdMenuModule = (function () {\n    function MdMenuModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdMenuModule.forRoot = function () {\n        return {\n            ngModule: MdMenuModule,\n            providers: [],\n        };\n    };\n    return MdMenuModule;\n}());\nMdMenuModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [\n                    OverlayModule,\n                    __WEBPACK_IMPORTED_MODULE_2__angular_common__[\"CommonModule\"],\n                    MdRippleModule,\n                    CompatibilityModule,\n                ],\n                exports: [MdMenu, MdMenuItem, MdMenuTrigger, CompatibilityModule],\n                declarations: [MdMenu, MdMenuItem, MdMenuTrigger],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdMenuModule.ctorParameters = function () { return []; };\n/**\n * Reference to a dialog opened via the MdDialog service.\n */\nvar MdDialogRef = (function () {\n    /**\n     * @param {?} _overlayRef\n     * @param {?} _containerInstance\n     */\n    function MdDialogRef(_overlayRef, _containerInstance) {\n        var _this = this;\n        this._overlayRef = _overlayRef;\n        this._containerInstance = _containerInstance;\n        this._afterClosed = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__[\"Subject\"]();\n        _containerInstance._onAnimationStateChange.subscribe(function (state$$1) {\n            if (state$$1 === 'exit-start') {\n                // Transition the backdrop in parallel with the dialog.\n                _this._overlayRef.detachBackdrop();\n            }\n            else if (state$$1 === 'exit') {\n                _this._overlayRef.dispose();\n                _this._afterClosed.next(_this._result);\n                _this._afterClosed.complete();\n                _this.componentInstance = null;\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param {?=} dialogResult Optional result to return to the dialog opener.\n     * @return {?}\n     */\n    MdDialogRef.prototype.close = function (dialogResult) {\n        this._result = dialogResult;\n        this._containerInstance._exit();\n    };\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     * @return {?}\n     */\n    MdDialogRef.prototype.afterClosed = function () {\n        return this._afterClosed.asObservable();\n    };\n    /**\n     * Updates the dialog's position.\n     * @param {?=} position New dialog position.\n     * @return {?}\n     */\n    MdDialogRef.prototype.updatePosition = function (position) {\n        var /** @type {?} */ strategy = this._getPositionStrategy();\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        this._overlayRef.updatePosition();\n        return this;\n    };\n    /**\n     * Updates the dialog's width and height.\n     * @param {?=} width New width of the dialog.\n     * @param {?=} height New height of the dialog.\n     * @return {?}\n     */\n    MdDialogRef.prototype.updateSize = function (width, height) {\n        if (width === void 0) { width = 'auto'; }\n        if (height === void 0) { height = 'auto'; }\n        this._getPositionStrategy().width(width).height(height);\n        this._overlayRef.updatePosition();\n        return this;\n    };\n    /**\n     * Fetches the position strategy object from the overlay ref.\n     * @return {?}\n     */\n    MdDialogRef.prototype._getPositionStrategy = function () {\n        return (this._overlayRef.getState().positionStrategy);\n    };\n    return MdDialogRef;\n}());\nvar MD_DIALOG_DATA = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"OpaqueToken\"]('MdDialogData');\n/**\n * Custom injector type specifically for instantiating components with a dialog.\n */\nvar DialogInjector = (function () {\n    /**\n     * @param {?} _parentInjector\n     * @param {?} _dialogRef\n     * @param {?} _data\n     */\n    function DialogInjector(_parentInjector, _dialogRef, _data) {\n        this._parentInjector = _parentInjector;\n        this._dialogRef = _dialogRef;\n        this._data = _data;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    DialogInjector.prototype.get = function (token, notFoundValue) {\n        if (token === MdDialogRef) {\n            return this._dialogRef;\n        }\n        if (token === MD_DIALOG_DATA && this._data) {\n            return this._data;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    };\n    return DialogInjector;\n}());\n/**\n * Configuration for opening a modal dialog with the MdDialog service.\n */\nvar MdDialogConfig = (function () {\n    function MdDialogConfig() {\n        /** The ARIA role of the dialog element. */\n        this.role = 'dialog';\n        /** Whether the user can use escape or clicking outside to close a modal. */\n        this.disableClose = false;\n        /** Width of the dialog. */\n        this.width = '';\n        /** Height of the dialog. */\n        this.height = '';\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n    return MdDialogConfig;\n}());\n/**\n * Exception thrown when a ComponentPortal is attached to a DomPortalHost without an origin.\n * \\@docs-private\n */\nvar MdDialogContentAlreadyAttachedError = (function (_super) {\n    __extends(MdDialogContentAlreadyAttachedError, _super);\n    function MdDialogContentAlreadyAttachedError() {\n        return _super.call(this, 'Attempting to attach dialog content after content is already attached') || this;\n    }\n    return MdDialogContentAlreadyAttachedError;\n}(MdError));\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * \\@docs-private\n */\nvar MdDialogContainer = (function (_super) {\n    __extends(MdDialogContainer, _super);\n    /**\n     * @param {?} _ngZone\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     */\n    function MdDialogContainer(_ngZone, _renderer, _elementRef, _focusTrapFactory) {\n        var _this = _super.call(this) || this;\n        _this._ngZone = _ngZone;\n        _this._renderer = _renderer;\n        _this._elementRef = _elementRef;\n        _this._focusTrapFactory = _focusTrapFactory;\n        _this._elementFocusedBeforeDialogWasOpened = null;\n        /** State of the dialog animation. */\n        _this._state = 'enter';\n        /** Emits the current animation state whenever it changes. */\n        _this._onAnimationStateChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        return _this;\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @template T\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    MdDialogContainer.prototype.attachComponentPortal = function (portal) {\n        if (this._portalHost.hasAttached()) {\n            throw new MdDialogContentAlreadyAttachedError();\n        }\n        return this._portalHost.attachComponentPortal(portal);\n    };\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    MdDialogContainer.prototype.attachTemplatePortal = function (portal) {\n        if (this._portalHost.hasAttached()) {\n            throw new MdDialogContentAlreadyAttachedError();\n        }\n        return this._portalHost.attachTemplatePortal(portal);\n    };\n    /**\n     * Moves the focus inside the focus trap.\n     * @return {?}\n     */\n    MdDialogContainer.prototype._trapFocus = function () {\n        if (!this._focusTrap) {\n            this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        }\n        // If were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty.\n        this._elementFocusedBeforeDialogWasOpened = (document.activeElement);\n        this._focusTrap.focusFirstTabbableElementWhenReady();\n    };\n    /**\n     * Kicks off the leave animation.\n     * \\@docs-private\n     * @return {?}\n     */\n    MdDialogContainer.prototype._exit = function () {\n        this._state = 'exit';\n        this._onAnimationStateChange.emit('exit-start');\n    };\n    /**\n     * Callback, invoked whenever an animation on the host completes.\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    MdDialogContainer.prototype._onAnimationDone = function (event) {\n        if (event.toState === 'enter') {\n            this._trapFocus();\n        }\n        this._onAnimationStateChange.emit(/** @type {?} */ (event.toState));\n    };\n    /**\n     * @return {?}\n     */\n    MdDialogContainer.prototype.ngOnDestroy = function () {\n        // When the dialog is destroyed, return focus to the element that originally had it before\n        // the dialog was opened. Wait for the DOM to finish settling before changing the focus so\n        // that it doesn't end up back on the <body>. Also note that we need the extra check, because\n        // IE can set the `activeElement` to null in some cases.\n        var /** @type {?} */ toFocus = (this._elementFocusedBeforeDialogWasOpened);\n        // We shouldn't use `this` inside of the NgZone subscription, because it causes a memory leak.\n        var /** @type {?} */ animationStream = this._onAnimationStateChange;\n        this._ngZone.onMicrotaskEmpty.first().subscribe(function () {\n            if (toFocus && 'focus' in toFocus) {\n                toFocus.focus();\n            }\n            animationStream.complete();\n        });\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    };\n    return MdDialogContainer;\n}(BasePortalHost));\nMdDialogContainer.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-dialog-container, mat-dialog-container',\n                template: \"<ng-template cdkPortalHost></ng-template> \",\n                styles: [\".mat-dialog-container{box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12);display:block;padding:24px;border-radius:2px;box-sizing:border-box;overflow:auto;max-width:80vw;width:100%;height:100%}@media screen and (-ms-high-contrast:active){.mat-dialog-container{outline:solid 1px}}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto}.mat-dialog-title{font-size:20px;font-weight:700;margin:0 0 20px;display:block}.mat-dialog-actions{padding:12px 0;display:flex}.mat-dialog-actions:last-child{margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center} /*# sourceMappingURL=dialog.css.map */ \"],\n                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None,\n                animations: [\n                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"i\" /* trigger */])('slideDialog', [\n                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"j\" /* state */])('void', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({ transform: 'translateY(25%) scale(0.9)', opacity: 0 })),\n                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"j\" /* state */])('enter', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({ transform: 'translateY(0%) scale(1)', opacity: 1 })),\n                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"j\" /* state */])('exit', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"h\" /* style */])({ transform: 'translateY(25%)', opacity: 0 })),\n                        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"k\" /* transition */])('* => *', __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__angular_animations__[\"l\" /* animate */])('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\n                    ])\n                ],\n                host: {\n                    '[class.mat-dialog-container]': 'true',\n                    '[attr.role]': 'dialogConfig?.role',\n                    '[@slideDialog]': '_state',\n                    '(@slideDialog.done)': '_onAnimationDone($event)',\n                },\n            },] },\n];\n/**\n * @nocollapse\n */\nMdDialogContainer.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: FocusTrapFactory, },\n]; };\nMdDialogContainer.propDecorators = {\n    '_portalHost': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewChild\"], args: [PortalHostDirective,] },],\n};\n/**\n * Service to open Material Design modal dialogs.\n */\nvar MdDialog = (function () {\n    /**\n     * @param {?} _overlay\n     * @param {?} _injector\n     * @param {?} _parentDialog\n     */\n    function MdDialog(_overlay, _injector, _parentDialog) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._parentDialog = _parentDialog;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__[\"Subject\"]();\n        this._afterOpenAtThisLevel = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__[\"Subject\"]();\n        this._boundKeydown = this._handleKeydown.bind(this);\n        /** Gets an observable that is notified when a dialog has been opened. */\n        this.afterOpen = this._afterOpen.asObservable();\n        /** Gets an observable that is notified when all open dialog have finished closing. */\n        this.afterAllClosed = this._afterAllClosed.asObservable();\n    }\n    Object.defineProperty(MdDialog.prototype, \"_openDialogs\", {\n        /**\n         * Keeps track of the currently-open dialogs.\n         * @return {?}\n         */\n        get: function () {\n            return this._parentDialog ? this._parentDialog._openDialogs : this._openDialogsAtThisLevel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdDialog.prototype, \"_afterOpen\", {\n        /**\n         * Subject for notifying the user that a dialog has opened.\n         * @return {?}\n         */\n        get: function () {\n            return this._parentDialog ? this._parentDialog._afterOpen : this._afterOpenAtThisLevel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdDialog.prototype, \"_afterAllClosed\", {\n        /**\n         * Subject for notifying the user that all open dialogs have finished closing.\n         * @return {?}\n         */\n        get: function () {\n            return this._parentDialog ?\n                this._parentDialog._afterAllClosed : this._afterAllClosedAtThisLevel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Opens a modal dialog containing the given component.\n     * @template T\n     * @param {?} componentOrTemplateRef Type of the component to load into the dialog,\n     *     or a TemplateRef to instantiate as the dialog content.\n     * @param {?=} config Extra configuration options.\n     * @return {?} Reference to the newly-opened dialog.\n     */\n    MdDialog.prototype.open = function (componentOrTemplateRef, config) {\n        var _this = this;\n        config = _applyConfigDefaults$1(config);\n        var /** @type {?} */ overlayRef = this._createOverlay(config);\n        var /** @type {?} */ dialogContainer = this._attachDialogContainer(overlayRef, config);\n        var /** @type {?} */ dialogRef = this._attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config);\n        if (!this._openDialogs.length && !this._parentDialog) {\n            document.addEventListener('keydown', this._boundKeydown);\n        }\n        this._openDialogs.push(dialogRef);\n        dialogRef.afterClosed().subscribe(function () { return _this._removeOpenDialog(dialogRef); });\n        this._afterOpen.next(dialogRef);\n        return dialogRef;\n    };\n    /**\n     * Closes all of the currently-open dialogs.\n     * @return {?}\n     */\n    MdDialog.prototype.closeAll = function () {\n        var /** @type {?} */ i = this._openDialogs.length;\n        while (i--) {\n            // The `_openDialogs` property isn't updated after close until the rxjs subscription\n            // runs on the next microtask, in addition to modifying the array as we're going\n            // through it. We loop through all of them and call close without assuming that\n            // they'll be removed from the list instantaneously.\n            this._openDialogs[i].close();\n        }\n    };\n    /**\n     * Creates the overlay into which the dialog will be loaded.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the OverlayRef for the created overlay.\n     */\n    MdDialog.prototype._createOverlay = function (config) {\n        var /** @type {?} */ overlayState = this._getOverlayState(config);\n        return this._overlay.create(overlayState);\n    };\n    /**\n     * Creates an overlay state from a dialog config.\n     * @param {?} dialogConfig The dialog configuration.\n     * @return {?} The overlay configuration.\n     */\n    MdDialog.prototype._getOverlayState = function (dialogConfig) {\n        var /** @type {?} */ overlayState = new OverlayState();\n        overlayState.hasBackdrop = true;\n        overlayState.positionStrategy = this._overlay.position().global();\n        return overlayState;\n    };\n    /**\n     * Attaches an MdDialogContainer to a dialog's already-created overlay.\n     * @param {?} overlay Reference to the dialog's underlying overlay.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to a ComponentRef for the attached container.\n     */\n    MdDialog.prototype._attachDialogContainer = function (overlay, config) {\n        var /** @type {?} */ viewContainer = config ? config.viewContainerRef : null;\n        var /** @type {?} */ containerPortal = new ComponentPortal(MdDialogContainer, viewContainer);\n        var /** @type {?} */ containerRef = overlay.attach(containerPortal);\n        containerRef.instance.dialogConfig = config;\n        return containerRef.instance;\n    };\n    /**\n     * Attaches the user-provided component to the already-created MdDialogContainer.\n     * @template T\n     * @param {?} componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param {?} dialogContainer Reference to the wrapping MdDialogContainer.\n     * @param {?} overlayRef Reference to the overlay in which the dialog resides.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the MdDialogRef that should be returned to the user.\n     */\n    MdDialog.prototype._attachDialogContent = function (componentOrTemplateRef, dialogContainer, overlayRef, config) {\n        // Create a reference to the dialog we're creating in order to give the user a handle\n        // to modify and close it.\n        var /** @type {?} */ dialogRef = new MdDialogRef(overlayRef, dialogContainer);\n        if (!config.disableClose) {\n            // When the dialog backdrop is clicked, we want to close it.\n            overlayRef.backdropClick().first().subscribe(function () { return dialogRef.close(); });\n        }\n        // We create an injector specifically for the component we're instantiating so that it can\n        // inject the MdDialogRef. This allows a component loaded inside of a dialog to close itself\n        // and, optionally, to return a value.\n        var /** @type {?} */ userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        var /** @type {?} */ dialogInjector = new DialogInjector(userInjector || this._injector, dialogRef, config.data);\n        if (componentOrTemplateRef instanceof __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"TemplateRef\"]) {\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null));\n        }\n        else {\n            var /** @type {?} */ contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, null, dialogInjector));\n            dialogRef.componentInstance = contentRef.instance;\n        }\n        dialogRef\n            .updateSize(config.width, config.height)\n            .updatePosition(config.position);\n        return dialogRef;\n    };\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @param {?} dialogRef Dialog to be removed.\n     * @return {?}\n     */\n    MdDialog.prototype._removeOpenDialog = function (dialogRef) {\n        var /** @type {?} */ index = this._openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this._openDialogs.splice(index, 1);\n            // no open dialogs are left, call next on afterAllClosed Subject\n            if (!this._openDialogs.length) {\n                this._afterAllClosed.next();\n                document.removeEventListener('keydown', this._boundKeydown);\n            }\n        }\n    };\n    /**\n     * Handles global key presses while there are open dialogs. Closes the\n     * top dialog when the user presses escape.\n     * @param {?} event\n     * @return {?}\n     */\n    MdDialog.prototype._handleKeydown = function (event) {\n        var /** @type {?} */ topDialog = this._openDialogs[this._openDialogs.length - 1];\n        if (event.keyCode === ESCAPE && topDialog &&\n            !topDialog._containerInstance.dialogConfig.disableClose) {\n            topDialog.close();\n        }\n    };\n    return MdDialog;\n}());\nMdDialog.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nMdDialog.ctorParameters = function () { return [\n    { type: Overlay, },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injector\"], },\n    { type: MdDialog, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"SkipSelf\"] },] },\n]; };\n/**\n * Applies default options to the dialog config.\n * @param {?} config Config to be modified.\n * @return {?} The new configuration object.\n */\nfunction _applyConfigDefaults$1(config) {\n    return extendObject(new MdDialogConfig(), config);\n}\n/**\n * Button that will close the current dialog.\n */\nvar MdDialogClose = (function () {\n    /**\n     * @param {?} dialogRef\n     */\n    function MdDialogClose(dialogRef) {\n        this.dialogRef = dialogRef;\n        /** Screenreader label for the button. */\n        this.ariaLabel = 'Close dialog';\n    }\n    return MdDialogClose;\n}());\nMdDialogClose.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'button[md-dialog-close], button[mat-dialog-close]',\n                host: {\n                    '(click)': 'dialogRef.close()',\n                    '[attr.aria-label]': 'ariaLabel',\n                    'type': 'button',\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdDialogClose.ctorParameters = function () { return [\n    { type: MdDialogRef, },\n]; };\nMdDialogClose.propDecorators = {\n    'ariaLabel': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['aria-label',] },],\n};\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nvar MdDialogTitle = (function () {\n    function MdDialogTitle() {\n    }\n    return MdDialogTitle;\n}());\nMdDialogTitle.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[md-dialog-title], [mat-dialog-title]',\n                host: {\n                    '[class.mat-dialog-title]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdDialogTitle.ctorParameters = function () { return []; };\n/**\n * Scrollable content container of a dialog.\n */\nvar MdDialogContent = (function () {\n    function MdDialogContent() {\n    }\n    return MdDialogContent;\n}());\nMdDialogContent.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[md-dialog-content], md-dialog-content, [mat-dialog-content], mat-dialog-content',\n                host: {\n                    '[class.mat-dialog-content]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdDialogContent.ctorParameters = function () { return []; };\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nvar MdDialogActions = (function () {\n    function MdDialogActions() {\n    }\n    return MdDialogActions;\n}());\nMdDialogActions.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[md-dialog-actions], md-dialog-actions, [mat-dialog-actions], mat-dialog-actions',\n                host: {\n                    '[class.mat-dialog-actions]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdDialogActions.ctorParameters = function () { return []; };\nvar MdDialogModule = (function () {\n    function MdDialogModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdDialogModule.forRoot = function () {\n        return {\n            ngModule: MdDialogModule,\n            providers: [],\n        };\n    };\n    return MdDialogModule;\n}());\nMdDialogModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [\n                    OverlayModule,\n                    PortalModule,\n                    A11yModule,\n                    CompatibilityModule,\n                ],\n                exports: [\n                    MdDialogContainer,\n                    MdDialogClose,\n                    MdDialogTitle,\n                    MdDialogContent,\n                    MdDialogActions,\n                    CompatibilityModule,\n                ],\n                declarations: [\n                    MdDialogContainer,\n                    MdDialogClose,\n                    MdDialogTitle,\n                    MdDialogActions,\n                    MdDialogContent,\n                ],\n                providers: [\n                    MdDialog,\n                ],\n                entryComponents: [MdDialogContainer],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdDialogModule.ctorParameters = function () { return []; };\nvar ActiveDescendantKeyManager = (function (_super) {\n    __extends(ActiveDescendantKeyManager, _super);\n    /**\n     * @param {?} items\n     */\n    function ActiveDescendantKeyManager(items) {\n        return _super.call(this, items) || this;\n    }\n    /**\n     * This method sets the active item to the item at the specified index.\n     * It also adds active styles to the newly active item and removes active\n     * styles from the previously active item.\n     * @param {?} index\n     * @return {?}\n     */\n    ActiveDescendantKeyManager.prototype.setActiveItem = function (index) {\n        var _this = this;\n        Promise.resolve().then(function () {\n            if (_this.activeItem) {\n                _this.activeItem.setInactiveStyles();\n            }\n            _super.prototype.setActiveItem.call(_this, index);\n            if (_this.activeItem) {\n                _this.activeItem.setActiveStyles();\n            }\n        });\n    };\n    return ActiveDescendantKeyManager;\n}(ListKeyManager));\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nvar _uniqueAutocompleteIdCounter = 0;\nvar MdAutocomplete = (function () {\n    function MdAutocomplete() {\n        /** Whether the autocomplete panel displays above or below its trigger. */\n        this.positionY = 'below';\n        /** Whether the autocomplete panel should be visible, depending on option length. */\n        this.showPanel = false;\n        /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n        this.id = \"md-autocomplete-\" + _uniqueAutocompleteIdCounter++;\n    }\n    /**\n     * @return {?}\n     */\n    MdAutocomplete.prototype.ngAfterContentInit = function () {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n    };\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display\n     * options below the fold, as they are not actually being focused when active.\n     * @param {?} scrollTop\n     * @return {?}\n     */\n    MdAutocomplete.prototype._setScrollTop = function (scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    };\n    /**\n     * Panel should hide itself when the option list is empty.\n     * @return {?}\n     */\n    MdAutocomplete.prototype._setVisibility = function () {\n        var _this = this;\n        Promise.resolve().then(function () { return _this.showPanel = !!_this.options.length; });\n    };\n    /**\n     * Sets a class on the panel based on its position (used to set y-offset).\n     * @return {?}\n     */\n    MdAutocomplete.prototype._getClassList = function () {\n        return {\n            'mat-autocomplete-panel-below': this.positionY === 'below',\n            'mat-autocomplete-panel-above': this.positionY === 'above',\n            'mat-autocomplete-visible': this.showPanel,\n            'mat-autocomplete-hidden': !this.showPanel\n        };\n    };\n    return MdAutocomplete;\n}());\nMdAutocomplete.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{ selector: 'md-autocomplete, mat-autocomplete',\n                template: \"<ng-template> <div class=\\\"mat-autocomplete-panel\\\" role=\\\"listbox\\\" [id]=\\\"id\\\" [ngClass]=\\\"_getClassList()\\\" #panel> <ng-content></ng-content> </div> </ng-template> \",\n                styles: [\".mat-autocomplete-panel{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative}.mat-autocomplete-panel.mat-autocomplete-panel-below{top:6px}.mat-autocomplete-panel.mat-autocomplete-panel-above{top:-24px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden} /*# sourceMappingURL=autocomplete.css.map */ \"],\n                encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewEncapsulation\"].None,\n                exportAs: 'mdAutocomplete',\n                host: {\n                    '[class.mat-autocomplete]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdAutocomplete.ctorParameters = function () { return []; };\nMdAutocomplete.propDecorators = {\n    'template': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewChild\"], args: [__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"TemplateRef\"],] },],\n    'panel': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewChild\"], args: ['panel',] },],\n    'options': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ContentChildren\"], args: [MdOption,] },],\n    'displayWith': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the scrollTop of the panel. Because we are not\n * actually focusing the active item, scroll must be handled manually.\n */\n/** The height of each autocomplete option. */\nvar AUTOCOMPLETE_OPTION_HEIGHT = 48;\n/** The total height of the autocomplete panel. */\nvar AUTOCOMPLETE_PANEL_HEIGHT = 256;\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * \\@docs-private\n */\nvar MD_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: __WEBPACK_IMPORTED_MODULE_8__angular_forms__[\"NG_VALUE_ACCESSOR\"],\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return MdAutocompleteTrigger; }),\n    multi: true\n};\nvar MdAutocompleteTrigger = (function () {\n    /**\n     * @param {?} _element\n     * @param {?} _overlay\n     * @param {?} _viewContainerRef\n     * @param {?} _dir\n     * @param {?} _zone\n     * @param {?} _inputContainer\n     */\n    function MdAutocompleteTrigger(_element, _overlay, _viewContainerRef, _dir, _zone, _inputContainer) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._zone = _zone;\n        this._inputContainer = _inputContainer;\n        this._panelOpen = false;\n        this._blurStream = new __WEBPACK_IMPORTED_MODULE_3_rxjs_Subject__[\"Subject\"]();\n        this._manuallyFloatingPlaceholder = false;\n        /** View -> model callback called when value changes */\n        this._onChange = function (value) { };\n        /** View -> model callback called when autocomplete has been touched */\n        this._onTouched = function () { };\n    }\n    Object.defineProperty(MdAutocompleteTrigger.prototype, \"_matAutocomplete\", {\n        /**\n         * Property with mat- prefix for no-conflict mode.\n         * @return {?}\n         */\n        get: function () {\n            return this.autocomplete;\n        },\n        /**\n         * @param {?} autocomplete\n         * @return {?}\n         */\n        set: function (autocomplete) {\n            this.autocomplete = autocomplete;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype.ngOnDestroy = function () {\n        if (this._panelPositionSubscription) {\n            this._panelPositionSubscription.unsubscribe();\n        }\n        this._destroyPanel();\n    };\n    Object.defineProperty(MdAutocompleteTrigger.prototype, \"panelOpen\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._panelOpen && this.autocomplete.showPanel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Opens the autocomplete suggestion panel.\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype.openPanel = function () {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            /** Update the panel width, in case the host width has changed */\n            this._overlayRef.getState().width = this._getHostWidth();\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._portal);\n            this._subscribeToClosingActions();\n        }\n        this.autocomplete._setVisibility();\n        this._floatPlaceholder();\n        this._panelOpen = true;\n    };\n    /**\n     * Closes the autocomplete suggestion panel.\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype.closePanel = function () {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._panelOpen = false;\n        this._resetPlaceholder();\n    };\n    Object.defineProperty(MdAutocompleteTrigger.prototype, \"panelClosingActions\", {\n        /**\n         * A stream of actions that should close the autocomplete panel, including\n         * when an option is selected, on blur, and when TAB is pressed.\n         * @return {?}\n         */\n        get: function () {\n            return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__[\"Observable\"].merge(this.optionSelections, this._blurStream.asObservable(), this.autocomplete._keyManager.tabOut);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdAutocompleteTrigger.prototype, \"optionSelections\", {\n        /**\n         * Stream of autocomplete option selections.\n         * @return {?}\n         */\n        get: function () {\n            return __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__[\"Observable\"].merge.apply(__WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__[\"Observable\"], this.autocomplete.options.map(function (option) { return option.onSelectionChange; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdAutocompleteTrigger.prototype, \"activeOption\", {\n        /**\n         * The currently active option, coerced to MdOption type.\n         * @return {?}\n         */\n        get: function () {\n            if (this.autocomplete._keyManager) {\n                return (this.autocomplete._keyManager.activeItem);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the autocomplete's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype.writeValue = function (value) {\n        var _this = this;\n        Promise.resolve(null).then(function () { return _this._setTriggerValue(value); });\n    };\n    /**\n     * Saves a callback function to be invoked when the autocomplete's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype.registerOnChange = function (fn) {\n        this._onChange = fn;\n    };\n    /**\n     * Saves a callback function to be invoked when the autocomplete is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype.registerOnTouched = function (fn) {\n        this._onTouched = fn;\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._handleKeydown = function (event) {\n        var _this = this;\n        if (this.activeOption && event.keyCode === ENTER) {\n            this.activeOption._selectViaInteraction();\n            event.preventDefault();\n        }\n        else {\n            this.autocomplete._keyManager.onKeydown(event);\n            if (event.keyCode === UP_ARROW || event.keyCode === DOWN_ARROW) {\n                this.openPanel();\n                Promise.resolve().then(function () { return _this._scrollToOption(); });\n            }\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._handleInput = function (event) {\n        // We need to ensure that the input is focused, because IE will fire the `input`\n        // event on focus/blur/load if the input has a placeholder. See:\n        // https://connect.microsoft.com/IE/feedback/details/885747/\n        if (document.activeElement === event.target) {\n            this._onChange(((event.target)).value);\n            this.openPanel();\n        }\n    };\n    /**\n     * @param {?} newlyFocusedTag\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._handleBlur = function (newlyFocusedTag) {\n        this._onTouched();\n        // Only emit blur event if the new focus is *not* on an option.\n        if (newlyFocusedTag !== 'MD-OPTION') {\n            this._blurStream.next(null);\n        }\n    };\n    /**\n     * In \"auto\" mode, the placeholder will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the placeholder until the panel can be closed.\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._floatPlaceholder = function () {\n        if (this._inputContainer && this._inputContainer.floatPlaceholder === 'auto') {\n            this._inputContainer.floatPlaceholder = 'always';\n            this._manuallyFloatingPlaceholder = true;\n        }\n    };\n    /**\n     * If the placeholder has been manually elevated, return it to its normal state.\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._resetPlaceholder = function () {\n        if (this._manuallyFloatingPlaceholder) {\n            this._inputContainer.floatPlaceholder = 'auto';\n            this._manuallyFloatingPlaceholder = false;\n        }\n    };\n    /**\n     * Given that we are not actually focusing active options, we must manually adjust scroll\n     * to reveal options below the fold. First, we find the offset of the option from the top\n     * of the panel. The new scrollTop will be that offset - the panel height + the option\n     * height, so the active option will be just visible at the bottom of the panel.\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._scrollToOption = function () {\n        var /** @type {?} */ optionOffset = this.autocomplete._keyManager.activeItemIndex * AUTOCOMPLETE_OPTION_HEIGHT;\n        var /** @type {?} */ newScrollTop = Math.max(0, optionOffset - AUTOCOMPLETE_PANEL_HEIGHT + AUTOCOMPLETE_OPTION_HEIGHT);\n        this.autocomplete._setScrollTop(newScrollTop);\n    };\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._subscribeToClosingActions = function () {\n        var _this = this;\n        // When the zone is stable initially, and when the option list changes...\n        __WEBPACK_IMPORTED_MODULE_4_rxjs_Observable__[\"Observable\"].merge(this._zone.onStable.first(), this.autocomplete.options.changes)\n            .switchMap(function () {\n            _this._resetPanel();\n            return _this.panelClosingActions;\n        })\n            .first()\n            .subscribe(function (event) { return _this._setValueAndClose(event); });\n    };\n    /**\n     * Destroys the autocomplete suggestion panel.\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._destroyPanel = function () {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._setTriggerValue = function (value) {\n        var /** @type {?} */ toDisplay = this.autocomplete.displayWith ? this.autocomplete.displayWith(value) : value;\n        this._element.nativeElement.value = toDisplay || '';\n    };\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     * @param {?} event\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._setValueAndClose = function (event) {\n        if (event) {\n            this._clearPreviousSelectedOption(event.source);\n            this._setTriggerValue(event.source.value);\n            this._onChange(event.source.value);\n        }\n        this.closePanel();\n    };\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     * @param {?} skip\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._clearPreviousSelectedOption = function (skip) {\n        this.autocomplete.options.forEach(function (option) {\n            if (option != skip && option.selected) {\n                option.deselect();\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._createOverlay = function () {\n        this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n        this._overlayRef = this._overlay.create(this._getOverlayConfig());\n    };\n    /**\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._getOverlayConfig = function () {\n        var /** @type {?} */ overlayState = new OverlayState();\n        overlayState.positionStrategy = this._getOverlayPosition();\n        overlayState.width = this._getHostWidth();\n        overlayState.direction = this._dir ? this._dir.value : 'ltr';\n        return overlayState;\n    };\n    /**\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._getOverlayPosition = function () {\n        this._positionStrategy = this._overlay.position().connectedTo(this._element, { originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' })\n            .withFallbackPosition({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' });\n        this._subscribeToPositionChanges(this._positionStrategy);\n        return this._positionStrategy;\n    };\n    /**\n     * This method subscribes to position changes in the autocomplete panel, so the panel's\n     * y-offset can be adjusted to match the new position.\n     * @param {?} strategy\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._subscribeToPositionChanges = function (strategy) {\n        var _this = this;\n        this._panelPositionSubscription = strategy.onPositionChange.subscribe(function (change) {\n            _this.autocomplete.positionY = change.connectionPair.originY === 'top' ? 'above' : 'below';\n        });\n    };\n    /**\n     * Returns the width of the input element, so the panel width can match it.\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._getHostWidth = function () {\n        return this._element.nativeElement.getBoundingClientRect().width;\n    };\n    /**\n     * Reset active item to null so arrow events will activate the correct options.\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._resetActiveItem = function () {\n        this.autocomplete._keyManager.setActiveItem(null);\n    };\n    /**\n     * Resets the active item and re-calculates alignment of the panel in case its size\n     * has changed due to fewer or greater number of options.\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._resetPanel = function () {\n        this._resetActiveItem();\n        this._positionStrategy.recalculateLastPosition();\n        this.autocomplete._setVisibility();\n    };\n    return MdAutocompleteTrigger;\n}());\nMdAutocompleteTrigger.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'input[mdAutocomplete], input[matAutocomplete]',\n                host: {\n                    'role': 'combobox',\n                    'autocomplete': 'off',\n                    'aria-autocomplete': 'list',\n                    'aria-multiline': 'false',\n                    '[attr.aria-activedescendant]': 'activeOption?.id',\n                    '[attr.aria-expanded]': 'panelOpen.toString()',\n                    '[attr.aria-owns]': 'autocomplete?.id',\n                    '(focus)': 'openPanel()',\n                    '(blur)': '_handleBlur($event.relatedTarget?.tagName)',\n                    '(input)': '_handleInput($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                },\n                providers: [MD_AUTOCOMPLETE_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nMdAutocompleteTrigger.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: Overlay, },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewContainerRef\"], },\n    { type: Dir, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] },] },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\n    { type: MdInputContainer, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Host\"] },] },\n]; };\nMdAutocompleteTrigger.propDecorators = {\n    'autocomplete': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['mdAutocomplete',] },],\n    '_matAutocomplete': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['matAutocomplete',] },],\n};\nvar MdAutocompleteModule = (function () {\n    function MdAutocompleteModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdAutocompleteModule.forRoot = function () {\n        return {\n            ngModule: MdAutocompleteModule,\n            providers: [OVERLAY_PROVIDERS]\n        };\n    };\n    return MdAutocompleteModule;\n}());\nMdAutocompleteModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [MdOptionModule, OverlayModule, CompatibilityModule, __WEBPACK_IMPORTED_MODULE_2__angular_common__[\"CommonModule\"]],\n                exports: [MdAutocomplete, MdOptionModule, MdAutocompleteTrigger, CompatibilityModule],\n                declarations: [MdAutocomplete, MdAutocompleteTrigger],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdAutocompleteModule.ctorParameters = function () { return []; };\nvar MATERIAL_MODULES = [\n    MdAutocompleteModule,\n    MdButtonModule,\n    MdButtonToggleModule,\n    MdCardModule,\n    MdChipsModule,\n    MdCheckboxModule,\n    MdDialogModule,\n    MdGridListModule,\n    MdIconModule,\n    MdInputModule,\n    MdListModule,\n    MdMenuModule,\n    MdProgressBarModule,\n    MdProgressSpinnerModule,\n    MdRadioModule,\n    MdRippleModule,\n    MdSelectModule,\n    MdSidenavModule,\n    MdSliderModule,\n    MdSlideToggleModule,\n    MdSnackBarModule,\n    MdTabsModule,\n    MdToolbarModule,\n    MdTooltipModule,\n    OverlayModule,\n    PortalModule,\n    RtlModule,\n    StyleModule,\n    A11yModule,\n    PlatformModule,\n    CompatibilityModule,\n    ObserveContentModule\n];\n/**\n * @deprecated\n */\nvar MaterialRootModule = (function () {\n    function MaterialRootModule() {\n    }\n    return MaterialRootModule;\n}());\nMaterialRootModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: [\n                    MdAutocompleteModule.forRoot(),\n                    MdButtonModule.forRoot(),\n                    MdCardModule.forRoot(),\n                    MdChipsModule.forRoot(),\n                    MdCheckboxModule.forRoot(),\n                    MdGridListModule.forRoot(),\n                    MdInputModule.forRoot(),\n                    MdListModule.forRoot(),\n                    MdProgressBarModule.forRoot(),\n                    MdProgressSpinnerModule.forRoot(),\n                    MdRippleModule.forRoot(),\n                    MdSelectModule.forRoot(),\n                    MdSidenavModule.forRoot(),\n                    MdTabsModule.forRoot(),\n                    MdToolbarModule.forRoot(),\n                    PortalModule.forRoot(),\n                    RtlModule.forRoot(),\n                    ObserveContentModule.forRoot(),\n                    // These modules include providers.\n                    A11yModule.forRoot(),\n                    MdButtonToggleModule.forRoot(),\n                    MdDialogModule.forRoot(),\n                    MdIconModule.forRoot(),\n                    MdMenuModule.forRoot(),\n                    MdRadioModule.forRoot(),\n                    MdSliderModule.forRoot(),\n                    MdSlideToggleModule.forRoot(),\n                    MdSnackBarModule.forRoot(),\n                    MdTooltipModule.forRoot(),\n                    PlatformModule.forRoot(),\n                    OverlayModule.forRoot(),\n                    CompatibilityModule.forRoot(),\n                ],\n                exports: MATERIAL_MODULES,\n            },] },\n];\n/**\n * @nocollapse\n */\nMaterialRootModule.ctorParameters = function () { return []; };\n/**\n * @deprecated\n */\nvar MaterialModule = (function () {\n    function MaterialModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MaterialModule.forRoot = function () {\n        return { ngModule: MaterialRootModule };\n    };\n    return MaterialModule;\n}());\nMaterialModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                imports: MATERIAL_MODULES,\n                exports: MATERIAL_MODULES,\n            },] },\n];\n/**\n * @nocollapse\n */\nMaterialModule.ctorParameters = function () { return []; };\n/**\n * @module\n * @description\n * Entry point for all public APIs of Angular Material.\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n\n\n/***/ }),\n/* 236 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_platform_browser__ = __webpack_require__(31);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_animations__ = __webpack_require__(96);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__ = __webpack_require__(233);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BrowserAnimationsModule\", function() { return BrowserAnimationsModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NoopAnimationsModule\", function() { return NoopAnimationsModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵBrowserAnimationBuilder\", function() { return BrowserAnimationBuilder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵBrowserAnimationFactory\", function() { return BrowserAnimationFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵAnimationRenderer\", function() { return AnimationRenderer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵAnimationRendererFactory\", function() { return AnimationRendererFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵa\", function() { return BaseAnimationRenderer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵf\", function() { return BROWSER_ANIMATIONS_PROVIDERS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵg\", function() { return BROWSER_NOOP_ANIMATIONS_PROVIDERS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵb\", function() { return InjectableAnimationEngine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵd\", function() { return instantiateDefaultStyleNormalizer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵe\", function() { return instantiateRendererFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵc\", function() { return instantiateSupportedAnimationDriver; });\n\n/**\n * @license Angular v4.2.3\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n\n\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BrowserAnimationBuilder = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](BrowserAnimationBuilder, _super);\n    /**\n     * @param {?} rootRenderer\n     */\n    function BrowserAnimationBuilder(rootRenderer) {\n        var _this = _super.call(this) || this;\n        _this._nextAnimationId = 0;\n        var typeData = {\n            id: '0',\n            encapsulation: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ViewEncapsulation\"].None,\n            styles: [],\n            data: { animation: [] }\n        };\n        _this._renderer = rootRenderer.createRenderer(document.body, typeData);\n        return _this;\n    }\n    /**\n     * @param {?} animation\n     * @return {?}\n     */\n    BrowserAnimationBuilder.prototype.build = function (animation) {\n        var /** @type {?} */ id = this._nextAnimationId.toString();\n        this._nextAnimationId++;\n        var /** @type {?} */ entry = Array.isArray(animation) ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__angular_animations__[\"a\" /* sequence */])(animation) : animation;\n        issueAnimationCommand(this._renderer, null, id, 'register', [entry]);\n        return new BrowserAnimationFactory(id, this._renderer);\n    };\n    return BrowserAnimationBuilder;\n}(__WEBPACK_IMPORTED_MODULE_3__angular_animations__[\"b\" /* AnimationBuilder */]));\nBrowserAnimationBuilder.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nBrowserAnimationBuilder.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"RendererFactory2\"], },\n]; };\nvar BrowserAnimationFactory = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](BrowserAnimationFactory, _super);\n    /**\n     * @param {?} _id\n     * @param {?} _renderer\n     */\n    function BrowserAnimationFactory(_id, _renderer) {\n        var _this = _super.call(this) || this;\n        _this._id = _id;\n        _this._renderer = _renderer;\n        return _this;\n    }\n    /**\n     * @param {?} element\n     * @param {?=} options\n     * @return {?}\n     */\n    BrowserAnimationFactory.prototype.create = function (element, options) {\n        return new RendererAnimationPlayer(this._id, element, options || {}, this._renderer);\n    };\n    return BrowserAnimationFactory;\n}(__WEBPACK_IMPORTED_MODULE_3__angular_animations__[\"c\" /* AnimationFactory */]));\nvar RendererAnimationPlayer = (function () {\n    /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?} options\n     * @param {?} _renderer\n     */\n    function RendererAnimationPlayer(id, element, options, _renderer) {\n        this.id = id;\n        this.element = element;\n        this._renderer = _renderer;\n        this.parentPlayer = null;\n        this._started = false;\n        this.totalTime = 0;\n        this._command('create', options);\n    }\n    /**\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype._listen = function (eventName, callback) {\n        return this._renderer.listen(this.element, \"@@\" + this.id + \":\" + eventName, callback);\n    };\n    /**\n     * @param {?} command\n     * @param {...?} args\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype._command = function (command) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        return issueAnimationCommand(this._renderer, this.element, this.id, command, args);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.onDone = function (fn) { this._listen('done', fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.onStart = function (fn) { this._listen('start', fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.onDestroy = function (fn) { this._listen('destroy', fn); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.init = function () { this._command('init'); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.hasStarted = function () { return this._started; };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.play = function () {\n        this._command('play');\n        this._started = true;\n    };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.pause = function () { this._command('pause'); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.restart = function () { this._command('restart'); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.finish = function () { this._command('finish'); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.destroy = function () { this._command('destroy'); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.reset = function () { this._command('reset'); };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.setPosition = function (p) { this._command('setPosition', p); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.getPosition = function () { return 0; };\n    return RendererAnimationPlayer;\n}());\n/**\n * @param {?} renderer\n * @param {?} element\n * @param {?} id\n * @param {?} command\n * @param {?} args\n * @return {?}\n */\nfunction issueAnimationCommand(renderer, element, id, command, args) {\n    return renderer.setProperty(element, \"@@\" + id + \":\" + command, args);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AnimationRendererFactory = (function () {\n    /**\n     * @param {?} delegate\n     * @param {?} engine\n     * @param {?} _zone\n     */\n    function AnimationRendererFactory(delegate, engine, _zone) {\n        this.delegate = delegate;\n        this.engine = engine;\n        this._zone = _zone;\n        this._currentId = 0;\n        this._microtaskId = 1;\n        this._animationCallbacksBuffer = [];\n        this._rendererCache = new Map();\n        engine.onRemovalComplete = function (element, delegate) {\n            // Note: if an component element has a leave animation, and the component\n            // a host leave animation, the view engine will call `removeChild` for the parent\n            // component renderer as well as for the child component renderer.\n            // Therefore, we need to check if we already removed the element.\n            if (delegate && delegate.parentNode(element)) {\n                delegate.removeChild(element.parentNode, element);\n            }\n        };\n    }\n    /**\n     * @param {?} hostElement\n     * @param {?} type\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype.createRenderer = function (hostElement, type) {\n        var _this = this;\n        var /** @type {?} */ EMPTY_NAMESPACE_ID = '';\n        // cache the delegates to find out which cached delegate can\n        // be used by which cached renderer\n        var /** @type {?} */ delegate = this.delegate.createRenderer(hostElement, type);\n        if (!hostElement || !type || !type.data || !type.data['animation']) {\n            var /** @type {?} */ renderer = this._rendererCache.get(delegate);\n            if (!renderer) {\n                renderer = new BaseAnimationRenderer(EMPTY_NAMESPACE_ID, delegate, this.engine);\n                // only cache this result when the base renderer is used\n                this._rendererCache.set(delegate, renderer);\n            }\n            return renderer;\n        }\n        var /** @type {?} */ componentId = type.id;\n        var /** @type {?} */ namespaceId = type.id + '-' + this._currentId;\n        this._currentId++;\n        this.engine.register(namespaceId, hostElement);\n        var /** @type {?} */ animationTriggers = (type.data['animation']);\n        animationTriggers.forEach(function (trigger) { return _this.engine.registerTrigger(componentId, namespaceId, hostElement, trigger.name, trigger); });\n        return new AnimationRenderer(this, namespaceId, delegate, this.engine);\n    };\n    /**\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype.begin = function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype._scheduleCountTask = function () {\n        var _this = this;\n        Zone.current.scheduleMicroTask('incremenet the animation microtask', function () { return _this._microtaskId++; });\n    };\n    /**\n     * @param {?} count\n     * @param {?} fn\n     * @param {?} data\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype.scheduleListenerCallback = function (count, fn, data) {\n        var _this = this;\n        if (count >= 0 && count < this._microtaskId) {\n            this._zone.run(function () { return fn(data); });\n            return;\n        }\n        if (this._animationCallbacksBuffer.length == 0) {\n            Promise.resolve(null).then(function () {\n                _this._zone.run(function () {\n                    _this._animationCallbacksBuffer.forEach(function (tuple) {\n                        var fn = tuple[0], data = tuple[1];\n                        fn(data);\n                    });\n                    _this._animationCallbacksBuffer = [];\n                });\n            });\n        }\n        this._animationCallbacksBuffer.push([fn, data]);\n    };\n    /**\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype.end = function () {\n        var _this = this;\n        this._zone.runOutsideAngular(function () {\n            _this._scheduleCountTask();\n            _this.engine.flush(_this._microtaskId);\n        });\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype.whenRenderingDone = function () { return this.engine.whenRenderingDone(); };\n    return AnimationRendererFactory;\n}());\nAnimationRendererFactory.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nAnimationRendererFactory.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"RendererFactory2\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"a\" /* ɵAnimationEngine */], },\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgZone\"], },\n]; };\nvar BaseAnimationRenderer = (function () {\n    /**\n     * @param {?} namespaceId\n     * @param {?} delegate\n     * @param {?} engine\n     */\n    function BaseAnimationRenderer(namespaceId, delegate, engine) {\n        this.namespaceId = namespaceId;\n        this.delegate = delegate;\n        this.engine = engine;\n        this.destroyNode = this.delegate.destroyNode ? function (n) { return delegate.destroyNode(n); } : null;\n    }\n    Object.defineProperty(BaseAnimationRenderer.prototype, \"data\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.delegate.data; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.destroy = function () {\n        this.engine.destroy(this.namespaceId, this.delegate);\n        this.delegate.destroy();\n    };\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.createElement = function (name, namespace) {\n        return this.delegate.createElement(name, namespace);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.createComment = function (value) { return this.delegate.createComment(value); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.createText = function (value) { return this.delegate.createText(value); };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.appendChild = function (parent, newChild) {\n        this.delegate.appendChild(parent, newChild);\n        this.engine.onInsert(this.namespaceId, newChild, parent, false);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.insertBefore = function (parent, newChild, refChild) {\n        this.delegate.insertBefore(parent, newChild, refChild);\n        this.engine.onInsert(this.namespaceId, newChild, parent, true);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.removeChild = function (parent, oldChild) {\n        this.engine.onRemove(this.namespaceId, oldChild, this.delegate);\n    };\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.selectRootElement = function (selectorOrNode) { return this.delegate.selectRootElement(selectorOrNode); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.setAttribute = function (el, name, value, namespace) {\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.removeAttribute = function (el, name, namespace) {\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.addClass = function (el, name) { this.delegate.addClass(el, name); };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.removeClass = function (el, name) { this.delegate.removeClass(el, name); };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?=} flags\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.setStyle = function (el, style, value, flags) {\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?=} flags\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.removeStyle = function (el, style, flags) {\n        this.delegate.removeStyle(el, style, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.setProperty = function (el, name, value) {\n        this.delegate.setProperty(el, name, value);\n    };\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.setValue = function (node, value) { this.delegate.setValue(node, value); };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.listen = function (target, eventName, callback) {\n        return this.delegate.listen(target, eventName, callback);\n    };\n    return BaseAnimationRenderer;\n}());\nvar AnimationRenderer = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](AnimationRenderer, _super);\n    /**\n     * @param {?} factory\n     * @param {?} namespaceId\n     * @param {?} delegate\n     * @param {?} engine\n     */\n    function AnimationRenderer(factory, namespaceId, delegate, engine) {\n        var _this = _super.call(this, namespaceId, delegate, engine) || this;\n        _this.factory = factory;\n        _this.namespaceId = namespaceId;\n        return _this;\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    AnimationRenderer.prototype.setProperty = function (el, name, value) {\n        if (name.charAt(0) == '@') {\n            name = name.substr(1);\n            this.engine.setProperty(this.namespaceId, el, name, value);\n        }\n        else {\n            this.delegate.setProperty(el, name, value);\n        }\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    AnimationRenderer.prototype.listen = function (target, eventName, callback) {\n        var _this = this;\n        if (eventName.charAt(0) == '@') {\n            var /** @type {?} */ element = resolveElementFromTarget(target);\n            var /** @type {?} */ name = eventName.substr(1);\n            var /** @type {?} */ phase = '';\n            if (name.charAt(0) != '@') {\n                _a = parseTriggerCallbackName(name), name = _a[0], phase = _a[1];\n            }\n            return this.engine.listen(this.namespaceId, element, name, phase, function (event) {\n                var /** @type {?} */ countId = ((event))['_data'] || -1;\n                _this.factory.scheduleListenerCallback(countId, callback, event);\n            });\n        }\n        return this.delegate.listen(target, eventName, callback);\n        var _a;\n    };\n    return AnimationRenderer;\n}(BaseAnimationRenderer));\n/**\n * @param {?} target\n * @return {?}\n */\nfunction resolveElementFromTarget(target) {\n    switch (target) {\n        case 'body':\n            return document.body;\n        case 'document':\n            return document;\n        case 'window':\n            return window;\n        default:\n            return target;\n    }\n}\n/**\n * @param {?} triggerName\n * @return {?}\n */\nfunction parseTriggerCallbackName(triggerName) {\n    var /** @type {?} */ dotIndex = triggerName.indexOf('.');\n    var /** @type {?} */ trigger = triggerName.substring(0, dotIndex);\n    var /** @type {?} */ phase = triggerName.substr(dotIndex + 1);\n    return [trigger, phase];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InjectableAnimationEngine = (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __extends */](InjectableAnimationEngine, _super);\n    /**\n     * @param {?} driver\n     * @param {?} normalizer\n     */\n    function InjectableAnimationEngine(driver, normalizer) {\n        return _super.call(this, driver, normalizer) || this;\n    }\n    return InjectableAnimationEngine;\n}(__WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"a\" /* ɵAnimationEngine */]));\nInjectableAnimationEngine.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nInjectableAnimationEngine.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"b\" /* AnimationDriver */], },\n    { type: __WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"c\" /* ɵAnimationStyleNormalizer */], },\n]; };\n/**\n * @return {?}\n */\nfunction instantiateSupportedAnimationDriver() {\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"d\" /* ɵsupportsWebAnimations */])()) {\n        return new __WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"e\" /* ɵWebAnimationsDriver */]();\n    }\n    return new __WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"f\" /* ɵNoopAnimationDriver */]();\n}\n/**\n * @return {?}\n */\nfunction instantiateDefaultStyleNormalizer() {\n    return new __WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"g\" /* ɵWebAnimationsStyleNormalizer */]();\n}\n/**\n * @param {?} renderer\n * @param {?} engine\n * @param {?} zone\n * @return {?}\n */\nfunction instantiateRendererFactory(renderer, engine, zone) {\n    return new AnimationRendererFactory(renderer, engine, zone);\n}\nvar SHARED_ANIMATION_PROVIDERS = [\n    { provide: __WEBPACK_IMPORTED_MODULE_3__angular_animations__[\"b\" /* AnimationBuilder */], useClass: BrowserAnimationBuilder },\n    { provide: __WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"c\" /* ɵAnimationStyleNormalizer */], useFactory: instantiateDefaultStyleNormalizer },\n    { provide: __WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"a\" /* ɵAnimationEngine */], useClass: InjectableAnimationEngine }, {\n        provide: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"RendererFactory2\"],\n        useFactory: instantiateRendererFactory,\n        deps: [__WEBPACK_IMPORTED_MODULE_2__angular_platform_browser__[\"ɵDomRendererFactory2\"], __WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"a\" /* ɵAnimationEngine */], __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgZone\"]]\n    }\n];\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserModule.\n */\nvar BROWSER_ANIMATIONS_PROVIDERS = [\n    { provide: __WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"b\" /* AnimationDriver */], useFactory: instantiateSupportedAnimationDriver }\n].concat(SHARED_ANIMATION_PROVIDERS);\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserTestingModule.\n */\nvar BROWSER_NOOP_ANIMATIONS_PROVIDERS = [{ provide: __WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"b\" /* AnimationDriver */], useClass: __WEBPACK_IMPORTED_MODULE_4__angular_animations_browser__[\"f\" /* ɵNoopAnimationDriver */] }].concat(SHARED_ANIMATION_PROVIDERS);\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental Animation support is experimental.\n */\nvar BrowserAnimationsModule = (function () {\n    function BrowserAnimationsModule() {\n    }\n    return BrowserAnimationsModule;\n}());\nBrowserAnimationsModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"], args: [{\n                imports: [__WEBPACK_IMPORTED_MODULE_2__angular_platform_browser__[\"BrowserModule\"]],\n                providers: BROWSER_ANIMATIONS_PROVIDERS,\n            },] },\n];\n/**\n * @nocollapse\n */\nBrowserAnimationsModule.ctorParameters = function () { return []; };\n/**\n * \\@experimental Animation support is experimental.\n */\nvar NoopAnimationsModule = (function () {\n    function NoopAnimationsModule() {\n    }\n    return NoopAnimationsModule;\n}());\nNoopAnimationsModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"NgModule\"], args: [{\n                imports: [__WEBPACK_IMPORTED_MODULE_2__angular_platform_browser__[\"BrowserModule\"]],\n                providers: BROWSER_NOOP_ANIMATIONS_PROVIDERS,\n            },] },\n];\n/**\n * @nocollapse\n */\nNoopAnimationsModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation browser package.\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the animation package.\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=animations.es5.js.map\n\n\n/***/ }),\n/* 237 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar router_1 = __webpack_require__(40);\r\nvar cache_1 = __webpack_require__(141);\r\nvar dictionary_service_1 = __webpack_require__(26);\r\nvar fetcher_service_1 = __webpack_require__(97);\r\nvar pages_service_1 = __webpack_require__(41);\r\nvar pages_data_service_1 = __webpack_require__(51);\r\nvar event_emiter_service_1 = __webpack_require__(32);\r\nvar error_handler_service_1 = __webpack_require__(150);\r\nvar AppComponent = (function () {\r\n    function AppComponent(cache, router, fetcher, dictionary, pagesService, pagesDataService, eventEmiterService, errorHandlerService) {\r\n        var _this = this;\r\n        this.cache = cache;\r\n        this.router = router;\r\n        this.fetcher = fetcher;\r\n        this.dictionary = dictionary;\r\n        this.pagesService = pagesService;\r\n        this.pagesDataService = pagesDataService;\r\n        this.eventEmiterService = eventEmiterService;\r\n        this.errorHandlerService = errorHandlerService;\r\n        this.pages = [];\r\n        this.setData(cache.getPages());\r\n        fetcher.getPages().subscribe(function (data) { return _this.setData(data); }, function (err) { return _this.errorHandlerService.handleError(err); });\r\n    }\r\n    ;\r\n    AppComponent.prototype.setData = function (result) {\r\n        var response = {\r\n            pages: [],\r\n            pagesData: []\r\n        };\r\n        // if it comes from the back-end translate it, else it is cached version\r\n        if (result.json) {\r\n            response = result.json();\r\n        }\r\n        else {\r\n            response = result;\r\n        }\r\n        this.setPages(response.pages);\r\n        this.setPagesData(response.pagesData);\r\n        this.eventEmiterService.emitFetchedData(response);\r\n    };\r\n    AppComponent.prototype.setPages = function (pages) {\r\n        this.pages = pages;\r\n        this.pagesService.setPages(this.pages);\r\n    };\r\n    AppComponent.prototype.setPagesData = function (pagesData) {\r\n        this.pagesData = pagesData;\r\n        this.pagesDataService.setPagesData(this.pagesData);\r\n    };\r\n    AppComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'app',\r\n            template: __webpack_require__(410),\r\n            styles: [__webpack_require__(470), __webpack_require__(482), __webpack_require__(481)],\r\n            encapsulation: core_1.ViewEncapsulation.None\r\n        }),\r\n        __metadata(\"design:paramtypes\", [cache_1.Cache,\r\n            router_1.Router,\r\n            fetcher_service_1.FetcherService,\r\n            dictionary_service_1.Dictionary,\r\n            pages_service_1.PagesService,\r\n            pages_data_service_1.PagesDataService,\r\n            event_emiter_service_1.EventEmiterService,\r\n            error_handler_service_1.ErrorHandlerService])\r\n    ], AppComponent);\r\n    return AppComponent;\r\n}());\r\nexports.AppComponent = AppComponent;\r\n\n\n/***/ }),\n/* 238 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar router_1 = __webpack_require__(40);\r\n// Standard Views\r\nvar home_component_1 = __webpack_require__(145);\r\nvar page_component_1 = __webpack_require__(146);\r\nvar details_component_1 = __webpack_require__(144);\r\nvar contacts_component_1 = __webpack_require__(143);\r\nvar page_not_found_component_1 = __webpack_require__(147);\r\nvar appRoutes = [\r\n    {\r\n        path: '',\r\n        component: home_component_1.HomeComponent,\r\n        data: {\r\n            meta: {\r\n                title: 'Компютърни компоненти Жиланов: евтини РАМ(RAM) памети, видеонаблюдение, твърд диск и видеокарти',\r\n                description: 'Изберете от десетките видове RAM памети, хард дискове и компютърни части на промоционалните ни цени!'\r\n            }\r\n        }\r\n    }, {\r\n        path: 'insurance/:insurance',\r\n        component: page_component_1.PageComponent,\r\n        data: {\r\n            meta: {\r\n                description: 'Изберете от десетките видове RAM памети, хард дискове и компютърни части на промоционалните ни цени!'\r\n            }\r\n        }\r\n    }, {\r\n        path: 'blog/:blogLink',\r\n        component: details_component_1.DetailsComponent,\r\n        data: {\r\n            meta: {\r\n                description: 'Изберете от десетките видове RAM памети, хард дискове и компютърни части на промоционалните ни цени!'\r\n            }\r\n        }\r\n    }, {\r\n        path: 'contacts',\r\n        component: contacts_component_1.ContactsComponent,\r\n        data: {\r\n            meta: {\r\n                title: 'Връзка с Жиланов ЕООД',\r\n                description: 'Можете да се свържете с нас на телефон 0878466180 или чрез контактната форма'\r\n            }\r\n        }\r\n    }, {\r\n        path: '**',\r\n        component: page_not_found_component_1.PageNotFoundComponent\r\n    }\r\n];\r\nexports.appRoutingProviders = [];\r\nexports.routing = router_1.RouterModule.forRoot(appRoutes);\r\n\n\n/***/ }),\n/* 239 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar router_1 = __webpack_require__(40);\r\nvar pages_service_1 = __webpack_require__(41);\r\nvar dictionary_service_1 = __webpack_require__(26);\r\nvar event_emiter_service_1 = __webpack_require__(32);\r\n// import { DateComponent } from '../date/date.component';\r\nvar HeaderComponent = (function () {\r\n    function HeaderComponent(router, dictionary, pagesService, eventEmiterService) {\r\n        var _this = this;\r\n        this.router = router;\r\n        this.dictionary = dictionary;\r\n        this.pagesService = pagesService;\r\n        this.eventEmiterService = eventEmiterService;\r\n        this.pages = pagesService.getPages();\r\n        this.updatePagesIndex();\r\n        // on categories update we update the local array\r\n        this.eventEmiterService.dataFetched.subscribe(function (data) { return _this.onFetchedData(data); });\r\n    }\r\n    ;\r\n    HeaderComponent.prototype.onFetchedData = function (data) {\r\n        this.pages = data.pages;\r\n        this.updatePagesIndex();\r\n    };\r\n    HeaderComponent.prototype.changeLanguage = function () {\r\n        this.dictionary.changeLanguage();\r\n    };\r\n    HeaderComponent.prototype.updatePagesIndex = function () {\r\n        var array = [];\r\n        for (var pagesCounter = 0; pagesCounter < this.pages.length; pagesCounter++) {\r\n            if (this.pages[pagesCounter]['type'] == 'single') {\r\n                array[+this.pages[pagesCounter]['zIndex']] = this.pages[pagesCounter];\r\n            }\r\n            else if (this.pages[pagesCounter]['type'] == 'multiple') {\r\n                this.pages[pagesCounter]['sub'] = this.getSubCategories(this.pages[pagesCounter]['subCategories']);\r\n            }\r\n        }\r\n    };\r\n    HeaderComponent.prototype.getSubCategories = function (subCategoriesArray) {\r\n        var subs = [];\r\n        for (var categoriesCounter = 0; categoriesCounter < subCategoriesArray.length; categoriesCounter++) {\r\n            for (var pagesCounter = 0; pagesCounter < this.pages.length; pagesCounter++) {\r\n                if (this.pages[pagesCounter]['link'] == subCategoriesArray[categoriesCounter]) {\r\n                    subs.push(this.pages[pagesCounter]);\r\n                }\r\n            }\r\n        }\r\n        return subs;\r\n    };\r\n    HeaderComponent.prototype.getPageByLink = function (link) {\r\n        for (var pagesCounter = 0; pagesCounter < this.pages.length; pagesCounter++) {\r\n            if (this.pages[pagesCounter]['link'] == link) {\r\n                return this.pages[pagesCounter];\r\n            }\r\n        }\r\n    };\r\n    HeaderComponent.prototype.onLinkSelect = function (event) {\r\n        this.router.navigate(['/insurance/', this.valueCtrl]);\r\n        // TODO: FIX IT WHEN IT IS FIXED IN THE MATERIAL. There is still issue with the second select...\r\n        var timeoutEvent = event;\r\n        setTimeout((function () {\r\n            var span = timeoutEvent.source.trigger.nativeElement.getElementsByClassName('mat-select-value')[0];\r\n            if (span) {\r\n                span.innerHTML = \"\";\r\n            }\r\n            var title = timeoutEvent.source.trigger.nativeElement.getElementsByClassName('mat-select-placeholder')[0];\r\n            if (title) {\r\n                title.style = [];\r\n                title.className = \"mat-select-placeholder\";\r\n            }\r\n            this.valueCtrl = '';\r\n        }), 300);\r\n    };\r\n    HeaderComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'custom-header',\r\n            styles: [__webpack_require__(471)],\r\n            template: __webpack_require__(411)\r\n        }),\r\n        __metadata(\"design:paramtypes\", [router_1.Router,\r\n            dictionary_service_1.Dictionary,\r\n            pages_service_1.PagesService,\r\n            event_emiter_service_1.EventEmiterService])\r\n    ], HeaderComponent);\r\n    return HeaderComponent;\r\n}());\r\nexports.HeaderComponent = HeaderComponent;\r\n\n\n/***/ }),\n/* 240 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\n// import { DateComponent } from '../date/date.component';\r\nvar ImageComponent = (function () {\r\n    function ImageComponent() {\r\n        this.blankImage = '/img/3bf7019.png';\r\n    }\r\n    /**\r\n     * @ngOnInit on init\r\n     */\r\n    ImageComponent.prototype.ngOnInit = function () {\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], ImageComponent.prototype, \"src\", void 0);\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], ImageComponent.prototype, \"alt\", void 0);\r\n    ImageComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'image',\r\n            styles: [__webpack_require__(472)],\r\n            template: __webpack_require__(412)\r\n        })\r\n    ], ImageComponent);\r\n    return ImageComponent;\r\n}());\r\nexports.ImageComponent = ImageComponent;\r\n\n\n/***/ }),\n/* 241 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\n// import { DateComponent } from '../date/date.component';\r\nvar NotificationComponent = (function () {\r\n    function NotificationComponent() {\r\n        this.cPayChanged = new core_1.EventEmitter();\r\n        this.showOverlay = false;\r\n    }\r\n    /**\r\n     * @ngOnInit on init\r\n     */\r\n    NotificationComponent.prototype.ngOnInit = function () {\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], NotificationComponent.prototype, \"postOptions\", void 0);\r\n    __decorate([\r\n        core_1.Output(),\r\n        __metadata(\"design:type\", Object)\r\n    ], NotificationComponent.prototype, \"cPayChanged\", void 0);\r\n    NotificationComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'notification',\r\n            styles: [__webpack_require__(473)],\r\n            template: __webpack_require__(413)\r\n        })\r\n    ], NotificationComponent);\r\n    return NotificationComponent;\r\n}());\r\nexports.NotificationComponent = NotificationComponent;\r\n\n\n/***/ }),\n/* 242 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar dictionary_service_1 = __webpack_require__(26);\r\nvar PriceComponent = (function () {\r\n    function PriceComponent(dictionary) {\r\n        this.dictionary = dictionary;\r\n    }\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", Object)\r\n    ], PriceComponent.prototype, \"priceOptions\", void 0);\r\n    PriceComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'price',\r\n            styles: [__webpack_require__(474)],\r\n            template: __webpack_require__(414)\r\n        }),\r\n        __metadata(\"design:paramtypes\", [dictionary_service_1.Dictionary])\r\n    ], PriceComponent);\r\n    return PriceComponent;\r\n}());\r\nexports.PriceComponent = PriceComponent;\r\n\n\n/***/ }),\n/* 243 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(1);\r\nvar dictionary_service_1 = __webpack_require__(26);\r\nvar pages_service_1 = __webpack_require__(41);\r\nvar pages_data_service_1 = __webpack_require__(51);\r\nvar event_emiter_service_1 = __webpack_require__(32);\r\nvar SearchComponent = (function () {\r\n    function SearchComponent(dictionary, pagesService, pagesDataService, eventEmiterService) {\r\n        var _this = this;\r\n        this.dictionary = dictionary;\r\n        this.pagesService = pagesService;\r\n        this.pagesDataService = pagesDataService;\r\n        this.eventEmiterService = eventEmiterService;\r\n        this.pages = Array();\r\n        this.pagesData = Array();\r\n        this.pages = pagesService.getPages();\r\n        this.pagesData = pagesDataService.getPagesData();\r\n        // on categories update we update the local array\r\n        this.eventEmiterService.dataFetched.subscribe(function (data) { return _this.onFetchedData(data); });\r\n    }\r\n    ;\r\n    SearchComponent.prototype.onFetchedData = function (data) {\r\n        this.pages = data.products;\r\n        this.pagesData = data.categories;\r\n    };\r\n    SearchComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'search',\r\n            styles: [__webpack_require__(480)],\r\n            template: __webpack_require__(420)\r\n        }),\r\n        __metadata(\"design:paramtypes\", [dictionary_service_1.Dictionary,\r\n            pages_service_1.PagesService,\r\n            pages_data_service_1.PagesDataService,\r\n            event_emiter_service_1.EventEmiterService])\r\n    ], SearchComponent);\r\n    return SearchComponent;\r\n}());\r\nexports.SearchComponent = SearchComponent;\r\n\n\n/***/ }),\n/* 244 */,\n/* 245 */,\n/* 246 */,\n/* 247 */,\n/* 248 */,\n/* 249 */,\n/* 250 */,\n/* 251 */,\n/* 252 */,\n/* 253 */,\n/* 254 */,\n/* 255 */,\n/* 256 */,\n/* 257 */,\n/* 258 */,\n/* 259 */,\n/* 260 */,\n/* 261 */,\n/* 262 */,\n/* 263 */,\n/* 264 */,\n/* 265 */,\n/* 266 */,\n/* 267 */,\n/* 268 */,\n/* 269 */,\n/* 270 */,\n/* 271 */,\n/* 272 */,\n/* 273 */,\n/* 274 */,\n/* 275 */,\n/* 276 */,\n/* 277 */,\n/* 278 */,\n/* 279 */,\n/* 280 */,\n/* 281 */,\n/* 282 */,\n/* 283 */,\n/* 284 */,\n/* 285 */,\n/* 286 */,\n/* 287 */,\n/* 288 */,\n/* 289 */,\n/* 290 */,\n/* 291 */,\n/* 292 */,\n/* 293 */,\n/* 294 */,\n/* 295 */,\n/* 296 */,\n/* 297 */,\n/* 298 */,\n/* 299 */,\n/* 300 */,\n/* 301 */,\n/* 302 */,\n/* 303 */,\n/* 304 */,\n/* 305 */,\n/* 306 */,\n/* 307 */,\n/* 308 */,\n/* 309 */,\n/* 310 */,\n/* 311 */,\n/* 312 */,\n/* 313 */,\n/* 314 */,\n/* 315 */,\n/* 316 */,\n/* 317 */,\n/* 318 */,\n/* 319 */,\n/* 320 */,\n/* 321 */,\n/* 322 */,\n/* 323 */,\n/* 324 */,\n/* 325 */,\n/* 326 */,\n/* 327 */,\n/* 328 */,\n/* 329 */,\n/* 330 */,\n/* 331 */,\n/* 332 */,\n/* 333 */,\n/* 334 */,\n/* 335 */,\n/* 336 */,\n/* 337 */,\n/* 338 */,\n/* 339 */,\n/* 340 */,\n/* 341 */,\n/* 342 */,\n/* 343 */,\n/* 344 */,\n/* 345 */,\n/* 346 */,\n/* 347 */,\n/* 348 */,\n/* 349 */,\n/* 350 */,\n/* 351 */,\n/* 352 */,\n/* 353 */,\n/* 354 */,\n/* 355 */,\n/* 356 */,\n/* 357 */,\n/* 358 */,\n/* 359 */,\n/* 360 */,\n/* 361 */,\n/* 362 */,\n/* 363 */,\n/* 364 */,\n/* 365 */,\n/* 366 */,\n/* 367 */,\n/* 368 */,\n/* 369 */,\n/* 370 */,\n/* 371 */,\n/* 372 */,\n/* 373 */,\n/* 374 */,\n/* 375 */,\n/* 376 */,\n/* 377 */,\n/* 378 */,\n/* 379 */,\n/* 380 */,\n/* 381 */,\n/* 382 */,\n/* 383 */,\n/* 384 */,\n/* 385 */,\n/* 386 */,\n/* 387 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(16)();\n// imports\n\n\n// module\nexports.push([module.i, \".no-paddings,custom-header{padding:0!important}.center{text-align:center}custom-header{z-index:5}.home{background:#d6d7d9;min-height:100vh!important}md-select .mat-select-placeholder{color:#000!important;font-size:12px!important}@media screen and (max-width:992px){.mat-menu-panel{max-width:100%!important}}.star-icon:before{color:#f2761c!important}.star-icon{font-size:12px!important}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 388 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(16)();\n// imports\n\n\n// module\nexports.push([module.i, \".logo{display:block}.logo img{height:50px}.fill-remaining-space,.nav-item{flex:1 1 auto}[role=img]{cursor:pointer}md-toolbar{background-color:hsla(0,0%,100%,.6)!important;padding:20px}md-toolbar button{color:#000;font-size:12px;font-weight:400}md-select{padding:0 6px;margin:6px 8px;min-width:88px;border-radius:3px;text-align:center;text-transform:uppercase;text-decoration:none;border:none;outline:none}md-toolbar button.categories-button{font-size:20px;margin-left:30px}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 389 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(16)();\n// imports\n\n\n// module\nexports.push([module.i, \"img{max-width:100%}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 390 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(16)();\n// imports\n\n\n// module\nexports.push([module.i, \"\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 391 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(16)();\n// imports\n\n\n// module\nexports.push([module.i, \".line-through{text-decoration:line-through}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 392 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(16)();\n// imports\n\n\n// module\nexports.push([module.i, \".map-section,.phone-section{padding-left:100px}.sebm-google-map-container{height:500px}.info-window-container img{height:30px}.company{text-align:center}.red{color:red}.yellow{color:#ff0}h2{text-align:left}.phone-section img{max-width:50px}.phone-section bold{font-weight:900}.phone-section .contact{margin-top:14px}.phone-section .contact.duo{margin-top:8px}.rating{color:#f2761c}a:link{text-decoration:none}a:link,a:visited{color:#2f4f4f}a:hover{color:#dc143c}a:active{color:blue}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 393 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(16)();\n// imports\n\n\n// module\nexports.push([module.i, \".center{text-align:center}.details{margin-top:40px}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 394 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(16)();\n// imports\n\n\n// module\nexports.push([module.i, \".carousel{height:400px;margin-top:-108px;background:#fff url(\\\"./src/img/background.png\\\") no-repeat 50%;background-size:100% auto}.info{padding:20px}@media screen and (max-width:992px){.carousel{margin-top:0}}@media screen and (max-width:500px){.carousel{height:200px}}.icons{padding:60px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between}.icons.hidden-md img{height:150px;width:180px}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 395 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(16)();\n// imports\n\n\n// module\nexports.push([module.i, \"img{float:left;margin:0 20px 20px 0;max-width:100%}p{text-align:justify;text-indent:2em}.sub-page{overflow:auto}.container{color:#2f4f4f}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 396 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(16)();\n// imports\n\n\n// module\nexports.push([module.i, \"\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 397 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(16)();\n// imports\n\n\n// module\nexports.push([module.i, \"md-input-container{margin:0 20px}md-grid-tile div,md-option{overflow:hidden;height:64px}.image-holder{display:inline-block;width:50px}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 398 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(16)();\n// imports\n\n\n// module\nexports.push([module.i, \"@-ms-viewport{width:device-width}.visible-lg,.visible-lg-block,.visible-lg-inline,.visible-lg-inline-block,.visible-md,.visible-md-block,.visible-md-inline,.visible-md-inline-block,.visible-sm,.visible-sm-block,.visible-sm-inline,.visible-sm-inline-block,.visible-xs,.visible-xs-block,.visible-xs-inline,.visible-xs-inline-block{display:none!important}@media (max-width:767px){.visible-xs{display:block!important}table.visible-xs{display:table}tr.visible-xs{display:table-row!important}td.visible-xs,th.visible-xs{display:table-cell!important}}@media (max-width:767px){.visible-xs-block{display:block!important}}@media (max-width:767px){.visible-xs-inline{display:inline!important}}@media (max-width:767px){.visible-xs-inline-block{display:inline-block!important}}@media (min-width:768px) and (max-width:991px){.visible-sm{display:block!important}table.visible-sm{display:table}tr.visible-sm{display:table-row!important}td.visible-sm,th.visible-sm{display:table-cell!important}}@media (min-width:768px) and (max-width:991px){.visible-sm-block{display:block!important}}@media (min-width:768px) and (max-width:991px){.visible-sm-inline{display:inline!important}}@media (min-width:768px) and (max-width:991px){.visible-sm-inline-block{display:inline-block!important}}@media (min-width:992px) and (max-width:1199px){.visible-md{display:block!important}table.visible-md{display:table}tr.visible-md{display:table-row!important}td.visible-md,th.visible-md{display:table-cell!important}}@media (min-width:992px) and (max-width:1199px){.visible-md-block{display:block!important}}@media (min-width:992px) and (max-width:1199px){.visible-md-inline{display:inline!important}}@media (min-width:992px) and (max-width:1199px){.visible-md-inline-block{display:inline-block!important}}@media (min-width:1200px){.visible-lg{display:block!important}table.visible-lg{display:table}tr.visible-lg{display:table-row!important}td.visible-lg,th.visible-lg{display:table-cell!important}}@media (min-width:1200px){.visible-lg-block{display:block!important}}@media (min-width:1200px){.visible-lg-inline{display:inline!important}}@media (min-width:1200px){.visible-lg-inline-block{display:inline-block!important}}@media (max-width:767px){.hidden-xs{display:none!important}}@media (min-width:768px) and (max-width:991px){.hidden-sm{display:none!important}}@media (min-width:992px) and (max-width:1199px){.hidden-md{display:none!important}}@media (min-width:1200px){.hidden-lg{display:none!important}}.visible-print{display:none!important}@media print{.visible-print{display:block!important}table.visible-print{display:table}tr.visible-print{display:table-row!important}td.visible-print,th.visible-print{display:table-cell!important}}.visible-print-block{display:none!important}@media print{.visible-print-block{display:block!important}}.visible-print-inline{display:none!important}@media print{.visible-print-inline{display:inline!important}}.visible-print-inline-block{display:none!important}@media print{.visible-print-inline-block{display:inline-block!important}}@media print{.hidden-print{display:none!important}}.container{margin-right:auto;margin-left:auto;padding-left:15px;padding-right:15px}@media (min-width:768px){.container{width:750px}}@media (min-width:992px){.container{width:970px}}@media (min-width:1200px){.container{width:1170px}}.container-fluid{margin-right:auto;margin-left:auto;padding-left:15px;padding-right:15px}.row{margin-left:-15px;margin-right:-15px}.col,.col-lg-1,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-10,.col-lg-11,.col-lg-12,.col-md-1,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-10,.col-md-11,.col-md-12,.col-sm-1,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-10,.col-sm-11,.col-sm-12,.col-xs-1,.col-xs-2,.col-xs-3,.col-xs-4,.col-xs-5,.col-xs-6,.col-xs-7,.col-xs-8,.col-xs-9,.col-xs-10,.col-xs-11,.col-xs-12{position:relative;min-height:1px;padding-left:15px;padding-right:15px}.col,.col-xs-1,.col-xs-2,.col-xs-3,.col-xs-4,.col-xs-5,.col-xs-6,.col-xs-7,.col-xs-8,.col-xs-9,.col-xs-10,.col-xs-11,.col-xs-12{float:left}.col-xs-12{width:100%}.col-xs-11{width:91.66666667%}.col-xs-10{width:83.33333333%}.col-xs-9{width:75%}.col-xs-8{width:66.66666667%}.col-xs-7{width:58.33333333%}.col-xs-6{width:50%}.col-xs-5{width:41.66666667%}.col-xs-4{width:33.33333333%}.col-xs-3{width:25%}.col-xs-2{width:16.66666667%}.col-xs-1{width:8.33333333%}.col-xs-pull-12{right:100%}.col-xs-pull-11{right:91.66666667%}.col-xs-pull-10{right:83.33333333%}.col-xs-pull-9{right:75%}.col-xs-pull-8{right:66.66666667%}.col-xs-pull-7{right:58.33333333%}.col-xs-pull-6{right:50%}.col-xs-pull-5{right:41.66666667%}.col-xs-pull-4{right:33.33333333%}.col-xs-pull-3{right:25%}.col-xs-pull-2{right:16.66666667%}.col-xs-pull-1{right:8.33333333%}.col-xs-pull-0{right:auto}.col-xs-push-12{left:100%}.col-xs-push-11{left:91.66666667%}.col-xs-push-10{left:83.33333333%}.col-xs-push-9{left:75%}.col-xs-push-8{left:66.66666667%}.col-xs-push-7{left:58.33333333%}.col-xs-push-6{left:50%}.col-xs-push-5{left:41.66666667%}.col-xs-push-4{left:33.33333333%}.col-xs-push-3{left:25%}.col-xs-push-2{left:16.66666667%}.col-xs-push-1{left:8.33333333%}.col-xs-push-0{left:auto}.col-xs-offset-12{margin-left:100%}.col-xs-offset-11{margin-left:91.66666667%}.col-xs-offset-10{margin-left:83.33333333%}.col-xs-offset-9{margin-left:75%}.col-xs-offset-8{margin-left:66.66666667%}.col-xs-offset-7{margin-left:58.33333333%}.col-xs-offset-6{margin-left:50%}.col-xs-offset-5{margin-left:41.66666667%}.col-xs-offset-4{margin-left:33.33333333%}.col-xs-offset-3{margin-left:25%}.col-xs-offset-2{margin-left:16.66666667%}.col-xs-offset-1{margin-left:8.33333333%}.col-xs-offset-0{margin-left:0}@media (min-width:768px){.col,.col-sm-1,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-10,.col-sm-11,.col-sm-12{float:left}.col-sm-12{width:100%}.col-sm-11{width:91.66666667%}.col-sm-10{width:83.33333333%}.col-sm-9{width:75%}.col-sm-8{width:66.66666667%}.col-sm-7{width:58.33333333%}.col-sm-6{width:50%}.col-sm-5{width:41.66666667%}.col-sm-4{width:33.33333333%}.col-sm-3{width:25%}.col-sm-2{width:16.66666667%}.col-sm-1{width:8.33333333%}.col-sm-pull-12{right:100%}.col-sm-pull-11{right:91.66666667%}.col-sm-pull-10{right:83.33333333%}.col-sm-pull-9{right:75%}.col-sm-pull-8{right:66.66666667%}.col-sm-pull-7{right:58.33333333%}.col-sm-pull-6{right:50%}.col-sm-pull-5{right:41.66666667%}.col-sm-pull-4{right:33.33333333%}.col-sm-pull-3{right:25%}.col-sm-pull-2{right:16.66666667%}.col-sm-pull-1{right:8.33333333%}.col-sm-pull-0{right:auto}.col-sm-push-12{left:100%}.col-sm-push-11{left:91.66666667%}.col-sm-push-10{left:83.33333333%}.col-sm-push-9{left:75%}.col-sm-push-8{left:66.66666667%}.col-sm-push-7{left:58.33333333%}.col-sm-push-6{left:50%}.col-sm-push-5{left:41.66666667%}.col-sm-push-4{left:33.33333333%}.col-sm-push-3{left:25%}.col-sm-push-2{left:16.66666667%}.col-sm-push-1{left:8.33333333%}.col-sm-push-0{left:auto}.col-sm-offset-12{margin-left:100%}.col-sm-offset-11{margin-left:91.66666667%}.col-sm-offset-10{margin-left:83.33333333%}.col-sm-offset-9{margin-left:75%}.col-sm-offset-8{margin-left:66.66666667%}.col-sm-offset-7{margin-left:58.33333333%}.col-sm-offset-6{margin-left:50%}.col-sm-offset-5{margin-left:41.66666667%}.col-sm-offset-4{margin-left:33.33333333%}.col-sm-offset-3{margin-left:25%}.col-sm-offset-2{margin-left:16.66666667%}.col-sm-offset-1{margin-left:8.33333333%}.col-sm-offset-0{margin-left:0}}@media (min-width:992px){.col,.col-md-1,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-10,.col-md-11,.col-md-12{float:left}.col-md-12{width:100%}.col-md-11{width:91.66666667%}.col-md-10{width:83.33333333%}.col-md-9{width:75%}.col-md-8{width:66.66666667%}.col-md-7{width:58.33333333%}.col-md-6{width:50%}.col-md-5{width:41.66666667%}.col-md-4{width:33.33333333%}.col-md-3{width:25%}.col-md-2{width:16.66666667%}.col-md-1{width:8.33333333%}.col-md-pull-12{right:100%}.col-md-pull-11{right:91.66666667%}.col-md-pull-10{right:83.33333333%}.col-md-pull-9{right:75%}.col-md-pull-8{right:66.66666667%}.col-md-pull-7{right:58.33333333%}.col-md-pull-6{right:50%}.col-md-pull-5{right:41.66666667%}.col-md-pull-4{right:33.33333333%}.col-md-pull-3{right:25%}.col-md-pull-2{right:16.66666667%}.col-md-pull-1{right:8.33333333%}.col-md-pull-0{right:auto}.col-md-push-12{left:100%}.col-md-push-11{left:91.66666667%}.col-md-push-10{left:83.33333333%}.col-md-push-9{left:75%}.col-md-push-8{left:66.66666667%}.col-md-push-7{left:58.33333333%}.col-md-push-6{left:50%}.col-md-push-5{left:41.66666667%}.col-md-push-4{left:33.33333333%}.col-md-push-3{left:25%}.col-md-push-2{left:16.66666667%}.col-md-push-1{left:8.33333333%}.col-md-push-0{left:auto}.col-md-offset-12{margin-left:100%}.col-md-offset-11{margin-left:91.66666667%}.col-md-offset-10{margin-left:83.33333333%}.col-md-offset-9{margin-left:75%}.col-md-offset-8{margin-left:66.66666667%}.col-md-offset-7{margin-left:58.33333333%}.col-md-offset-6{margin-left:50%}.col-md-offset-5{margin-left:41.66666667%}.col-md-offset-4{margin-left:33.33333333%}.col-md-offset-3{margin-left:25%}.col-md-offset-2{margin-left:16.66666667%}.col-md-offset-1{margin-left:8.33333333%}.col-md-offset-0{margin-left:0}}@media (min-width:1200px){.col,.col-lg-1,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-10,.col-lg-11,.col-lg-12{float:left}.col-lg-12{width:100%}.col-lg-11{width:91.66666667%}.col-lg-10{width:83.33333333%}.col-lg-9{width:75%}.col-lg-8{width:66.66666667%}.col-lg-7{width:58.33333333%}.col-lg-6{width:50%}.col-lg-5{width:41.66666667%}.col-lg-4{width:33.33333333%}.col-lg-3{width:25%}.col-lg-2{width:16.66666667%}.col-lg-1{width:8.33333333%}.col-lg-pull-12{right:100%}.col-lg-pull-11{right:91.66666667%}.col-lg-pull-10{right:83.33333333%}.col-lg-pull-9{right:75%}.col-lg-pull-8{right:66.66666667%}.col-lg-pull-7{right:58.33333333%}.col-lg-pull-6{right:50%}.col-lg-pull-5{right:41.66666667%}.col-lg-pull-4{right:33.33333333%}.col-lg-pull-3{right:25%}.col-lg-pull-2{right:16.66666667%}.col-lg-pull-1{right:8.33333333%}.col-lg-pull-0{right:auto}.col-lg-push-12{left:100%}.col-lg-push-11{left:91.66666667%}.col-lg-push-10{left:83.33333333%}.col-lg-push-9{left:75%}.col-lg-push-8{left:66.66666667%}.col-lg-push-7{left:58.33333333%}.col-lg-push-6{left:50%}.col-lg-push-5{left:41.66666667%}.col-lg-push-4{left:33.33333333%}.col-lg-push-3{left:25%}.col-lg-push-2{left:16.66666667%}.col-lg-push-1{left:8.33333333%}.col-lg-push-0{left:auto}.col-lg-offset-12{margin-left:100%}.col-lg-offset-11{margin-left:91.66666667%}.col-lg-offset-10{margin-left:83.33333333%}.col-lg-offset-9{margin-left:75%}.col-lg-offset-8{margin-left:66.66666667%}.col-lg-offset-7{margin-left:58.33333333%}.col-lg-offset-6{margin-left:50%}.col-lg-offset-5{margin-left:41.66666667%}.col-lg-offset-4{margin-left:33.33333333%}.col-lg-offset-3{margin-left:25%}.col-lg-offset-2{margin-left:16.66666667%}.col-lg-offset-1{margin-left:8.33333333%}.col-lg-offset-0{margin-left:0}}.clearfix,.clearfix:after,.clearfix:before,.container-fluid:after,.container-fluid:before,.container:after,.container:before,.row:after,.row:before{content:\\\" \\\";display:table}.clearfix:after,.container-fluid:after,.container:after,.row:after{clear:both}.center-block{display:block;margin-left:auto;margin-right:auto}.pull-right{float:right!important}.pull-left{float:left!important}*,:after,:before{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 399 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(16)();\n// imports\n\n\n// module\nexports.push([module.i, \".mat-elevation-z0{box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}.mat-elevation-z1{box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)}.mat-elevation-z2{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-elevation-z3{box-shadow:0 3px 3px -2px rgba(0,0,0,.2),0 3px 4px 0 rgba(0,0,0,.14),0 1px 8px 0 rgba(0,0,0,.12)}.mat-elevation-z4{box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}.mat-elevation-z5{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 5px 8px 0 rgba(0,0,0,.14),0 1px 14px 0 rgba(0,0,0,.12)}.mat-elevation-z6{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.mat-elevation-z7{box-shadow:0 4px 5px -2px rgba(0,0,0,.2),0 7px 10px 1px rgba(0,0,0,.14),0 2px 16px 1px rgba(0,0,0,.12)}.mat-elevation-z8{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-elevation-z9{box-shadow:0 5px 6px -3px rgba(0,0,0,.2),0 9px 12px 1px rgba(0,0,0,.14),0 3px 16px 2px rgba(0,0,0,.12)}.mat-elevation-z10{box-shadow:0 6px 6px -3px rgba(0,0,0,.2),0 10px 14px 1px rgba(0,0,0,.14),0 4px 18px 3px rgba(0,0,0,.12)}.mat-elevation-z11{box-shadow:0 6px 7px -4px rgba(0,0,0,.2),0 11px 15px 1px rgba(0,0,0,.14),0 4px 20px 3px rgba(0,0,0,.12)}.mat-elevation-z12{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-elevation-z13{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 13px 19px 2px rgba(0,0,0,.14),0 5px 24px 4px rgba(0,0,0,.12)}.mat-elevation-z14{box-shadow:0 7px 9px -4px rgba(0,0,0,.2),0 14px 21px 2px rgba(0,0,0,.14),0 5px 26px 4px rgba(0,0,0,.12)}.mat-elevation-z15{box-shadow:0 8px 9px -5px rgba(0,0,0,.2),0 15px 22px 2px rgba(0,0,0,.14),0 6px 28px 5px rgba(0,0,0,.12)}.mat-elevation-z16{box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)}.mat-elevation-z17{box-shadow:0 8px 11px -5px rgba(0,0,0,.2),0 17px 26px 2px rgba(0,0,0,.14),0 6px 32px 5px rgba(0,0,0,.12)}.mat-elevation-z18{box-shadow:0 9px 11px -5px rgba(0,0,0,.2),0 18px 28px 2px rgba(0,0,0,.14),0 7px 34px 6px rgba(0,0,0,.12)}.mat-elevation-z19{box-shadow:0 9px 12px -6px rgba(0,0,0,.2),0 19px 29px 2px rgba(0,0,0,.14),0 7px 36px 6px rgba(0,0,0,.12)}.mat-elevation-z20{box-shadow:0 10px 13px -6px rgba(0,0,0,.2),0 20px 31px 3px rgba(0,0,0,.14),0 8px 38px 7px rgba(0,0,0,.12)}.mat-elevation-z21{box-shadow:0 10px 13px -6px rgba(0,0,0,.2),0 21px 33px 3px rgba(0,0,0,.14),0 8px 40px 7px rgba(0,0,0,.12)}.mat-elevation-z22{box-shadow:0 10px 14px -6px rgba(0,0,0,.2),0 22px 35px 3px rgba(0,0,0,.14),0 8px 42px 7px rgba(0,0,0,.12)}.mat-elevation-z23{box-shadow:0 11px 14px -7px rgba(0,0,0,.2),0 23px 36px 3px rgba(0,0,0,.14),0 9px 44px 8px rgba(0,0,0,.12)}.mat-elevation-z24{box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12)}.mat-ripple{overflow:hidden}.mat-ripple.mat-ripple-unbounded{overflow:visible}.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;background-color:rgba(0,0,0,.1);-webkit-transition:opacity,-webkit-transform 0ms cubic-bezier(0,0,.2,1);transition:opacity,-webkit-transform 0ms cubic-bezier(0,0,.2,1);transition:opacity,transform 0ms cubic-bezier(0,0,.2,1);transition:opacity,transform 0ms cubic-bezier(0,0,.2,1),-webkit-transform 0ms cubic-bezier(0,0,.2,1);-webkit-transform:scale(0);transform:scale(0)}.mat-option{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;font-size:16px;font-family:Roboto,Helvetica Neue,sans-serif;text-align:start;text-decoration:none;position:relative;cursor:pointer;outline:none}.mat-option[disabled]{cursor:default}.mat-option .mat-icon{margin-right:16px}[dir=rtl] .mat-option .mat-icon{margin-left:16px}.mat-option[aria-disabled=true]{cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.mat-option-ripple{position:absolute;top:0;left:0;bottom:0;right:0}@media screen and (-ms-high-contrast:active){.mat-option-ripple{opacity:.5}}.cdk-visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;text-transform:none;width:1px}.cdk-global-overlay-wrapper,.cdk-overlay-container{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed;z-index:1000}.cdk-global-overlay-wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;position:absolute;z-index:1000}.cdk-overlay-pane{box-sizing:border-box}.cdk-overlay-backdrop,.cdk-overlay-pane{position:absolute;pointer-events:auto;z-index:1000}.cdk-overlay-backdrop{top:0;bottom:0;left:0;right:0;-webkit-transition:opacity .4s cubic-bezier(.25,.8,.25,1);transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.48}.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.6)}.cdk-overlay-transparent-backdrop{background:none}.docs-component-viewer-tabbed-content .docs-component-view-text-content h1,.docs-guide-content h1{display:inline-block;font-size:20px;font-weight:400;padding:5px}.docs-component-viewer-tabbed-content .docs-component-view-text-content h2,.docs-component-viewer-tabbed-content .docs-component-view-text-content h3,.docs-guide-content h2,.docs-guide-content h3{font-size:20px;font-weight:400;margin-bottom:30px;margin-top:80px}.docs-component-viewer-tabbed-content .docs-component-view-text-content h4,.docs-guide-content h4{margin-top:40px}.docs-component-viewer-tabbed-content .docs-component-view-text-content h5,.docs-guide-content h5{font-size:16px}.docs-component-viewer-tabbed-content .docs-component-view-text-content .md-tab-body-wrapper h2,.docs-guide-content .md-tab-body-wrapper h2{margin-top:0}.docs-component-viewer-tabbed-content .docs-component-view-text-content p,.docs-guide-content p{font-size:16px;line-height:28px}.docs-component-viewer-tabbed-content .docs-component-view-text-content a,.docs-guide-content a{text-decoration:none}.docs-component-viewer-tabbed-content .docs-component-view-text-content table,.docs-guide-content table{border-collapse:collapse;border-radius:2px;border-spacing:0;margin:0 0 32px;width:100%}.docs-component-viewer-tabbed-content .docs-component-view-text-content table tbody th,.docs-guide-content table tbody th{max-width:100px;padding:13px 32px;text-align:left}.docs-component-viewer-tabbed-content .docs-component-view-text-content td,.docs-guide-content td{font-weight:400;padding:8px 30px}.docs-component-viewer-tabbed-content .docs-component-view-text-content td p,.docs-guide-content td p{margin:0}.docs-component-viewer-tabbed-content .docs-component-view-text-content th,.docs-guide-content th{font-size:16px;font-weight:400;padding:13px 32px;text-align:left}.mat-option.mat-selected,.mat-option:focus:not(.mat-option-disabled),.mat-option:hover:not(.mat-option-disabled){background:rgba(0,0,0,.04)}.mat-option.mat-selected{color:#00bcd4}.mat-option.mat-active{background:rgba(0,0,0,.04);color:rgba(0,0,0,.87)}.mat-option.mat-option-disabled{color:rgba(0,0,0,.38)}.mat-pseudo-checkbox:after{color:#fafafa}.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-indeterminate{border:none}.mat-pseudo-checkbox-checked.mat-primary,.mat-pseudo-checkbox-indeterminate.mat-primary{background:#00bcd4}.mat-pseudo-checkbox-checked.mat-accent,.mat-pseudo-checkbox-indeterminate.mat-accent{background:#ffc107}.mat-pseudo-checkbox-checked.mat-warn,.mat-pseudo-checkbox-indeterminate.mat-warn{background:#f44336}.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled{background:#b0b0b0}.mat-app-background{background-color:#fafafa}.mat-autocomplete-panel,.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active){background:#fff;color:rgba(0,0,0,.87)}.mat-button.mat-button-focus.mat-primary .mat-button-focus-overlay,.mat-fab.mat-button-focus.mat-primary .mat-button-focus-overlay,.mat-icon-button.mat-button-focus.mat-primary .mat-button-focus-overlay,.mat-mini-fab.mat-button-focus.mat-primary .mat-button-focus-overlay,.mat-raised-button.mat-button-focus.mat-primary .mat-button-focus-overlay{background-color:rgba(0,188,212,.12)}.mat-button.mat-button-focus.mat-accent .mat-button-focus-overlay,.mat-fab.mat-button-focus.mat-accent .mat-button-focus-overlay,.mat-icon-button.mat-button-focus.mat-accent .mat-button-focus-overlay,.mat-mini-fab.mat-button-focus.mat-accent .mat-button-focus-overlay,.mat-raised-button.mat-button-focus.mat-accent .mat-button-focus-overlay{background-color:rgba(255,215,64,.12)}.mat-button.mat-button-focus.mat-warn .mat-button-focus-overlay,.mat-fab.mat-button-focus.mat-warn .mat-button-focus-overlay,.mat-icon-button.mat-button-focus.mat-warn .mat-button-focus-overlay,.mat-mini-fab.mat-button-focus.mat-warn .mat-button-focus-overlay,.mat-raised-button.mat-button-focus.mat-warn .mat-button-focus-overlay{background-color:rgba(244,67,54,.12)}.mat-button,.mat-icon-button{background:transparent}.mat-button.mat-primary,.mat-icon-button.mat-primary{color:#00bcd4}.mat-button.mat-accent,.mat-icon-button.mat-accent{color:#ffd740}.mat-button.mat-warn,.mat-icon-button.mat-warn{color:#f44336}.mat-button.mat-accent[disabled],.mat-button.mat-primary[disabled],.mat-button.mat-warn[disabled],.mat-button[disabled][disabled],.mat-icon-button.mat-accent[disabled],.mat-icon-button.mat-primary[disabled],.mat-icon-button.mat-warn[disabled],.mat-icon-button[disabled][disabled]{color:rgba(0,0,0,.38)}.mat-button:hover.mat-primary .mat-button-focus-overlay,.mat-icon-button:hover.mat-primary .mat-button-focus-overlay{background-color:rgba(0,188,212,.12)}.mat-button:hover.mat-accent .mat-button-focus-overlay,.mat-icon-button:hover.mat-accent .mat-button-focus-overlay{background-color:rgba(255,215,64,.12)}.mat-button:hover.mat-warn .mat-button-focus-overlay,.mat-icon-button:hover.mat-warn .mat-button-focus-overlay{background-color:rgba(244,67,54,.12)}.mat-fab,.mat-mini-fab,.mat-raised-button{color:rgba(0,0,0,.87);background-color:#fff}.mat-fab.mat-primary,.mat-mini-fab.mat-primary,.mat-raised-button.mat-primary{color:#fff}.mat-fab.mat-accent,.mat-mini-fab.mat-accent,.mat-raised-button.mat-accent{color:rgba(0,0,0,.87)}.mat-fab.mat-warn,.mat-mini-fab.mat-warn,.mat-raised-button.mat-warn{color:#fff}.mat-fab.mat-accent[disabled],.mat-fab.mat-primary[disabled],.mat-fab.mat-warn[disabled],.mat-fab[disabled][disabled],.mat-mini-fab.mat-accent[disabled],.mat-mini-fab.mat-primary[disabled],.mat-mini-fab.mat-warn[disabled],.mat-mini-fab[disabled][disabled],.mat-raised-button.mat-accent[disabled],.mat-raised-button.mat-primary[disabled],.mat-raised-button.mat-warn[disabled],.mat-raised-button[disabled][disabled]{color:rgba(0,0,0,.38)}.mat-fab.mat-primary,.mat-mini-fab.mat-primary,.mat-raised-button.mat-primary{background-color:#00bcd4}.mat-fab.mat-accent,.mat-mini-fab.mat-accent,.mat-raised-button.mat-accent{background-color:#ffd740}.mat-fab.mat-warn,.mat-mini-fab.mat-warn,.mat-raised-button.mat-warn{background-color:#f44336}.mat-fab.mat-accent[disabled],.mat-fab.mat-primary[disabled],.mat-fab.mat-warn[disabled],.mat-fab[disabled][disabled],.mat-mini-fab.mat-accent[disabled],.mat-mini-fab.mat-primary[disabled],.mat-mini-fab.mat-warn[disabled],.mat-mini-fab[disabled][disabled],.mat-raised-button.mat-accent[disabled],.mat-raised-button.mat-primary[disabled],.mat-raised-button.mat-warn[disabled],.mat-raised-button[disabled][disabled]{background-color:rgba(0,0,0,.12)}.mat-fab,.mat-mini-fab{background-color:#ffd740;color:rgba(0,0,0,.87)}.mat-button-toggle{color:rgba(0,0,0,.38)}.mat-button-toggle-checked{background-color:#e0e0e0;color:#000}.mat-button-toggle-disabled{background-color:#eee;color:rgba(0,0,0,.38)}.mat-button-toggle-disabled.mat-button-toggle-checked{background-color:#bdbdbd}.mat-card{background:#fff;color:#000}.mat-card-subtitle{color:rgba(0,0,0,.54)}.mat-checkbox-frame{border-color:rgba(0,0,0,.54)}.mat-checkbox-checkmark{fill:#fafafa}.mat-checkbox-checkmark-path{stroke:#fafafa!important}.mat-checkbox-mixedmark{background-color:#fafafa}.mat-checkbox-checked.mat-primary .mat-checkbox-background,.mat-checkbox-indeterminate.mat-primary .mat-checkbox-background{background-color:#00bcd4}.mat-checkbox-checked.mat-accent .mat-checkbox-background,.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background{background-color:#ffc107}.mat-checkbox-checked.mat-warn .mat-checkbox-background,.mat-checkbox-indeterminate.mat-warn .mat-checkbox-background{background-color:#f44336}.mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background,.mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background{background-color:#b0b0b0}.mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame{border-color:#b0b0b0}.mat-checkbox:not(.mat-checkbox-disabled).mat-primary .mat-checkbox-ripple .mat-ripple-element{background-color:rgba(0,188,212,.26)}.mat-checkbox:not(.mat-checkbox-disabled).mat-accent .mat-checkbox-ripple .mat-ripple-element{background-color:rgba(255,215,64,.26)}.mat-checkbox:not(.mat-checkbox-disabled).mat-warn .mat-checkbox-ripple .mat-ripple-element{background-color:rgba(244,67,54,.26)}.mat-chip:not(.mat-basic-chip){background-color:#e0e0e0;color:rgba(0,0,0,.87)}.mat-chip.mat-chip-selected:not(.mat-basic-chip){background-color:gray;color:hsla(0,0%,100%,.87)}.mat-chip.mat-chip-selected:not(.mat-basic-chip).mat-primary{background-color:#00bcd4;color:#fff}.mat-chip.mat-chip-selected:not(.mat-basic-chip).mat-accent{background-color:#ffc107;color:rgba(0,0,0,.87)}.mat-chip.mat-chip-selected:not(.mat-basic-chip).mat-warn{background-color:#f44336;color:#fff}.mat-dialog-container{background:#fff}.mat-icon.mat-primary{color:#00bcd4}.mat-icon.mat-accent{color:#ffd740}.mat-icon.mat-warn{color:#f44336}.mat-input-placeholder{color:rgba(0,0,0,.38)}.mat-input-placeholder.mat-focused{color:#00bcd4}.mat-input-placeholder.mat-focused.mat-accent{color:#ffd740}.mat-input-placeholder.mat-focused.mat-warn{color:#f44336}.mat-input-element:disabled{color:rgba(0,0,0,.38)}.mat-input-placeholder.mat-float.mat-focused .mat-placeholder-required,input.mat-input-element:-webkit-autofill+.mat-input-placeholder .mat-placeholder-required{color:#ffd740}.mat-input-underline{border-color:rgba(0,0,0,.12)}.mat-input-underline .mat-input-ripple{background-color:#00bcd4}.mat-input-underline .mat-input-ripple.mat-accent{background-color:#ffd740}.mat-input-underline .mat-input-ripple.mat-warn{background-color:#f44336}.mat-list .mat-list-item,.mat-nav-list .mat-list-item{color:#000}.mat-list .mat-subheader,.mat-nav-list .mat-subheader{color:rgba(0,0,0,.54)}.mat-divider{border-top-color:rgba(0,0,0,.12)}.mat-nav-list .mat-list-item-content.mat-list-item-focus,.mat-nav-list .mat-list-item-content:hover{background:rgba(0,0,0,.04)}.mat-menu-content{background:#fff}.mat-menu-item{background:transparent;color:rgba(0,0,0,.87)}.mat-menu-item[disabled]{color:rgba(0,0,0,.38)}.mat-menu-item .mat-icon{color:rgba(0,0,0,.54);vertical-align:middle}.mat-menu-item:focus:not([disabled]),.mat-menu-item:hover:not([disabled]){background:rgba(0,0,0,.04)}.mat-progress-bar-background{background:url(\\\"data:image/svg+xml;charset=UTF-8,%3Csvg%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%20x%3D%270px%27%20y%3D%270px%27%20enable-background%3D%27new%200%200%205%202%27%20xml%3Aspace%3D%27preserve%27%20viewBox%3D%270%200%205%202%27%20preserveAspectRatio%3D%27none%20slice%27%3E%3Ccircle%20cx%3D%271%27%20cy%3D%271%27%20r%3D%271%27%20fill%3D%27%23b2ebf2%27%2F%3E%3C%2Fsvg%3E\\\")}.mat-progress-bar-buffer{background-color:#b2ebf2}.mat-progress-bar-fill:after{background-color:#00acc1}.mat-progress-bar.mat-accent .mat-progress-bar-background{background:url(\\\"data:image/svg+xml;charset=UTF-8,%3Csvg%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%20x%3D%270px%27%20y%3D%270px%27%20enable-background%3D%27new%200%200%205%202%27%20xml%3Aspace%3D%27preserve%27%20viewBox%3D%270%200%205%202%27%20preserveAspectRatio%3D%27none%20slice%27%3E%3Ccircle%20cx%3D%271%27%20cy%3D%271%27%20r%3D%271%27%20fill%3D%27%23ffecb3%27%2F%3E%3C%2Fsvg%3E\\\")}.mat-progress-bar.mat-accent .mat-progress-bar-buffer{background-color:#ffecb3}.mat-progress-bar.mat-accent .mat-progress-bar-fill:after{background-color:#ffb300}.mat-progress-bar.mat-warn .mat-progress-bar-background{background:url(\\\"data:image/svg+xml;charset=UTF-8,%3Csvg%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%20x%3D%270px%27%20y%3D%270px%27%20enable-background%3D%27new%200%200%205%202%27%20xml%3Aspace%3D%27preserve%27%20viewBox%3D%270%200%205%202%27%20preserveAspectRatio%3D%27none%20slice%27%3E%3Ccircle%20cx%3D%271%27%20cy%3D%271%27%20r%3D%271%27%20fill%3D%27%23ffcdd2%27%2F%3E%3C%2Fsvg%3E\\\")}.mat-progress-bar.mat-warn .mat-progress-bar-buffer{background-color:#ffcdd2}.mat-progress-bar.mat-warn .mat-progress-bar-fill:after{background-color:#e53935}.mat-progress-circle path,.mat-progress-spinner path,.mat-spinner path{stroke:#00acc1}.mat-progress-circle.mat-accent path,.mat-progress-spinner.mat-accent path,.mat-spinner.mat-accent path{stroke:#ffb300}.mat-progress-circle.mat-warn path,.mat-progress-spinner.mat-warn path,.mat-spinner.mat-warn path{stroke:#e53935}.mat-radio-outer-circle{border-color:rgba(0,0,0,.54)}.mat-radio-checked .mat-radio-outer-circle{border-color:#ffd740}.mat-radio-disabled .mat-radio-outer-circle{border-color:rgba(0,0,0,.38)}.mat-radio-inner-circle{background-color:#ffd740}.mat-radio-disabled .mat-radio-inner-circle{background-color:rgba(0,0,0,.38)}.mat-radio-ripple .mat-ripple-element{background-color:rgba(255,215,64,.26)}.mat-radio-disabled .mat-radio-ripple .mat-ripple-element{background-color:rgba(0,0,0,.38)}.mat-select-trigger{color:rgba(0,0,0,.38)}.mat-select:focus:not(.mat-select-disabled) .mat-select-trigger{color:#00bcd4}.mat-select.ng-invalid.ng-touched:not(.mat-select-disabled) .mat-select-trigger{color:#f44336}.mat-select-underline{background-color:rgba(0,0,0,.12)}.mat-select:focus:not(.mat-select-disabled) .mat-select-underline{background-color:#00bcd4}.mat-select.ng-invalid.ng-touched:not(.mat-select-disabled) .mat-select-underline{background-color:#f44336}.mat-select-arrow{color:rgba(0,0,0,.38)}.mat-select:focus:not(.mat-select-disabled) .mat-select-arrow{color:#00bcd4}.mat-select.ng-invalid.ng-touched:not(.mat-select-disabled) .mat-select-arrow{color:#f44336}.mat-select-content,.mat-select-panel-done-animating{background:#fff}.mat-select-value{color:rgba(0,0,0,.87)}.mat-select-disabled .mat-select-value{color:rgba(0,0,0,.38)}.mat-sidenav-container{background-color:#fafafa;color:rgba(0,0,0,.87)}.mat-sidenav{color:rgba(0,0,0,.87)}.mat-sidenav,.mat-sidenav.mat-sidenav-push{background-color:#fff}.mat-sidenav-backdrop.mat-sidenav-shown{background-color:rgba(0,0,0,.6)}.mat-slide-toggle.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb{background-color:#ffc107}.mat-slide-toggle.mat-checked:not(.mat-disabled) .mat-slide-toggle-bar{background-color:rgba(255,193,7,.5)}.mat-slide-toggle.mat-slide-toggle-focused:not(.mat-checked) .mat-ink-ripple{background-color:rgba(0,0,0,.12)}.mat-slide-toggle.mat-slide-toggle-focused .mat-ink-ripple{background-color:rgba(255,193,7,.26)}.mat-slide-toggle.mat-primary.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb{background-color:#00bcd4}.mat-slide-toggle.mat-primary.mat-checked:not(.mat-disabled) .mat-slide-toggle-bar{background-color:rgba(0,188,212,.5)}.mat-slide-toggle.mat-primary.mat-slide-toggle-focused:not(.mat-checked) .mat-ink-ripple{background-color:rgba(0,0,0,.12)}.mat-slide-toggle.mat-primary.mat-slide-toggle-focused .mat-ink-ripple{background-color:rgba(0,188,212,.26)}.mat-slide-toggle.mat-warn.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb{background-color:#f44336}.mat-slide-toggle.mat-warn.mat-checked:not(.mat-disabled) .mat-slide-toggle-bar{background-color:rgba(244,67,54,.5)}.mat-slide-toggle.mat-warn.mat-slide-toggle-focused:not(.mat-checked) .mat-ink-ripple{background-color:rgba(0,0,0,.12)}.mat-slide-toggle.mat-warn.mat-slide-toggle-focused .mat-ink-ripple{background-color:rgba(244,67,54,.26)}.mat-disabled .mat-slide-toggle-thumb{background-color:#bdbdbd}.mat-disabled .mat-slide-toggle-bar{background-color:rgba(0,0,0,.1)}.mat-slide-toggle-thumb{background-color:#fafafa}.mat-slide-toggle-bar{background-color:rgba(0,0,0,.38)}.mat-slider-track-background{background-color:rgba(0,0,0,.26)}.mat-slider-thumb,.mat-slider-thumb-label,.mat-slider-track-fill{background-color:#ffd740}.mat-slider-thumb-label-text{color:rgba(0,0,0,.87)}.mat-slider-active .mat-slider-track-background,.mat-slider:hover .mat-slider-track-background{background-color:rgba(0,0,0,.38)}.mat-slider-disabled .mat-slider-thumb,.mat-slider-disabled .mat-slider-track-background,.mat-slider-disabled .mat-slider-track-fill,.mat-slider-disabled:hover .mat-slider-track-background{background-color:rgba(0,0,0,.26)}.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label{background-color:#000}.mat-slider-min-value.mat-slider-thumb-label-showing.mat-slider-active .mat-slider-thumb,.mat-slider-min-value.mat-slider-thumb-label-showing.mat-slider-active .mat-slider-thumb-label{background-color:rgba(0,0,0,.26)}.mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb{border-color:rgba(0,0,0,.26);background-color:transparent}.mat-slider-min-value:not(.mat-slider-thumb-label-showing).mat-slider-active .mat-slider-thumb,.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb{border-color:rgba(0,0,0,.38)}.mat-slider-min-value:not(.mat-slider-thumb-label-showing).mat-slider-active.mat-slider-disabled .mat-slider-thumb,.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb{border-color:rgba(0,0,0,.26)}.mat-tab-header,.mat-tab-nav-bar{border-bottom:1px solid #e0e0e0}.mat-tab-group-inverted-header .mat-tab-header,.mat-tab-group-inverted-header .mat-tab-nav-bar{border-top:1px solid #e0e0e0;border-bottom:none}.mat-tab-label:focus{background-color:rgba(178,235,242,.3)}.mat-ink-bar{background-color:#00bcd4}.mat-toolbar{background:#f5f5f5;color:rgba(0,0,0,.87)}.mat-toolbar.mat-primary{background:#00bcd4;color:#fff}.mat-toolbar.mat-accent{background:#ffd740;color:rgba(0,0,0,.87)}.mat-toolbar.mat-warn{background:#f44336;color:#fff}.mat-tooltip{background:rgba(97,97,97,.9)}.docs-app-background{background:md-color((status-bar:#e0e0e0,app-bar:#f5f5f5,background:#fafafa,hover:rgba(0,0,0,.04),card:#fff,dialog:#fff,disabled-button:rgba(0,0,0,.12),raised-button:#fff),background)}.docs-primary-header{background:md-color((50:#e0f7fa,100:#b2ebf2,200:#80deea,300:#4dd0e1,400:#26c6da,500:#00bcd4,600:#00acc1,700:#0097a7,800:#00838f,900:#006064,A100:#84ffff,A200:#18ffff,A400:#00e5ff,A700:#00b8d4,contrast:(50:rgba(0,0,0,.87),100:rgba(0,0,0,.87),200:rgba(0,0,0,.87),300:rgba(0,0,0,.87),400:rgba(0,0,0,.87),500:#fff,600:#fff,700:#fff,800:#fff,900:hsla(0,0%,100%,.87),A100:rgba(0,0,0,.87),A200:rgba(0,0,0,.87),A400:rgba(0,0,0,.87),A700:rgba(0,0,0,.87)),default:#00bcd4,lighter:#b2ebf2,darker:#0097a7,default-contrast:#fff,lighter-contrast:rgba(0,0,0,.87),darker-contrast:#fff,\\\"50-contrast\\\":rgba(0,0,0,.87),\\\"100-contrast\\\":rgba(0,0,0,.87),\\\"200-contrast\\\":rgba(0,0,0,.87),\\\"300-contrast\\\":rgba(0,0,0,.87),\\\"400-contrast\\\":rgba(0,0,0,.87),\\\"500-contrast\\\":#fff,\\\"600-contrast\\\":#fff,\\\"700-contrast\\\":#fff,\\\"800-contrast\\\":#fff,\\\"900-contrast\\\":hsla(0,0%,100%,.87),\\\"A100-contrast\\\":rgba(0,0,0,.87),\\\"A200-contrast\\\":rgba(0,0,0,.87),\\\"A400-contrast\\\":rgba(0,0,0,.87),\\\"A700-contrast\\\":rgba(0,0,0,.87),\\\"contrast-contrast\\\":null))}.docs-footer,.docs-primary-header h1{color:md-color((50:#e0f7fa,100:#b2ebf2,200:#80deea,300:#4dd0e1,400:#26c6da,500:#00bcd4,600:#00acc1,700:#0097a7,800:#00838f,900:#006064,A100:#84ffff,A200:#18ffff,A400:#00e5ff,A700:#00b8d4,contrast:(50:rgba(0,0,0,.87),100:rgba(0,0,0,.87),200:rgba(0,0,0,.87),300:rgba(0,0,0,.87),400:rgba(0,0,0,.87),500:#fff,600:#fff,700:#fff,800:#fff,900:hsla(0,0%,100%,.87),A100:rgba(0,0,0,.87),A200:rgba(0,0,0,.87),A400:rgba(0,0,0,.87),A700:rgba(0,0,0,.87)),default:#00bcd4,lighter:#b2ebf2,darker:#0097a7,default-contrast:#fff,lighter-contrast:rgba(0,0,0,.87),darker-contrast:#fff,\\\"50-contrast\\\":rgba(0,0,0,.87),\\\"100-contrast\\\":rgba(0,0,0,.87),\\\"200-contrast\\\":rgba(0,0,0,.87),\\\"300-contrast\\\":rgba(0,0,0,.87),\\\"400-contrast\\\":rgba(0,0,0,.87),\\\"500-contrast\\\":#fff,\\\"600-contrast\\\":#fff,\\\"700-contrast\\\":#fff,\\\"800-contrast\\\":#fff,\\\"900-contrast\\\":hsla(0,0%,100%,.87),\\\"A100-contrast\\\":rgba(0,0,0,.87),\\\"A200-contrast\\\":rgba(0,0,0,.87),\\\"A400-contrast\\\":rgba(0,0,0,.87),\\\"A700-contrast\\\":rgba(0,0,0,.87),\\\"contrast-contrast\\\":null),default-contrast)}.docs-footer{background:md-color((50:#e0f7fa,100:#b2ebf2,200:#80deea,300:#4dd0e1,400:#26c6da,500:#00bcd4,600:#00acc1,700:#0097a7,800:#00838f,900:#006064,A100:#84ffff,A200:#18ffff,A400:#00e5ff,A700:#00b8d4,contrast:(50:rgba(0,0,0,.87),100:rgba(0,0,0,.87),200:rgba(0,0,0,.87),300:rgba(0,0,0,.87),400:rgba(0,0,0,.87),500:#fff,600:#fff,700:#fff,800:#fff,900:hsla(0,0%,100%,.87),A100:rgba(0,0,0,.87),A200:rgba(0,0,0,.87),A400:rgba(0,0,0,.87),A700:rgba(0,0,0,.87)),default:#00bcd4,lighter:#b2ebf2,darker:#0097a7,default-contrast:#fff,lighter-contrast:rgba(0,0,0,.87),darker-contrast:#fff,\\\"50-contrast\\\":rgba(0,0,0,.87),\\\"100-contrast\\\":rgba(0,0,0,.87),\\\"200-contrast\\\":rgba(0,0,0,.87),\\\"300-contrast\\\":rgba(0,0,0,.87),\\\"400-contrast\\\":rgba(0,0,0,.87),\\\"500-contrast\\\":#fff,\\\"600-contrast\\\":#fff,\\\"700-contrast\\\":#fff,\\\"800-contrast\\\":#fff,\\\"900-contrast\\\":hsla(0,0%,100%,.87),\\\"A100-contrast\\\":rgba(0,0,0,.87),\\\"A200-contrast\\\":rgba(0,0,0,.87),\\\"A400-contrast\\\":rgba(0,0,0,.87),\\\"A700-contrast\\\":rgba(0,0,0,.87),\\\"contrast-contrast\\\":null))}.docs-component-viewer-tabbed-content h1,.docs-guide-content h1{color:#00838f;background:rgba(0,0,0,.03)}.docs-component-viewer-tabbed-content h2,.docs-component-viewer-tabbed-content h3,.docs-component-viewer-tabbed-content h4,.docs-component-viewer-tabbed-content h5,.docs-component-viewer-tabbed-content li,.docs-component-viewer-tabbed-content ol,.docs-component-viewer-tabbed-content p,.docs-guide-content h2,.docs-guide-content h3,.docs-guide-content h4,.docs-guide-content h5,.docs-guide-content li,.docs-guide-content ol,.docs-guide-content p{color:rgba(0,0,0,.54)}.docs-component-viewer-tabbed-content a,.docs-guide-content a{color:#00bcd4}.docs-component-viewer-tabbed-content table,.docs-guide-content table{box-shadow:0 2px 2px rgba(0,0,0,.24),0 0 2px rgba(0,0,0,.12)}.docs-component-viewer-tabbed-content table tbody th,.docs-guide-content table tbody th{border:1px solid rgba(0,0,0,.03)}.docs-component-viewer-tabbed-content td,.docs-guide-content td{color:rgba(0,0,0,.54);border:1px solid rgba(0,0,0,.03)}.docs-component-viewer-tabbed-content th,.docs-guide-content th{color:rgba(0,0,0,.54);background:rgba(0,0,0,.03)}.docs-component-viewer-sidenav h3{background:rgba(0,0,0,.32);color:#fff}.docs-component-viewer-sidenav li{border-color:rgba(0,0,0,.06);color:rgba(0,0,0,.54)}.docs-component-viewer-sidenav li>a{color:rgba(0,0,0,.54)}.docs-component-viewer-sidenav li>a.is-selected,.docs-component-viewer-sidenav li>a:focus,.docs-component-viewer-sidenav li>a:hover{background:#fafafa;color:#00bcd4}app-homepage app-homepage .docs-header-headline{color:#fff}app-homepage .docs-header-start{color:#00bcd4}app-component-viewer,app-component-viewer .mat-tab-label:focus,app-homepage .docs-homepage-row{color:rgba(0,0,0,.54)}.docs-example-source{border-bottom:1px solid rgba(0,0,0,.12)}.docs-component-category-list-card-summary,.docs-component-list-item{color:rgba(0,0,0,.54)}app-navbar{color:#fff}app-navbar .docs-navbar{background:#00bcd4}example-viewer .docs-example-viewer-wrapper{border:1px solid rgba(0,0,0,.03);box-shadow:0 2px 2px rgba(0,0,0,.24),0 0 2px rgba(0,0,0,.12);margin:4px}example-viewer .docs-example-viewer-title{color:rgba(0,0,0,.54);background:rgba(0,0,0,.03)}app-footer .docs-footer-links a{color:#fff}body{font-family:Roboto,Helvetica Neue Light,Helvetica Neue,Helvetica,Arial,Lucida Grande,sans-serif;margin:0}[md-button],[md-raised-button]{text-transform:uppercase}h1,h2{weight:400}pre{white-space:pre-wrap}.docs-primary-header{padding-left:20px}.docs-primary-header h1{font-size:30px;font-weight:300;margin:0;padding:50px}.hljs{display:block;overflow-x:auto;padding:.5em;background:#fdf6e3;color:#657b83}.hljs-comment,.hljs-quote{color:#93a1a1}.hljs-addition,.hljs-keyword,.hljs-selector-tag{color:#859900}.hljs-doctag,.hljs-literal,.hljs-meta .hljs-meta-string,.hljs-number,.hljs-regexp,.hljs-string{color:#2aa198}.hljs-name,.hljs-section,.hljs-selector-class,.hljs-selector-id,.hljs-title{color:#268bd2}.hljs-attr,.hljs-attribute,.hljs-class .hljs-title,.hljs-template-variable,.hljs-type,.hljs-variable{color:#b58900}.hljs-bullet,.hljs-link,.hljs-meta,.hljs-meta .hljs-keyword,.hljs-selector-attr,.hljs-selector-pseudo,.hljs-subst,.hljs-symbol{color:#cb4b16}.hljs-built_in,.hljs-deletion{color:#dc322f}.hljs-formula{background:#eee8d5}.hljs-emphasis{font-style:italic}.hljs-strong{font-weight:700}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 400 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n        return Hammer;\n    }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n\n\n/***/ }),\n/* 401 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__constants_lib__ = __webpack_require__(80);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__enums_storage__ = __webpack_require__(38);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_index__ = __webpack_require__(190);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__helpers_webStorage__ = __webpack_require__(188);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__interfaces_config__ = __webpack_require__(189);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__helpers_keyStorage__ = __webpack_require__(120);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__interfaces_index__ = __webpack_require__(406);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"WebstorageConfig\", function() { return __WEBPACK_IMPORTED_MODULE_7__interfaces_index__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__decorators_index__ = __webpack_require__(402);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"LocalStorage\", function() { return __WEBPACK_IMPORTED_MODULE_8__decorators_index__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SessionStorage\", function() { return __WEBPACK_IMPORTED_MODULE_8__decorators_index__[\"b\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"WebStorage\", function() { return __WEBPACK_IMPORTED_MODULE_8__decorators_index__[\"c\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"WebStorageDecorator\", function() { return __WEBPACK_IMPORTED_MODULE_8__decorators_index__[\"d\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"WebStorageService\", function() { return __WEBPACK_IMPORTED_MODULE_3__services_index__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"LocalStorageService\", function() { return __WEBPACK_IMPORTED_MODULE_3__services_index__[\"b\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SessionStorageService\", function() { return __WEBPACK_IMPORTED_MODULE_3__services_index__[\"c\"]; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WEBSTORAGE_CONFIG\", function() { return WEBSTORAGE_CONFIG; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Ng2Webstorage\", function() { return Ng2Webstorage; });\n/* harmony export (immutable) */ __webpack_exports__[\"provideConfig\"] = provideConfig;\n/* harmony export (immutable) */ __webpack_exports__[\"configure\"] = configure;\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar WEBSTORAGE_CONFIG = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"OpaqueToken\"]('WEBSTORAGE_CONFIG');\r\nvar Ng2Webstorage = (function () {\r\n    function Ng2Webstorage(ngZone, config) {\r\n        this.ngZone = ngZone;\r\n        if (config) {\r\n            __WEBPACK_IMPORTED_MODULE_6__helpers_keyStorage__[\"a\" /* KeyStorageHelper */].setStorageKeyPrefix(config.prefix);\r\n            __WEBPACK_IMPORTED_MODULE_6__helpers_keyStorage__[\"a\" /* KeyStorageHelper */].setStorageKeySeparator(config.separator);\r\n        }\r\n        this.initStorageListener();\r\n    }\r\n    Ng2Webstorage.forRoot = function (config) {\r\n        return {\r\n            ngModule: Ng2Webstorage,\r\n            providers: [\r\n                {\r\n                    provide: WEBSTORAGE_CONFIG,\r\n                    useValue: config\r\n                },\r\n                {\r\n                    provide: __WEBPACK_IMPORTED_MODULE_5__interfaces_config__[\"a\" /* WebstorageConfig */],\r\n                    useFactory: provideConfig,\r\n                    deps: [\r\n                        WEBSTORAGE_CONFIG\r\n                    ]\r\n                }\r\n            ]\r\n        };\r\n    };\r\n    Ng2Webstorage.prototype.initStorageListener = function () {\r\n        var _this = this;\r\n        if (window) {\r\n            window.addEventListener('storage', function (event) { return _this.ngZone.run(function () {\r\n                var storage = window.sessionStorage === event.storageArea ? __WEBPACK_IMPORTED_MODULE_2__enums_storage__[\"a\" /* STORAGE */].session : __WEBPACK_IMPORTED_MODULE_2__enums_storage__[\"a\" /* STORAGE */].local;\r\n                __WEBPACK_IMPORTED_MODULE_4__helpers_webStorage__[\"a\" /* WebStorageHelper */].refresh(storage, event.key);\r\n            }); });\r\n        }\r\n    };\r\n    return Ng2Webstorage;\r\n}());\r\n\r\nNg2Webstorage.decorators = [\r\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\r\n                declarations: [],\r\n                providers: [__WEBPACK_IMPORTED_MODULE_3__services_index__[\"c\" /* SessionStorageService */], __WEBPACK_IMPORTED_MODULE_3__services_index__[\"b\" /* LocalStorageService */]],\r\n                imports: []\r\n            },] },\r\n];\r\n/** @nocollapse */\r\nNg2Webstorage.ctorParameters = function () { return [\r\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgZone\"], },\r\n    { type: __WEBPACK_IMPORTED_MODULE_5__interfaces_config__[\"a\" /* WebstorageConfig */], decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [__WEBPACK_IMPORTED_MODULE_5__interfaces_config__[\"a\" /* WebstorageConfig */],] },] },\r\n]; };\r\nfunction provideConfig(config) {\r\n    return new __WEBPACK_IMPORTED_MODULE_5__interfaces_config__[\"a\" /* WebstorageConfig */](config);\r\n}\r\nfunction configure(_a) {\r\n    var _b = _a === void 0 ? { prefix: __WEBPACK_IMPORTED_MODULE_1__constants_lib__[\"a\" /* LIB_KEY */], separator: __WEBPACK_IMPORTED_MODULE_1__constants_lib__[\"b\" /* LIB_KEY_SEPARATOR */] } : _a, prefix = _b.prefix, separator = _b.separator;\r\n    /*@Deprecation*/\r\n    console.warn('[ng2-webstorage:deprecation] The configure method is deprecated since the v1.5.0, consider to use forRoot instead');\r\n    __WEBPACK_IMPORTED_MODULE_6__helpers_keyStorage__[\"a\" /* KeyStorageHelper */].setStorageKeyPrefix(prefix);\r\n    __WEBPACK_IMPORTED_MODULE_6__helpers_keyStorage__[\"a\" /* KeyStorageHelper */].setStorageKeySeparator(separator);\r\n}\r\n//# sourceMappingURL=app.js.map\n\n/***/ }),\n/* 402 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__localStorage__ = __webpack_require__(403);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__localStorage__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__sessionStorage__ = __webpack_require__(404);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__sessionStorage__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__webStorage__ = __webpack_require__(119);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_2__webStorage__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_2__webStorage__[\"b\"]; });\n\r\n\r\n\r\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 403 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__webStorage__ = __webpack_require__(119);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__enums_storage__ = __webpack_require__(38);\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = LocalStorage;\n\r\n\r\nfunction LocalStorage(webSKey) {\r\n    return function (targetedClass, raw) {\r\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__webStorage__[\"b\" /* WebStorageDecorator */])(webSKey, __WEBPACK_IMPORTED_MODULE_1__enums_storage__[\"a\" /* STORAGE */].local, targetedClass, raw);\r\n    };\r\n}\r\n;\r\n//# sourceMappingURL=localStorage.js.map\n\n/***/ }),\n/* 404 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__webStorage__ = __webpack_require__(119);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__enums_storage__ = __webpack_require__(38);\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = SessionStorage;\n\r\n\r\nfunction SessionStorage(webSKey) {\r\n    return function (targetedClass, raw) {\r\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__webStorage__[\"b\" /* WebStorageDecorator */])(webSKey, __WEBPACK_IMPORTED_MODULE_1__enums_storage__[\"a\" /* STORAGE */].session, targetedClass, raw);\r\n    };\r\n}\r\n;\r\n//# sourceMappingURL=sessionStorage.js.map\n\n/***/ }),\n/* 405 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MockStorageHelper; });\nvar MockStorageHelper = (function () {\r\n    function MockStorageHelper() {\r\n    }\r\n    MockStorageHelper.isSecuredField = function (field) {\r\n        return !!~MockStorageHelper.securedFields.indexOf(field);\r\n    };\r\n    MockStorageHelper.getStorage = function (sType) {\r\n        if (!this.mockStorages[sType])\r\n            this.mockStorages[sType] = MockStorageHelper.generateStorage();\r\n        return this.mockStorages[sType];\r\n    };\r\n    MockStorageHelper.generateStorage = function () {\r\n        var storage = {};\r\n        Object.defineProperties(storage, {\r\n            setItem: {\r\n                writable: false,\r\n                enumerable: false,\r\n                configurable: false,\r\n                value: function (key, value) {\r\n                    if (!MockStorageHelper.isSecuredField(key))\r\n                        this[key] = value;\r\n                },\r\n            },\r\n            getItem: {\r\n                writable: false,\r\n                enumerable: false,\r\n                configurable: false,\r\n                value: function (key) {\r\n                    return !MockStorageHelper.isSecuredField(key) ? this[key] || null : null;\r\n                },\r\n            },\r\n            removeItem: {\r\n                writable: false,\r\n                enumerable: false,\r\n                configurable: false,\r\n                value: function (key) {\r\n                    if (!MockStorageHelper.isSecuredField(key))\r\n                        delete this[key];\r\n                },\r\n            },\r\n            length: {\r\n                enumerable: false,\r\n                configurable: false,\r\n                get: function () {\r\n                    return Object.keys(this).length;\r\n                }\r\n            }\r\n        });\r\n        return storage;\r\n    };\r\n    return MockStorageHelper;\r\n}());\r\n\r\nMockStorageHelper.securedFields = ['setItem', 'getItem', 'removeItem', 'length'];\r\nMockStorageHelper.mockStorages = {};\r\n//# sourceMappingURL=mockStorage.js.map\n\n/***/ }),\n/* 406 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__config__ = __webpack_require__(189);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__config__[\"a\"]; });\n\r\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 407 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__enums_storage__ = __webpack_require__(38);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__webStorage__ = __webpack_require__(121);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return LocalStorageService; });\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\n\r\n\r\nvar LocalStorageService = (function (_super) {\r\n    __extends(LocalStorageService, _super);\r\n    function LocalStorageService() {\r\n        return _super.call(this, __WEBPACK_IMPORTED_MODULE_1__enums_storage__[\"a\" /* STORAGE */].local) || this;\r\n    }\r\n    return LocalStorageService;\r\n}(__WEBPACK_IMPORTED_MODULE_2__webStorage__[\"a\" /* WebStorageService */]));\r\n\r\nLocalStorageService.decorators = [\r\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\r\n];\r\n/** @nocollapse */\r\nLocalStorageService.ctorParameters = function () { return []; };\r\n//# sourceMappingURL=localStorage.js.map\n\n/***/ }),\n/* 408 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__enums_storage__ = __webpack_require__(38);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__webStorage__ = __webpack_require__(121);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SessionStorageService; });\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\n\r\n\r\nvar SessionStorageService = (function (_super) {\r\n    __extends(SessionStorageService, _super);\r\n    function SessionStorageService() {\r\n        return _super.call(this, __WEBPACK_IMPORTED_MODULE_1__enums_storage__[\"a\" /* STORAGE */].session) || this;\r\n    }\r\n    return SessionStorageService;\r\n}(__WEBPACK_IMPORTED_MODULE_2__webStorage__[\"a\" /* WebStorageService */]));\r\n\r\nSessionStorageService.decorators = [\r\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\r\n];\r\n/** @nocollapse */\r\nSessionStorageService.ctorParameters = function () { return []; };\r\n//# sourceMappingURL=sessionStorage.js.map\n\n/***/ }),\n/* 409 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = __webpack_require__(1);\nvar forms_1 = __webpack_require__(65);\nvar common_1 = __webpack_require__(50);\nvar Rating = Rating_1 = (function () {\n    function Rating() {\n        // -------------------------------------------------------------------------\n        // Inputs\n        // -------------------------------------------------------------------------\n        this.iconClass = \"star-icon\";\n        this.fullIcon = \"★\";\n        this.emptyIcon = \"☆\";\n        this.titles = [];\n        // -------------------------------------------------------------------------\n        // Outputs\n        // -------------------------------------------------------------------------\n        this.onHover = new core_1.EventEmitter();\n        this.onLeave = new core_1.EventEmitter();\n        this.hovered = 0;\n        this.hoveredPercent = undefined;\n        // -------------------------------------------------------------------------\n        // Private Properties\n        // -------------------------------------------------------------------------\n        this._max = 5;\n    }\n    Object.defineProperty(Rating.prototype, \"max\", {\n        get: function () {\n            return this._max;\n        },\n        // -------------------------------------------------------------------------\n        // Input Accessors\n        // -------------------------------------------------------------------------\n        set: function (max) {\n            this._max = max;\n            this.buildRanges();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // -------------------------------------------------------------------------\n    // Implemented from ControlValueAccessor\n    // -------------------------------------------------------------------------\n    Rating.prototype.writeValue = function (value) {\n        /*if (value % 1 !== value) {\n         this.model = Math.round(value);\n         return;\n         }*/\n        this.model = value;\n    };\n    Rating.prototype.registerOnChange = function (fn) {\n        this.onChange = fn;\n    };\n    Rating.prototype.registerOnTouched = function (fn) {\n        this.onTouched = fn;\n    };\n    // -------------------------------------------------------------------------\n    // Implemented from Va..\n    // -------------------------------------------------------------------------\n    Rating.prototype.validate = function (c) {\n        if (this.required && !c.value) {\n            return {\n                required: true\n            };\n        }\n        return null;\n    };\n    // -------------------------------------------------------------------------\n    // Lifecycle callbacks\n    // -------------------------------------------------------------------------\n    Rating.prototype.ngOnInit = function () {\n        this.buildRanges();\n    };\n    // -------------------------------------------------------------------------\n    // Host Bindings\n    // -------------------------------------------------------------------------\n    Rating.prototype.onKeydown = function (event) {\n        if ([37, 38, 39, 40].indexOf(event.which) === -1 || this.hovered)\n            return;\n        event.preventDefault();\n        event.stopPropagation();\n        var increment = this.float ? 0.5 : 1;\n        this.rate(this.model + (event.which === 38 || event.which === 39 ? increment : increment * -1));\n    };\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    Rating.prototype.calculateWidth = function (item) {\n        if (this.hovered > 0) {\n            if (this.hoveredPercent !== undefined && this.hovered === item)\n                return this.hoveredPercent;\n            return this.hovered >= item ? 100 : 0;\n        }\n        return this.model >= item ? 100 : 100 - Math.round((item - this.model) * 10) * 10;\n    };\n    Rating.prototype.setHovered = function (hovered) {\n        if (!this.readonly && !this.disabled) {\n            this.hovered = hovered;\n            this.onHover.emit(hovered);\n        }\n    };\n    Rating.prototype.changeHovered = function (event) {\n        if (!this.float)\n            return;\n        var target = event.target;\n        var relativeX = event.pageX - target.offsetLeft;\n        var percent = Math.round((relativeX * 100 / target.offsetWidth) / 10) * 10;\n        this.hoveredPercent = percent > 50 ? 100 : 50;\n    };\n    Rating.prototype.resetHovered = function () {\n        this.hovered = 0;\n        this.hoveredPercent = undefined;\n        this.onLeave.emit(this.hovered);\n    };\n    Rating.prototype.rate = function (value) {\n        if (!this.readonly && !this.disabled && value >= 0 && value <= this.ratingRange.length) {\n            var newValue = this.hoveredPercent ? (value - 1) + this.hoveredPercent / 100 : value;\n            this.onChange(newValue);\n            this.model = newValue;\n        }\n    };\n    // -------------------------------------------------------------------------\n    // Private Methods\n    // -------------------------------------------------------------------------\n    Rating.prototype.buildRanges = function () {\n        this.ratingRange = this.range(1, this.max);\n    };\n    Rating.prototype.range = function (start, end) {\n        var foo = [];\n        for (var i = start; i <= end; i++) {\n            foo.push(i);\n        }\n        return foo;\n    };\n    return Rating;\n}());\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Object)\n], Rating.prototype, \"iconClass\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Object)\n], Rating.prototype, \"fullIcon\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Object)\n], Rating.prototype, \"emptyIcon\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Boolean)\n], Rating.prototype, \"readonly\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Boolean)\n], Rating.prototype, \"disabled\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Boolean)\n], Rating.prototype, \"required\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Boolean)\n], Rating.prototype, \"float\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Array)\n], Rating.prototype, \"titles\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Number),\n    __metadata(\"design:paramtypes\", [Number])\n], Rating.prototype, \"max\", null);\n__decorate([\n    core_1.Output(),\n    __metadata(\"design:type\", Object)\n], Rating.prototype, \"onHover\", void 0);\n__decorate([\n    core_1.Output(),\n    __metadata(\"design:type\", Object)\n], Rating.prototype, \"onLeave\", void 0);\n__decorate([\n    core_1.HostListener(\"keydown\", [\"$event\"]),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [KeyboardEvent]),\n    __metadata(\"design:returntype\", void 0)\n], Rating.prototype, \"onKeydown\", null);\nRating = Rating_1 = __decorate([\n    core_1.Component({\n        selector: \"rating\",\n        template: \"\\n<span (mouseleave)=\\\"resetHovered()\\\"\\n      class=\\\"rating\\\"\\n      [class.disabled]=\\\"disabled\\\"\\n      [class.readonly]=\\\"readonly\\\"\\n      tabindex=\\\"0\\\"\\n      role=\\\"slider\\\" \\n      aria-valuemin=\\\"0\\\"\\n      [attr.aria-valuemax]=\\\"ratingRange.length\\\" \\n      [attr.aria-valuenow]=\\\"model\\\">\\n    <span *ngFor=\\\"let item of ratingRange; let index = index\\\">\\n        <i (mouseenter)=\\\"setHovered(item)\\\" \\n           (mousemove)=\\\"changeHovered($event)\\\"\\n           (click)=\\\"rate(item)\\\" \\n           [attr.data-icon]=\\\"fullIcon\\\"\\n           class=\\\"{{ iconClass }} half{{ calculateWidth(item) }}\\\"\\n           [title]=\\\"titles[index] || item\\\">{{ emptyIcon }}</i>\\n    </span>\\n</span>\\n\",\n        providers: [\n            { provide: forms_1.NG_VALUE_ACCESSOR, useExisting: core_1.forwardRef(function () { return Rating_1; }), multi: true },\n            { provide: forms_1.NG_VALIDATORS, useExisting: core_1.forwardRef(function () { return Rating_1; }), multi: true },\n        ],\n        styles: [\"\\nspan.rating {\\n    cursor: pointer;\\n    outline: none;\\n}\\nspan.rating.readonly {\\n    cursor: default;\\n}\\nspan.rating.disabled {\\n    cursor: not-allowed;\\n}\\nspan.rating i{\\n    font-style: normal; \\n}\\n.star-icon {\\n    color: #ddd;\\n    font-size: 2em;\\n    position: relative;\\n}\\n.star-icon:before {\\n    color: #FDE16D;\\n    content: attr(data-icon) \\\" \\\";\\n    position: absolute;\\n    left: 0;\\n    overflow: hidden;\\n    width: 0;\\n} \\nspan.rating.disabled .star-icon:before {\\n    color: #ECECEC;\\n    text-shadow: none;\\n}\\n.star-icon.half10:before {\\n    width: 10%;\\n}\\n.star-icon.half20:before {\\n    width: 20%;\\n}\\n.star-icon.half30:before {\\n    width: 30%;\\n}\\n.star-icon.half40:before {\\n    width: 40%;\\n}\\n.star-icon.half50:before {\\n    width: 50%;\\n}\\n.star-icon.half60:before {\\n    width: 60%;\\n}\\n.star-icon.half70:before {\\n    width: 70%;\\n}\\n.star-icon.half80:before {\\n    width: 80%;\\n}\\n.star-icon.half90:before {\\n    width: 90%;\\n}\\n.star-icon.half100:before {\\n    width: 100%;\\n}\\n@-moz-document url-prefix() { /* Firefox Hack */\\n  .star-icon {\\n    font-size: 50px;\\n    line-height: 34px;\\n  }\\n}\\n\"]\n    })\n], Rating);\nexports.Rating = Rating;\nvar RatingModule = (function () {\n    function RatingModule() {\n    }\n    return RatingModule;\n}());\nRatingModule = __decorate([\n    core_1.NgModule({\n        imports: [\n            common_1.CommonModule\n        ],\n        declarations: [\n            Rating,\n        ],\n        exports: [\n            Rating,\n        ],\n    })\n], RatingModule);\nexports.RatingModule = RatingModule;\nvar Rating_1;\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 410 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div \\n  [hidden]=\\\"this.pages.length == 0\\\"\\n  class=\\\"col-md-12 no-paddings home\\\">\\n  <custom-header class=\\\"col-md-12\\\"></custom-header>\\n  <div class=\\\"col-md-12 no-paddings\\\">\\n      <router-outlet></router-outlet>\\n  </div>\\n</div>\"\n\n/***/ }),\n/* 411 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<!-- big-->\\n<md-toolbar *ngIf=\\\"pages.length > 0\\\"  color=\\\"primary\\\" class=\\\"hidden-sm hidden-xs\\\">\\n  <a [routerLink]=\\\"['/']\\\" class=\\\"logo pull-left\\\">\\n    <img \\n      src=\\\"./src/img/logo.png\\\"\\n      alt=\\\"logo\\\"/>\\n  </a>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button md-button [routerLink]=\\\"['']\\\">\\n    {{dictionary.getTexts('homePage')}}\\n  </button>\\n  <ng-template ngFor #categoryObject [ngForOf]=\\\"pages\\\" let-index=\\\"index\\\">\\n    <button \\n      *ngIf=\\\"pages[index].type == 'single' || pages[index].type == 'blog'\\\"\\n      md-button \\n      [routerLink]=\\\"['insurance', pages[index].link]\\\" >\\n      {{pages[index].title[dictionary.language]}}\\n    </button>\\n    <md-select \\n      *ngIf=\\\"pages[index].type == 'multiple'\\\"\\n      [placeholder]=\\\"pages[index].title[dictionary.language]\\\" \\n      [(ngModel)]=\\\"valueCtrl\\\"\\n      (change)=\\\"onLinkSelect($event)\\\"\\n      name=\\\"multiple\\\">\\n      <md-option \\n        *ngFor=\\\"let page of pages[index].sub; let i = index\\\" \\n        [value]=\\\"page.link\\\">\\n        {{getPageByLink(page.link).title[dictionary.language]}}\\n      </md-option>\\n    </md-select>\\n  </ng-template>\\n  <button md-button [routerLink]=\\\"['contacts']\\\">\\n    {{dictionary.getTexts('contactPage')}}\\n  </button>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button md-icon-button (click)=\\\"changeLanguage()\\\">\\n    <image \\n      [src]=\\\"'./src/img/' + dictionary.nextLanguage() + '.png'\\\"\\n      [alt]=\\\"dictionary.language\\\"></image>\\n  </button>\\n</md-toolbar>\\n<!-- supеr small -->\\n<md-toolbar *ngIf=\\\"pages.length > 0\\\"  color=\\\"primary\\\" class=\\\"hidden-lg hidden-md\\\">\\n  <a [routerLink]=\\\"['/']\\\" class=\\\"logo pull-left\\\">\\n    <img \\n      src=\\\"./src/img/logo.png\\\"\\n      alt=\\\"logo\\\"/>\\n  </a>\\n  <button class=\\\"categories-button\\\" md-icon-button [mdMenuTriggerFor]=\\\"menu\\\">\\n    {{dictionary.getTexts('services') | uppercase}}\\n    <md-icon>more_vert</md-icon>\\n  </button>\\n  <md-menu #menu=\\\"mdMenu\\\">\\n    <ng-template ngFor #categoryObject [ngForOf]=\\\"pages\\\" let-index=\\\"index\\\">\\n      <button \\n        *ngIf=\\\"(pages[index].type != 'multiple') && (pages[index].link !== undefined )\\\"\\n        md-menu-item \\n        [routerLink]=\\\"['insurance', pages[index].link]\\\" >\\n        {{pages[index].title[dictionary.language]}}\\n      </button>\\n    </ng-template>\\n  </md-menu>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button  class=\\\"categories-button\\\" md-button [routerLink]=\\\"['contacts']\\\">\\n    {{dictionary.getTexts('contactPage')}}\\n  </button>\\n  <button md-icon-button (click)=\\\"changeLanguage()\\\">\\n    <image \\n      [src]=\\\"'./src/img/' + dictionary.nextLanguage() + '.png'\\\"\\n      [alt]=\\\"dictionary.language\\\"></image>\\n  </button>\\n</md-toolbar>\"\n\n/***/ }),\n/* 412 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<img \\n  [src]=\\\"src || blankImage\\\"\\n  [alt]=\\\"alt\\\"/>\\n\"\n\n/***/ }),\n/* 413 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div>\\n  <!-- Needs design for skeleton. Expected div with name and info link view -->\\n</div>\"\n\n/***/ }),\n/* 414 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<span class=\\\"{{ priceOptions.class }}\\\">{{ priceOptions.price }} {{ priceOptions.currency }}</span>\"\n\n/***/ }),\n/* 415 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"contacts no-paddings\\\">\\n  <div class=\\\"form-section col-xs-12\\\">\\n    <div class=\\\"alert alert-success\\\" *ngIf=\\\"messageSuccess\\\">\\n      <strong>{{dictionary.getTexts('contactMessageSuccess')}}</strong> {{dictionary.getTexts('contactMessageRecieved')}}\\n    </div>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"messageFail\\\">\\n      <strong>{{dictionary.getTexts('contactMessageFail')}}</strong> {{dictionary.getTexts('contactMessageNotRecieved')}} {{dictionary.getTexts('contactPhone')}}\\n    </div>\\n  </div>\\n  <div class=\\\"phone-section col-xs-12 container\\\">\\n    <div>\\n      <h2>{{dictionary.getTexts('contactPhoneTitle')}}</h2>\\n      <div class=\\\"col-xs-12 col-md-3\\\">\\n        <div class=\\\"col-xs-3\\\">\\n          <img \\n            src=\\\"./src/img/phone-icon.png\\\"\\n            alt=\\\"phone-icon\\\"/>\\n        </div>\\n        <div class=\\\"col-xs-9 contact duo\\\">\\n          <a href=\\\"tel:{{dictionary.getTexts('contactPhone1')}}\\\">{{dictionary.getTexts('contactPhone1')}}</a>\\n          <a href=\\\"tel:{{dictionary.getTexts('contactPhone2')}}\\\">{{dictionary.getTexts('contactPhone2')}}</a>\\n          <a href=\\\"tel:{{dictionary.getTexts('contactPhone3')}}\\\">{{dictionary.getTexts('contactPhone3')}}</a>\\n          <a href=\\\"tel:{{dictionary.getTexts('contactPhone4')}}\\\">{{dictionary.getTexts('contactPhone4')}}</a>\\n          <a href=\\\"tel:{{dictionary.getTexts('contactPhone5')}}\\\">{{dictionary.getTexts('contactPhone5')}}</a>\\n        </div>\\n      </div>\\n      <div class=\\\"col-xs-12 col-md-3\\\">\\n        <div class=\\\"col-xs-3\\\">\\n          <img \\n            src=\\\"./src/img/viber-icon.png\\\"\\n            alt=\\\"viber-icon\\\"/>\\n        </div>\\n        <div class=\\\"col-xs-9 contact\\\">\\n          <div class=\\\"bold\\\">\\n            <a href=\\\"viber://add?number=%{{dictionary.getTexts('contactPhone3')}}&text=hey\\\">{{dictionary.getTexts('contactPhone3')}}</a>\\n            <a href=\\\"viber://add?number=%{{dictionary.getTexts('contactPhone4')}}&text=hey\\\">{{dictionary.getTexts('contactPhone4')}}</a>\\n            <a href=\\\"viber://add?number=%{{dictionary.getTexts('contactPhone5')}}&text=hey\\\">{{dictionary.getTexts('contactPhone5')}}</a>\\n            </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-xs-12 col-md-3\\\">\\n        <div class=\\\"col-xs-3\\\">\\n          <img \\n            src=\\\"./src/img/facebook-icon.png\\\"\\n            alt=\\\"facebook-icon\\\"/>\\n        </div>\\n        <div class=\\\"col-xs-9 contact\\\">\\n          <div class=\\\"bold\\\">\\n            <a target=\\\"_blank\\\" href=\\\"https://www.facebook.com/Ikar-Ins-158552657688661/?fref=ts\\\">Ikar Ins</a>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-xs-12 col-md-3\\\">\\n        <div class=\\\"col-xs-3\\\">\\n          <img \\n            src=\\\"./src/img/skype-icon.png\\\"\\n            alt=\\\"skype-icon\\\"/>\\n        </div>\\n        <div class=\\\"col-xs-9 contact\\\">\\n          <div class=\\\"bold\\\">\\n            <a href=\\\"skype:ikarins?chat\\\">ikarins</a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"map-section col-xs-12 container\\\">\\n      <h2>{{dictionary.getTexts('contactOurAddress')}}</h2>\\n      <h4>{{dictionary.getTexts('contactCoordinateAdress')}}</h4>\\n      <h4 class=\\\"red\\\">{{dictionary.getTexts('contactRules')}}</h4>\\n  </div>\\n  <div class=\\\"map-container col-xs-12 no-paddings\\\">\\n    <agm-map \\n      [zoom]=\\\"mapCoordinates.zoom\\\"\\n      [latitude]=\\\"mapCoordinates.lat\\\" \\n      [longitude]=\\\"mapCoordinates.lng\\\">\\n      <agm-marker \\n        [latitude]=\\\"mapCoordinates.lat\\\" \\n        [longitude]=\\\"mapCoordinates.lng\\\">\\n        <agm-info-window [isOpen]=\\\"true\\\">\\n          <div class=\\\"info-window-container\\\">\\n            <div class=\\\"col-xs-2\\\">\\n              <img \\n                src=\\\"./src/img/logo.png\\\"\\n                alt=\\\"logo\\\"/>\\n            </div>\\n            <div class=\\\"col-xs-10 company\\\">\\n              <div>{{dictionary.getTexts('headerCompany')}}</div>\\n              <div>\\n                <span class=\\\"rating\\\"> \\n                  <span>{{starsCount}} </span>\\n                  <rating [(ngModel)]=\\\"starsCount\\\"\\n                    [readonly]=\\\"true\\\"> \\n                  </rating>\\n                  <span>(493)</span>\\n                </span>\\n              </div>\\n              <div>{{dictionary.getTexts('companyAddress')}}</div>\\n            </div>\\n          </div>\\n        </agm-info-window>\\n      </agm-marker>\\n    </agm-map>\\n  </div>\\n</div>\"\n\n/***/ }),\n/* 416 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<span>a</span>\"\n\n/***/ }),\n/* 417 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"carousel\\\"></div>\\n<div class=\\\"icons center hidden-sm hidden-xs\\\">\\n  <img \\n    *ngFor=\\\"let icon of icons\\\"\\n    [routerLink]=\\\"['insurance', icon.link]\\\"\\n    [src]=\\\"buildSrc(icon)\\\" \\n    [alt]=\\\"icon.src\\\"\\n    class=\\\"col-sm-12 col-lg-2\\\" />\\n</div>\\n<div class=\\\"icons center hidden-lg hidden-md\\\">\\n  <div>\\n    <img \\n      *ngFor=\\\"let icon of icons\\\"\\n      [routerLink]=\\\"['insurance', icon.link]\\\"\\n      [src]=\\\"buildSrc(icon)\\\" \\n      [alt]=\\\"icon.src\\\"\\n      class=\\\"col-sm-12 col-lg-2\\\" />\\n  </div>\\n</div>\\n<section class=\\\"info\\\">\\n  {{pageInfo}}\\n</section>\"\n\n/***/ }),\n/* 418 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"container\\\" *ngIf=\\\"pageData.page.title\\\">\\n    <h1 class=\\\"page-title\\\" [innerHTML]=\\\"pageData.page.title[dictionary.language]\\\"></h1>\\n    <div class=\\\"page-content\\\" [innerHTML]=\\\"pageData.page.html[dictionary.language]\\\"></div>\\n    <div class=\\\"sub-pages\\\">\\n        <div class=\\\"sub-page\\\" *ngFor=\\\"let page of pageData.subPages\\\">\\n            <div class=\\\"image-container col-xs-12 col-md-5\\\">\\n                <img [src]=\\\"'./src/img/' + page.image\\\" />\\n            </div>\\n            <h2 [innerHTML]=\\\"page.title[dictionary.language]\\\"></h2>\\n            <p [innerHTML]=\\\"page.html[dictionary.language]\\\"></p>\\n        </div>\\n    </div>\\n</div>\"\n\n/***/ }),\n/* 419 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"page not found\"\n\n/***/ }),\n/* 420 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<md-input-container>\\n  <input type=\\\"text\\\" mdInput [formControl]=\\\"valueCtrl\\\" [mdAutocomplete]=\\\"auto\\\" placeholder=\\\"{{dictionary.getTexts('headerSearchFor')}}\\\">\\n</md-input-container>\\n\\n<md-autocomplete #auto=\\\"mdAutocomplete\\\">\\n  <md-option (onSelect)=\\\"onProductSelect(i)\\\" *ngFor=\\\"let value of filteredValues | async; let i = index\\\" [value]=\\\"value\\\">\\n    <md-grid-list cols=\\\"4\\\" rowHeight=\\\"100px\\\">\\n      <md-grid-tile\\n        [colspan]=\\\"1\\\"\\n        [rowspan]=\\\"1\\\">\\n        <div class=\\\"image-holder\\\">\\n          <image \\n              [src]=\\\"'img/' + filteredImages[i]\\\"\\n              [alt]=\\\"option\\\">\\n          </image>\\n        </div>  \\n      </md-grid-tile>\\n      <md-grid-tile\\n        [colspan]=\\\"3\\\"\\n        [rowspan]=\\\"1\\\">\\n        <div>{{ value }}</div>\\n      </md-grid-tile>\\n    </md-grid-list>\\n  </md-option>\\n</md-autocomplete>\\n\"\n\n/***/ }),\n/* 421 */,\n/* 422 */,\n/* 423 */,\n/* 424 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nvar Scheduler = (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\nexports.Scheduler = Scheduler;\n//# sourceMappingURL=Scheduler.js.map\n\n/***/ }),\n/* 425 */,\n/* 426 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(2);\nvar forkJoin_1 = __webpack_require__(193);\nObservable_1.Observable.forkJoin = forkJoin_1.forkJoin;\n//# sourceMappingURL=forkJoin.js.map\n\n/***/ }),\n/* 427 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(2);\nvar fromEvent_1 = __webpack_require__(448);\nObservable_1.Observable.fromEvent = fromEvent_1.fromEvent;\n//# sourceMappingURL=fromEvent.js.map\n\n/***/ }),\n/* 428 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(2);\nvar merge_1 = __webpack_require__(195);\nObservable_1.Observable.merge = merge_1.merge;\n//# sourceMappingURL=merge.js.map\n\n/***/ }),\n/* 429 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(2);\nvar of_1 = __webpack_require__(196);\nObservable_1.Observable.of = of_1.of;\n//# sourceMappingURL=of.js.map\n\n/***/ }),\n/* 430 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(2);\nvar throw_1 = __webpack_require__(449);\nObservable_1.Observable.throw = throw_1._throw;\n//# sourceMappingURL=throw.js.map\n\n/***/ }),\n/* 431 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(2);\nvar auditTime_1 = __webpack_require__(450);\nObservable_1.Observable.prototype.auditTime = auditTime_1.auditTime;\n//# sourceMappingURL=auditTime.js.map\n\n/***/ }),\n/* 432 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(2);\nvar catch_1 = __webpack_require__(197);\nObservable_1.Observable.prototype.catch = catch_1._catch;\nObservable_1.Observable.prototype._catch = catch_1._catch;\n//# sourceMappingURL=catch.js.map\n\n/***/ }),\n/* 433 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(2);\nvar do_1 = __webpack_require__(454);\nObservable_1.Observable.prototype.do = do_1._do;\nObservable_1.Observable.prototype._do = do_1._do;\n//# sourceMappingURL=do.js.map\n\n/***/ }),\n/* 434 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(2);\nvar filter_1 = __webpack_require__(198);\nObservable_1.Observable.prototype.filter = filter_1.filter;\n//# sourceMappingURL=filter.js.map\n\n/***/ }),\n/* 435 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(2);\nvar finally_1 = __webpack_require__(456);\nObservable_1.Observable.prototype.finally = finally_1._finally;\nObservable_1.Observable.prototype._finally = finally_1._finally;\n//# sourceMappingURL=finally.js.map\n\n/***/ }),\n/* 436 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(2);\nvar first_1 = __webpack_require__(199);\nObservable_1.Observable.prototype.first = first_1.first;\n//# sourceMappingURL=first.js.map\n\n/***/ }),\n/* 437 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(2);\nvar share_1 = __webpack_require__(200);\nObservable_1.Observable.prototype.share = share_1.share;\n//# sourceMappingURL=share.js.map\n\n/***/ }),\n/* 438 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(2);\nvar startWith_1 = __webpack_require__(462);\nObservable_1.Observable.prototype.startWith = startWith_1.startWith;\n//# sourceMappingURL=startWith.js.map\n\n/***/ }),\n/* 439 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(2);\nvar switchMap_1 = __webpack_require__(463);\nObservable_1.Observable.prototype.switchMap = switchMap_1.switchMap;\n//# sourceMappingURL=switchMap.js.map\n\n/***/ }),\n/* 440 */,\n/* 441 */,\n/* 442 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(2);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ErrorObservable = (function (_super) {\n    __extends(ErrorObservable, _super);\n    function ErrorObservable(error, scheduler) {\n        _super.call(this);\n        this.error = error;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits an error notification.\n     *\n     * <span class=\"informal\">Just emits 'error', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/throw.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the error notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then emit an error.</caption>\n     * var result = Rx.Observable.throw(new Error('oops!')).startWith(7);\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @example <caption>Map and flattens numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x === 13 ?\n     *     Rx.Observable.throw('Thirteens are bad') :\n     *     Rx.Observable.of('a', 'b', 'c')\n     * );\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link of}\n     *\n     * @param {any} error The particular Error to pass to the error notification.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the error notification.\n     * @return {Observable} An error Observable: emits only the error notification\n     * using the given error argument.\n     * @static true\n     * @name throw\n     * @owner Observable\n     */\n    ErrorObservable.create = function (error, scheduler) {\n        return new ErrorObservable(error, scheduler);\n    };\n    ErrorObservable.dispatch = function (arg) {\n        var error = arg.error, subscriber = arg.subscriber;\n        subscriber.error(error);\n    };\n    ErrorObservable.prototype._subscribe = function (subscriber) {\n        var error = this.error;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ErrorObservable.dispatch, 0, {\n                error: error, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.error(error);\n        }\n    };\n    return ErrorObservable;\n}(Observable_1.Observable));\nexports.ErrorObservable = ErrorObservable;\n//# sourceMappingURL=ErrorObservable.js.map\n\n/***/ }),\n/* 443 */,\n/* 444 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(2);\nvar tryCatch_1 = __webpack_require__(204);\nvar isFunction_1 = __webpack_require__(130);\nvar errorObject_1 = __webpack_require__(129);\nvar Subscription_1 = __webpack_require__(49);\nvar toString = Object.prototype.toString;\nfunction isNodeStyleEventEmmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isNodeList(sourceObj) {\n    return !!sourceObj && toString.call(sourceObj) === '[object NodeList]';\n}\nfunction isHTMLCollection(sourceObj) {\n    return !!sourceObj && toString.call(sourceObj) === '[object HTMLCollection]';\n}\nfunction isEventTarget(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromEventObservable = (function (_super) {\n    __extends(FromEventObservable, _super);\n    function FromEventObservable(sourceObj, eventName, selector, options) {\n        _super.call(this);\n        this.sourceObj = sourceObj;\n        this.eventName = eventName;\n        this.selector = selector;\n        this.options = options;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Creates an Observable that emits events of a specific type coming from the\n     * given event target.\n     *\n     * <span class=\"informal\">Creates an Observable from DOM events, or Node\n     * EventEmitter events or others.</span>\n     *\n     * <img src=\"./img/fromEvent.png\" width=\"100%\">\n     *\n     * Creates an Observable by attaching an event listener to an \"event target\",\n     * which may be an object with `addEventListener` and `removeEventListener`,\n     * a Node.js EventEmitter, a jQuery style EventEmitter, a NodeList from the\n     * DOM, or an HTMLCollection from the DOM. The event handler is attached when\n     * the output Observable is subscribed, and removed when the Subscription is\n     * unsubscribed.\n     *\n     * @example <caption>Emits clicks happening on the DOM document</caption>\n     * var clicks = Rx.Observable.fromEvent(document, 'click');\n     * clicks.subscribe(x => console.log(x));\n     *\n     * // Results in:\n     * // MouseEvent object logged to console everytime a click\n     * // occurs on the document.\n     *\n     * @see {@link from}\n     * @see {@link fromEventPattern}\n     *\n     * @param {EventTargetLike} target The DOMElement, event target, Node.js\n     * EventEmitter, NodeList or HTMLCollection to attach the event handler to.\n     * @param {string} eventName The event name of interest, being emitted by the\n     * `target`.\n     * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n     * @param {SelectorMethodSignature<T>} [selector] An optional function to\n     * post-process results. It takes the arguments from the event handler and\n     * should return a single value.\n     * @return {Observable<T>}\n     * @static true\n     * @name fromEvent\n     * @owner Observable\n     */\n    FromEventObservable.create = function (target, eventName, options, selector) {\n        if (isFunction_1.isFunction(options)) {\n            selector = options;\n            options = undefined;\n        }\n        return new FromEventObservable(target, eventName, selector, options);\n    };\n    FromEventObservable.setupSubscription = function (sourceObj, eventName, handler, subscriber, options) {\n        var unsubscribe;\n        if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {\n            for (var i = 0, len = sourceObj.length; i < len; i++) {\n                FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n            }\n        }\n        else if (isEventTarget(sourceObj)) {\n            var source_1 = sourceObj;\n            sourceObj.addEventListener(eventName, handler, options);\n            unsubscribe = function () { return source_1.removeEventListener(eventName, handler); };\n        }\n        else if (isJQueryStyleEventEmitter(sourceObj)) {\n            var source_2 = sourceObj;\n            sourceObj.on(eventName, handler);\n            unsubscribe = function () { return source_2.off(eventName, handler); };\n        }\n        else if (isNodeStyleEventEmmitter(sourceObj)) {\n            var source_3 = sourceObj;\n            sourceObj.addListener(eventName, handler);\n            unsubscribe = function () { return source_3.removeListener(eventName, handler); };\n        }\n        else {\n            throw new TypeError('Invalid event target');\n        }\n        subscriber.add(new Subscription_1.Subscription(unsubscribe));\n    };\n    FromEventObservable.prototype._subscribe = function (subscriber) {\n        var sourceObj = this.sourceObj;\n        var eventName = this.eventName;\n        var options = this.options;\n        var selector = this.selector;\n        var handler = selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            var result = tryCatch_1.tryCatch(selector).apply(void 0, args);\n            if (result === errorObject_1.errorObject) {\n                subscriber.error(errorObject_1.errorObject.e);\n            }\n            else {\n                subscriber.next(result);\n            }\n        } : function (e) { return subscriber.next(e); };\n        FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber, options);\n    };\n    return FromEventObservable;\n}(Observable_1.Observable));\nexports.FromEventObservable = FromEventObservable;\n//# sourceMappingURL=FromEventObservable.js.map\n\n/***/ }),\n/* 445 */,\n/* 446 */,\n/* 447 */,\n/* 448 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar FromEventObservable_1 = __webpack_require__(444);\nexports.fromEvent = FromEventObservable_1.FromEventObservable.create;\n//# sourceMappingURL=fromEvent.js.map\n\n/***/ }),\n/* 449 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar ErrorObservable_1 = __webpack_require__(442);\nexports._throw = ErrorObservable_1.ErrorObservable.create;\n//# sourceMappingURL=throw.js.map\n\n/***/ }),\n/* 450 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar async_1 = __webpack_require__(467);\nvar Subscriber_1 = __webpack_require__(12);\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source values, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * <img src=\"./img/auditTime.png\" width=\"100%\">\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.auditTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nfunction auditTime(duration, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new AuditTimeOperator(duration, scheduler));\n}\nexports.auditTime = auditTime;\nvar AuditTimeOperator = (function () {\n    function AuditTimeOperator(duration, scheduler) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n    }\n    AuditTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new AuditTimeSubscriber(subscriber, this.duration, this.scheduler));\n    };\n    return AuditTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AuditTimeSubscriber = (function (_super) {\n    __extends(AuditTimeSubscriber, _super);\n    function AuditTimeSubscriber(destination, duration, scheduler) {\n        _super.call(this, destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.hasValue = false;\n    }\n    AuditTimeSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, this));\n        }\n    };\n    AuditTimeSubscriber.prototype.clearThrottle = function () {\n        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = null;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    };\n    return AuditTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNext(subscriber) {\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=auditTime.js.map\n\n/***/ }),\n/* 451 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar isScheduler_1 = __webpack_require__(84);\nvar ArrayObservable_1 = __webpack_require__(63);\nvar mergeAll_1 = __webpack_require__(82);\n/* tslint:disable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins this Observable with multiple other Observables by subscribing to them\n * one at a time, starting with the source, and merging their results into the\n * output Observable. Will wait for each Observable to complete before moving\n * on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = timer.concat(sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = timer1.concat(timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {Observable} other An input Observable to concatenate after the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @method concat\n * @owner Observable\n */\nfunction concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return this.lift.call(concatStatic.apply(void 0, [this].concat(observables)));\n}\nexports.concat = concat;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins multiple Observables together by subscribing to them one at a time and\n * merging their results into the output Observable. Will wait for each\n * Observable to complete before moving on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {Observable} input1 An input Observable to concatenate with others.\n * @param {Observable} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nfunction concatStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var scheduler = null;\n    var args = observables;\n    if (isScheduler_1.isScheduler(args[observables.length - 1])) {\n        scheduler = args.pop();\n    }\n    if (scheduler === null && observables.length === 1) {\n        return observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(1));\n}\nexports.concatStatic = concatStatic;\n//# sourceMappingURL=concat.js.map\n\n/***/ }),\n/* 452 */,\n/* 453 */,\n/* 454 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(12);\n/* tslint:disable:max-line-length */\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @method do\n * @name do\n * @owner Observable\n */\nfunction _do(nextOrObserver, error, complete) {\n    return this.lift(new DoOperator(nextOrObserver, error, complete));\n}\nexports._do = _do;\nvar DoOperator = (function () {\n    function DoOperator(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    DoOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    };\n    return DoOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DoSubscriber = (function (_super) {\n    __extends(DoSubscriber, _super);\n    function DoSubscriber(destination, nextOrObserver, error, complete) {\n        _super.call(this, destination);\n        var safeSubscriber = new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n        safeSubscriber.syncErrorThrowable = true;\n        this.add(safeSubscriber);\n        this.safeSubscriber = safeSubscriber;\n    }\n    DoSubscriber.prototype._next = function (value) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.next(value);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.next(value);\n        }\n    };\n    DoSubscriber.prototype._error = function (err) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.error(err);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.error(err);\n        }\n    };\n    DoSubscriber.prototype._complete = function () {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.complete();\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return DoSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=do.js.map\n\n/***/ }),\n/* 455 */,\n/* 456 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(12);\nvar Subscription_1 = __webpack_require__(49);\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback function to be called when source terminates.\n * @return {Observable} an Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nfunction _finally(callback) {\n    return this.lift(new FinallyOperator(callback));\n}\nexports._finally = _finally;\nvar FinallyOperator = (function () {\n    function FinallyOperator(callback) {\n        this.callback = callback;\n    }\n    FinallyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n    };\n    return FinallyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FinallySubscriber = (function (_super) {\n    __extends(FinallySubscriber, _super);\n    function FinallySubscriber(destination, callback) {\n        _super.call(this, destination);\n        this.add(new Subscription_1.Subscription(callback));\n    }\n    return FinallySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=finally.js.map\n\n/***/ }),\n/* 457 */,\n/* 458 */,\n/* 459 */,\n/* 460 */,\n/* 461 */,\n/* 462 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar ArrayObservable_1 = __webpack_require__(63);\nvar ScalarObservable_1 = __webpack_require__(122);\nvar EmptyObservable_1 = __webpack_require__(81);\nvar concat_1 = __webpack_require__(451);\nvar isScheduler_1 = __webpack_require__(84);\n/* tslint:disable:max-line-length */\n/**\n * Returns an Observable that emits the items in a specified Iterable before it begins to emit items emitted by the\n * source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {Values} an Iterable that contains the items you want the modified Observable to emit first.\n * @return {Observable} an Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nfunction startWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i - 0] = arguments[_i];\n    }\n    var scheduler = array[array.length - 1];\n    if (isScheduler_1.isScheduler(scheduler)) {\n        array.pop();\n    }\n    else {\n        scheduler = null;\n    }\n    var len = array.length;\n    if (len === 1) {\n        return concat_1.concatStatic(new ScalarObservable_1.ScalarObservable(array[0], scheduler), this);\n    }\n    else if (len > 1) {\n        return concat_1.concatStatic(new ArrayObservable_1.ArrayObservable(array, scheduler), this);\n    }\n    else {\n        return concat_1.concatStatic(new EmptyObservable_1.EmptyObservable(scheduler), this);\n    }\n}\nexports.startWith = startWith;\n//# sourceMappingURL=startWith.js.map\n\n/***/ }),\n/* 463 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = __webpack_require__(62);\nvar subscribeToResult_1 = __webpack_require__(64);\n/* tslint:disable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): Observable} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nfunction switchMap(project, resultSelector) {\n    return this.lift(new SwitchMapOperator(project, resultSelector));\n}\nexports.switchMap = switchMap;\nvar SwitchMapOperator = (function () {\n    function SwitchMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapSubscriber = (function (_super) {\n    __extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.index = 0;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, result, value, index));\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=switchMap.js.map\n\n/***/ }),\n/* 464 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = __webpack_require__(49);\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription_1.Subscription));\nexports.Action = Action;\n//# sourceMappingURL=Action.js.map\n\n/***/ }),\n/* 465 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = __webpack_require__(39);\nvar Action_1 = __webpack_require__(464);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // clear the interval id\n        return root_1.root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.delay = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n    };\n    return AsyncAction;\n}(Action_1.Action));\nexports.AsyncAction = AsyncAction;\n//# sourceMappingURL=AsyncAction.js.map\n\n/***/ }),\n/* 466 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Scheduler_1 = __webpack_require__(424);\nvar AsyncScheduler = (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler_1.Scheduler));\nexports.AsyncScheduler = AsyncScheduler;\n//# sourceMappingURL=AsyncScheduler.js.map\n\n/***/ }),\n/* 467 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar AsyncAction_1 = __webpack_require__(465);\nvar AsyncScheduler_1 = __webpack_require__(466);\nexports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);\n//# sourceMappingURL=async.js.map\n\n/***/ }),\n/* 468 */,\n/* 469 */,\n/* 470 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var result = __webpack_require__(387);\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n/***/ }),\n/* 471 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var result = __webpack_require__(388);\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n/***/ }),\n/* 472 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var result = __webpack_require__(389);\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n/***/ }),\n/* 473 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var result = __webpack_require__(390);\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n/***/ }),\n/* 474 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var result = __webpack_require__(391);\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n/***/ }),\n/* 475 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var result = __webpack_require__(392);\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n/***/ }),\n/* 476 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var result = __webpack_require__(393);\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n/***/ }),\n/* 477 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var result = __webpack_require__(394);\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n/***/ }),\n/* 478 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var result = __webpack_require__(395);\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n/***/ }),\n/* 479 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var result = __webpack_require__(396);\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n/***/ }),\n/* 480 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var result = __webpack_require__(397);\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n/***/ }),\n/* 481 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var result = __webpack_require__(398);\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n/***/ }),\n/* 482 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var result = __webpack_require__(399);\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n/***/ }),\n/* 483 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar platform_browser_dynamic_1 = __webpack_require__(86);\r\nvar core_1 = __webpack_require__(1);\r\nvar app_module_1 = __webpack_require__(205);\r\nif (true) {\r\n    core_1.enableProdMode();\r\n}\r\nplatform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(app_module_1.AppModule);\r\n\n\n/***/ })\n],[483]);\n\n\n// WEBPACK FOOTER //\n// main.e5a5c345fc4eae1bd939.bundle.js","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 16\n// module chunks = 0","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n/**\n * Wrapper class that handles the communication with the Google Maps Javascript\n * API v3\n */\nvar GoogleMapsAPIWrapper = (function () {\n    function GoogleMapsAPIWrapper(_loader, _zone) {\n        var _this = this;\n        this._loader = _loader;\n        this._zone = _zone;\n        this._map =\n            new Promise(function (resolve) { _this._mapResolver = resolve; });\n    }\n    GoogleMapsAPIWrapper.prototype.createMap = function (el, mapOptions) {\n        var _this = this;\n        return this._loader.load().then(function () {\n            var map = new google.maps.Map(el, mapOptions);\n            _this._mapResolver(map);\n            return;\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.setMapOptions = function (options) {\n        this._map.then(function (m) { m.setOptions(options); });\n    };\n    /**\n     * Creates a google map marker with the map context\n     */\n    GoogleMapsAPIWrapper.prototype.createMarker = function (options) {\n        if (options === void 0) { options = {}; }\n        return this._map.then(function (map) {\n            options.map = map;\n            return new google.maps.Marker(options);\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.createInfoWindow = function (options) {\n        return this._map.then(function () { return new google.maps.InfoWindow(options); });\n    };\n    /**\n     * Creates a google.map.Circle for the current map.\n     */\n    GoogleMapsAPIWrapper.prototype.createCircle = function (options) {\n        return this._map.then(function (map) {\n            options.map = map;\n            return new google.maps.Circle(options);\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.createPolyline = function (options) {\n        return this.getNativeMap().then(function (map) {\n            var line = new google.maps.Polyline(options);\n            line.setMap(map);\n            return line;\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.createPolygon = function (options) {\n        return this.getNativeMap().then(function (map) {\n            var polygon = new google.maps.Polygon(options);\n            polygon.setMap(map);\n            return polygon;\n        });\n    };\n    /**\n     * Determines if given coordinates are insite a Polygon path.\n     */\n    GoogleMapsAPIWrapper.prototype.containsLocation = function (latLng, polygon) {\n        return google.maps.geometry.poly.containsLocation(latLng, polygon);\n    };\n    GoogleMapsAPIWrapper.prototype.subscribeToMapEvent = function (eventName) {\n        var _this = this;\n        return Observable.create(function (observer) {\n            _this._map.then(function (m) {\n                m.addListener(eventName, function (arg) { _this._zone.run(function () { return observer.next(arg); }); });\n            });\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.setCenter = function (latLng) {\n        return this._map.then(function (map) { return map.setCenter(latLng); });\n    };\n    GoogleMapsAPIWrapper.prototype.getZoom = function () { return this._map.then(function (map) { return map.getZoom(); }); };\n    GoogleMapsAPIWrapper.prototype.getBounds = function () {\n        return this._map.then(function (map) { return map.getBounds(); });\n    };\n    GoogleMapsAPIWrapper.prototype.setZoom = function (zoom) {\n        return this._map.then(function (map) { return map.setZoom(zoom); });\n    };\n    GoogleMapsAPIWrapper.prototype.getCenter = function () {\n        return this._map.then(function (map) { return map.getCenter(); });\n    };\n    GoogleMapsAPIWrapper.prototype.panTo = function (latLng) {\n        return this._map.then(function (map) { return map.panTo(latLng); });\n    };\n    GoogleMapsAPIWrapper.prototype.fitBounds = function (latLng) {\n        return this._map.then(function (map) { return map.fitBounds(latLng); });\n    };\n    GoogleMapsAPIWrapper.prototype.panToBounds = function (latLng) {\n        return this._map.then(function (map) { return map.panToBounds(latLng); });\n    };\n    /**\n     * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n     */\n    GoogleMapsAPIWrapper.prototype.getNativeMap = function () { return this._map; };\n    /**\n     * Triggers the given event name on the map instance.\n     */\n    GoogleMapsAPIWrapper.prototype.triggerMapEvent = function (eventName) {\n        return this._map.then(function (m) { return google.maps.event.trigger(m, eventName); });\n    };\n    return GoogleMapsAPIWrapper;\n}());\nexport { GoogleMapsAPIWrapper };\nGoogleMapsAPIWrapper.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nGoogleMapsAPIWrapper.ctorParameters = function () { return [\n    { type: MapsAPILoader, },\n    { type: NgZone, },\n]; };\n//# sourceMappingURL=google-maps-api-wrapper.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@agm/core/services/google-maps-api-wrapper.js\n// module id = 25\n// module chunks = 0","import { Injectable } from '@angular/core';\nimport { Config } from '../config';\nimport { EnglishDictionary } from './en.dictionary';\nimport { BulgarianDictionary } from './bg.dictionary';\n\n@Injectable()\nexport class Dictionary {\n    // the variables containing the language jsons\n    // will contain the default language\n    private language: string = ''; \n    // will return the texts from witch we fill our forms\n    public getTexts(text) {\n        return this[this.language].language[text];\n    };\n\n    public setLanguage(language) {\n        this.language = language;\n    }\n\n    public nextLanguage() {\n        var index = Config.defaultLang.indexOf(this.language);\n        if(index == Config.languages.length - 1) {\n            return Config.languages[0];\n        } else {\n            return Config.languages[index + 1];\n        }\n    }\n\n    public changeLanguage() {\n        this.language = this.nextLanguage();\n    }\n\n    constructor(private en: EnglishDictionary, private bg: BulgarianDictionary) {\n        this.language = Config.defaultLang;\n    };\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/dictionary/dictionary.service.ts","import { Injectable, EventEmitter } from '@angular/core';\n\nimport { Config } from '../config';\n\n@Injectable()\n\n/**\n * @DriverService used on all connections to the back-end for the drivers\n */\nexport class EventEmiterService {\n\n    public loggedIn: EventEmitter<any>;\n    public formSubmit: EventEmitter<any>;\n    public dataFetched: EventEmitter<any>;\n    public formComplete: EventEmitter<any>;\n\n    constructor() {\n        this.loggedIn = new EventEmitter();\n        this.formSubmit = new EventEmitter();\n        this.dataFetched = new EventEmitter();\n        this.formComplete = new EventEmitter();\n    }\n\n    public emitFetchedData(data) {\n        this.dataFetched.emit(data);\n    }\n\n    public emitFormSubmit(formData, type) {\n        this.formSubmit.emit({\n            type: type,\n            formData: formData\n        });\n    }\n\n    public emitFormComplete(response, success) {\n        this.formComplete.emit({\n            success: success,\n            response: response\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/services/event.emiter.service.ts","export var STORAGE;\r\n(function (STORAGE) {\r\n    STORAGE[STORAGE[\"local\"] = 0] = \"local\";\r\n    STORAGE[STORAGE[\"session\"] = 1] = \"session\";\r\n})(STORAGE || (STORAGE = {}));\r\n//# sourceMappingURL=storage.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-webstorage/dist/enums/storage.js\n// module id = 38\n// module chunks = 0","import { Injectable, EventEmitter } from '@angular/core';\n\nimport { Config } from '../config';\n\n@Injectable()\n\n/**\n * @DriverService used on all connections to the back-end for the drivers\n */\nexport class PagesService {\n    // will be used when we have live update of products and everything is dynamic\n    public productsUpdate: EventEmitter<any>;\n\n    private pages = Array<Object>();\n    /**\n    * @getPages get all pages\n    * @return {Array} all pages\n    */\n    public getPages() {\n        return this.pages;\n    }\n\n    public setPages(products) {\n        this.pages = products;\n        // todo: emit that pages are changed\n    }\n\n    constructor() {\n        \n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/services/pages.service.ts","import { Injectable, EventEmitter } from '@angular/core';\n\nimport { Config } from '../config';\n\n@Injectable()\n\nexport class PagesDataService {\n    // will be used when we have live update of products and everything is dynamic\n    public productsUpdate: EventEmitter<any>;\n\n    private pagesData = Array<Object>();\n    /**\n    * @getPagesData get all pages\n    * @return {Array} all pages\n    */\n    public getPagesData() {\n        return this.pagesData;\n    }\n\n    public setPagesData(pagesData) {\n        this.pagesData = pagesData;\n        // todo: emit that pagesData are changed\n    }\n\n    constructor() {\n        \n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/services/pages.data.service.ts","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { GoogleMapsAPIWrapper } from './../google-maps-api-wrapper';\nvar MarkerManager = (function () {\n    function MarkerManager(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._markers = new Map();\n    }\n    MarkerManager.prototype.deleteMarker = function (marker) {\n        var _this = this;\n        var m = this._markers.get(marker);\n        if (m == null) {\n            // marker already deleted\n            return Promise.resolve();\n        }\n        return m.then(function (m) {\n            return _this._zone.run(function () {\n                m.setMap(null);\n                _this._markers.delete(marker);\n            });\n        });\n    };\n    MarkerManager.prototype.updateMarkerPosition = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setPosition({ lat: marker.latitude, lng: marker.longitude }); });\n    };\n    MarkerManager.prototype.updateTitle = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setTitle(marker.title); });\n    };\n    MarkerManager.prototype.updateLabel = function (marker) {\n        return this._markers.get(marker).then(function (m) { m.setLabel(marker.label); });\n    };\n    MarkerManager.prototype.updateDraggable = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setDraggable(marker.draggable); });\n    };\n    MarkerManager.prototype.updateIcon = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setIcon(marker.iconUrl); });\n    };\n    MarkerManager.prototype.updateOpacity = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setOpacity(marker.opacity); });\n    };\n    MarkerManager.prototype.updateVisible = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setVisible(marker.visible); });\n    };\n    MarkerManager.prototype.updateZIndex = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setZIndex(marker.zIndex); });\n    };\n    MarkerManager.prototype.addMarker = function (marker) {\n        var markerPromise = this._mapsWrapper.createMarker({\n            position: { lat: marker.latitude, lng: marker.longitude },\n            label: marker.label,\n            draggable: marker.draggable,\n            icon: marker.iconUrl,\n            opacity: marker.opacity,\n            visible: marker.visible,\n            zIndex: marker.zIndex,\n            title: marker.title\n        });\n        this._markers.set(marker, markerPromise);\n    };\n    MarkerManager.prototype.getNativeMarker = function (marker) {\n        return this._markers.get(marker);\n    };\n    MarkerManager.prototype.createEventObservable = function (eventName, marker) {\n        var _this = this;\n        return Observable.create(function (observer) {\n            _this._markers.get(marker).then(function (m) {\n                m.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    return MarkerManager;\n}());\nexport { MarkerManager };\nMarkerManager.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nMarkerManager.ctorParameters = function () { return [\n    { type: GoogleMapsAPIWrapper, },\n    { type: NgZone, },\n]; };\n//# sourceMappingURL=marker-manager.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@agm/core/services/managers/marker-manager.js\n// module id = 67\n// module chunks = 0","import { Injectable } from '@angular/core';\nvar MapsAPILoader = (function () {\n    function MapsAPILoader() {\n    }\n    return MapsAPILoader;\n}());\nexport { MapsAPILoader };\nMapsAPILoader.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nMapsAPILoader.ctorParameters = function () { return []; };\n//# sourceMappingURL=maps-api-loader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@agm/core/services/maps-api-loader/maps-api-loader.js\n// module id = 68\n// module chunks = 0","import { Injectable } from '@angular/core';\n\n@Injectable()\n// Will contain all of the urls and constants of the app\nexport class Config {\n    // language\n    public static get defaultLang():string { return 'bg'; }\n    public static get languages():Array<string> { return ['bg', 'en']; }\n    // urls\n    // public static get pagesUrl():string { return \"http://61148759.ngrok.io/api/pages\"; }\n    public static get pagesUrl():string { return \"http://http://194.79.15.200/api/pages\"; }\n\n    // production\n    // public static get productsAndCategoriesUrl():string { return \"http://194.79.15.134:8080/api/productsAndCategories\"; }\n    // public static get categoriesUrl():string { return \"http://194.79.15.134:8080/api/categories\"; }\n    // public static get productsUrl():string { return \"http://194.79.15.134:8080/api/products\"; }\n    // public static get messageUrl():string { return \"http://194.79.15.134:8080/api/message\"; }\n    // public static get orderUrl():string { return \"http://194.79.15.134:8080/api/order\"; }\n    // public static get adminLoginUrl():string { return \"http://194.79.15.134:8080/api/admin/login\"; }\n\n\n    public static get mapCoordinates():Object { return { lat: 42.7003, lng: 23.3366024, zoom: 15 }; }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/config.ts","import { STORAGE } from '../enums/storage';\r\nexport var LIB_KEY = 'ng2-webstorage';\r\nexport var LIB_KEY_SEPARATOR = '|';\r\nexport var STORAGE_NAMES = (_a = {},\r\n    _a[STORAGE.local] = 'local',\r\n    _a[STORAGE.session] = 'session',\r\n    _a);\r\nvar _a;\r\n//# sourceMappingURL=lib.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-webstorage/dist/constants/lib.js\n// module id = 80\n// module chunks = 0","import { Component, ElementRef, EventEmitter } from '@angular/core';\nimport { InfoWindowManager } from '../services/managers/info-window-manager';\nvar infoWindowId = 0;\n/**\n * AgmInfoWindow renders a info window inside a {@link AgmMarker} or standalone.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *        <agm-info-window [disableAutoPan]=\"true\">\n *          Hi, this is the content of the <strong>info window</strong>\n *        </agm-info-window>\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nvar AgmInfoWindow = (function () {\n    function AgmInfoWindow(_infoWindowManager, _el) {\n        this._infoWindowManager = _infoWindowManager;\n        this._el = _el;\n        /**\n         * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n         */\n        this.isOpen = false;\n        /**\n         * Emits an event when the info window is closed.\n         */\n        this.infoWindowClose = new EventEmitter();\n        this._infoWindowAddedToManager = false;\n        this._id = (infoWindowId++).toString();\n    }\n    AgmInfoWindow.prototype.ngOnInit = function () {\n        this.content = this._el.nativeElement.querySelector('.agm-info-window-content');\n        this._infoWindowManager.addInfoWindow(this);\n        this._infoWindowAddedToManager = true;\n        this._updateOpenState();\n        this._registerEventListeners();\n    };\n    /** @internal */\n    AgmInfoWindow.prototype.ngOnChanges = function (changes) {\n        if (!this._infoWindowAddedToManager) {\n            return;\n        }\n        if ((changes['latitude'] || changes['longitude']) && typeof this.latitude === 'number' &&\n            typeof this.longitude === 'number') {\n            this._infoWindowManager.setPosition(this);\n        }\n        if (changes['zIndex']) {\n            this._infoWindowManager.setZIndex(this);\n        }\n        if (changes['isOpen']) {\n            this._updateOpenState();\n        }\n        this._setInfoWindowOptions(changes);\n    };\n    AgmInfoWindow.prototype._registerEventListeners = function () {\n        var _this = this;\n        this._infoWindowManager.createEventObservable('closeclick', this).subscribe(function () {\n            _this.isOpen = false;\n            _this.infoWindowClose.emit();\n        });\n    };\n    AgmInfoWindow.prototype._updateOpenState = function () {\n        this.isOpen ? this.open() : this.close();\n    };\n    AgmInfoWindow.prototype._setInfoWindowOptions = function (changes) {\n        var options = {};\n        var optionKeys = Object.keys(changes).filter(function (k) { return AgmInfoWindow._infoWindowOptionsInputs.indexOf(k) !== -1; });\n        optionKeys.forEach(function (k) { options[k] = changes[k].currentValue; });\n        this._infoWindowManager.setOptions(this, options);\n    };\n    /**\n     * Opens the info window.\n     */\n    AgmInfoWindow.prototype.open = function () { return this._infoWindowManager.open(this); };\n    /**\n     * Closes the info window.\n     */\n    AgmInfoWindow.prototype.close = function () {\n        var _this = this;\n        return this._infoWindowManager.close(this).then(function () { _this.infoWindowClose.emit(); });\n    };\n    /** @internal */\n    AgmInfoWindow.prototype.id = function () { return this._id; };\n    /** @internal */\n    AgmInfoWindow.prototype.toString = function () { return 'AgmInfoWindow-' + this._id.toString(); };\n    /** @internal */\n    AgmInfoWindow.prototype.ngOnDestroy = function () { this._infoWindowManager.deleteInfoWindow(this); };\n    return AgmInfoWindow;\n}());\nexport { AgmInfoWindow };\nAgmInfoWindow._infoWindowOptionsInputs = ['disableAutoPan', 'maxWidth'];\nAgmInfoWindow.decorators = [\n    { type: Component, args: [{\n                selector: 'agm-info-window',\n                inputs: ['latitude', 'longitude', 'disableAutoPan', 'isOpen', 'zIndex', 'maxWidth'],\n                outputs: ['infoWindowClose'],\n                template: \"<div class='agm-info-window-content'>\\n      <ng-content></ng-content>\\n    </div>\\n  \"\n            },] },\n];\n/** @nocollapse */\nAgmInfoWindow.ctorParameters = function () { return [\n    { type: InfoWindowManager, },\n    { type: ElementRef, },\n]; };\n//# sourceMappingURL=info-window.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@agm/core/directives/info-window.js\n// module id = 87\n// module chunks = 0","import { Directive, EventEmitter, Input, Output } from '@angular/core';\n/**\n * AgmPolylinePoint represents one element of a polyline within a  {@link\n * SembGoogleMapPolyline}\n */\nvar AgmPolylinePoint = (function () {\n    function AgmPolylinePoint() {\n        /**\n         * This event emitter gets emitted when the position of the point changed.\n         */\n        this.positionChanged = new EventEmitter();\n    }\n    AgmPolylinePoint.prototype.ngOnChanges = function (changes) {\n        if (changes['latitude'] || changes['longitude']) {\n            var position = {\n                lat: changes['latitude'].currentValue,\n                lng: changes['longitude'].currentValue\n            };\n            this.positionChanged.emit(position);\n        }\n    };\n    return AgmPolylinePoint;\n}());\nexport { AgmPolylinePoint };\nAgmPolylinePoint.decorators = [\n    { type: Directive, args: [{ selector: 'agm-polyline-point' },] },\n];\n/** @nocollapse */\nAgmPolylinePoint.ctorParameters = function () { return []; };\nAgmPolylinePoint.propDecorators = {\n    'latitude': [{ type: Input },],\n    'longitude': [{ type: Input },],\n    'positionChanged': [{ type: Output },],\n};\n//# sourceMappingURL=polyline-point.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@agm/core/directives/polyline-point.js\n// module id = 88\n// module chunks = 0","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nvar CircleManager = (function () {\n    function CircleManager(_apiWrapper, _zone) {\n        this._apiWrapper = _apiWrapper;\n        this._zone = _zone;\n        this._circles = new Map();\n    }\n    CircleManager.prototype.addCircle = function (circle) {\n        this._circles.set(circle, this._apiWrapper.createCircle({\n            center: { lat: circle.latitude, lng: circle.longitude },\n            clickable: circle.clickable,\n            draggable: circle.draggable,\n            editable: circle.editable,\n            fillColor: circle.fillColor,\n            fillOpacity: circle.fillOpacity,\n            radius: circle.radius,\n            strokeColor: circle.strokeColor,\n            strokeOpacity: circle.strokeOpacity,\n            strokePosition: circle.strokePosition,\n            strokeWeight: circle.strokeWeight,\n            visible: circle.visible,\n            zIndex: circle.zIndex\n        }));\n    };\n    ;\n    /**\n     * Removes the given circle from the map.\n     */\n    CircleManager.prototype.removeCircle = function (circle) {\n        var _this = this;\n        return this._circles.get(circle).then(function (c) {\n            c.setMap(null);\n            _this._circles.delete(circle);\n        });\n    };\n    CircleManager.prototype.setOptions = function (circle, options) {\n        return this._circles.get(circle).then(function (c) { return c.setOptions(options); });\n    };\n    ;\n    CircleManager.prototype.getBounds = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.getBounds(); });\n    };\n    ;\n    CircleManager.prototype.getCenter = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.getCenter(); });\n    };\n    ;\n    CircleManager.prototype.getRadius = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.getRadius(); });\n    };\n    CircleManager.prototype.setCenter = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setCenter({ lat: circle.latitude, lng: circle.longitude }); });\n    };\n    ;\n    CircleManager.prototype.setEditable = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setEditable(circle.editable); });\n    };\n    ;\n    CircleManager.prototype.setDraggable = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setDraggable(circle.draggable); });\n    };\n    ;\n    CircleManager.prototype.setVisible = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setVisible(circle.visible); });\n    };\n    ;\n    CircleManager.prototype.setRadius = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setRadius(circle.radius); });\n    };\n    ;\n    CircleManager.prototype.createEventObservable = function (eventName, circle) {\n        var _this = this;\n        return Observable.create(function (observer) {\n            var listener = null;\n            _this._circles.get(circle).then(function (c) {\n                listener = c.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n            return function () {\n                if (listener !== null) {\n                    listener.remove();\n                }\n            };\n        });\n    };\n    return CircleManager;\n}());\nexport { CircleManager };\nCircleManager.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nCircleManager.ctorParameters = function () { return [\n    { type: GoogleMapsAPIWrapper, },\n    { type: NgZone, },\n]; };\n//# sourceMappingURL=circle-manager.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@agm/core/services/managers/circle-manager.js\n// module id = 89\n// module chunks = 0","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { GoogleMapsAPIWrapper } from './../google-maps-api-wrapper';\n/**\n * Manages all Data Layers for a Google Map instance.\n */\nvar DataLayerManager = (function () {\n    function DataLayerManager(_wrapper, _zone) {\n        this._wrapper = _wrapper;\n        this._zone = _zone;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a new Data Layer to the map.\n     */\n    DataLayerManager.prototype.addDataLayer = function (layer) {\n        var newLayer = this._wrapper.getNativeMap().then(function (m) {\n            var dataLayer = new google.maps.Data({\n                map: m,\n                style: layer.style\n            });\n            if (layer.geoJson) {\n                dataLayer.features = dataLayer.addGeoJson(layer.geoJson);\n            }\n            return dataLayer;\n        });\n        this._layers.set(layer, newLayer);\n    };\n    DataLayerManager.prototype.deleteDataLayer = function (layer) {\n        var _this = this;\n        this._layers.get(layer).then(function (l) {\n            l.setMap(null);\n            _this._layers.delete(layer);\n        });\n    };\n    DataLayerManager.prototype.updateGeoJson = function (layer, geoJson) {\n        this._layers.get(layer).then(function (l) {\n            l.forEach(function (feature) {\n                l.remove(feature);\n                var index = l.features.indexOf(feature, 0);\n                if (index > -1) {\n                    l.features.splice(index, 1);\n                }\n            });\n            l.features = l.addGeoJson(geoJson);\n        });\n    };\n    DataLayerManager.prototype.setDataOptions = function (layer, options) {\n        this._layers.get(layer).then(function (l) {\n            l.setControlPosition(options.controlPosition);\n            l.setControls(options.controls);\n            l.setDrawingMode(options.drawingMode);\n            l.setStyle(options.style);\n        });\n    };\n    /**\n     * Creates a Google Maps event listener for the given DataLayer as an Observable\n     */\n    DataLayerManager.prototype.createEventObservable = function (eventName, layer) {\n        var _this = this;\n        return Observable.create(function (observer) {\n            _this._layers.get(layer).then(function (d) {\n                d.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    return DataLayerManager;\n}());\nexport { DataLayerManager };\nDataLayerManager.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nDataLayerManager.ctorParameters = function () { return [\n    { type: GoogleMapsAPIWrapper, },\n    { type: NgZone, },\n]; };\n//# sourceMappingURL=data-layer-manager.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@agm/core/services/managers/data-layer-manager.js\n// module id = 90\n// module chunks = 0","import { Observable } from 'rxjs/Observable';\nimport { Injectable, NgZone } from '@angular/core';\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nimport { MarkerManager } from './marker-manager';\nvar InfoWindowManager = (function () {\n    function InfoWindowManager(_mapsWrapper, _zone, _markerManager) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._markerManager = _markerManager;\n        this._infoWindows = new Map();\n    }\n    InfoWindowManager.prototype.deleteInfoWindow = function (infoWindow) {\n        var _this = this;\n        var iWindow = this._infoWindows.get(infoWindow);\n        if (iWindow == null) {\n            // info window already deleted\n            return Promise.resolve();\n        }\n        return iWindow.then(function (i) {\n            return _this._zone.run(function () {\n                i.close();\n                _this._infoWindows.delete(infoWindow);\n            });\n        });\n    };\n    InfoWindowManager.prototype.setPosition = function (infoWindow) {\n        return this._infoWindows.get(infoWindow).then(function (i) { return i.setPosition({\n            lat: infoWindow.latitude,\n            lng: infoWindow.longitude\n        }); });\n    };\n    InfoWindowManager.prototype.setZIndex = function (infoWindow) {\n        return this._infoWindows.get(infoWindow)\n            .then(function (i) { return i.setZIndex(infoWindow.zIndex); });\n    };\n    InfoWindowManager.prototype.open = function (infoWindow) {\n        var _this = this;\n        return this._infoWindows.get(infoWindow).then(function (w) {\n            if (infoWindow.hostMarker != null) {\n                return _this._markerManager.getNativeMarker(infoWindow.hostMarker).then(function (marker) {\n                    return _this._mapsWrapper.getNativeMap().then(function (map) { return w.open(map, marker); });\n                });\n            }\n            return _this._mapsWrapper.getNativeMap().then(function (map) { return w.open(map); });\n        });\n    };\n    InfoWindowManager.prototype.close = function (infoWindow) {\n        return this._infoWindows.get(infoWindow).then(function (w) { return w.close(); });\n    };\n    InfoWindowManager.prototype.setOptions = function (infoWindow, options) {\n        return this._infoWindows.get(infoWindow).then(function (i) { return i.setOptions(options); });\n    };\n    InfoWindowManager.prototype.addInfoWindow = function (infoWindow) {\n        var options = {\n            content: infoWindow.content,\n            maxWidth: infoWindow.maxWidth,\n            zIndex: infoWindow.zIndex,\n        };\n        if (typeof infoWindow.latitude === 'number' && typeof infoWindow.longitude === 'number') {\n            options.position = { lat: infoWindow.latitude, lng: infoWindow.longitude };\n        }\n        var infoWindowPromise = this._mapsWrapper.createInfoWindow(options);\n        this._infoWindows.set(infoWindow, infoWindowPromise);\n    };\n    /**\n     * Creates a Google Maps event listener for the given InfoWindow as an Observable\n     */\n    InfoWindowManager.prototype.createEventObservable = function (eventName, infoWindow) {\n        var _this = this;\n        return Observable.create(function (observer) {\n            _this._infoWindows.get(infoWindow).then(function (i) {\n                i.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    return InfoWindowManager;\n}());\nexport { InfoWindowManager };\nInfoWindowManager.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nInfoWindowManager.ctorParameters = function () { return [\n    { type: GoogleMapsAPIWrapper, },\n    { type: NgZone, },\n    { type: MarkerManager, },\n]; };\n//# sourceMappingURL=info-window-manager.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@agm/core/services/managers/info-window-manager.js\n// module id = 91\n// module chunks = 0","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { GoogleMapsAPIWrapper } from './../google-maps-api-wrapper';\n/**\n * Manages all KML Layers for a Google Map instance.\n */\nvar KmlLayerManager = (function () {\n    function KmlLayerManager(_wrapper, _zone) {\n        this._wrapper = _wrapper;\n        this._zone = _zone;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a new KML Layer to the map.\n     */\n    KmlLayerManager.prototype.addKmlLayer = function (layer) {\n        var newLayer = this._wrapper.getNativeMap().then(function (m) {\n            return new google.maps.KmlLayer({\n                clickable: layer.clickable,\n                map: m,\n                preserveViewport: layer.preserveViewport,\n                screenOverlays: layer.screenOverlays,\n                suppressInfoWindows: layer.suppressInfoWindows,\n                url: layer.url,\n                zIndex: layer.zIndex\n            });\n        });\n        this._layers.set(layer, newLayer);\n    };\n    KmlLayerManager.prototype.setOptions = function (layer, options) {\n        this._layers.get(layer).then(function (l) { return l.setOptions(options); });\n    };\n    KmlLayerManager.prototype.deleteKmlLayer = function (layer) {\n        var _this = this;\n        this._layers.get(layer).then(function (l) {\n            l.setMap(null);\n            _this._layers.delete(layer);\n        });\n    };\n    /**\n     * Creates a Google Maps event listener for the given KmlLayer as an Observable\n     */\n    KmlLayerManager.prototype.createEventObservable = function (eventName, layer) {\n        var _this = this;\n        return Observable.create(function (observer) {\n            _this._layers.get(layer).then(function (m) {\n                m.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    return KmlLayerManager;\n}());\nexport { KmlLayerManager };\nKmlLayerManager.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nKmlLayerManager.ctorParameters = function () { return [\n    { type: GoogleMapsAPIWrapper, },\n    { type: NgZone, },\n]; };\n//# sourceMappingURL=kml-layer-manager.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@agm/core/services/managers/kml-layer-manager.js\n// module id = 92\n// module chunks = 0","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nvar PolygonManager = (function () {\n    function PolygonManager(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._polygons = new Map();\n    }\n    PolygonManager.prototype.addPolygon = function (path) {\n        var polygonPromise = this._mapsWrapper.createPolygon({\n            clickable: path.clickable,\n            draggable: path.draggable,\n            editable: path.editable,\n            fillColor: path.fillColor,\n            fillOpacity: path.fillOpacity,\n            geodesic: path.geodesic,\n            paths: path.paths,\n            strokeColor: path.strokeColor,\n            strokeOpacity: path.strokeOpacity,\n            strokeWeight: path.strokeWeight,\n            visible: path.visible,\n            zIndex: path.zIndex,\n        });\n        this._polygons.set(path, polygonPromise);\n    };\n    PolygonManager.prototype.updatePolygon = function (polygon) {\n        var _this = this;\n        var m = this._polygons.get(polygon);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then(function (l) { return _this._zone.run(function () { l.setPaths(polygon.paths); }); });\n    };\n    PolygonManager.prototype.setPolygonOptions = function (path, options) {\n        return this._polygons.get(path).then(function (l) { l.setOptions(options); });\n    };\n    PolygonManager.prototype.deletePolygon = function (paths) {\n        var _this = this;\n        var m = this._polygons.get(paths);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then(function (l) {\n            return _this._zone.run(function () {\n                l.setMap(null);\n                _this._polygons.delete(paths);\n            });\n        });\n    };\n    PolygonManager.prototype.createEventObservable = function (eventName, path) {\n        var _this = this;\n        return Observable.create(function (observer) {\n            _this._polygons.get(path).then(function (l) {\n                l.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    return PolygonManager;\n}());\nexport { PolygonManager };\nPolygonManager.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nPolygonManager.ctorParameters = function () { return [\n    { type: GoogleMapsAPIWrapper, },\n    { type: NgZone, },\n]; };\n//# sourceMappingURL=polygon-manager.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@agm/core/services/managers/polygon-manager.js\n// module id = 93\n// module chunks = 0","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nvar PolylineManager = (function () {\n    function PolylineManager(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._polylines = new Map();\n    }\n    PolylineManager._convertPoints = function (line) {\n        var path = line._getPoints().map(function (point) {\n            return { lat: point.latitude, lng: point.longitude };\n        });\n        return path;\n    };\n    PolylineManager.prototype.addPolyline = function (line) {\n        var path = PolylineManager._convertPoints(line);\n        var polylinePromise = this._mapsWrapper.createPolyline({\n            clickable: line.clickable,\n            draggable: line.draggable,\n            editable: line.editable,\n            geodesic: line.geodesic,\n            strokeColor: line.strokeColor,\n            strokeOpacity: line.strokeOpacity,\n            strokeWeight: line.strokeWeight,\n            visible: line.visible,\n            zIndex: line.zIndex,\n            path: path\n        });\n        this._polylines.set(line, polylinePromise);\n    };\n    PolylineManager.prototype.updatePolylinePoints = function (line) {\n        var _this = this;\n        var path = PolylineManager._convertPoints(line);\n        var m = this._polylines.get(line);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then(function (l) { return _this._zone.run(function () { l.setPath(path); }); });\n    };\n    PolylineManager.prototype.setPolylineOptions = function (line, options) {\n        return this._polylines.get(line).then(function (l) { l.setOptions(options); });\n    };\n    PolylineManager.prototype.deletePolyline = function (line) {\n        var _this = this;\n        var m = this._polylines.get(line);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then(function (l) {\n            return _this._zone.run(function () {\n                l.setMap(null);\n                _this._polylines.delete(line);\n            });\n        });\n    };\n    PolylineManager.prototype.createEventObservable = function (eventName, line) {\n        var _this = this;\n        return Observable.create(function (observer) {\n            _this._polylines.get(line).then(function (l) {\n                l.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    return PolylineManager;\n}());\nexport { PolylineManager };\nPolylineManager.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nPolylineManager.ctorParameters = function () { return [\n    { type: GoogleMapsAPIWrapper, },\n    { type: NgZone, },\n]; };\n//# sourceMappingURL=polyline-manager.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@agm/core/services/managers/polyline-manager.js\n// module id = 94\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Inject, Injectable, OpaqueToken } from '@angular/core';\nimport { DocumentRef, WindowRef } from '../../utils/browser-globals';\nimport { MapsAPILoader } from './maps-api-loader';\nexport var GoogleMapsScriptProtocol;\n(function (GoogleMapsScriptProtocol) {\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTP\"] = 1] = \"HTTP\";\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTPS\"] = 2] = \"HTTPS\";\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"AUTO\"] = 3] = \"AUTO\";\n})(GoogleMapsScriptProtocol || (GoogleMapsScriptProtocol = {}));\n/**\n * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link\n * LazyMapsAPILoaderConfig}.\n */\nexport var LAZY_MAPS_API_CONFIG = new OpaqueToken('angular-google-maps LAZY_MAPS_API_CONFIG');\nvar LazyMapsAPILoader = (function (_super) {\n    __extends(LazyMapsAPILoader, _super);\n    function LazyMapsAPILoader(config, w, d) {\n        var _this = _super.call(this) || this;\n        _this._config = config || {};\n        _this._windowRef = w;\n        _this._documentRef = d;\n        return _this;\n    }\n    LazyMapsAPILoader.prototype.load = function () {\n        var _this = this;\n        if (this._scriptLoadingPromise) {\n            return this._scriptLoadingPromise;\n        }\n        var script = this._documentRef.getNativeDocument().createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n        script.defer = true;\n        var callbackName = \"angular2GoogleMapsLazyMapsAPILoader\";\n        script.src = this._getScriptSrc(callbackName);\n        this._scriptLoadingPromise = new Promise(function (resolve, reject) {\n            _this._windowRef.getNativeWindow()[callbackName] = function () { resolve(); };\n            script.onerror = function (error) { reject(error); };\n        });\n        this._documentRef.getNativeDocument().body.appendChild(script);\n        return this._scriptLoadingPromise;\n    };\n    LazyMapsAPILoader.prototype._getScriptSrc = function (callbackName) {\n        var protocolType = (this._config && this._config.protocol) || GoogleMapsScriptProtocol.HTTPS;\n        var protocol;\n        switch (protocolType) {\n            case GoogleMapsScriptProtocol.AUTO:\n                protocol = '';\n                break;\n            case GoogleMapsScriptProtocol.HTTP:\n                protocol = 'http:';\n                break;\n            case GoogleMapsScriptProtocol.HTTPS:\n                protocol = 'https:';\n                break;\n        }\n        var hostAndPath = this._config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n        var queryParams = {\n            v: this._config.apiVersion || '3',\n            callback: callbackName,\n            key: this._config.apiKey,\n            client: this._config.clientId,\n            channel: this._config.channel,\n            libraries: this._config.libraries,\n            region: this._config.region,\n            language: this._config.language\n        };\n        var params = Object.keys(queryParams)\n            .filter(function (k) { return queryParams[k] != null; })\n            .filter(function (k) {\n            // remove empty arrays\n            return !Array.isArray(queryParams[k]) ||\n                (Array.isArray(queryParams[k]) && queryParams[k].length > 0);\n        })\n            .map(function (k) {\n            // join arrays as comma seperated strings\n            var i = queryParams[k];\n            if (Array.isArray(i)) {\n                return { key: k, value: i.join(',') };\n            }\n            return { key: k, value: queryParams[k] };\n        })\n            .map(function (entry) { return entry.key + \"=\" + entry.value; })\n            .join('&');\n        return protocol + \"//\" + hostAndPath + \"?\" + params;\n    };\n    return LazyMapsAPILoader;\n}(MapsAPILoader));\nexport { LazyMapsAPILoader };\nLazyMapsAPILoader.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nLazyMapsAPILoader.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Inject, args: [LAZY_MAPS_API_CONFIG,] },] },\n    { type: WindowRef, },\n    { type: DocumentRef, },\n]; };\n//# sourceMappingURL=lazy-maps-api-loader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@agm/core/services/maps-api-loader/lazy-maps-api-loader.js\n// module id = 95\n// module chunks = 0","/**\n * @license Angular v4.2.3\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * AnimationBuilder is an injectable service that is available when the {\\@link\n * BrowserAnimationsModule BrowserAnimationsModule} or {\\@link NoopAnimationsModule\n * NoopAnimationsModule} modules are used within an application.\n *\n * The purpose if this service is to produce an animation sequence programmatically within an\n * angular component or directive.\n *\n * Programmatic animations are first built and then a player is created when the build animation is\n * attached to an element.\n *\n * ```ts\n * // remember to include the BrowserAnimationsModule module for this to work...\n * import {AnimationBuilder} from '\\@angular/animations';\n *\n * class MyCmp {\n *   constructor(private _builder: AnimationBuilder) {}\n *\n *   makeAnimation(element: any) {\n *     // first build the animation\n *     const myAnimation = this._builder.build([\n *       style({ width: 0 }),\n *       animate(1000, style({ width: '100px' }))\n *     ]);\n *\n *     // then create a player from it\n *     const player = myAnimation.create(element);\n *\n *     player.play();\n *   }\n * }\n * ```\n *\n * When an animation is built an instance of {\\@link AnimationFactory AnimationFactory} will be\n * returned. Using that an {\\@link AnimationPlayer AnimationPlayer} can be created which can then be\n * used to start the animation.\n *\n * \\@experimental Animation support is experimental.\n * @abstract\n */\nvar AnimationBuilder = (function () {\n    function AnimationBuilder() {\n    }\n    /**\n     * @abstract\n     * @param {?} animation\n     * @return {?}\n     */\n    AnimationBuilder.prototype.build = function (animation) { };\n    return AnimationBuilder;\n}());\n/**\n * An instance of `AnimationFactory` is returned from {\\@link AnimationBuilder#build\n * AnimationBuilder.build}.\n *\n * \\@experimental Animation support is experimental.\n * @abstract\n */\nvar AnimationFactory = (function () {\n    function AnimationFactory() {\n    }\n    /**\n     * @abstract\n     * @param {?} element\n     * @param {?=} options\n     * @return {?}\n     */\n    AnimationFactory.prototype.create = function (element, options) { };\n    return AnimationFactory;\n}());\n/**\n * \\@experimental Animation support is experimental.\n */\nvar AUTO_STYLE = '*';\n/**\n * `trigger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `trigger` Creates an animation trigger which will a list of {\\@link state state} and {\\@link\n * transition transition} entries that will be evaluated when the expression bound to the trigger\n * changes.\n *\n * Triggers are registered within the component annotation data under the {\\@link\n * Component#animations animations section}. An animation trigger can be placed on an element\n * within a template by referencing the name of the trigger followed by the expression value that the\n * trigger is bound to (in the form of `[\\@triggerName]=\"expression\"`.\n *\n * ### Usage\n *\n * `trigger` will create an animation trigger reference based on the provided `name` value. The\n * provided `animation` value is expected to be an array consisting of {\\@link state state} and {\\@link\n * transition transition} declarations.\n *\n * ```typescript\n * \\@Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * tools/gulp-tasks/validate-commit-message.js ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger(name, definitions) {\n    return { type: 7 /* Trigger */, name: name, definitions: definitions, options: {} };\n}\n/**\n * `animate` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `animate` specifies an animation step that will apply the provided `styles` data for a given\n * amount of time based on the provided `timing` expression value. Calls to `animate` are expected\n * to be used within {\\@link sequence an animation sequence}, {\\@link group group}, or {\\@link\n * transition transition}.\n *\n * ### Usage\n *\n * The `animate` function accepts two input parameters: `timing` and `styles`:\n *\n * - `timing` is a string based value that can be a combination of a duration with optional delay\n * and easing values. The format for the expression breaks down to `duration delay easing`\n * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n * delay=100, easing=ease-out`. If a numeric value is provided then that will be used as the\n * `duration` value in millisecond form.\n * - `styles` is the style input data which can either be a call to {\\@link style style} or {\\@link\n * keyframes keyframes}. If left empty then the styles from the destination state will be collected\n * and used (this is useful when describing an animation step that will complete an animation by\n * {\\@link transition#the-final-animate-call animating to the final state}).\n *\n * ```typescript\n * // various functions for specifying timing data\n * animate(500, style(...))\n * animate(\"1s\", style(...))\n * animate(\"100ms 0.5s\", style(...))\n * animate(\"5s ease\", style(...))\n * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n *\n * // either style() of keyframes() can be used\n * animate(500, style({ background: \"red\" }))\n * animate(500, keyframes([\n *   style({ background: \"blue\" })),\n *   style({ background: \"red\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate(timings, styles) {\n    if (styles === void 0) { styles = null; }\n    return { type: 4 /* Animate */, styles: styles, timings: timings };\n}\n/**\n * `group` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `group` specifies a list of animation steps that are all run in parallel. Grouped animations are\n * useful when a series of styles must be animated/closed off at different statrting/ending times.\n *\n * The `group` function can either be used within a {\\@link sequence sequence} or a {\\@link transition\n * transition} and it will only continue to the next instruction once all of the inner animation\n * steps have completed.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `group` animation function can either consist of {\\@link\n * style style} or {\\@link animate animate} function calls. Each call to `style()` or `animate()`\n * within a group will be executed instantly (use {\\@link keyframes keyframes} or a {\\@link\n * animate#usage animate() with a delay value} to offset styles to be applied at a later time).\n *\n * ```typescript\n * group([\n *   animate(\"1s\", { background: \"black\" }))\n *   animate(\"2s\", { color: \"white\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction group(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 3 /* Group */, steps: steps, options: options };\n}\n/**\n * `sequence` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used by\n * default when an array is passed as animation data into {\\@link transition transition}.)\n *\n * The `sequence` function can either be used within a {\\@link group group} or a {\\@link transition\n * transition} and it will only continue to the next instruction once each of the inner animation\n * steps have completed.\n *\n * To perform animation styling in parallel with other animation steps then have a look at the\n * {\\@link group group} animation function.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `sequence` animation function can either consist of\n * {\\@link style style} or {\\@link animate animate} function calls. A call to `style()` will apply the\n * provided styling data immediately while a call to `animate()` will apply its styling data over a\n * given time depending on its timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 })),\n *   animate(\"1s\", { opacity: 1 }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction sequence(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 2 /* Sequence */, steps: steps, options: options };\n}\n/**\n * `style` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `style` declares a key/value object containing CSS properties/styles that can then be used for\n * {\\@link state animation states}, within an {\\@link sequence animation sequence}, or as styling data\n * for both {\\@link animate animate} and {\\@link keyframes keyframes}.\n *\n * ### Usage\n *\n * `style` takes in a key/value string map as data and expects one or more CSS property/value pairs\n * to be defined.\n *\n * ```typescript\n * // string values are used for css properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical (pixel) values are also supported\n * style({ width: 100, height: 0 })\n * ```\n *\n * #### Auto-styles (using `*`)\n *\n * When an asterix (`*`) character is used as a value then it will be detected from the element\n * being animated and applied as animation data when the animation starts.\n *\n * This feature proves useful for a state depending on layout and/or environment factors; in such\n * cases the styles are calculated just before the animation starts.\n *\n * ```typescript\n * // the steps below will animate from 0 to the\n * // actual height of the element\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} tokens\n * @return {?}\n */\nfunction style(tokens) {\n    return { type: 6 /* Style */, styles: tokens, offset: null };\n}\n/**\n * `state` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `state` declares an animation state within the given trigger. When a state is active within a\n * component then its associated styles will persist on the element that the trigger is attached to\n * (even when the animation ends).\n *\n * To animate between states, have a look at the animation {\\@link transition transition} DSL\n * function. To register states to an animation trigger please have a look at the {\\@link trigger\n * trigger} function.\n *\n * #### The `void` state\n *\n * The `void` state value is a reserved word that angular uses to determine when the element is not\n * apart of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n * associated element is void).\n *\n * #### The `*` (default) state\n *\n * The `*` state (when styled) is a fallback state that will be used if the state that is being\n * animated is not declared within the trigger.\n *\n * ### Usage\n *\n * `state` will declare an animation state with its associated styles\n * within the given trigger.\n *\n * - `stateNameExpr` can be one or more state names separated by commas.\n * - `styles` refers to the {\\@link style styling data} that will be persisted on the element once\n * the state has been reached.\n *\n * ```typescript\n * // \"void\" is a reserved name for a state and is used to represent\n * // the state in which an element is detached from from the application.\n * state(\"void\", style({ height: 0 }))\n *\n * // user-defined states\n * state(\"closed\", style({ height: 0 }))\n * state(\"open, visible\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} styles\n * @return {?}\n */\nfunction state(name, styles) {\n    return { type: 0 /* State */, name: name, styles: styles };\n}\n/**\n * `keyframes` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `keyframes` specifies a collection of {\\@link style style} entries each optionally characterized\n * by an `offset` value.\n *\n * ### Usage\n *\n * The `keyframes` animation function is designed to be used alongside the {\\@link animate animate}\n * animation function. Instead of applying animations from where they are currently to their\n * destination, keyframes can describe how each style entry is applied and at what point within the\n * animation arc (much like CSS Keyframe Animations do).\n *\n * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at what\n * percentage of the animate time the styles will be applied.\n *\n * ```typescript\n * // the provided offset values describe when each backgroundColor value is applied.\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * Alternatively, if there are no `offset` values used within the style entries then the offsets\n * will be calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes(steps) {\n    return { type: 5 /* Keyframes */, steps: steps };\n}\n/**\n * `transition` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `transition` declares the {\\@link sequence sequence of animation steps} that will be run when the\n * provided `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 =>\n * state2` which consists of two known states (use an asterix (`*`) to refer to a dynamic starting\n * and/or ending state).\n *\n * A function can also be provided as the `stateChangeExpr` argument for a transition and this\n * function will be executed each time a state change occurs. If the value returned within the\n * function is true then the associated animation will be run.\n *\n * Animation transitions are placed within an {\\@link trigger animation trigger}. For an transition\n * to animate to a state value and persist its styles then one or more {\\@link state animation\n * states} is expected to be defined.\n *\n * ### Usage\n *\n * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n * what the previous state is and what the current state has become. In other words, if a transition\n * is defined that matches the old/current state criteria then the associated animation will be\n * triggered.\n *\n * ```typescript\n * // all transition/state changes are defined within an animation trigger\n * trigger(\"myAnimationTrigger\", [\n *   // if a state is defined then its styles will be persisted when the\n *   // animation has fully completed itself\n *   state(\"on\", style({ background: \"green\" })),\n *   state(\"off\", style({ background: \"grey\" })),\n *\n *   // a transition animation that will be kicked off when the state value\n *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n *   transition(\"on => off\", animate(500)),\n *\n *   // it is also possible to do run the same animation for both directions\n *   transition(\"on <=> off\", animate(500)),\n *\n *   // or to define multiple states pairs separated by commas\n *   transition(\"on => off, off => void\", animate(500)),\n *\n *   // this is a catch-all state change for when an element is inserted into\n *   // the page and the destination state is unknown\n *   transition(\"void => *\", [\n *     style({ opacity: 0 }),\n *     animate(500)\n *   ]),\n *\n *   // this will capture a state change between any states\n *   transition(\"* => *\", animate(\"1s 0s\")),\n *\n *   // you can also go full out and include a function\n *   transition((fromState, toState) => {\n *     // when `true` then it will allow the animation below to be invoked\n *     return fromState == \"off\" && toState == \"on\";\n *   }, animate(\"1s 0s\"))\n * ])\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * #### The final `animate` call\n *\n * If the final step within the transition steps is a call to `animate()` that **only** uses a\n * timing value with **no style data** then it will be automatically used as the final animation arc\n * for the element to animate itself to the final state. This involves an automatic mix of\n * adding/removing CSS styles so that the element will be in the exact state it should be for the\n * applied state to be presented correctly.\n *\n * ```\n * // start off by hiding the element, but make sure that it animates properly to whatever state\n * // is currently active for \"myAnimationTrigger\"\n * transition(\"void => *\", [\n *   style({ opacity: 0 }),\n *   animate(500)\n * ])\n * ```\n *\n * ### Transition Aliases (`:enter` and `:leave`)\n *\n * Given that enter (insertion) and leave (removal) animations are so common, the `transition`\n * function accepts both `:enter` and `:leave` values which are aliases for the `void => *` and `*\n * => void` state changes.\n *\n * ```\n * transition(\":enter\", [\n *   style({ opacity: 0 }),\n *   animate(500, style({ opacity: 1 }))\n * ])\n * transition(\":leave\", [\n *   animate(500, style({ opacity: 0 }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction transition(stateChangeExpr, steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 1 /* Transition */, expr: stateChangeExpr, animation: steps, options: options };\n}\n/**\n * `animation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * `var myAnimation = animation(...)` is designed to produce a reusable animation that can be later\n * invoked in another animation or sequence. Reusable animations are designed to make use of\n * animation parameters and the produced animation can be used via the `useAnimation` method.\n *\n * ```\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *     style({ opacity: '{{ end }}'))\n * ], { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * If parameters are attached to an animation then they act as **default parameter values**. When an\n * animation is invoked via `useAnimation` then parameter values are allowed to be passed in\n * directly. If any of the passed in parameter values are missing then the default values will be\n * used.\n *\n * ```\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If one or more parameter values are missing before animated then an error will be thrown.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction animation(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 8 /* Reference */, animation: steps, options: options };\n}\n/**\n * `animateChild` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It works by allowing a queried element to execute its own\n * animation within the animation sequence.\n *\n * Each time an animation is triggered in angular, the parent animation\n * will always get priority and any child animations will be blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations and then allow the animations to run using `animateChild`.\n *\n * The example HTML code below shows both parent and child elements that have animation\n * triggers that will execute at the same time.\n *\n * ```html\n * <!-- parent-child.component.html -->\n * <button (click)=\"exp =! exp\">Toggle</button>\n * <hr>\n *\n * <div [\\@parentAnimation]=\"exp\">\n *   <header>Hello</header>\n *   <div [\\@childAnimation]=\"exp\">\n *       one\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       two\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       three\n *   </div>\n * </div>\n * ```\n *\n * Now when the `exp` value changes to true, only the `parentAnimation` animation will animate\n * because it has priority. However, using `query` and `animateChild` each of the inner animations\n * can also fire:\n *\n * ```ts\n * // parent-child.component.ts\n * import {trigger, transition, animate, style, query, animateChild} from '\\@angular/animations';\n * \\@Component({\n *   selector: 'parent-child-component',\n *   animations: [\n *     trigger('parentAnimation', [\n *       transition('false => true', [\n *         query('header', [\n *           style({ opacity: 0 }),\n *           animate(500, style({ opacity: 1 }))\n *         ]),\n *         query('\\@childAnimation', [\n *           animateChild()\n *         ])\n *       ])\n *     ]),\n *     trigger('childAnimation', [\n *       transition('false => true', [\n *         style({ opacity: 0 }),\n *         animate(500, style({ opacity: 1 }))\n *       ])\n *     ])\n *   ]\n * })\n * class ParentChildCmp {\n *   exp: boolean = false;\n * }\n * ```\n *\n * In the animation code above, when the `parentAnimation` transition kicks off it first queries to\n * find the header element and fades it in. It then finds each of the sub elements that contain the\n * `\\@childAnimation` trigger and then allows for their animations to fire.\n *\n * This example can be further extended by using stagger:\n *\n * ```ts\n * query('\\@childAnimation', stagger(100, [\n *   animateChild()\n * ]))\n * ```\n *\n * Now each of the sub animations start off with respect to the `100ms` staggering step.\n *\n * ## The first frame of child animations\n * When sub animations are executed using `animateChild` the animation engine will always apply the\n * first frame of every sub animation immediately at the start of the animation sequence. This way\n * the parent animation does not need to set any initial styling data on the sub elements before the\n * sub animations kick off.\n *\n * In the example above the first frame of the `childAnimation`'s `false => true` transition\n * consists of a style of `opacity: 0`. This is applied immediately when the `parentAnimation`\n * animation transition sequence starts. Only then when the `\\@childAnimation` is queried and called\n * with `animateChild` will it then animate to its destination of `opacity: 1`.\n *\n * Note that this feature designed to be used alongside {\\@link query query()} and it will only work\n * with animations that are assigned using the Angular animation DSL (this means that CSS keyframes\n * and transitions are not handled by this API).\n *\n * \\@experimental Animation support is experimental.\n * @param {?=} options\n * @return {?}\n */\nfunction animateChild(options) {\n    if (options === void 0) { options = null; }\n    return { type: 9 /* AnimateChild */, options: options };\n}\n/**\n * `useAnimation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is used to kick off a reusable animation that is created using {\\@link\n * animation animation()}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\nfunction useAnimation(animation, options) {\n    if (options === void 0) { options = null; }\n    return { type: 10 /* AnimateRef */, animation: animation, options: options };\n}\n/**\n * `query` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * query() is used to find one or more inner elements within the current element that is\n * being animated within the sequence. The provided animation steps are applied\n * to the queried element (by default, an array is provided, then this will be\n * treated as an animation sequence).\n *\n * ### Usage\n *\n * query() is designed to collect mutiple elements and works internally by using\n * `element.querySelectorAll`. An additional options object can be provided which\n * can be used to limit the total amount of items to be collected.\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * query(), by default, will throw an error when zero items are found. If a query\n * has the `optional` flag set to true then this error will be ignored.\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Special Selector Values\n *\n * The selector value within a query can collect elements that contain angular-specific\n * characteristics\n * using special pseudo-selectors tokens.\n *\n * These include:\n *\n *  - Querying for newly inserted/removed elements using `query(\":enter\")`/`query(\":leave\")`\n *  - Querying all currently animating elements using `query(\":animating\")`\n *  - Querying elements that contain an animation trigger using `query(\"\\@triggerName\")`\n *  - Querying all elements that contain an animation triggers using `query(\"\\@*\")`\n *  - Including the current element into the animation sequence using `query(\":self\")`\n *\n *\n *  Each of these pseudo-selector tokens can be merged together into a combined query selector\n * string:\n *\n *  ```\n *  query(':self, .record:enter, .record:leave, \\@subTrigger', [...])\n *  ```\n *\n * ### Demo\n *\n * ```\n * \\@Component({\n *   selector: 'inner',\n *   template: `\n *     <div [\\@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 })),\n *        query('.content', animate(1000, style({ opacity: 1 })),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * \\@experimental Animation support is experimental.\n * @param {?} selector\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\nfunction query(selector, animation, options) {\n    if (options === void 0) { options = null; }\n    return { type: 11 /* Query */, selector: selector, animation: animation, options: options };\n}\n/**\n * `stagger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is designed to be used inside of an animation {\\@link query query()}\n * and works by issuing a timing gap between after each queried item is animated.\n *\n * ### Usage\n *\n * In the example below there is a container element that wraps a list of items stamped out\n * by an ngFor. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [\\@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * The component code for this looks as such:\n *\n * ```ts\n * import {trigger, transition, style, animate, query, stagger} from '\\@angular/animations';\n * \\@Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *        //...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *   }\n * }\n * ```\n *\n * And now for the animation trigger code:\n *\n * ```ts\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * Now each time the items are added/removed then either the opacity\n * fade-in animation will run or each removed item will be faded out.\n * When either of these animations occur then a stagger effect will be\n * applied after each item's animation is started.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?} animation\n * @return {?}\n */\nfunction stagger(timings, animation) {\n    return { type: 12 /* Stagger */, timings: timings, animation: animation };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @param {?} cb\n * @return {?}\n */\nfunction scheduleMicroTask(cb) {\n    Promise.resolve(null).then(cb);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental Animation support is experimental.\n */\nvar NoopAnimationPlayer = (function () {\n    function NoopAnimationPlayer() {\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._onDestroyFns = [];\n        this._started = false;\n        this._destroyed = false;\n        this._finished = false;\n        this.parentPlayer = null;\n        this.totalTime = 0;\n    }\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype._onFinish = function () {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(function (fn) { return fn(); });\n            this._onDoneFns = [];\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.onDestroy = function (fn) { this._onDestroyFns.push(fn); };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.hasStarted = function () { return this._started; };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.init = function () { };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.play = function () {\n        if (!this.hasStarted()) {\n            this.triggerMicrotask();\n            this._onStart();\n        }\n        this._started = true;\n    };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.triggerMicrotask = function () {\n        var _this = this;\n        scheduleMicroTask(function () { return _this._onFinish(); });\n    };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype._onStart = function () {\n        this._onStartFns.forEach(function (fn) { return fn(); });\n        this._onStartFns = [];\n    };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.pause = function () { };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.restart = function () { };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.finish = function () { this._onFinish(); };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.destroy = function () {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            if (!this.hasStarted()) {\n                this._onStart();\n            }\n            this.finish();\n            this._onDestroyFns.forEach(function (fn) { return fn(); });\n            this._onDestroyFns = [];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.reset = function () { };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.setPosition = function (p) { };\n    /**\n     * @return {?}\n     */\n    NoopAnimationPlayer.prototype.getPosition = function () { return 0; };\n    return NoopAnimationPlayer;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AnimationGroupPlayer = (function () {\n    /**\n     * @param {?} _players\n     */\n    function AnimationGroupPlayer(_players) {\n        var _this = this;\n        this._players = _players;\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._finished = false;\n        this._started = false;\n        this._destroyed = false;\n        this._onDestroyFns = [];\n        this.parentPlayer = null;\n        this.totalTime = 0;\n        var doneCount = 0;\n        var destroyCount = 0;\n        var startCount = 0;\n        var total = this._players.length;\n        if (total == 0) {\n            scheduleMicroTask(function () { return _this._onFinish(); });\n        }\n        else {\n            this._players.forEach(function (player) {\n                player.parentPlayer = _this;\n                player.onDone(function () {\n                    if (++doneCount >= total) {\n                        _this._onFinish();\n                    }\n                });\n                player.onDestroy(function () {\n                    if (++destroyCount >= total) {\n                        _this._onDestroy();\n                    }\n                });\n                player.onStart(function () {\n                    if (++startCount >= total) {\n                        _this._onStart();\n                    }\n                });\n            });\n        }\n        this.totalTime = this._players.reduce(function (time, player) { return Math.max(time, player.totalTime); }, 0);\n    }\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype._onFinish = function () {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(function (fn) { return fn(); });\n            this._onDoneFns = [];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.init = function () { this._players.forEach(function (player) { return player.init(); }); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype._onStart = function () {\n        if (!this.hasStarted()) {\n            this._onStartFns.forEach(function (fn) { return fn(); });\n            this._onStartFns = [];\n            this._started = true;\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.onDestroy = function (fn) { this._onDestroyFns.push(fn); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.hasStarted = function () { return this._started; };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.play = function () {\n        if (!this.parentPlayer) {\n            this.init();\n        }\n        this._onStart();\n        this._players.forEach(function (player) { return player.play(); });\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.pause = function () { this._players.forEach(function (player) { return player.pause(); }); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.restart = function () { this._players.forEach(function (player) { return player.restart(); }); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.finish = function () {\n        this._onFinish();\n        this._players.forEach(function (player) { return player.finish(); });\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.destroy = function () { this._onDestroy(); };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype._onDestroy = function () {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            this._onFinish();\n            this._players.forEach(function (player) { return player.destroy(); });\n            this._onDestroyFns.forEach(function (fn) { return fn(); });\n            this._onDestroyFns = [];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.reset = function () {\n        this._players.forEach(function (player) { return player.reset(); });\n        this._destroyed = false;\n        this._finished = false;\n        this._started = false;\n    };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.setPosition = function (p) {\n        var /** @type {?} */ timeAtPosition = p * this.totalTime;\n        this._players.forEach(function (player) {\n            var /** @type {?} */ position = player.totalTime ? Math.min(1, timeAtPosition / player.totalTime) : 1;\n            player.setPosition(position);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    AnimationGroupPlayer.prototype.getPosition = function () {\n        var /** @type {?} */ min = 0;\n        this._players.forEach(function (player) {\n            var /** @type {?} */ p = player.getPosition();\n            min = Math.min(p, min);\n        });\n        return min;\n    };\n    Object.defineProperty(AnimationGroupPlayer.prototype, \"players\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._players; },\n        enumerable: true,\n        configurable: true\n    });\n    return AnimationGroupPlayer;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ɵPRE_STYLE = '!';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation package.\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the animation package.\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { AnimationBuilder, AnimationFactory, AUTO_STYLE, animate, animateChild, animation, group, keyframes, query, sequence, stagger, state, style, transition, trigger, useAnimation, NoopAnimationPlayer, AnimationGroupPlayer as ɵAnimationGroupPlayer, ɵPRE_STYLE };\n//# sourceMappingURL=animations.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/animations/@angular/animations.es5.js\n// module id = 96\n// module chunks = 0","import { Injectable, EventEmitter } from '@angular/core';\nimport { Http, Headers, RequestOptions, URLSearchParams } from '@angular/http';\n\nimport { Config } from '../config';\n\n@Injectable()\n\n/**\n * @DriverService used on all connections to the back-end\n */\nexport class FetcherService {\n\n    public getPages() {\n        return this.http.get( Config.pagesUrl );\n    }\n\n    constructor( private http: Http ) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/services/fetcher.service.ts","import { KeyStorageHelper, WebStorageHelper } from '../helpers/index';\r\nimport { STORAGE } from '../enums/storage';\r\nexport function WebStorage(webSKey, sType) {\r\n    return function (targetedClass, raw) {\r\n        WebStorageDecorator(webSKey, STORAGE.local, targetedClass, raw);\r\n    };\r\n}\r\nexport function WebStorageDecorator(webSKey, sType, targetedClass, raw) {\r\n    var key = webSKey || raw;\r\n    Object.defineProperty(targetedClass, raw, {\r\n        get: function () {\r\n            var sKey = KeyStorageHelper.genKey(key);\r\n            return WebStorageHelper.retrieve(sType, sKey);\r\n        },\r\n        set: function (value) {\r\n            var sKey = KeyStorageHelper.genKey(key);\r\n            this[sKey] = value;\r\n            WebStorageHelper.store(sType, sKey, value);\r\n        }\r\n    });\r\n}\r\n//# sourceMappingURL=webStorage.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-webstorage/dist/decorators/webStorage.js\n// module id = 119\n// module chunks = 0","import { LIB_KEY, LIB_KEY_SEPARATOR } from '../constants/lib';\r\nvar CUSTOM_LIB_KEY = LIB_KEY;\r\nvar CUSTOM_LIB_KEY_SEPARATOR = LIB_KEY_SEPARATOR;\r\nexport function isManagedKey(sKey) {\r\n    return sKey.indexOf(CUSTOM_LIB_KEY + CUSTOM_LIB_KEY_SEPARATOR) === 0;\r\n}\r\nvar KeyStorageHelper = (function () {\r\n    function KeyStorageHelper() {\r\n    }\r\n    KeyStorageHelper.isManagedKey = function (sKey) {\r\n        return sKey.indexOf(CUSTOM_LIB_KEY + CUSTOM_LIB_KEY_SEPARATOR) === 0;\r\n    };\r\n    KeyStorageHelper.retrieveKeysFromStorage = function (storage) {\r\n        return Object.keys(storage).filter(isManagedKey);\r\n    };\r\n    KeyStorageHelper.genKey = function (raw) {\r\n        if (typeof raw !== 'string')\r\n            throw Error('attempt to generate a storage key with a non string value');\r\n        return \"\" + CUSTOM_LIB_KEY + CUSTOM_LIB_KEY_SEPARATOR + raw.toString().toLowerCase();\r\n    };\r\n    KeyStorageHelper.setStorageKeyPrefix = function (key) {\r\n        if (key === void 0) { key = LIB_KEY; }\r\n        CUSTOM_LIB_KEY = key;\r\n    };\r\n    KeyStorageHelper.setStorageKeySeparator = function (separator) {\r\n        if (separator === void 0) { separator = LIB_KEY_SEPARATOR; }\r\n        CUSTOM_LIB_KEY_SEPARATOR = separator;\r\n    };\r\n    return KeyStorageHelper;\r\n}());\r\nexport { KeyStorageHelper };\r\n//# sourceMappingURL=keyStorage.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-webstorage/dist/helpers/keyStorage.js\n// module id = 120\n// module chunks = 0","import { KeyStorageHelper, WebStorageHelper, StorageObserverHelper } from '../helpers/index';\r\nvar WebStorageService = (function () {\r\n    function WebStorageService(sType) {\r\n        if (sType === void 0) { sType = null; }\r\n        this.sType = sType;\r\n        this.sType = sType;\r\n    }\r\n    WebStorageService.prototype.store = function (raw, value) {\r\n        var sKey = KeyStorageHelper.genKey(raw);\r\n        WebStorageHelper.store(this.sType, sKey, value);\r\n    };\r\n    WebStorageService.prototype.retrieve = function (raw) {\r\n        var sKey = KeyStorageHelper.genKey(raw);\r\n        return WebStorageHelper.retrieve(this.sType, sKey);\r\n    };\r\n    WebStorageService.prototype.clear = function (raw) {\r\n        if (raw)\r\n            WebStorageHelper.clear(this.sType, KeyStorageHelper.genKey(raw));\r\n        else\r\n            WebStorageHelper.clearAll(this.sType);\r\n    };\r\n    WebStorageService.prototype.observe = function (raw) {\r\n        var sKey = KeyStorageHelper.genKey(raw);\r\n        return StorageObserverHelper.observe(this.sType, sKey);\r\n    };\r\n    return WebStorageService;\r\n}());\r\nexport { WebStorageService };\r\n//# sourceMappingURL=webStorage.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-webstorage/dist/services/webStorage.js\n// module id = 121\n// module chunks = 0","import { Directive, EventEmitter } from '@angular/core';\nimport { CircleManager } from '../services/managers/circle-manager';\nvar AgmCircle = (function () {\n    function AgmCircle(_manager) {\n        this._manager = _manager;\n        /**\n         * Indicates whether this Circle handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this circle over the map. Defaults to false.\n         */\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this circle by dragging the control points shown at\n         * the center and around the circumference of the circle. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * The radius in meters on the Earth's surface.\n         */\n        this.radius = 0;\n        /**\n         * The stroke position. Defaults to CENTER.\n         * This property is not supported on Internet Explorer 8 and earlier.\n         */\n        this.strokePosition = 'CENTER';\n        /**\n         * The stroke width in pixels.\n         */\n        this.strokeWeight = 0;\n        /**\n         * Whether this circle is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the circle's center is changed.\n         */\n        this.centerChange = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the circle.\n         */\n        this.circleClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the circle.\n         */\n        this.circleDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the circle.\n         */\n        this.drag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the circle.\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the circle.\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the circle.\n         */\n        this.mouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the circle.\n         */\n        this.mouseMove = new EventEmitter();\n        /**\n         * This event is fired on circle mouseout.\n         */\n        this.mouseOut = new EventEmitter();\n        /**\n         * This event is fired on circle mouseover.\n         */\n        this.mouseOver = new EventEmitter();\n        /**\n         * This event is fired when the DOM mouseup event is fired on the circle.\n         */\n        this.mouseUp = new EventEmitter();\n        /**\n         * This event is fired when the circle's radius is changed.\n         */\n        this.radiusChange = new EventEmitter();\n        /**\n         * This event is fired when the circle is right-clicked on.\n         */\n        this.rightClick = new EventEmitter();\n        this._circleAddedToManager = false;\n        this._eventSubscriptions = [];\n    }\n    /** @internal */\n    AgmCircle.prototype.ngOnInit = function () {\n        this._manager.addCircle(this);\n        this._circleAddedToManager = true;\n        this._registerEventListeners();\n    };\n    /** @internal */\n    AgmCircle.prototype.ngOnChanges = function (changes) {\n        if (!this._circleAddedToManager) {\n            return;\n        }\n        if (changes['latitude'] || changes['longitude']) {\n            this._manager.setCenter(this);\n        }\n        if (changes['editable']) {\n            this._manager.setEditable(this);\n        }\n        if (changes['draggable']) {\n            this._manager.setDraggable(this);\n        }\n        if (changes['visible']) {\n            this._manager.setVisible(this);\n        }\n        if (changes['radius']) {\n            this._manager.setRadius(this);\n        }\n        this._updateCircleOptionsChanges(changes);\n    };\n    AgmCircle.prototype._updateCircleOptionsChanges = function (changes) {\n        var options = {};\n        var optionKeys = Object.keys(changes).filter(function (k) { return AgmCircle._mapOptions.indexOf(k) !== -1; });\n        optionKeys.forEach(function (k) { options[k] = changes[k].currentValue; });\n        if (optionKeys.length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    };\n    AgmCircle.prototype._registerEventListeners = function () {\n        var _this = this;\n        var events = new Map();\n        events.set('center_changed', this.centerChange);\n        events.set('click', this.circleClick);\n        events.set('dblclick', this.circleDblClick);\n        events.set('drag', this.drag);\n        events.set('dragend', this.dragEnd);\n        events.set('dragStart', this.dragStart);\n        events.set('mousedown', this.mouseDown);\n        events.set('mousemove', this.mouseMove);\n        events.set('mouseout', this.mouseOut);\n        events.set('mouseover', this.mouseOver);\n        events.set('mouseup', this.mouseUp);\n        events.set('radius_changed', this.radiusChange);\n        events.set('rightclick', this.rightClick);\n        events.forEach(function (eventEmitter, eventName) {\n            _this._eventSubscriptions.push(_this._manager.createEventObservable(eventName, _this).subscribe(function (value) {\n                switch (eventName) {\n                    case 'radius_changed':\n                        _this._manager.getRadius(_this).then(function (radius) { return eventEmitter.emit(radius); });\n                        break;\n                    case 'center_changed':\n                        _this._manager.getCenter(_this).then(function (center) {\n                            return eventEmitter.emit({ lat: center.lat(), lng: center.lng() });\n                        });\n                        break;\n                    default:\n                        eventEmitter.emit({ coords: { lat: value.latLng.lat(), lng: value.latLng.lng() } });\n                }\n            }));\n        });\n    };\n    /** @internal */\n    AgmCircle.prototype.ngOnDestroy = function () {\n        this._eventSubscriptions.forEach(function (s) { s.unsubscribe(); });\n        this._eventSubscriptions = null;\n        this._manager.removeCircle(this);\n    };\n    /**\n     * Gets the LatLngBounds of this Circle.\n     */\n    AgmCircle.prototype.getBounds = function () { return this._manager.getBounds(this); };\n    AgmCircle.prototype.getCenter = function () { return this._manager.getCenter(this); };\n    return AgmCircle;\n}());\nexport { AgmCircle };\nAgmCircle._mapOptions = [\n    'fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight',\n    'visible', 'zIndex'\n];\nAgmCircle.decorators = [\n    { type: Directive, args: [{\n                selector: 'agm-circle',\n                inputs: [\n                    'latitude', 'longitude', 'clickable', 'draggable: circleDraggable', 'editable', 'fillColor',\n                    'fillOpacity', 'radius', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight',\n                    'visible', 'zIndex'\n                ],\n                outputs: [\n                    'centerChange', 'circleClick', 'circleDblClick', 'drag', 'dragEnd', 'dragStart', 'mouseDown',\n                    'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'radiusChange', 'rightClick'\n                ]\n            },] },\n];\n/** @nocollapse */\nAgmCircle.ctorParameters = function () { return [\n    { type: CircleManager, },\n]; };\n//# sourceMappingURL=circle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@agm/core/directives/circle.js\n// module id = 132\n// module chunks = 0","import { Directive, EventEmitter } from '@angular/core';\nimport { DataLayerManager } from './../services/managers/data-layer-manager';\nvar layerId = 0;\n/**\n * AgmDataLayer enables the user to add data layers to the map.\n *\n * ### Example\n * ```typescript\n * import { Component } from 'angular2/core';\n * import { AgmMap, AgmDataLayer } from\n * 'angular-google-maps/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  directives: [AgmMap, AgmDataLayer],\n *  styles: [`\n *    .agm-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n * <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n * \t  <agm-data-layer [geoJson]=\"geoJsonObject\" (layerClick)=\"clicked($event)\" [style]=\"styleFunc\">\n * \t  </agm-data-layer>\n * </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = -25.274449;\n *   lng: number = 133.775060;\n *   zoom: number = 5;\n *\n * clicked(clickEvent) {\n *    console.log(clickEvent);\n *  }\n *\n *  styleFunc(feature) {\n *    return ({\n *      clickable: false,\n *      fillColor: feature.getProperty('color'),\n *      strokeWeight: 1\n *    });\n *  }\n *\n *  geoJsonObject: Object = {\n *    \"type\": \"FeatureCollection\",\n *    \"features\": [\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"G\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"71\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [123.61, -22.14], [122.38, -21.73], [121.06, -21.69], [119.66, -22.22], [119.00, -23.40],\n *              [118.65, -24.76], [118.43, -26.07], [118.78, -27.56], [119.22, -28.57], [120.23, -29.49],\n *              [121.77, -29.87], [123.57, -29.64], [124.45, -29.03], [124.71, -27.95], [124.80, -26.70],\n *              [124.80, -25.60], [123.61, -25.64], [122.56, -25.64], [121.72, -25.72], [121.81, -26.62],\n *              [121.86, -26.98], [122.60, -26.90], [123.57, -27.05], [123.57, -27.68], [123.35, -28.18],\n *              [122.51, -28.38], [121.77, -28.26], [121.02, -27.91], [120.49, -27.21], [120.14, -26.50],\n *              [120.10, -25.64], [120.27, -24.52], [120.67, -23.68], [121.72, -23.32], [122.43, -23.48],\n *              [123.04, -24.04], [124.54, -24.28], [124.58, -23.20], [123.61, -22.14]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"red\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [128.84, -25.76], [128.18, -25.60], [127.96, -25.52], [127.88, -25.52], [127.70, -25.60],\n *              [127.26, -25.79], [126.60, -26.11], [126.16, -26.78], [126.12, -27.68], [126.21, -28.42],\n *              [126.69, -29.49], [127.74, -29.80], [128.80, -29.72], [129.41, -29.03], [129.72, -27.95],\n *              [129.68, -27.21], [129.33, -26.23], [128.84, -25.76]\n *            ],\n *            [\n *              [128.45, -27.44], [128.32, -26.94], [127.70, -26.82], [127.35, -27.05], [127.17, -27.80],\n *              [127.57, -28.22], [128.10, -28.42], [128.49, -27.80], [128.45, -27.44]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"yellow\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [131.87, -25.76], [131.35, -26.07], [130.95, -26.78], [130.82, -27.64], [130.86, -28.53],\n *              [131.26, -29.22], [131.92, -29.76], [132.45, -29.87], [133.06, -29.76], [133.72, -29.34],\n *              [134.07, -28.80], [134.20, -27.91], [134.07, -27.21], [133.81, -26.31], [133.37, -25.83],\n *              [132.71, -25.64], [131.87, -25.76]\n *            ],\n *            [\n *              [133.15, -27.17], [132.71, -26.86], [132.09, -26.90], [131.74, -27.56], [131.79, -28.26],\n *              [132.36, -28.45], [132.93, -28.34], [133.15, -27.76], [133.15, -27.17]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"g\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"103\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [138.12, -25.04], [136.84, -25.16], [135.96, -25.36], [135.26, -25.99], [135, -26.90],\n *              [135.04, -27.91], [135.26, -28.88], [136.05, -29.45], [137.02, -29.49], [137.81, -29.49],\n *              [137.94, -29.99], [137.90, -31.20], [137.85, -32.24], [136.88, -32.69], [136.45, -32.36],\n *              [136.27, -31.80], [134.95, -31.84], [135.17, -32.99], [135.52, -33.43], [136.14, -33.76],\n *              [137.06, -33.83], [138.12, -33.65], [138.86, -33.21], [139.30, -32.28], [139.30, -31.24],\n *              [139.30, -30.14], [139.21, -28.96], [139.17, -28.22], [139.08, -27.41], [139.08, -26.47],\n *              [138.99, -25.40], [138.73, -25.00], [138.12, -25.04]\n *            ],\n *            [\n *              [137.50, -26.54], [136.97, -26.47], [136.49, -26.58], [136.31, -27.13], [136.31, -27.72],\n *              [136.58, -27.99], [137.50, -28.03], [137.68, -27.68], [137.59, -26.78], [137.50, -26.54]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"l\",\n *          \"color\": \"green\",\n *          \"rank\": \"12\",\n *          \"ascii\": \"108\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [140.14, -21.04], [140.31, -29.42], [141.67, -29.49], [141.59, -20.92], [140.14, -21.04]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"e\",\n *          \"color\": \"red\",\n *          \"rank\": \"5\",\n *          \"ascii\": \"101\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [144.14, -27.41], [145.67, -27.52], [146.86, -27.09], [146.82, -25.64], [146.25, -25.04],\n *              [145.45, -24.68], [144.66, -24.60], [144.09, -24.76], [143.43, -25.08], [142.99, -25.40],\n *              [142.64, -26.03], [142.64, -27.05], [142.64, -28.26], [143.30, -29.11], [144.18, -29.57],\n *              [145.41, -29.64], [146.46, -29.19], [146.64, -28.72], [146.82, -28.14], [144.84, -28.42],\n *              [144.31, -28.26], [144.14, -27.41]\n *            ],\n *            [\n *              [144.18, -26.39], [144.53, -26.58], [145.19, -26.62], [145.72, -26.35], [145.81, -25.91],\n *              [145.41, -25.68], [144.97, -25.68], [144.49, -25.64], [144, -25.99], [144.18, -26.39]\n *            ]\n *          ]\n *        }\n *      }\n *    ]\n *  };\n * }\n * ```\n */\nvar AgmDataLayer = (function () {\n    function AgmDataLayer(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId++).toString();\n        this._subscriptions = [];\n        /**\n         * This event is fired when a feature in the layer is clicked.\n         */\n        this.layerClick = new EventEmitter();\n        /**\n         * The geoJson to be displayed\n         */\n        this.geoJson = null;\n    }\n    AgmDataLayer.prototype.ngOnInit = function () {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addDataLayer(this);\n        this._addedToManager = true;\n        this._addEventListeners();\n    };\n    AgmDataLayer.prototype._addEventListeners = function () {\n        var _this = this;\n        var listeners = [\n            { name: 'click', handler: function (ev) { return _this.layerClick.emit(ev); } },\n        ];\n        listeners.forEach(function (obj) {\n            var os = _this._manager.createEventObservable(obj.name, _this).subscribe(obj.handler);\n            _this._subscriptions.push(os);\n        });\n    };\n    /** @internal */\n    AgmDataLayer.prototype.id = function () { return this._id; };\n    /** @internal */\n    AgmDataLayer.prototype.toString = function () { return \"AgmDataLayer-\" + this._id.toString(); };\n    /** @internal */\n    AgmDataLayer.prototype.ngOnDestroy = function () {\n        this._manager.deleteDataLayer(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    /** @internal */\n    AgmDataLayer.prototype.ngOnChanges = function (changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        var geoJsonChange = changes['geoJson'];\n        if (geoJsonChange) {\n            this._manager.updateGeoJson(this, geoJsonChange.currentValue);\n        }\n        var dataOptions = {};\n        var optionKeys = Object.keys(changes).filter(function (k) { return AgmDataLayer._dataOptionsAttributes.indexOf(k) !== -1; });\n        optionKeys.forEach(function (k) { return dataOptions[k] = changes[k].currentValue; });\n        this._manager.setDataOptions(this, dataOptions);\n    };\n    return AgmDataLayer;\n}());\nexport { AgmDataLayer };\nAgmDataLayer._dataOptionsAttributes = ['style'];\nAgmDataLayer.decorators = [\n    { type: Directive, args: [{\n                selector: 'agm-data-layer',\n                inputs: ['geoJson', 'style'],\n                outputs: ['layerClick']\n            },] },\n];\n/** @nocollapse */\nAgmDataLayer.ctorParameters = function () { return [\n    { type: DataLayerManager, },\n]; };\n//# sourceMappingURL=data-layer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@agm/core/directives/data-layer.js\n// module id = 133\n// module chunks = 0","import { Directive, EventEmitter } from '@angular/core';\nimport { KmlLayerManager } from './../services/managers/kml-layer-manager';\nvar layerId = 0;\nvar AgmKmlLayer = (function () {\n    function AgmKmlLayer(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId++).toString();\n        this._subscriptions = [];\n        /**\n         * If true, the layer receives mouse events. Default value is true.\n         */\n        this.clickable = true;\n        /**\n         * By default, the input map is centered and zoomed to the bounding box of the contents of the\n         * layer.\n         * If this option is set to true, the viewport is left unchanged, unless the map's center and zoom\n         * were never set.\n         */\n        this.preserveViewport = false;\n        /**\n         * Whether to render the screen overlays. Default true.\n         */\n        this.screenOverlays = true;\n        /**\n         * Suppress the rendering of info windows when layer features are clicked.\n         */\n        this.suppressInfoWindows = false;\n        /**\n         * The URL of the KML document to display.\n         */\n        this.url = null;\n        /**\n         * The z-index of the layer.\n         */\n        this.zIndex = null;\n        /**\n         * This event is fired when a feature in the layer is clicked.\n         */\n        this.layerClick = new EventEmitter();\n        /**\n         * This event is fired when the KML layers default viewport has changed.\n         */\n        this.defaultViewportChange = new EventEmitter();\n        /**\n         * This event is fired when the KML layer has finished loading.\n         * At this point it is safe to read the status property to determine if the layer loaded\n         * successfully.\n         */\n        this.statusChange = new EventEmitter();\n    }\n    AgmKmlLayer.prototype.ngOnInit = function () {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addKmlLayer(this);\n        this._addedToManager = true;\n        this._addEventListeners();\n    };\n    AgmKmlLayer.prototype.ngOnChanges = function (changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        this._updatePolygonOptions(changes);\n    };\n    AgmKmlLayer.prototype._updatePolygonOptions = function (changes) {\n        var options = Object.keys(changes)\n            .filter(function (k) { return AgmKmlLayer._kmlLayerOptions.indexOf(k) !== -1; })\n            .reduce(function (obj, k) {\n            obj[k] = changes[k].currentValue;\n            return obj;\n        }, {});\n        if (Object.keys(options).length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    };\n    AgmKmlLayer.prototype._addEventListeners = function () {\n        var _this = this;\n        var listeners = [\n            { name: 'click', handler: function (ev) { return _this.layerClick.emit(ev); } },\n            { name: 'defaultviewport_changed', handler: function () { return _this.defaultViewportChange.emit(); } },\n            { name: 'status_changed', handler: function () { return _this.statusChange.emit(); } },\n        ];\n        listeners.forEach(function (obj) {\n            var os = _this._manager.createEventObservable(obj.name, _this).subscribe(obj.handler);\n            _this._subscriptions.push(os);\n        });\n    };\n    /** @internal */\n    AgmKmlLayer.prototype.id = function () { return this._id; };\n    /** @internal */\n    AgmKmlLayer.prototype.toString = function () { return \"AgmKmlLayer-\" + this._id.toString(); };\n    /** @internal */\n    AgmKmlLayer.prototype.ngOnDestroy = function () {\n        this._manager.deleteKmlLayer(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    return AgmKmlLayer;\n}());\nexport { AgmKmlLayer };\nAgmKmlLayer._kmlLayerOptions = ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex'];\nAgmKmlLayer.decorators = [\n    { type: Directive, args: [{\n                selector: 'agm-kml-layer',\n                inputs: ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex'],\n                outputs: ['layerClick', 'defaultViewportChange', 'statusChange']\n            },] },\n];\n/** @nocollapse */\nAgmKmlLayer.ctorParameters = function () { return [\n    { type: KmlLayerManager, },\n]; };\n//# sourceMappingURL=kml-layer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@agm/core/directives/kml-layer.js\n// module id = 134\n// module chunks = 0","import { Component, ElementRef, EventEmitter } from '@angular/core';\nimport { GoogleMapsAPIWrapper } from '../services/google-maps-api-wrapper';\nimport { CircleManager } from '../services/managers/circle-manager';\nimport { InfoWindowManager } from '../services/managers/info-window-manager';\nimport { MarkerManager } from '../services/managers/marker-manager';\nimport { PolygonManager } from '../services/managers/polygon-manager';\nimport { PolylineManager } from '../services/managers/polyline-manager';\nimport { KmlLayerManager } from './../services/managers/kml-layer-manager';\nimport { DataLayerManager } from './../services/managers/data-layer-manager';\n/**\n * AgmMap renders a Google Map.\n * **Important note**: To be able see a map in the browser, you have to define a height for the\n * element `agm-map`.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *    </agm-map>\n *  `\n * })\n * ```\n */\nvar AgmMap = (function () {\n    function AgmMap(_elem, _mapsWrapper) {\n        this._elem = _elem;\n        this._mapsWrapper = _mapsWrapper;\n        /**\n         * The longitude that defines the center of the map.\n         */\n        this.longitude = 0;\n        /**\n         * The latitude that defines the center of the map.\n         */\n        this.latitude = 0;\n        /**\n         * The zoom level of the map. The default zoom level is 8.\n         */\n        this.zoom = 8;\n        /**\n         * Enables/disables if map is draggable.\n         */\n        this.draggable = true;\n        /**\n         * Enables/disables zoom and center on double click. Enabled by default.\n         */\n        this.disableDoubleClickZoom = false;\n        /**\n         * Enables/disables all default UI of the Google map. Please note: When the map is created, this\n         * value cannot get updated.\n         */\n        this.disableDefaultUI = false;\n        /**\n         * If false, disables scrollwheel zooming on the map. The scrollwheel is enabled by default.\n         */\n        this.scrollwheel = true;\n        /**\n         * If false, prevents the map from being controlled by the keyboard. Keyboard shortcuts are\n         * enabled by default.\n         */\n        this.keyboardShortcuts = true;\n        /**\n         * The enabled/disabled state of the Zoom control.\n         */\n        this.zoomControl = true;\n        /**\n         * Styles to apply to each of the default map types. Note that for Satellite/Hybrid and Terrain\n         * modes, these styles will only apply to labels and geometry.\n         */\n        this.styles = [];\n        /**\n         * When true and the latitude and/or longitude values changes, the Google Maps panTo method is\n         * used to\n         * center the map. See: https://developers.google.com/maps/documentation/javascript/reference#Map\n         */\n        this.usePanning = false;\n        /**\n         * The initial enabled/disabled state of the Street View Pegman control.\n         * This control is part of the default UI, and should be set to false when displaying a map type\n         * on which the Street View road overlay should not appear (e.g. a non-Earth map type).\n         */\n        this.streetViewControl = true;\n        /**\n         * Sets the viewport to contain the given bounds.\n         */\n        this.fitBounds = null;\n        /**\n         * The initial enabled/disabled state of the Scale control. This is disabled by default.\n         */\n        this.scaleControl = false;\n        /**\n         * The initial enabled/disabled state of the Map type control.\n         */\n        this.mapTypeControl = false;\n        /**\n         * The initial enabled/disabled state of the Pan control.\n         */\n        this.panControl = false;\n        /**\n         * The initial enabled/disabled state of the Rotate control.\n         */\n        this.rotateControl = false;\n        /**\n         * The initial enabled/disabled state of the Fullscreen control.\n         */\n        this.fullscreenControl = false;\n        /**\n         * The map mapTypeId. Defaults to 'roadmap'.\n         */\n        this.mapTypeId = 'roadmap';\n        /**\n         * When false, map icons are not clickable. A map icon represents a point of interest,\n         * also known as a POI. By default map icons are clickable.\n         */\n        this.clickableIcons = true;\n        /**\n         * This setting controls how gestures on the map are handled.\n         * Allowed values:\n         * - 'cooperative' (Two-finger touch gestures pan and zoom the map. One-finger touch gestures are not handled by the map.)\n         * - 'greedy'      (All touch gestures pan or zoom the map.)\n         * - 'none'        (The map cannot be panned or zoomed by user gestures.)\n         * - 'auto'        [default] (Gesture handling is either cooperative or greedy, depending on whether the page is scrollable or not.\n         */\n        this.gestureHandling = 'auto';\n        this._observableSubscriptions = [];\n        /**\n         * This event emitter gets emitted when the user clicks on the map (but not when they click on a\n         * marker or infoWindow).\n         */\n        this.mapClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user right-clicks on the map (but not when they click\n         * on a marker or infoWindow).\n         */\n        this.mapRightClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user double-clicks on the map (but not when they click\n         * on a marker or infoWindow).\n         */\n        this.mapDblClick = new EventEmitter();\n        /**\n         * This event emitter is fired when the map center changes.\n         */\n        this.centerChange = new EventEmitter();\n        /**\n         * This event is fired when the viewport bounds have changed.\n         */\n        this.boundsChange = new EventEmitter();\n        /**\n         * This event is fired when the map becomes idle after panning or zooming.\n         */\n        this.idle = new EventEmitter();\n        /**\n         * This event is fired when the zoom level has changed.\n         */\n        this.zoomChange = new EventEmitter();\n        /**\n         * This event is fired when the google map is fully initialized.\n         * You get the google.maps.Map instance as a result of this EventEmitter.\n         */\n        this.mapReady = new EventEmitter();\n    }\n    /** @internal */\n    AgmMap.prototype.ngOnInit = function () {\n        // todo: this should be solved with a new component and a viewChild decorator\n        var container = this._elem.nativeElement.querySelector('.agm-map-container-inner');\n        this._initMapInstance(container);\n    };\n    AgmMap.prototype._initMapInstance = function (el) {\n        var _this = this;\n        this._mapsWrapper.createMap(el, {\n            center: { lat: this.latitude || 0, lng: this.longitude || 0 },\n            zoom: this.zoom,\n            minZoom: this.minZoom,\n            maxZoom: this.maxZoom,\n            disableDefaultUI: this.disableDefaultUI,\n            disableDoubleClickZoom: this.disableDoubleClickZoom,\n            scrollwheel: this.scrollwheel,\n            backgroundColor: this.backgroundColor,\n            draggable: this.draggable,\n            draggableCursor: this.draggableCursor,\n            draggingCursor: this.draggingCursor,\n            keyboardShortcuts: this.keyboardShortcuts,\n            styles: this.styles,\n            zoomControl: this.zoomControl,\n            zoomControlOptions: this.zoomControlOptions,\n            streetViewControl: this.streetViewControl,\n            streetViewControlOptions: this.streetViewControlOptions,\n            scaleControl: this.scaleControl,\n            scaleControlOptions: this.scaleControlOptions,\n            mapTypeControl: this.mapTypeControl,\n            mapTypeControlOptions: this.mapTypeControlOptions,\n            panControl: this.panControl,\n            panControlOptions: this.panControlOptions,\n            rotateControl: this.rotateControl,\n            rotateControlOptions: this.rotateControlOptions,\n            fullscreenControl: this.fullscreenControl,\n            fullscreenControlOptions: this.fullscreenControlOptions,\n            mapTypeId: this.mapTypeId,\n            clickableIcons: this.clickableIcons,\n            gestureHandling: this.gestureHandling\n        })\n            .then(function () { return _this._mapsWrapper.getNativeMap(); })\n            .then(function (map) { return _this.mapReady.emit(map); });\n        // register event listeners\n        this._handleMapCenterChange();\n        this._handleMapZoomChange();\n        this._handleMapMouseEvents();\n        this._handleBoundsChange();\n        this._handleIdleEvent();\n    };\n    /** @internal */\n    AgmMap.prototype.ngOnDestroy = function () {\n        // unsubscribe all registered observable subscriptions\n        this._observableSubscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    /* @internal */\n    AgmMap.prototype.ngOnChanges = function (changes) {\n        this._updateMapOptionsChanges(changes);\n        this._updatePosition(changes);\n    };\n    AgmMap.prototype._updateMapOptionsChanges = function (changes) {\n        var options = {};\n        var optionKeys = Object.keys(changes).filter(function (k) { return AgmMap._mapOptionsAttributes.indexOf(k) !== -1; });\n        optionKeys.forEach(function (k) { options[k] = changes[k].currentValue; });\n        this._mapsWrapper.setMapOptions(options);\n    };\n    /**\n     * Triggers a resize event on the google map instance.\n     * Returns a promise that gets resolved after the event was triggered.\n     */\n    AgmMap.prototype.triggerResize = function () {\n        var _this = this;\n        // Note: When we would trigger the resize event and show the map in the same turn (which is a\n        // common case for triggering a resize event), then the resize event would not\n        // work (to show the map), so we trigger the event in a timeout.\n        return new Promise(function (resolve) {\n            setTimeout(function () { return _this._mapsWrapper.triggerMapEvent('resize').then(function () { return resolve(); }); });\n        });\n    };\n    AgmMap.prototype._updatePosition = function (changes) {\n        if (changes['latitude'] == null && changes['longitude'] == null &&\n            changes['fitBounds'] == null) {\n            // no position update needed\n            return;\n        }\n        // we prefer fitBounds in changes\n        if (changes['fitBounds'] && this.fitBounds != null) {\n            this._fitBounds();\n            return;\n        }\n        if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n            return;\n        }\n        var newCenter = {\n            lat: this.latitude,\n            lng: this.longitude,\n        };\n        if (this.usePanning) {\n            this._mapsWrapper.panTo(newCenter);\n        }\n        else {\n            this._mapsWrapper.setCenter(newCenter);\n        }\n    };\n    AgmMap.prototype._fitBounds = function () {\n        if (this.usePanning) {\n            this._mapsWrapper.panToBounds(this.fitBounds);\n            return;\n        }\n        this._mapsWrapper.fitBounds(this.fitBounds);\n    };\n    AgmMap.prototype._handleMapCenterChange = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('center_changed').subscribe(function () {\n            _this._mapsWrapper.getCenter().then(function (center) {\n                _this.latitude = center.lat();\n                _this.longitude = center.lng();\n                _this.centerChange.emit({ lat: _this.latitude, lng: _this.longitude });\n            });\n        });\n        this._observableSubscriptions.push(s);\n    };\n    AgmMap.prototype._handleBoundsChange = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('bounds_changed').subscribe(function () {\n            _this._mapsWrapper.getBounds().then(function (bounds) { _this.boundsChange.emit(bounds); });\n        });\n        this._observableSubscriptions.push(s);\n    };\n    AgmMap.prototype._handleMapZoomChange = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('zoom_changed').subscribe(function () {\n            _this._mapsWrapper.getZoom().then(function (z) {\n                _this.zoom = z;\n                _this.zoomChange.emit(z);\n            });\n        });\n        this._observableSubscriptions.push(s);\n    };\n    AgmMap.prototype._handleIdleEvent = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('idle').subscribe(function () { _this.idle.emit(void 0); });\n        this._observableSubscriptions.push(s);\n    };\n    AgmMap.prototype._handleMapMouseEvents = function () {\n        var _this = this;\n        var events = [\n            { name: 'click', emitter: this.mapClick },\n            { name: 'rightclick', emitter: this.mapRightClick },\n            { name: 'dblclick', emitter: this.mapDblClick },\n        ];\n        events.forEach(function (e) {\n            var s = _this._mapsWrapper.subscribeToMapEvent(e.name).subscribe(function (event) {\n                var value = { coords: { lat: event.latLng.lat(), lng: event.latLng.lng() } };\n                e.emitter.emit(value);\n            });\n            _this._observableSubscriptions.push(s);\n        });\n    };\n    return AgmMap;\n}());\nexport { AgmMap };\n/**\n * Map option attributes that can change over time\n */\nAgmMap._mapOptionsAttributes = [\n    'disableDoubleClickZoom', 'scrollwheel', 'draggable', 'draggableCursor', 'draggingCursor',\n    'keyboardShortcuts', 'zoomControl', 'zoomControlOptions', 'styles', 'streetViewControl',\n    'streetViewControlOptions', 'zoom', 'mapTypeControl', 'mapTypeControlOptions', 'minZoom',\n    'maxZoom', 'panControl', 'panControlOptions', 'rotateControl', 'rotateControlOptions',\n    'fullscreenControl', 'fullscreenControlOptions', 'scaleControl', 'scaleControlOptions',\n    'mapTypeId', 'clickableIcons', 'gestureHandling'\n];\nAgmMap.decorators = [\n    { type: Component, args: [{\n                selector: 'agm-map',\n                providers: [\n                    GoogleMapsAPIWrapper, MarkerManager, InfoWindowManager, CircleManager, PolylineManager,\n                    PolygonManager, KmlLayerManager, DataLayerManager\n                ],\n                inputs: [\n                    'longitude', 'latitude', 'zoom', 'minZoom', 'maxZoom', 'draggable: mapDraggable',\n                    'disableDoubleClickZoom', 'disableDefaultUI', 'scrollwheel', 'backgroundColor', 'draggableCursor',\n                    'draggingCursor', 'keyboardShortcuts', 'zoomControl', 'zoomControlOptions', 'styles', 'usePanning',\n                    'streetViewControl', 'streetViewControlOptions', 'fitBounds', 'mapTypeControl', 'mapTypeControlOptions',\n                    'panControlOptions', 'rotateControl', 'rotateControlOptions', 'fullscreenControl', 'fullscreenControlOptions',\n                    'scaleControl', 'scaleControlOptions', 'mapTypeId', 'clickableIcons', 'gestureHandling'\n                ],\n                outputs: [\n                    'mapClick', 'mapRightClick', 'mapDblClick', 'centerChange', 'idle', 'boundsChange', 'zoomChange', 'mapReady'\n                ],\n                host: {\n                    // todo: deprecated - we will remove it with the next version\n                    '[class.sebm-google-map-container]': 'true'\n                },\n                styles: [\"\\n    .agm-map-container-inner {\\n      width: inherit;\\n      height: inherit;\\n    }\\n    .agm-map-content {\\n      display:none;\\n    }\\n  \"],\n                template: \"\\n    <div class='agm-map-container-inner sebm-google-map-container-inner'></div>\\n    <div class='agm-map-content'>\\n      <ng-content></ng-content>\\n    </div>\\n  \"\n            },] },\n];\n/** @nocollapse */\nAgmMap.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: GoogleMapsAPIWrapper, },\n]; };\n//# sourceMappingURL=map.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@agm/core/directives/map.js\n// module id = 135\n// module chunks = 0","import { Directive, EventEmitter, ContentChildren, QueryList } from '@angular/core';\nimport { MarkerManager } from '../services/managers/marker-manager';\nimport { AgmInfoWindow } from './info-window';\nvar markerId = 0;\n/**\n * AgmMarker renders a map marker inside a {@link AgmMap}.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nvar AgmMarker = (function () {\n    function AgmMarker(_markerManager) {\n        this._markerManager = _markerManager;\n        /**\n         * If true, the marker can be dragged. Default value is false.\n         */\n        this.draggable = false;\n        /**\n         * If true, the marker is visible\n         */\n        this.visible = true;\n        /**\n         * Whether to automatically open the child info window when the marker is clicked.\n         */\n        this.openInfoWindow = true;\n        /**\n         * The marker's opacity between 0.0 and 1.0.\n         */\n        this.opacity = 1;\n        /**\n         * All markers are displayed on the map in order of their zIndex, with higher values displaying in\n         * front of markers with lower values. By default, markers are displayed according to their\n         * vertical position on screen, with lower markers appearing in front of markers further up the\n         * screen.\n         */\n        this.zIndex = 1;\n        /**\n         * This event emitter gets emitted when the user clicks on the marker.\n         */\n        this.markerClick = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the marker.\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user mouses over the marker.\n         */\n        this.mouseOver = new EventEmitter();\n        /**\n         * This event is fired when the user mouses outside the marker.\n         */\n        this.mouseOut = new EventEmitter();\n        /**\n         * @internal\n         */\n        this.infoWindow = new QueryList();\n        this._markerAddedToManger = false;\n        this._observableSubscriptions = [];\n        this._id = (markerId++).toString();\n    }\n    /* @internal */\n    AgmMarker.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.handleInfoWindowUpdate();\n        this.infoWindow.changes.subscribe(function () { return _this.handleInfoWindowUpdate(); });\n    };\n    AgmMarker.prototype.handleInfoWindowUpdate = function () {\n        var _this = this;\n        if (this.infoWindow.length > 1) {\n            throw new Error('Expected no more than one info window.');\n        }\n        this.infoWindow.forEach(function (marker) {\n            marker.hostMarker = _this;\n        });\n    };\n    /** @internal */\n    AgmMarker.prototype.ngOnChanges = function (changes) {\n        if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n            return;\n        }\n        if (!this._markerAddedToManger) {\n            this._markerManager.addMarker(this);\n            this._markerAddedToManger = true;\n            this._addEventListeners();\n            return;\n        }\n        if (changes['latitude'] || changes['longitude']) {\n            this._markerManager.updateMarkerPosition(this);\n        }\n        if (changes['title']) {\n            this._markerManager.updateTitle(this);\n        }\n        if (changes['label']) {\n            this._markerManager.updateLabel(this);\n        }\n        if (changes['draggable']) {\n            this._markerManager.updateDraggable(this);\n        }\n        if (changes['iconUrl']) {\n            this._markerManager.updateIcon(this);\n        }\n        if (changes['opacity']) {\n            this._markerManager.updateOpacity(this);\n        }\n        if (changes['visible']) {\n            this._markerManager.updateVisible(this);\n        }\n        if (changes['zIndex']) {\n            this._markerManager.updateZIndex(this);\n        }\n    };\n    AgmMarker.prototype._addEventListeners = function () {\n        var _this = this;\n        var cs = this._markerManager.createEventObservable('click', this).subscribe(function () {\n            if (_this.openInfoWindow) {\n                _this.infoWindow.forEach(function (infoWindow) { return infoWindow.open(); });\n            }\n            _this.markerClick.emit(null);\n        });\n        this._observableSubscriptions.push(cs);\n        var ds = this._markerManager.createEventObservable('dragend', this)\n            .subscribe(function (e) {\n            _this.dragEnd.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(ds);\n        var mover = this._markerManager.createEventObservable('mouseover', this)\n            .subscribe(function (e) {\n            _this.mouseOver.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(mover);\n        var mout = this._markerManager.createEventObservable('mouseout', this)\n            .subscribe(function (e) {\n            _this.mouseOut.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(mout);\n    };\n    /** @internal */\n    AgmMarker.prototype.id = function () { return this._id; };\n    /** @internal */\n    AgmMarker.prototype.toString = function () { return 'AgmMarker-' + this._id.toString(); };\n    /** @internal */\n    AgmMarker.prototype.ngOnDestroy = function () {\n        this._markerManager.deleteMarker(this);\n        // unsubscribe all registered observable subscriptions\n        this._observableSubscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    return AgmMarker;\n}());\nexport { AgmMarker };\nAgmMarker.decorators = [\n    { type: Directive, args: [{\n                selector: 'agm-marker',\n                inputs: [\n                    'latitude', 'longitude', 'title', 'label', 'draggable: markerDraggable', 'iconUrl',\n                    'openInfoWindow', 'opacity', 'visible', 'zIndex'\n                ],\n                outputs: ['markerClick', 'dragEnd', 'mouseOver', 'mouseOut']\n            },] },\n];\n/** @nocollapse */\nAgmMarker.ctorParameters = function () { return [\n    { type: MarkerManager, },\n]; };\nAgmMarker.propDecorators = {\n    'infoWindow': [{ type: ContentChildren, args: [AgmInfoWindow,] },],\n};\n//# sourceMappingURL=marker.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@agm/core/directives/marker.js\n// module id = 136\n// module chunks = 0","import { Directive, EventEmitter } from '@angular/core';\nimport { PolygonManager } from '../services/managers/polygon-manager';\n/**\n * AgmPolygon renders a polygon on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polygon [paths]=\"paths\">\n *      </agm-polygon>\n *    </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = 0;\n *   lng: number = 0;\n *   zoom: number = 10;\n *   paths: Array<LatLngLiteral> = [\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ]\n *   // Nesting paths will create a hole where they overlap;\n *   nestedPaths: Array<Array<LatLngLiteral>> = [[\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ], [\n *     { lat: 0, lng: 15 },\n *     { lat: 0, lng: 20 },\n *     { lat: 5, lng: 20 },\n *     { lat: 5, lng: 15 },\n *     { lat: 0, lng: 15 }\n *   ]]\n * }\n * ```\n */\nvar AgmPolygon = (function () {\n    function AgmPolygon(_polygonManager) {\n        this._polygonManager = _polygonManager;\n        /**\n         * Indicates whether this Polygon handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this shape over the map. The geodesic\n         * property defines the mode of dragging. Defaults to false.\n         */\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this shape by dragging the control\n         * points shown at the vertices and on each segment. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * When true, edges of the polygon are interpreted as geodesic and will\n         * follow the curvature of the Earth. When false, edges of the polygon are\n         * rendered as straight lines in screen space. Note that the shape of a\n         * geodesic polygon may appear to change when dragged, as the dimensions\n         * are maintained relative to the surface of the earth. Defaults to false.\n         */\n        this.geodesic = false;\n        /**\n         * The ordered sequence of coordinates that designates a closed loop.\n         * Unlike polylines, a polygon may consist of one or more paths.\n         *  As a result, the paths property may specify one or more arrays of\n         * LatLng coordinates. Paths are closed automatically; do not repeat the\n         * first vertex of the path as the last vertex. Simple polygons may be\n         * defined using a single array of LatLngs. More complex polygons may\n         * specify an array of arrays. Any simple arrays are converted into Arrays.\n         * Inserting or removing LatLngs from the Array will automatically update\n         * the polygon on the map.\n         */\n        this.paths = [];\n        /**\n         * This event is fired when the DOM click event is fired on the Polygon.\n         */\n        this.polyClick = new EventEmitter();\n        /**\n         * This event is fired when the DOM dblclick event is fired on the Polygon.\n         */\n        this.polyDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the polygon.\n         */\n        this.polyDrag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the polygon.\n         */\n        this.polyDragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the polygon.\n         */\n        this.polyDragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the Polygon.\n         */\n        this.polyMouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the Polygon.\n         */\n        this.polyMouseMove = new EventEmitter();\n        /**\n         * This event is fired on Polygon mouseout.\n         */\n        this.polyMouseOut = new EventEmitter();\n        /**\n         * This event is fired on Polygon mouseover.\n         */\n        this.polyMouseOver = new EventEmitter();\n        /**\n         * This event is fired whe the DOM mouseup event is fired on the Polygon\n         */\n        this.polyMouseUp = new EventEmitter();\n        /**\n         * This even is fired when the Polygon is right-clicked on.\n         */\n        this.polyRightClick = new EventEmitter();\n        this._polygonAddedToManager = false;\n        this._subscriptions = [];\n    }\n    /** @internal */\n    AgmPolygon.prototype.ngAfterContentInit = function () {\n        if (!this._polygonAddedToManager) {\n            this._init();\n        }\n    };\n    AgmPolygon.prototype.ngOnChanges = function (changes) {\n        if (!this._polygonAddedToManager) {\n            this._init();\n            return;\n        }\n        this._polygonManager.setPolygonOptions(this, this._updatePolygonOptions(changes));\n    };\n    AgmPolygon.prototype._init = function () {\n        this._polygonManager.addPolygon(this);\n        this._polygonAddedToManager = true;\n        this._addEventListeners();\n    };\n    AgmPolygon.prototype._addEventListeners = function () {\n        var _this = this;\n        var handlers = [\n            { name: 'click', handler: function (ev) { return _this.polyClick.emit(ev); } },\n            { name: 'dbclick', handler: function (ev) { return _this.polyDblClick.emit(ev); } },\n            { name: 'drag', handler: function (ev) { return _this.polyDrag.emit(ev); } },\n            { name: 'dragend', handler: function (ev) { return _this.polyDragEnd.emit(ev); } },\n            { name: 'dragstart', handler: function (ev) { return _this.polyDragStart.emit(ev); } },\n            { name: 'mousedown', handler: function (ev) { return _this.polyMouseDown.emit(ev); } },\n            { name: 'mousemove', handler: function (ev) { return _this.polyMouseMove.emit(ev); } },\n            { name: 'mouseout', handler: function (ev) { return _this.polyMouseOut.emit(ev); } },\n            { name: 'mouseover', handler: function (ev) { return _this.polyMouseOver.emit(ev); } },\n            { name: 'mouseup', handler: function (ev) { return _this.polyMouseUp.emit(ev); } },\n            { name: 'rightclick', handler: function (ev) { return _this.polyRightClick.emit(ev); } },\n        ];\n        handlers.forEach(function (obj) {\n            var os = _this._polygonManager.createEventObservable(obj.name, _this).subscribe(obj.handler);\n            _this._subscriptions.push(os);\n        });\n    };\n    AgmPolygon.prototype._updatePolygonOptions = function (changes) {\n        return Object.keys(changes)\n            .filter(function (k) { return AgmPolygon._polygonOptionsAttributes.indexOf(k) !== -1; })\n            .reduce(function (obj, k) {\n            obj[k] = changes[k].currentValue;\n            return obj;\n        }, {});\n    };\n    /** @internal */\n    AgmPolygon.prototype.id = function () { return this._id; };\n    /** @internal */\n    AgmPolygon.prototype.ngOnDestroy = function () {\n        this._polygonManager.deletePolygon(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    return AgmPolygon;\n}());\nexport { AgmPolygon };\nAgmPolygon._polygonOptionsAttributes = [\n    'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'icon', 'map',\n    'paths', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'draggable',\n    'editable', 'visible'\n];\nAgmPolygon.decorators = [\n    { type: Directive, args: [{\n                selector: 'agm-polygon',\n                inputs: [\n                    'clickable',\n                    'draggable: polyDraggable',\n                    'editable',\n                    'fillColor',\n                    'fillOpacity',\n                    'geodesic',\n                    'paths',\n                    'strokeColor',\n                    'strokeOpacity',\n                    'strokeWeight',\n                    'visible',\n                    'zIndex',\n                ],\n                outputs: [\n                    'polyClick', 'polyDblClick', 'polyDrag', 'polyDragEnd', 'polyMouseDown', 'polyMouseMove',\n                    'polyMouseOut', 'polyMouseOver', 'polyMouseUp', 'polyRightClick'\n                ]\n            },] },\n];\n/** @nocollapse */\nAgmPolygon.ctorParameters = function () { return [\n    { type: PolygonManager, },\n]; };\n//# sourceMappingURL=polygon.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@agm/core/directives/polygon.js\n// module id = 137\n// module chunks = 0","import { ContentChildren, Directive, EventEmitter } from '@angular/core';\nimport { PolylineManager } from '../services/managers/polyline-manager';\nimport { AgmPolylinePoint } from './polyline-point';\nvar polylineId = 0;\n/**\n * AgmPolyline renders a polyline on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-polyline-point [latitude]=\"latA\" [longitude]=\"lngA\">\n *          </agm-polyline-point>\n *          <agm-polyline-point [latitude]=\"latB\" [longitude]=\"lngB\">\n *          </agm-polyline-point>\n *      </agm-polyline>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nvar AgmPolyline = (function () {\n    function AgmPolyline(_polylineManager) {\n        this._polylineManager = _polylineManager;\n        /**\n         * Indicates whether this Polyline handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this shape over the map. The geodesic property defines the\n         * mode of dragging. Defaults to false.\n         */\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this shape by dragging the control points shown at the\n         * vertices and on each segment. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\n         * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\n         * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\n         * are maintained relative to the surface of the earth. Defaults to false.\n         */\n        this.geodesic = false;\n        /**\n         * Whether this polyline is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the DOM click event is fired on the Polyline.\n         */\n        this.lineClick = new EventEmitter();\n        /**\n         * This event is fired when the DOM dblclick event is fired on the Polyline.\n         */\n        this.lineDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the polyline.\n         */\n        this.lineDrag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the polyline.\n         */\n        this.lineDragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the polyline.\n         */\n        this.lineDragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the Polyline.\n         */\n        this.lineMouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the Polyline.\n         */\n        this.lineMouseMove = new EventEmitter();\n        /**\n         * This event is fired on Polyline mouseout.\n         */\n        this.lineMouseOut = new EventEmitter();\n        /**\n         * This event is fired on Polyline mouseover.\n         */\n        this.lineMouseOver = new EventEmitter();\n        /**\n         * This event is fired whe the DOM mouseup event is fired on the Polyline\n         */\n        this.lineMouseUp = new EventEmitter();\n        /**\n         * This even is fired when the Polyline is right-clicked on.\n         */\n        this.lineRightClick = new EventEmitter();\n        this._polylineAddedToManager = false;\n        this._subscriptions = [];\n        this._id = (polylineId++).toString();\n    }\n    /** @internal */\n    AgmPolyline.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        if (this.points.length) {\n            this.points.forEach(function (point) {\n                var s = point.positionChanged.subscribe(function () { _this._polylineManager.updatePolylinePoints(_this); });\n                _this._subscriptions.push(s);\n            });\n        }\n        if (!this._polylineAddedToManager) {\n            this._init();\n        }\n        var s = this.points.changes.subscribe(function () { return _this._polylineManager.updatePolylinePoints(_this); });\n        this._subscriptions.push(s);\n        this._polylineManager.updatePolylinePoints(this);\n    };\n    AgmPolyline.prototype.ngOnChanges = function (changes) {\n        if (!this._polylineAddedToManager) {\n            this._init();\n            return;\n        }\n        var options = {};\n        var optionKeys = Object.keys(changes).filter(function (k) { return AgmPolyline._polylineOptionsAttributes.indexOf(k) !== -1; });\n        optionKeys.forEach(function (k) { return options[k] = changes[k].currentValue; });\n        this._polylineManager.setPolylineOptions(this, options);\n    };\n    AgmPolyline.prototype._init = function () {\n        this._polylineManager.addPolyline(this);\n        this._polylineAddedToManager = true;\n        this._addEventListeners();\n    };\n    AgmPolyline.prototype._addEventListeners = function () {\n        var _this = this;\n        var handlers = [\n            { name: 'click', handler: function (ev) { return _this.lineClick.emit(ev); } },\n            { name: 'dbclick', handler: function (ev) { return _this.lineDblClick.emit(ev); } },\n            { name: 'drag', handler: function (ev) { return _this.lineDrag.emit(ev); } },\n            { name: 'dragend', handler: function (ev) { return _this.lineDragEnd.emit(ev); } },\n            { name: 'dragstart', handler: function (ev) { return _this.lineDragStart.emit(ev); } },\n            { name: 'mousedown', handler: function (ev) { return _this.lineMouseDown.emit(ev); } },\n            { name: 'mousemove', handler: function (ev) { return _this.lineMouseMove.emit(ev); } },\n            { name: 'mouseout', handler: function (ev) { return _this.lineMouseOut.emit(ev); } },\n            { name: 'mouseover', handler: function (ev) { return _this.lineMouseOver.emit(ev); } },\n            { name: 'mouseup', handler: function (ev) { return _this.lineMouseUp.emit(ev); } },\n            { name: 'rightclick', handler: function (ev) { return _this.lineRightClick.emit(ev); } },\n        ];\n        handlers.forEach(function (obj) {\n            var os = _this._polylineManager.createEventObservable(obj.name, _this).subscribe(obj.handler);\n            _this._subscriptions.push(os);\n        });\n    };\n    /** @internal */\n    AgmPolyline.prototype._getPoints = function () {\n        if (this.points) {\n            return this.points.toArray();\n        }\n        return [];\n    };\n    /** @internal */\n    AgmPolyline.prototype.id = function () { return this._id; };\n    /** @internal */\n    AgmPolyline.prototype.ngOnDestroy = function () {\n        this._polylineManager.deletePolyline(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    return AgmPolyline;\n}());\nexport { AgmPolyline };\nAgmPolyline._polylineOptionsAttributes = [\n    'draggable', 'editable', 'visible', 'geodesic', 'strokeColor', 'strokeOpacity', 'strokeWeight',\n    'zIndex'\n];\nAgmPolyline.decorators = [\n    { type: Directive, args: [{\n                selector: 'agm-polyline',\n                inputs: [\n                    'clickable', 'draggable: polylineDraggable', 'editable', 'geodesic', 'strokeColor',\n                    'strokeWeight', 'strokeOpacity', 'visible', 'zIndex'\n                ],\n                outputs: [\n                    'lineClick', 'lineDblClick', 'lineDrag', 'lineDragEnd', 'lineMouseDown', 'lineMouseMove',\n                    'lineMouseOut', 'lineMouseOver', 'lineMouseUp', 'lineRightClick'\n                ]\n            },] },\n];\n/** @nocollapse */\nAgmPolyline.ctorParameters = function () { return [\n    { type: PolylineManager, },\n]; };\nAgmPolyline.propDecorators = {\n    'points': [{ type: ContentChildren, args: [AgmPolylinePoint,] },],\n};\n//# sourceMappingURL=polyline.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@agm/core/directives/polyline.js\n// module id = 138\n// module chunks = 0","var WindowRef = (function () {\n    function WindowRef() {\n    }\n    WindowRef.prototype.getNativeWindow = function () { return window; };\n    return WindowRef;\n}());\nexport { WindowRef };\nvar DocumentRef = (function () {\n    function DocumentRef() {\n    }\n    DocumentRef.prototype.getNativeDocument = function () { return document; };\n    return DocumentRef;\n}());\nexport { DocumentRef };\nexport var BROWSER_GLOBALS_PROVIDERS = [WindowRef, DocumentRef];\n//# sourceMappingURL=browser-globals.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@agm/core/utils/browser-globals.js\n// module id = 139\n// module chunks = 0","import { Injectable } from '@angular/core';\nimport { Pages } from './pages';\n\n@Injectable()\nexport class Cache {\n    // the variables containing the language jsons\n    // will contain the default language\n    private language: string = ''; \n    // will return the texts from witch we fill our forms\n    public getPages() {\n        return this.pages.cache\n    };\n\n    constructor(private pages: Pages) {};\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/cache/cache.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class Pages {\n    public cache = {\n\"pages\": [\n    {\n    \"_id\": \"58ebc72932eb01cb4d0de212\",\n    \"owner\": \"home\",\n    \"image\": null,\n    \"type\": \"page\",\n    \"zIndex\": 0,\n    \"title\": {\n        \"en\": \"\",\n        \"bg\": \"\"\n    },\n    \"html\": {\n        \"en\": \"Oт 2004 година IKARINS работи активно в областта на застраховането. Нашата цел е да изберем най-подходящата застраховка за всеки от клиентите ни персонално и според специфичните му изисквания. През 2015 година закупихме \\\"ИЗИИНС-Първи Интренет Застраховатален Брокер\\\"ЕООД и чрез него увеличихме набора на застрахователни продукти. В случай на застрахователно събитие ние се грижим нашите клиенти да бъдат минимално притеснени от инцидента. При пътно транспортно проишествир ни се обадете: +359(0) 888 234 454\",\n        \"bg\": \"Oт 2004 година IKARINS работи активно в областта на застраховането. Нашата цел е да изберем най-подходящата застраховка за всеки от клиентите ни персонално и според специфичните му изисквания. През 2015 година закупихме \\\"ИЗИИНС-Първи Интренет Застраховатален Брокер\\\"ЕООД и чрез него увеличихме набора на застрахователни продукти. В случай на застрахователно събитие ние се грижим нашите клиенти да бъдат минимално притеснени от инцидента. При пътно транспортно проишествир ни се обадете: +359(0) 888 234 454\"\n    }\n},\n{\n\"_id\": \"58ebc72932eb01cb4d0de292\",\n\"type\": \"multiple\",\n\"link\": null,\n\"title\": {\n\"bg\": \"Услуги и застраховки\",\n\"en\": \"Услуги и застраховки ен\"\n},\n\"subCategories\": [\n\"zastrahovki_za_vas\",\n\"zastrahovki_za_biznesa_vi\",\n\"urejdane_na_zastrahovatelni_pretencii\",\n\"tehnichesko_obslujvane_na_avtomobili\",\n\"konsultacii\"\n]\n},\n{\n\"_id\": \"58ebc72932eb01cb4d0de293\",\n\"type\": \"single\",\n\"link\": \"promocionalni\",\n\"title\": {\n\"bg\": \"Промоционални\",\n\"en\": \"Промоционални ен\"\n},\n\"subCategories\": null\n},\n{\n\"_id\": \"58ebc72932eb01cb4d0de294\",\n\"type\": \"blog\",\n\"link\": \"novini\",\n\"title\": {\n\"bg\": \"Новини\",\n\"en\": \"Новини ен\"\n},\n\"subCategories\": null\n},\n{\n\"_id\": \"58ebc72932eb01cb4d0de295\",\n\"type\": \"single\",\n\"link\": \"pri_shteta\",\n\"title\": {\n\"bg\": \"При щета\",\n\"en\": \"При щета ен\"\n},\n\"subCategories\": null\n},\n{\n\"_id\": \"58ebc72932eb01cb4d0de296\",\n\"type\": \"single\",\n\"link\": \"za_nas\",\n\"title\": {\n\"bg\": \"За нас\",\n\"en\": \"За нас ен\"\n},\n\"subCategories\": null\n},\n{\n\"_id\": \"58ebc72932eb01cb4d0de297\",\n\"type\": \"sub-category\",\n\"link\": \"zastrahovki_za_vas\",\n\"title\": {\n\"bg\": \"Застраховки за вас\",\n\"en\": \"Застраховки за вас ен\"\n},\n\"subCategories\": null\n},\n{\n\"_id\": \"58ebc72932eb01cb4d0de298\",\n\"type\": \"sub-category\",\n\"link\": \"zastrahovki_za_biznesa_vi\",\n\"title\": {\n\"bg\": \"Застраховки за бизнеса ви\",\n\"en\": \"Застраховки за бизнеса ви ен\"\n},\n\"subCategories\": null\n},\n{\n\"_id\": \"58ebc72932eb01cb4d0de299\",\n\"type\": \"sub-category\",\n\"link\": \"urejdane_na_zastrahovatelni_pretencii\",\n\"title\": {\n\"bg\": \"Уреждане на застрахователни претенции\",\n\"en\": \"Уреждане на застрахователни претенции ен\"\n},\n\"subCategories\": null\n},\n{\n\"_id\": \"58ebc72932eb01cb4d0de29a\",\n\"type\": \"sub-category\",\n\"link\": \"tehnichesko_obslujvane_na_avtomobili\",\n\"title\": {\n\"bg\": \"Техническо обслужване на автомобили\",\n\"en\": \"Техническо обслужване на автомобили ен\"\n},\n\"subCategories\": null\n},\n{\n\"_id\": \"58ebc72932eb01cb4d0de29b\",\n\"type\": \"sub-category\",\n\"link\": \"konsultacii\",\n\"title\": {\n\"bg\": \"Консултации\",\n\"en\": \"Консултации ен\"\n},\n\"subCategories\": null\n}\n],\n\"pagesData\": [\n{\n\"_id\": \"58ebc74c32eb01cb4d0de29c\",\n\"owner\": \"promocionalni\",\n\"image\": null,\n\"type\": \"page\",\n\"zIndex\": 0,\n\"title\": {\n\"en\": \"ЗАЩИТА ОТ ПРИРОДНИ БЕДСТВИЯEN\",\n\"bg\": \"ЗАЩИТА ОТ ПРИРОДНИ БЕДСТВИЯ\"\n},\n\"html\": {\n\"en\": \"\",\n\"bg\": \"\"\n}\n},\n{\n\"_id\": \"58ebc74c32eb01cb4d0de29d\",\n\"owner\": \"pri_shteta\",\n\"image\": null,\n\"type\": \"page\",\n\"zIndex\": 0,\n\"title\": {\n\"en\": \"ПРИ ЩЕТА\",\n\"bg\": \"ПРИ ЩЕТА\"\n},\n\"html\": {\n\"en\": \"\",\n\"bg\": \"\"\n}\n},\n{\n\"_id\": \"58ebc74c32eb01cb4d0de29f\",\n\"owner\": \"zastrahovki_za_vas\",\n\"image\": null,\n\"type\": \"page\",\n\"zIndex\": 0,\n\"title\": {\n\"en\": \"ЗАСТРАХОВКИ ЗА ВАС\",\n\"bg\": \"ЗАСТРАХОВКИ ЗА ВАС\"\n},\n\"html\": {\n\"en\": \"\",\n\"bg\": \"\"\n}\n},\n{\n\"_id\": \"58ebc74c32eb01cb4d0de2a0\",\n\"owner\": \"zastrahovki_za_biznesa_vi\",\n\"image\": null,\n\"type\": \"page\",\n\"zIndex\": 0,\n\"title\": {\n\"en\": \"ЗАСТРАХОВКИ ЗА БИЗНЕСА ВИ\",\n\"bg\": \"ЗАСТРАХОВКИ ЗА БИЗНЕСА ВИ\"\n},\n\"html\": {\n\"en\": \"\",\n\"bg\": \"\"\n}\n},\n{\n\"_id\": \"58ebc74c32eb01cb4d0de2a1\",\n\"owner\": \"urejdane_na_zastrahovatelni_pretencii\",\n\"image\": null,\n\"type\": \"page\",\n\"zIndex\": 0,\n\"title\": {\n\"en\": \"УРЕЖДАНЕ НА ЗАСТРАХОВАТЕЛНИ ПРЕТЕНЦИИ\",\n\"bg\": \"УРЕЖДАНЕ НА ЗАСТРАХОВАТЕЛНИ ПРЕТЕНЦИИ\"\n},\n\"html\": {\n\"en\": \"\",\n\"bg\": \"\"\n}\n},\n{\n\"_id\": \"58ebc74c32eb01cb4d0de2a2\",\n\"owner\": \"tehnichesko_obslujvane_na_avtomobili\",\n\"image\": null,\n\"type\": \"page\",\n\"zIndex\": 0,\n\"title\": {\n\"en\": \"ТЕХНИЧЕСКО ОБСЛУЖВАНЕ НА АВТОМОБИЛИ\",\n\"bg\": \"ТЕХНИЧЕСКО ОБСЛУЖВАНЕ НА АВТОМОБИЛИ\"\n},\n\"html\": {\n\"en\": \"\",\n\"bg\": \"\"\n}\n},\n{\n\"_id\": \"58ebc74c32eb01cb4d0de2a3\",\n\"owner\": \"konsultacii\",\n\"image\": null,\n\"type\": \"page\",\n\"zIndex\": 0,\n\"title\": {\n\"en\": \"КОНСУЛТАЦИИ И ЛИЗИНГ\",\n\"bg\": \"КОНСУЛТАЦИИ И ЛИЗИНГ\"\n},\n\"html\": {\n\"en\": \"\",\n\"bg\": \"\"\n}\n},\n{\n\"_id\": \"58ebc74c32eb01cb4d0de2a3\",\n\"owner\": \"novini\",\n\"image\": null,\n\"type\": \"page\",\n\"zIndex\": 0,\n\"title\": {\n\"en\": \"НОВИНИ ЕН\",\n\"bg\": \"НОВИНИ\"\n},\n\"html\": {\n\"en\": \"\",\n\"bg\": \"\"\n}\n},\n{\n\"_id\": \"58ebc74c32eb01cb4d0de2a6\",\n\"owner\": \"zastrahovki_za_vas\",\n\"image\": \"house.png\",\n\"type\": \"sub-page\",\n\"zIndex\": 0,\n\"title\": {\n\"en\": \"Застраховка за ДОМАEN\",\n\"bg\": \"Застраховка за ДОМА\"\n},\n\"html\": {\n\"en\": \"има много варианти при този вид застраховки,  с които може да сме винаги спокойни и сигурни за нашето недвижимо и движимо имущество:<br/>- жилище;<br/>- вила;<br/>- обзавеждане;<br/>- техника;<br/>- и други придобивки.<br/>Ние ще Ви помогнем да изберете най-точното покритие като<br/>рискове и застрахователни суми.\",\n\"bg\": \"има много варианти при този вид застраховки,  с които може да сме винаги спокойни и сигурни за нашето недвижимо и движимо имущество:<br/>- жилище;<br/>- вила;<br/>- обзавеждане;<br/>- техника;<br/>- и други придобивки.<br/>Ние ще Ви помогнем да изберете най-точното покритие като<br/>рискове и застрахователни суми.\"\n}\n},\n{\n\"_id\": \"58ebc74c32eb01cb4d0de2a7\",\n\"owner\": \"zastrahovki_za_vas\",\n\"image\": \"street.png\",\n\"type\": \"sub-page\",\n\"zIndex\": 0,\n\"title\": {\n\"en\": \"Застраховки за АВТОМОБИЛИТЕ EN\",\n\"bg\": \"Застраховки за АВТОМОБИЛИТЕ \"\n},\n\"html\": {\n\"en\": \"доброволна застраховка КАСКО и задължителна застраховка ГРАЖДАНСКА ОТГОВОРНОСТ.  При тези полици имаме възможност да комбинираме и с други видове застраховки като:<br/>- злополука на лицата в МПС;<br/>- асистанс на пътя;<br/>- техническа повреда.<br/>Наша задача при тези полици е да Ви предложим най-изгодната застраховка с най-доброто покритие.\",\n\"bg\": \"доброволна застраховка КАСКО и задължителна застраховка ГРАЖДАНСКА ОТГОВОРНОСТ.  При тези полици имаме възможност да комбинираме и с други видове застраховки като:<br/>- злополука на лицата в МПС;<br/>- асистанс на пътя;<br/>- техническа повреда.<br/>Наша задача при тези полици е да Ви предложим най-изгодната застраховка с най-доброто покритие.\"\n}\n},\n{\n\"_id\": \"58ebc74c32eb01cb4d0de2aa\",\n\"owner\": \"zastrahovki_za_biznesa_vi\",\n\"image\": \"new-car.png\",\n\"type\": \"sub-page\",\n\"zIndex\": 1,\n\"title\": {\n\"en\": \"Застраховка КАСКО и ГРАЖАДАНСКА ОТГОВОРНОСТ EN\",\n\"bg\": \"Застраховка КАСКО и ГРАЖАДАНСКА ОТГОВОРНОСТ\"\n},\n\"html\": {\n\"en\": \"за превозните средства  с държавни контролни номера – леки и товарни автомобили, влекачи, прикачни устройства, кари, земеделски и горска техника и други;\",\n\"bg\": \"за превозните средства  с държавни контролни номера – леки и товарни автомобили, влекачи, прикачни устройства, кари, земеделски и горска техника и други;\"\n}\n},\n{\n\"_id\": \"58ebc74c32eb01cb4d0de29e\",\n\"owner\": \"za_nas\",\n\"image\": null,\n\"type\": \"page\",\n\"zIndex\": 0,\n\"title\": {\n\"en\": \"Застрахователни услуги с високо качество и лично отношение\",\n\"bg\": \"Застрахователни услуги с високо качество и лично отношение\"\n},\n\"html\": {\n\"en\": \"В началото на 2004 година ние - Иван и Милена Стефанин, направихме нашия застрахователен офис. От тогова до сега предлагаме на нашите клиенти застрахователни услуги с високо качество и лично отношение. С голямо желание и в дълбочина се фокусираме върху даването на най-оптималния вариант за застраховка на всеки клиент – в бизнеса или личния живот. При реализиране на риск и настъпване на застрахователно събитие всеки има нужда от силна подкрепа за да преодолее първоначалния шок от случилото се. Благодарение на знанията и опита, които имаме, ние даваме на  клиентите ни точни и ясни указания за спазване на закона и условията на застраховката за може да сме изрядни при подаването на претенцията пред застрахователя и да бъдем сигурни в 100%вото обезщетяване на вредата. <br/>Ние сме гъвкави и адаптираме услугите си към конкретните нужди на нашите клиенти, като по този начин, всеки отделен клиент има предимството да получава най-добрата застрахователна защита.<br/>Създадохме бранда IKARINS – чрез който се стремим да бъдем разпознати и да увеличим услугите, които предоставяме.<br/>Заедно с Вас – нашите клиенти, извървяхме дълъг път на усъвършенстване и през годините изградихме доверие помежду ни.<br/>Повече от 10 години работихме усилено и успяхме да се развием като независим застрахователен посредник.<br/>В началото на 2015 година закупихме застрахователен брокер „ИзиИнс - Първи Интернет Застрахователен Брокер“ ЕООД.<br/>По този начин ние се разраснахме и имаме възможността да предлагаме на нашите клиенти по-голям избор на застрахователни продукти\",\n\"bg\": \"В началото на 2004 година ние - Иван и Милена Стефанин, направихме нашия застрахователен офис. От тогова до сега предлагаме на нашите клиенти застрахователни услуги с високо качество и лично отношение. С голямо желание и в дълбочина се фокусираме върху даването на най-оптималния вариант за застраховка на всеки клиент – в бизнеса или личния живот. При реализиране на риск и настъпване на застрахователно събитие всеки има нужда от силна подкрепа за да преодолее първоначалния шок от случилото се. Благодарение на знанията и опита, които имаме, ние даваме на  клиентите ни точни и ясни указания за спазване на закона и условията на застраховката за може да сме изрядни при подаването на претенцията пред застрахователя и да бъдем сигурни в 100%вото обезщетяване на вредата. <br/>Ние сме гъвкави и адаптираме услугите си към конкретните нужди на нашите клиенти, като по този начин, всеки отделен клиент има предимството да получава най-добрата застрахователна защита.<br/>Създадохме бранда IKARINS – чрез който се стремим да бъдем разпознати и да увеличим услугите, които предоставяме.<br/>Заедно с Вас – нашите клиенти, извървяхме дълъг път на усъвършенстване и през годините изградихме доверие помежду ни.<br/>Повече от 10 години работихме усилено и успяхме да се развием като независим застрахователен посредник.<br/>В началото на 2015 година закупихме застрахователен брокер „ИзиИнс - Първи Интернет Застрахователен Брокер“ ЕООД.<br/>По този начин ние се разраснахме и имаме възможността да предлагаме на нашите клиенти по-голям избор на застрахователни продукти\"\n}\n},\n{\n\"_id\": \"58ebc74c32eb01cb4d0de2a4\",\n\"owner\": \"promocionalni\",\n\"image\": \"helicopter.png\",\n\"type\": \"sub-page\",\n\"zIndex\": 0,\n\"title\": {\n\"en\": \"\",\n\"bg\": \"\"\n},\n\"html\": {\n\"en\": \"Във връзка със сполетелите нашата страна природни бедствия тази година, ние решихме през месец Септември да направим кампания за популяризиране и увеличаване на интереса към застраховката на жилищата ни – апартаменти, къщи и вили.<br/>За повечето от нас купуването и обзавеждането на собствен дом е най-важната и ценна инвестиция, направена през живота и несъмнено тя трябва да бъде защитена. За да си осигурим тази защита е необходимо да сключим доброволна застраховка за нашия дом.<br/>Застрахователите в България предлагат голям брой рискове, предоставящи оптимално покритие за недвижимото имущество (апартамента, къщата или вилата, вкл. стени, покрив и всички трайно закрепени към сградата покрития – гипсокартон, боя, настилки и други) и движимото имущество (мебели, битови електроуреди, ел.техника и други). Ето това са рисковете:<br/>Пожар;<br/>Експлозия на съд под налягане;<br/>Природни бедствия: буря, ураган, градушка, проливен дъжд, вкл. щети от падащи дървета и клони;<br/>Наводнение - заливане с вода, причинено от вълни, приливни вълни или изтичане на вода извън границите на водоизточници, намиращи се на повърхността на земята като: езера, язовири, резервоари, реки и потоци;<br/>Измокряне в резултат на авария на водопроводна, канализационна, отоплителна и паропроводна инсталация;<br/>Злоумишлени действия на трети лица (вандализъм);<br/>Удар от ППС или от летящо тяло, падащи негови съставни части или товар;<br/>Свличане и срутване на земни пластове;<br/>Земетресение – повечето застрахователи в България прилагат самоучастие на застрахования при реализиране на този риск до 2% от застрахователната сума;<br/>Кражба чрез взлом;<br/>Гражданска Отговорност към трети лица.<br/>За да направим нашата застраховка за дома трябва освен да изберем желаните покрития, но и да решим на каква застрахователна сума ще сключим полицата. Минималната застрахователна премия, която трябва да платите за 1 година може да е 30 лв. при застраховка на т.нар. Първи риск в застраховането – избраните застрахователни суми не са обвързани с действителните (пазарни) цени на имота. Има и вариант, при който избора на застрахователна сума се обвързва с действителна стойност на кв.м., като при него ще заплатите около 70 лв. премия на година за апартамент около 60 кв.м.<br/>Ние ще Ви предложим най-добрата комбинация от покрития и застрахователни суми, за да получите максимална защита на добра цена.<br/>Този Септември може да се възползвате от предлаганата от нас отстъпка до 50%.<br/>Екипът на ИкарИнс\",\n\"bg\": \"Във връзка със сполетелите нашата страна природни бедствия тази година, ние решихме през месец Септември да направим кампания за популяризиране и увеличаване на интереса към застраховката на жилищата ни – апартаменти, къщи и вили.<br/>За повечето от нас купуването и обзавеждането на собствен дом е най-важната и ценна инвестиция, направена през живота и несъмнено тя трябва да бъде защитена. За да си осигурим тази защита е необходимо да сключим доброволна застраховка за нашия дом.<br/>Застрахователите в България предлагат голям брой рискове, предоставящи оптимално покритие за недвижимото имущество (апартамента, къщата или вилата, вкл. стени, покрив и всички трайно закрепени към сградата покрития – гипсокартон, боя, настилки и други) и движимото имущество (мебели, битови електроуреди, ел.техника и други). Ето това са рисковете:<br/>Пожар;<br/>Експлозия на съд под налягане;<br/>Природни бедствия: буря, ураган, градушка, проливен дъжд, вкл. щети от падащи дървета и клони;<br/>Наводнение - заливане с вода, причинено от вълни, приливни вълни или изтичане на вода извън границите на водоизточници, намиращи се на повърхността на земята като: езера, язовири, резервоари, реки и потоци;<br/>Измокряне в резултат на авария на водопроводна, канализационна, отоплителна и паропроводна инсталация;<br/>Злоумишлени действия на трети лица (вандализъм);<br/>Удар от ППС или от летящо тяло, падащи негови съставни части или товар;<br/>Свличане и срутване на земни пластове;<br/>Земетресение – повечето застрахователи в България прилагат самоучастие на застрахования при реализиране на този риск до 2% от застрахователната сума;<br/>Кражба чрез взлом;<br/>Гражданска Отговорност към трети лица.<br/>За да направим нашата застраховка за дома трябва освен да изберем желаните покрития, но и да решим на каква застрахователна сума ще сключим полицата. Минималната застрахователна премия, която трябва да платите за 1 година може да е 30 лв. при застраховка на т.нар. Първи риск в застраховането – избраните застрахователни суми не са обвързани с действителните (пазарни) цени на имота. Има и вариант, при който избора на застрахователна сума се обвързва с действителна стойност на кв.м., като при него ще заплатите около 70 лв. премия на година за апартамент около 60 кв.м.<br/>Ние ще Ви предложим най-добрата комбинация от покрития и застрахователни суми, за да получите максимална защита на добра цена.<br/>Този Септември може да се възползвате от предлаганата от нас отстъпка до 50%.<br/>Екипът на ИкарИнс\"\n}\n},\n{\n\"_id\": \"58ebc74c32eb01cb4d0de2a5\",\n\"owner\": \"pri_shteta\",\n\"image\": \"destroyed_building.png\",\n\"type\": \"sub-page\",\n\"zIndex\": 0,\n\"title\": {\n\"en\": \"Обадете ни се веднага на телефон:<br/>+359(0) 888 234 454\",\n\"bg\": \"Обадете ни се веднага на телефон:<br/>+359(0) 888 234 454\"\n},\n\"html\": {\n\"en\": \"При настъпване на ПЪТНО-ТРАНСПОРТНО ПРОИЗШЕСТВИЕ ( ПТП ) в България , трябва да спазваме Закона  за движение по пътищата, Кодекса на Застраховането и условията на застрахователната полица. Условията , при които се попълва УКАЗАНИЯ ЗА ПОПЪЛВАНЕ НА ДВУСТРАНЕН КОНСТАТИВЕН ПРОТОКОЛ ЗА ПТП са:<br/>Ако няма пострадали лица;<br/>Ако сте 2 (двама) участници - нито повече, нито по-малко. Ако самокатастрофирате - трябва да бъдете посетен от КАТ. И двамата участници в ПТП сте с български регистрационни номера;<br/>Ако няма пострадало друго имущество, различно от Вашите два автомобила;<br/>Ако и двамата участници са в движение и могат да продължат на собствен ход;<br/>Ако видимо и двамата участници не са употребили алкохол или наркотици;<br/>И двамата водачи имат съгласие относно вината за настъпване на ПТП,<br/>Тогава може да се обадите на 1 1 2, да дадете данните на двата автомобила и да вземете № на регистрираното от тях събитие и попълните ДВУСТРАННИЯ КОНСТАТИВЕН ПРОТОКОЛ за ПТП. Попълва се протокола към Гражданската Отговорност на виновния водач, ако той няма такъв то тогава може се попълни и този на пострадалия. Оригиналният (горният) протокол е за пострадалия, а индигираното копие е за виновния водач. Не забравяйте да запишете № , който са Ви дали от 112. <br/>ВЪВ ВСИЧКИ ДРУГИ СЛУЧАИ ПО ЗАКОН ТРЯБВА ДА БЪДЕТЕ ПОСЕТЕНИ НА МЯСТО ОТ ОРГАНИТЕ НА МВР И ДА ВИ БЪДЕ ИЗАДЕН ДОКУМЕНТ ОТ ТЯХ ЗА НАСТЪПИЛОТО СЪБИТИЕ.<br/>Изтеглете тук: УКАЗАНИЯ ЗА ПОПЪЛВАНЕ НА ДВУСТРАНЕН КОНСТАТИВЕН ПРОТОКОЛ ЗА ПТП<br/>\",\n\"bg\": \"При настъпване на ПЪТНО-ТРАНСПОРТНО ПРОИЗШЕСТВИЕ ( ПТП ) в България , трябва да спазваме Закона  за движение по пътищата, Кодекса на Застраховането и условията на застрахователната полица. Условията , при които се попълва УКАЗАНИЯ ЗА ПОПЪЛВАНЕ НА ДВУСТРАНЕН КОНСТАТИВЕН ПРОТОКОЛ ЗА ПТП са:<br/>Ако няма пострадали лица;<br/>Ако сте 2 (двама) участници - нито повече, нито по-малко. Ако самокатастрофирате - трябва да бъдете посетен от КАТ. И двамата участници в ПТП сте с български регистрационни номера;<br/>Ако няма пострадало друго имущество, различно от Вашите два автомобила;<br/>Ако и двамата участници са в движение и могат да продължат на собствен ход;<br/>Ако видимо и двамата участници не са употребили алкохол или наркотици;<br/>И двамата водачи имат съгласие относно вината за настъпване на ПТП,<br/>Тогава може да се обадите на 1 1 2, да дадете данните на двата автомобила и да вземете № на регистрираното от тях събитие и попълните ДВУСТРАННИЯ КОНСТАТИВЕН ПРОТОКОЛ за ПТП. Попълва се протокола към Гражданската Отговорност на виновния водач, ако той няма такъв то тогава може се попълни и този на пострадалия. Оригиналният (горният) протокол е за пострадалия, а индигираното копие е за виновния водач. Не забравяйте да запишете № , който са Ви дали от 112. <br/>ВЪВ ВСИЧКИ ДРУГИ СЛУЧАИ ПО ЗАКОН ТРЯБВА ДА БЪДЕТЕ ПОСЕТЕНИ НА МЯСТО ОТ ОРГАНИТЕ НА МВР И ДА ВИ БЪДЕ ИЗАДЕН ДОКУМЕНТ ОТ ТЯХ ЗА НАСТЪПИЛОТО СЪБИТИЕ.<br/>Изтеглете тук: УКАЗАНИЯ ЗА ПОПЪЛВАНЕ НА ДВУСТРАНЕН КОНСТАТИВЕН ПРОТОКОЛ ЗА ПТП<br/>\"\n}\n},\n{\n\"_id\": \"58ebc74c32eb01cb4d0de2a8\",\n\"owner\": \"zastrahovki_za_vas\",\n\"image\": \"doctor.png\",\n\"type\": \"sub-page\",\n\"zIndex\": 0,\n\"title\": {\n\"en\": \"Застраховки за ЗДРАВЕТО И ЖИВОТА EN\",\n\"bg\": \"Застраховки за ЗДРАВЕТО И ЖИВОТА \"\n},\n\"html\": {\n\"en\": \"Свързани са най-често с:<br/>- помощ при пътуване в чужбина;<br/>- планинска застраховка;<br/>- злополука на спортисти;<br/>- злополука на учениците и децата в детските и учебни заведения;<br/>- допълнително доброволно здравно осигуряване;<br/>- все по-сигурни и атрактивни са СПЕСТОВНИТЕ (дългосрочни)  застарохвки ЖИВОТ, както и пенсионните полици.\",\n\"bg\": \"Свързани са най-често с:<br/>- помощ при пътуване в чужбина;<br/>- планинска застраховка;<br/>- злополука на спортисти;<br/>- злополука на учениците и децата в детските и учебни заведения;<br/>- допълнително доброволно здравно осигуряване;<br/>- все по-сигурни и атрактивни са СПЕСТОВНИТЕ (дългосрочни)  застарохвки ЖИВОТ, както и пенсионните полици.\"\n}\n},\n{\n\"_id\": \"58ebc74c32eb01cb4d0de2a9\",\n\"owner\": \"zastrahovki_za_biznesa_vi\",\n\"image\": \"wheel.png\",\n\"type\": \"sub-page\",\n\"zIndex\": 0,\n\"title\": {\n\"en\": \"Застраховка за Вашите АКТИВИ EN\",\n\"bg\": \"Застраховка за Вашите АКТИВИ \"\n},\n\"html\": {\n\"en\": \"сгради - административни , производстевени, складове, незавършени сториетелни обекти;<br/>оборудване, машини, електроника;<br/>стоково - материални запаси;<br/>и всички други дълготрайни материални активи на Вашия бизнес.<br/>Наша цел е да Ви предоставим най-качественото застрахователно покритие срещу рисковете , които може да се реализират и да възпрепятстват бизнеса Ви.\",\n\"bg\": \"сгради - административни , производстевени, складове, незавършени сториетелни обекти;<br/>оборудване, машини, електроника;<br/>стоково - материални запаси;<br/>и всички други дълготрайни материални активи на Вашия бизнес.<br/>Наша цел е да Ви предоставим най-качественото застрахователно покритие срещу рисковете , които може да се реализират и да възпрепятстват бизнеса Ви.\"\n}\n},\n{\n\"_id\": \"58ebc74c32eb01cb4d0de2ab\",\n\"owner\": \"zastrahovki_za_biznesa_vi\",\n\"image\": \"factory-line.png\",\n\"type\": \"sub-page\",\n\"zIndex\": 1,\n\"title\": {\n\"en\": \"Застраховка на ОТГОВОРНОСТИ EN\",\n\"bg\": \"Застраховка на ОТГОВОРНОСТИ\"\n},\n\"html\": {\n\"en\": \"Навлизайки на европейските и световни пазари, спазвайки европейските норми и закони  на бизнеса, все повече се налагат  застраховките на отговорности. „ОБЩА ГРАЖДНСКА ОТГОВРОНСТ“, „Отговорност на ПРОДУКТА“ , „Отговорност на РАБОТОДАТЕЛЯ“ , „Отговорност на ХОТЕЛИЕРА и РЕСТОРАНТЬОРА“. Станаха задължителни някои от ПРОФЕСИОНАЛНИТЕ ОТГОВОРНОСТИ – на нотариуси, на адвокати, на строители и архитекти, на лекари и медицински персонал и други. Важна застраховка за бизнеса е ОТГОВРНОСТТА НА ПРЕВОЗВАЧА, покриваща загуба или повреда на товара по време на превоз по шосе със собствени и/или наети превозни средства, съгласно разпоредбите на международната конвенция „CMR“  и действащите закони в България;\",\n\"bg\": \"Навлизайки на европейските и световни пазари, спазвайки европейските норми и закони  на бизнеса, все повече се налагат  застраховките на отговорности. „ОБЩА ГРАЖДНСКА ОТГОВРОНСТ“, „Отговорност на ПРОДУКТА“ , „Отговорност на РАБОТОДАТЕЛЯ“ , „Отговорност на ХОТЕЛИЕРА и РЕСТОРАНТЬОРА“. Станаха задължителни някои от ПРОФЕСИОНАЛНИТЕ ОТГОВОРНОСТИ – на нотариуси, на адвокати, на строители и архитекти, на лекари и медицински персонал и други. Важна застраховка за бизнеса е ОТГОВРНОСТТА НА ПРЕВОЗВАЧА, покриваща загуба или повреда на товара по време на превоз по шосе със собствени и/или наети превозни средства, съгласно разпоредбите на международната конвенция „CMR“  и действащите закони в България;\"\n}\n},\n{\n\"_id\": \"58ebc74c32eb01cb4d0de2ac\",\n\"owner\": \"zastrahovki_za_biznesa_vi\",\n\"image\": \"ship.png\",\n\"type\": \"sub-page\",\n\"zIndex\": 1,\n\"title\": {\n\"en\": \"Застраховка КАРГО на товари по време на превоз\",\n\"bg\": \"Застраховка КАРГО на товари по време на превоз\"\n},\n\"html\": {\n\"en\": \"Застраховката покрива частични или тотални щети на стоки при превоза им от и до всяка точка на света със сухоземен, воден, въздушен и / или комбиниран транспорт.\",\n\"bg\": \"Застраховката покрива частични или тотални щети на стоки при превоза им от и до всяка точка на света със сухоземен, воден, въздушен и / или комбиниран транспорт.\"\n}\n},\n{\n\"_id\": \"58ebc74c32eb01cb4d0de2ad\",\n\"owner\": \"zastrahovki_za_biznesa_vi\",\n\"image\": \"builder.png\",\n\"type\": \"sub-page\",\n\"zIndex\": 1,\n\"title\": {\n\"en\": \"Застраховки на СЛУЖИТЕЛИТЕ\",\n\"bg\": \"Застраховки на СЛУЖИТЕЛИТЕ\"\n},\n\"html\": {\n\"en\": \"ЗАДЪЛЖИТЕЛНА ТРУДОВА ЗЛОПОЛУКА - Работодателят има задължение да сключва застраховка за всички работници и служители, подлежащи на застраховане съгласно ежегодно публикуван от Министерство на Труда и социалната политика Коефициент на трудов травматизъм . Застраховки свързани с командировките на служителите в чужбина „Медицински разноски в чужбина на работници и служители“;  Доброволно ДОПЪЛНИТЕЛНО ЗДРАВНО ОСИГУРЯВАНЕ , ГРУПОВИ застраховки ЖИВОТ или ЗЛОПОЛУКА.\",\n\"bg\": \"ЗАДЪЛЖИТЕЛНА ТРУДОВА ЗЛОПОЛУКА - Работодателят има задължение да сключва застраховка за всички работници и служители, подлежащи на застраховане съгласно ежегодно публикуван от Министерство на Труда и социалната политика Коефициент на трудов травматизъм . Застраховки свързани с командировките на служителите в чужбина „Медицински разноски в чужбина на работници и служители“;  Доброволно ДОПЪЛНИТЕЛНО ЗДРАВНО ОСИГУРЯВАНЕ , ГРУПОВИ застраховки ЖИВОТ или ЗЛОПОЛУКА.\"\n}\n},\n{\n\"_id\": \"58ebc74c32eb01cb4d0de2ae\",\n\"owner\": \"zastrahovki_za_biznesa_vi\",\n\"image\": \"handshake.png\",\n\"type\": \"sub-page\",\n\"zIndex\": 1,\n\"title\": {\n\"en\": \"ЕКСПОРТНО ЗАСТРАХОВАНЕ\",\n\"bg\": \"ЕКСПОРТНО ЗАСТРАХОВАНЕ\"\n},\n\"html\": {\n\"en\": \"При сключване на договори за доставка на стоки и услуги с чужди партньори се застраховат вземанията при настъпване на риск - неплатежоспособност или забавяне на плащането.\",\n\"bg\": \"При сключване на договори за доставка на стоки и услуги с чужди партньори се застраховат вземанията при настъпване на риск - неплатежоспособност или забавяне на плащането.\"\n}\n},\n{\n\"_id\": \"58ebc74c32eb01cb4d0de2b0\",\n\"owner\": \"zastrahovki_za_biznesa_vi\",\n\"image\": \"fields.png\",\n\"type\": \"sub-page\",\n\"zIndex\": 1,\n\"title\": {\n\"en\": \"ЗЕМЕДЕЛСКИ КУЛТУРИ и ЖИВОТНИ\",\n\"bg\": \"ЗЕМЕДЕЛСКИ КУЛТУРИ и ЖИВОТНИ\"\n},\n\"html\": {\n\"en\": \"Застрахова се реколтата от земеделски култури, трайни насаждения в плододаваща възраст (лозя и овошки), зеленчуци, медицински и етеричномаслени култури. Застраховат се също така животни, птици, риба и зарибителен материал, пчелни семейства при смърт или клане (унищожаване по необходимост).\",\n\"bg\": \"Застрахова се реколтата от земеделски култури, трайни насаждения в плододаваща възраст (лозя и овошки), зеленчуци, медицински и етеричномаслени култури. Застраховат се също така животни, птици, риба и зарибителен материал, пчелни семейства при смърт или клане (унищожаване по необходимост).\"\n}\n},\n{\n\"_id\": \"58ebc74c32eb01cb4d0de2b1\",\n\"owner\": \"urejdane_na_zastrahovatelni_pretencii\",\n\"image\": \"petition.png\",\n\"type\": \"sub-page\",\n\"zIndex\": 1,\n\"title\": {\n\"en\": \"Сътрудничим на всеки пострадал от застрахователни събития в България и чужбина, като осъществяваме следните дейности:\",\n\"bg\": \"Сътрудничим на всеки пострадал от застрахователни събития в България и чужбина, като осъществяваме следните дейности:\"\n},\n\"html\": {\n\"en\": \"Анализираме и предварително оформяме информацията и документите относно настъпилото събитие, като конкретизираме покритите рискове;<br/>Окомплектоваме всички необходими документи и предявяваме Претенцията пред Застрахователя;<br/>Съдействаме при извършване на огледи;<br/>Осигуряваме при необходимост експерт-инженери;<br/>Посредничим при кореспонденцията със Застрахователя до крайното уреждане на претенцията.<br/>Взаимоотношенията ни с лица, които не са наши клиенти се оформят с договор.\",\n\"bg\": \"Анализираме и предварително оформяме информацията и документите относно настъпилото събитие, като конкретизираме покритите рискове;<br/>Окомплектоваме всички необходими документи и предявяваме Претенцията пред Застрахователя;<br/>Съдействаме при извършване на огледи;<br/>Осигуряваме при необходимост експерт-инженери;<br/>Посредничим при кореспонденцията със Застрахователя до крайното уреждане на претенцията.<br/>Взаимоотношенията ни с лица, които не са наши клиенти се оформят с договор.\"\n}\n},\n{\n\"_id\": \"58ebc74c32eb01cb4d0de2b2\",\n\"owner\": \"tehnichesko_obslujvane_na_avtomobili\",\n\"image\": \"car.png\",\n\"type\": \"sub-page\",\n\"zIndex\": 1,\n\"title\": {\n\"en\": \"Услугите, които предлагаме са\",\n\"bg\": \"Услугите, които предлагаме са\"\n},\n\"html\": {\n\"en\": \"Периодично Техническо обслужване – транспортиране на автомобила до избран от Вас сервиз за периодично обслужване:  смяна на масло, филтри и други сервизни дейности по техническата поддръжка на колата, както връщането й на посочен от Вас адрес;<br/>Смяна на гуми – транспортиране на автомобила до сервиза, извършващ смяната и неговото връщане на посочено от Вас място;<br/>Извършване на периодичен Годишен Технически Преглед (ГТП);<br/>Осигуряване на сервизно обслужване и при възникване на други непредвидени ремонти на автомобилите - доставяне на резервни части и консумативи за съответната марка автомобил на избаран от Вас неоторизиран сервиз по предварително изготвена оферта;<br/>Съдействие при възникване на техническа повреда на автомобила – консултация, осигуряване на пътна помощ за репатриране до сервиз (доверен или оторизиран).<br/>Предоставената от нас услуга се оформя с договор.\",\n\"bg\": \"Периодично Техническо обслужване – транспортиране на автомобила до избран от Вас сервиз за периодично обслужване:  смяна на масло, филтри и други сервизни дейности по техническата поддръжка на колата, както връщането й на посочен от Вас адрес;<br/>Смяна на гуми – транспортиране на автомобила до сервиза, извършващ смяната и неговото връщане на посочено от Вас място;<br/>Извършване на периодичен Годишен Технически Преглед (ГТП);<br/>Осигуряване на сервизно обслужване и при възникване на други непредвидени ремонти на автомобилите - доставяне на резервни части и консумативи за съответната марка автомобил на избаран от Вас неоторизиран сервиз по предварително изготвена оферта;<br/>Съдействие при възникване на техническа повреда на автомобила – консултация, осигуряване на пътна помощ за репатриране до сервиз (доверен или оторизиран).<br/>Предоставената от нас услуга се оформя с договор.\"\n}\n},\n{\n\"_id\": \"58ebc74c32eb01cb4d0de2b3\",\n\"owner\": \"konsultacii\",\n\"image\": \"computer.png\",\n\"type\": \"sub-page\",\n\"zIndex\": 1,\n\"title\": {\n\"en\": \"Предлагаме на нашите клиенти следните дейности\",\n\"bg\": \"Предлагаме на нашите клиенти следните дейности\"\n},\n\"html\": {\n\"en\": \"Съдействие при избор и закупуване на автомобил – предоставянe на промоционални оферти от вносителите на автомобили в България, доставка на предварително одобрен автомобил от Германия, Австрия и Италия ;<br/>Предоставяне на лизингови схеми  - финансов и оперативен лизинг;<br/>Анализ на събраните оферти относно технически параметри, разход на гориво и други предимдства и недостатъци на подбраните от нас автомобили.\",\n\"bg\": \"Съдействие при избор и закупуване на автомобил – предоставянe на промоционални оферти от вносителите на автомобили в България, доставка на предварително одобрен автомобил от Германия, Австрия и Италия ;<br/>Предоставяне на лизингови схеми  - финансов и оперативен лизинг;<br/>Анализ на събраните оферти относно технически параметри, разход на гориво и други предимдства и недостатъци на подбраните от нас автомобили.\"\n}\n},\n{\n\"_id\": \"58ebc74c32eb01cb4d0de2b3\",\n\"owner\": \"novini\",\n\"image\": \"computer.png\",\n\"type\": \"sub-page\",\n\"zIndex\": 1,\n\"title\": {\n\"en\": \"Предлагаме на нашите клиенти следните дейности\",\n\"bg\": \"Предлагаме на нашите клиенти следните дейности\"\n},\n\"html\": {\n\"en\": \"Съдействие при избор и закупуване на автомобил – предоставянe на промоционални оферти от вносителите на автомобили в България, доставка на предварително одобрен автомобил от Германия, Австрия и Италия ;<br/>Предоставяне на лизингови схеми  - финансов и оперативен лизинг;<br/>Анализ на събраните оферти относно технически параметри, разход на гориво и други предимдства и недостатъци на подбраните от нас автомобили.\",\n\"bg\": \"Съдействие при избор и закупуване на автомобил – предоставянe на промоционални оферти от вносителите на автомобили в България, доставка на предварително одобрен автомобил от Германия, Австрия и Италия ;<br/>Предоставяне на лизингови схеми  - финансов и оперативен лизинг;<br/>Анализ на събраните оферти относно технически параметри, разход на гориво и други предимдства и недостатъци на подбраните от нас автомобили.\"\n}\n},\n{\n\"_id\": \"58ebc74c32eb01cb4d0de2b3\",\n\"owner\": \"novini\",\n\"image\": \"computer.png\",\n\"type\": \"sub-page\",\n\"zIndex\": 1,\n\"title\": {\n\"en\": \"Предлагаме на нашите клиенти следните дейности\",\n\"bg\": \"Предлагаме на нашите клиенти следните дейности\"\n},\n\"html\": {\n\"en\": \"Съдействие при избор и закупуване на автомобил – предоставянe на промоционални оферти от вносителите на автомобили в България, доставка на предварително одобрен автомобил от Германия, Австрия и Италия ;<br/>Предоставяне на лизингови схеми  - финансов и оперативен лизинг;<br/>Анализ на събраните оферти относно технически параметри, разход на гориво и други предимдства и недостатъци на подбраните от нас автомобили.\",\n\"bg\": \"Съдействие при избор и закупуване на автомобил – предоставянe на промоционални оферти от вносителите на автомобили в България, доставка на предварително одобрен автомобил от Германия, Австрия и Италия ;<br/>Предоставяне на лизингови схеми  - финансов и оперативен лизинг;<br/>Анализ на събраните оферти относно технически параметри, разход на гориво и други предимдства и недостатъци на подбраните от нас автомобили.\"\n}\n}\n]\n}\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/cache/pages.ts","import { Component, Input, Output, OnInit, EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { Dictionary } from '../../dictionary/dictionary.service';\nimport { FetcherService } from '../../services/fetcher.service';\nimport { EventEmiterService } from '../../services/event.emiter.service';\n\nimport { Config } from '../../config';\n\n// import { DateComponent } from '../date/date.component';\n\n@Component({\n    selector: 'contacts',\n    styles: [require('./contacts.component.css')],\n    template: require('./contacts.component.html')\n})\n\nexport class ContactsComponent {\n\n    private mapCoordinates = Config.mapCoordinates;\n    private starsCount: number = 4.6;\n\n    constructor(\n        private dictionary: Dictionary,\n        private fetcherService: FetcherService,\n        private eventEmiterService: EventEmiterService\n    ) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/components/contacts/contacts.component.ts","import { Component, Input, Output } from '@angular/core';\nimport { Dictionary } from '../../dictionary/dictionary.service';\nimport { PagesService } from '../../services/pages.service';\nimport { PagesDataService } from '../../services/pages.data.service';\nimport { EventEmiterService } from '../../services/event.emiter.service';\n\n@Component({\n    selector: 'details',\n    styles: [require('./details.component.css')],\n    template: require('./details.component.html')\n})\n\nexport class DetailsComponent {\n    // options of the inner carousel\n    // todo: Fill it with the real images and items\n    public slides: Array<Object>;\n\n    private pages =  Array<Object>();\n\n    private pagesData = Array<Object>();\n\n    constructor(\n        private dictionary: Dictionary,\n        private pagesService: PagesService,\n        private pagesDataService: PagesDataService,\n        private eventEmiterService: EventEmiterService\n    ) {\n      this.pages = pagesService.getPages();\n      this.pagesData = pagesDataService.getPagesData();\n      // on categories update we update the local array\n      this.eventEmiterService.dataFetched.subscribe(data => this.onFetchedData(data));\n    };\n\n    private onFetchedData(data) {\n      this.pages = data.products;\n      this.pagesData = data.categories;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/components/details/details.component.ts","import { Component, Input, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Dictionary } from '../../dictionary/dictionary.service';\nimport { PagesService } from '../../services/pages.service';\nimport { PagesDataService } from '../../services/pages.data.service';\nimport { EventEmiterService } from '../../services/event.emiter.service';\n\n@Component({\n    selector: 'home',\n    styles: [require('./home.component.css')],\n    template: require('./home.component.html')\n})\n\nexport class HomeComponent {\n    private pages:Array<Object> = [];\n\n    private pagesData:Array<Object> = [];\n\n    private icons:Array<Object> = [\n        {\n            link: 'zastrahovki_za_vas',\n            src: 'zastrahovka_za_vas.png'\n        },\n        {\n            link: 'zastrahovki_za_biznesa_vi',\n            src: 'zastrahovki_biznes.png'\n        },\n        {\n            link: 'urejdane_na_zastrahovatelni_pretencii',\n            src: 'zastrahovatelni_pretencii.png'\n        },\n        {\n            link: 'konsultacii',\n            src: 'consulting.png'\n        },\n        {\n            link: 'tehnichesko_obslujvane_na_avtomobili',\n            src: 'technical_support.png'\n        }\n    ];\n\n    private pageInfo:string = '';\n\n    constructor(\n        private router: Router,\n        private dictionary: Dictionary,\n        private pagesService: PagesService,\n        private pagesDataService: PagesDataService,\n        private eventEmiterService: EventEmiterService\n    ) {\n        this.pages = pagesService.getPages();\n        for(let pagesCounter = 0; pagesCounter < this.pages.length; pagesCounter++) {\n            if(this.pages[pagesCounter]['owner'] == 'home') {\n                this.pageInfo = this.pages[pagesCounter]['html'][dictionary['language']];\n            }\n        }\n    };\n\n    private buildSrc(icon) {\n        return './src/img/' + icon.src\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/components/home/home.component.ts","import { Component, Input, Output } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Dictionary } from '../../dictionary/dictionary.service';\nimport { PagesService } from '../../services/pages.service';\nimport { PagesDataService } from '../../services/pages.data.service';\nimport { EventEmiterService } from '../../services/event.emiter.service';\n\n@Component({\n    selector: 'page',\n    styles: [require('./page.component.css')],\n    template: require('./page.component.html')\n})\n\nexport class PageComponent {\n    private pageData: Object = {\n        page: {},\n        subPages: []\n    };\n    private pages: Array<Object>;\n    private pagesData: Array<Object>;\n\n    private pageType: String = '';\n    private insuranseLink: String = '';\n\n    constructor(\n        private router: Router,\n        private dictionary: Dictionary,\n        private pagesService: PagesService,\n        private routeParams: ActivatedRoute,\n        private pagesDataService: PagesDataService,\n        private eventEmiterService: EventEmiterService\n    ) {\n        this.routeParams.params.subscribe(params => this.setParams(params));\n    };\n\n    private setParams(params) {\n        if(params['insurance']) {\n            this.insuranseLink = params.insurance.toLowerCase();\n            this.pages = this.pagesService.getPages();\n            this.pagesData = this.pagesDataService.getPagesData();\n            this.getPageData();\n            // on categories update we update the local array\n            this.eventEmiterService.dataFetched.subscribe(data => this.onFetchedData(data));\n        }\n    }\n\n    private onFetchedData(data) {\n        this.pages = data.products;\n        this.pagesData = data.categories;\n        this.getPageData();\n    }\n\n    private getPageData() {\n        // we empty the array with sub pages\n        this.pageData['subPages'].length = 0;\n        for(let pagesCounter = 0; pagesCounter < this.pagesData.length; pagesCounter++) {\n            if(this.insuranseLink == this.pagesData[pagesCounter]['owner']) {\n                if(this.pagesData[pagesCounter]['type'] == 'page') {\n                    this.pageData['page'] = this.pagesData[pagesCounter]\n                }\n                if(this.pagesData[pagesCounter]['type'] == 'sub-page') {\n                    this.pageData['subPages'].push(this.pagesData[pagesCounter])\n                    // if this.pagesData[pagesCounter].html[dictionary.language].length > 900\n                    // добави бутон който да отваря в нова страница като отделна\n                }\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/components/page/page.component.ts","import { Component, Input, Output, OnInit, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\n\n//import { DateComponent } from '../date/date.component';\n\n@Component({\n    selector: 'page-not-found',\n    styles: [require('./page_not_found.component.css')],\n    template: require('./page_not_found.component.html')\n})\n\nexport class PageNotFoundComponent implements OnInit {\n    @Input()\n    postOptions: Object;\n    /**\n     * @constructor We init the view with the router\n     */\n    constructor(private router: Router) {}\n    /**\n     * @ngOnInit on init\n     */\n    public ngOnInit() {\n        this.checkForSimilarRouter();\n    }\n    public checkForSimilarRouter() {\n        var path = '';\n        var navigateTo = '';\n        var currentUrl = this.router.url.toLowerCase().split('/')[1];\n        // we split it into many 2 chars strings\n        var partsOfUrl = currentUrl.match(/.{1,2}/g);\n        var partsEquals = new Array(partsOfUrl.length);\n        // we check for all routes we predeclare\n        for(var routeCounter = 0; routeCounter < this.router.config.length; routeCounter++) {\n            partsEquals.fill(undefined);\n            path = this.router.config[routeCounter].path;\n            // we check for each part of the url we typed is part of it\n            for(var chunksCounter = 0; chunksCounter < partsEquals.length; chunksCounter++) {\n                // if the part of the url is here we make it true\n                if(path.indexOf(partsOfUrl[chunksCounter]) !== -1) {\n                    partsEquals[chunksCounter] = true;\n                }\n            }\n            // check did we find the path that we must go to\n            partsEquals.sort();\n            if((partsEquals.indexOf(undefined) > partsEquals.length * 1 / 2) || (partsEquals.indexOf(undefined) == -1)) {\n                let url = '/';\n                if(this.router.url.split('/')[2] !== undefined) {\n                    if(path.split(':')[1] !== undefined) {\n                        url += path.split(':')[0];\n                        url += this.router.url.split('/')[2];\n                    }\n                } else {\n                    url += path;\n                }\n                this.router.navigate([url]);\n                break;\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/components/page_not_found/page_not_found.component.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class BulgarianDictionary {\n    public language = {\n        \"homePage\": \"Начало\",\n        \"services\": \"Видове услуги\",\n        \"contactPage\": \"Контакти\",\n        \"companyAddress\": \"1527 София , ул. Стара планина 37\",\n        \"contactPhone1\": \"+359/2/9433799\",\n        \"contactPhone2\": \"+359/2/9446207\",\n        \"contactPhone3\": \"+359888234454\",\n        \"contactPhone4\": \"+359888902401\",\n        \"contactPhone5\": \"+359888802856\",\n        \"contactPhone3viber\": \"2B359888234454\",\n        \"contactPhone4viber\": \"2B359888902401\",\n        \"contactPhone5viber\": \"2B359888802856\",\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/dictionary/bg.dictionary.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class EnglishDictionary {\n    public language = {\n        \"homePage\": \"Home\",\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/dictionary/en.dictionary.ts","import { Injectable, EventEmitter } from '@angular/core';\n\nimport { Config } from '../config';\n\n@Injectable()\n\n/**\n * @DriverService used on all connections to the back-end for the drivers\n */\nexport class ErrorHandlerService {\n\n    public errorEmitter: EventEmitter<any>;\n\n    constructor() {\n        this.errorEmitter = new EventEmitter();\n    }\n\n    public handleError(err) {\n        \n    }\n\n    public emitError(data) {\n        this.errorEmitter.emit(data);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/services/error.handler.service.ts","import { EventEmitter } from '@angular/core';\r\nvar StorageObserverHelper = (function () {\r\n    function StorageObserverHelper() {\r\n    }\r\n    StorageObserverHelper.observe = function (sType, sKey) {\r\n        var oKey = this.genObserverKey(sType, sKey);\r\n        if (oKey in this.observers)\r\n            return this.observers[oKey];\r\n        return this.observers[oKey] = new EventEmitter();\r\n    };\r\n    StorageObserverHelper.emit = function (sType, sKey, value) {\r\n        var oKey = this.genObserverKey(sType, sKey);\r\n        if (oKey in this.observers)\r\n            this.observers[oKey].emit(value);\r\n    };\r\n    StorageObserverHelper.genObserverKey = function (sType, sKey) {\r\n        return sType + '|' + sKey;\r\n    };\r\n    return StorageObserverHelper;\r\n}());\r\nexport { StorageObserverHelper };\r\nStorageObserverHelper.observers = {};\r\n//# sourceMappingURL=storageObserver.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-webstorage/dist/helpers/storageObserver.js\n// module id = 187\n// module chunks = 0","import { STORAGE } from '../enums/storage';\r\nimport { StorageObserverHelper } from './storageObserver';\r\nimport { KeyStorageHelper } from './keyStorage';\r\nimport { MockStorageHelper } from './mockStorage';\r\nimport { STORAGE_NAMES } from '../constants/lib';\r\nvar CACHED = (_a = {}, _a[STORAGE.local] = {}, _a[STORAGE.session] = {}, _a);\r\nvar STORAGEAVAILABILITY = (_b = {}, _b[STORAGE.local] = null, _b[STORAGE.session] = null, _b);\r\nvar WebStorageHelper = (function () {\r\n    function WebStorageHelper() {\r\n    }\r\n    WebStorageHelper.store = function (sType, sKey, value) {\r\n        this.getStorage(sType).setItem(sKey, JSON.stringify(value));\r\n        CACHED[sType][sKey] = value;\r\n        StorageObserverHelper.emit(sType, sKey, value);\r\n    };\r\n    WebStorageHelper.retrieve = function (sType, sKey) {\r\n        if (CACHED[sType][sKey])\r\n            return CACHED[sType][sKey];\r\n        return CACHED[sType][sKey] = WebStorageHelper.retrieveFromStorage(sType, sKey);\r\n    };\r\n    WebStorageHelper.retrieveFromStorage = function (sType, sKey) {\r\n        var data = null;\r\n        try {\r\n            data = JSON.parse(this.getStorage(sType).getItem(sKey));\r\n        }\r\n        catch (err) {\r\n            console.warn(\"invalid value for \" + sKey);\r\n        }\r\n        return data;\r\n    };\r\n    WebStorageHelper.refresh = function (sType, sKey) {\r\n        if (!KeyStorageHelper.isManagedKey(sKey))\r\n            return;\r\n        var value = WebStorageHelper.retrieveFromStorage(sType, sKey);\r\n        if (value === null) {\r\n            delete CACHED[sType][sKey];\r\n            StorageObserverHelper.emit(sType, sKey, null);\r\n        }\r\n        else if (value !== CACHED[sType][sKey]) {\r\n            CACHED[sType][sKey] = value;\r\n            StorageObserverHelper.emit(sType, sKey, value);\r\n        }\r\n    };\r\n    WebStorageHelper.clearAll = function (sType) {\r\n        var storage = this.getStorage(sType);\r\n        KeyStorageHelper.retrieveKeysFromStorage(storage)\r\n            .forEach(function (sKey) {\r\n            storage.removeItem(sKey);\r\n            delete CACHED[sType][sKey];\r\n            StorageObserverHelper.emit(sType, sKey, null);\r\n        });\r\n    };\r\n    WebStorageHelper.clear = function (sType, sKey) {\r\n        this.getStorage(sType).removeItem(sKey);\r\n        delete CACHED[sType][sKey];\r\n        StorageObserverHelper.emit(sType, sKey, null);\r\n    };\r\n    WebStorageHelper.getStorage = function (sType) {\r\n        if (this.isStorageAvailable(sType))\r\n            return this.getWStorage(sType);\r\n        else\r\n            return MockStorageHelper.getStorage(sType);\r\n    };\r\n    WebStorageHelper.getWStorage = function (sType) {\r\n        var storage;\r\n        switch (sType) {\r\n            case STORAGE.local:\r\n                storage = localStorage;\r\n                break;\r\n            case STORAGE.session:\r\n                storage = sessionStorage;\r\n                break;\r\n            default:\r\n                throw Error('invalid storage type');\r\n        }\r\n        return storage;\r\n    };\r\n    WebStorageHelper.isStorageAvailable = function (sType) {\r\n        if (typeof STORAGEAVAILABILITY[sType] === 'boolean')\r\n            return STORAGEAVAILABILITY[sType];\r\n        var isAvailable = true, storage;\r\n        try {\r\n            storage = this.getWStorage(sType);\r\n            if (typeof storage === 'object') {\r\n                storage.setItem('test-storage', 'foobar');\r\n                storage.removeItem('test-storage');\r\n            }\r\n            else\r\n                isAvailable = false;\r\n        }\r\n        catch (e) {\r\n            isAvailable = false;\r\n        }\r\n        if (!isAvailable)\r\n            console.warn(STORAGE_NAMES[sType] + \" storage unavailable, Ng2Webstorage will use a fallback strategy instead\");\r\n        return STORAGEAVAILABILITY[sType] = isAvailable;\r\n    };\r\n    return WebStorageHelper;\r\n}());\r\nexport { WebStorageHelper };\r\nvar _a, _b;\r\n//# sourceMappingURL=webStorage.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-webstorage/dist/helpers/webStorage.js\n// module id = 188\n// module chunks = 0","import { LIB_KEY, LIB_KEY_SEPARATOR } from '../constants/lib';\r\nvar WebstorageConfig = (function () {\r\n    function WebstorageConfig(config) {\r\n        this.prefix = LIB_KEY;\r\n        this.separator = LIB_KEY_SEPARATOR;\r\n        if (config && config.prefix !== undefined) {\r\n            this.prefix = config.prefix;\r\n        }\r\n        if (config && config.separator !== undefined) {\r\n            this.separator = config.separator;\r\n        }\r\n    }\r\n    return WebstorageConfig;\r\n}());\r\nexport { WebstorageConfig };\r\n//# sourceMappingURL=config.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-webstorage/dist/interfaces/config.js\n// module id = 189\n// module chunks = 0","// Angular 2 Modules\nimport 'hammerjs';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '@angular/material';\nimport { HttpModule } from '@angular/http';\nimport { Ng2Webstorage } from 'ng2-webstorage';\nimport { AgmCoreModule } from '@agm/core';\nimport { RatingModule } from \"ngx-rating\";\nimport { BrowserModule }  from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule, Validators }   from '@angular/forms';\n\n// Router\nimport { routing, appRoutingProviders } from './app.routing';\n\n// Language \nimport { Dictionary } from './dictionary/dictionary.service';\nimport { EnglishDictionary } from './dictionary/en.dictionary';\nimport { BulgarianDictionary } from './dictionary/bg.dictionary';\n\n\n// Basic Components\nimport { PriceComponent } from './basic_components/price/price.component';\nimport { ImageComponent } from './basic_components/image/image.component';\nimport { HeaderComponent } from './basic_components/header/header.component';\nimport { NotificationComponent } from './basic_components/notification/notification.component';\n\n// Components\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { PageComponent } from './components/page/page.component';\nimport { SearchComponent } from './components/search/search.component';\nimport { DetailsComponent } from './components/details/details.component';\nimport { ContactsComponent } from './components/contacts/contacts.component';\nimport { PageNotFoundComponent } from './components/page_not_found/page_not_found.component';\n\n// Config\nimport { Config } from './config';\n\n// Cache\nimport { Cache } from './cache/cache';\nimport { Pages } from './cache/pages';\n\n// Services\nimport { PagesService } from './services/pages.service';\nimport { FetcherService } from './services/fetcher.service';\nimport { PagesDataService } from './services/pages.data.service';\nimport { EventEmiterService } from './services/event.emiter.service';\nimport { ErrorHandlerService } from './services/error.handler.service';\n\n@NgModule({\n    // Modules & Libs\n    imports: [\n        routing,\n        HttpModule,\n        FormsModule,\n        RatingModule,\n        BrowserModule,\n        Ng2Webstorage,\n        MaterialModule,\n        ReactiveFormsModule,\n        BrowserAnimationsModule,\n        AgmCoreModule.forRoot({\n          apiKey: 'AIzaSyDBbPzFEwNVTHNoZ-bz7YYqO1eMRPqTyUA'\n        })\n    ],\n    // Components & Views\n    declarations: [\n        // standard components\n        AppComponent,\n        ImageComponent,\n        PriceComponent,\n        HeaderComponent,\n        NotificationComponent,\n        // SideMenuComponent,\n        // views\n        HomeComponent,\n        PageComponent,\n        SearchComponent,\n        DetailsComponent,\n        ContactsComponent,\n        PageNotFoundComponent,\n    ],\n    // Bootstraping\n    bootstrap: [ \n        AppComponent \n    ],\n    // Services\n    providers: [\n        // config of the app\n        Config,\n        // router of the app\n        appRoutingProviders,\n        // languages\n        Dictionary,\n        EnglishDictionary,\n        BulgarianDictionary,\n        // cache\n        Cache,\n        Pages,\n        // services of the app\n        PagesService,\n        FetcherService,\n        PagesDataService,\n        EventEmiterService,\n        ErrorHandlerService\n    ]\n})\n\nexport class AppModule { }\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/app.module.ts","import { NgModule } from '@angular/core';\nimport { AgmMap } from './directives/map';\nimport { AgmCircle } from './directives/circle';\nimport { AgmInfoWindow } from './directives/info-window';\nimport { AgmMarker } from './directives/marker';\nimport { AgmPolygon } from './directives/polygon';\nimport { AgmPolyline } from './directives/polyline';\nimport { AgmPolylinePoint } from './directives/polyline-point';\nimport { AgmKmlLayer } from './directives/kml-layer';\nimport { AgmDataLayer } from './directives/data-layer';\nimport { LazyMapsAPILoader } from './services/maps-api-loader/lazy-maps-api-loader';\nimport { LAZY_MAPS_API_CONFIG } from './services/maps-api-loader/lazy-maps-api-loader';\nimport { MapsAPILoader } from './services/maps-api-loader/maps-api-loader';\nimport { BROWSER_GLOBALS_PROVIDERS } from './utils/browser-globals';\n/**\n * @internal\n */\nexport function coreDirectives() {\n    return [\n        AgmMap, AgmMarker, AgmInfoWindow, AgmCircle,\n        AgmPolygon, AgmPolyline, AgmPolylinePoint, AgmKmlLayer,\n        AgmDataLayer\n    ];\n}\n;\n/**\n * The angular-google-maps core module. Contains all Directives/Services/Pipes\n * of the core module. Please use `AgmCoreModule.forRoot()` in your app module.\n */\nvar AgmCoreModule = (function () {\n    function AgmCoreModule() {\n    }\n    /**\n     * Please use this method when you register the module at the root level.\n     */\n    AgmCoreModule.forRoot = function (lazyMapsAPILoaderConfig) {\n        return {\n            ngModule: AgmCoreModule,\n            providers: BROWSER_GLOBALS_PROVIDERS.concat([\n                { provide: MapsAPILoader, useClass: LazyMapsAPILoader },\n                { provide: LAZY_MAPS_API_CONFIG, useValue: lazyMapsAPILoaderConfig }\n            ]),\n        };\n    };\n    return AgmCoreModule;\n}());\nexport { AgmCoreModule };\nAgmCoreModule.decorators = [\n    { type: NgModule, args: [{ declarations: coreDirectives(), exports: coreDirectives() },] },\n];\n/** @nocollapse */\nAgmCoreModule.ctorParameters = function () { return []; };\n//# sourceMappingURL=core.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@agm/core/core.module.js\n// module id = 228\n// module chunks = 0","// main modules\nexport * from './directives';\nexport * from './services';\n// core module\n// we explicitly export the module here to prevent this Ionic 2 bug:\n// http://stevemichelotti.com/integrate-angular-2-google-maps-into-ionic-2/\nexport { AgmCoreModule } from './core.module';\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@agm/core/index.js\n// module id = 230\n// module chunks = 0","/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nvar NoOpMapsAPILoader = (function () {\n    function NoOpMapsAPILoader() {\n    }\n    NoOpMapsAPILoader.prototype.load = function () {\n        if (!window.google || !window.google.maps) {\n            throw new Error('Google Maps API not loaded on page. Make sure window.google.maps is available!');\n        }\n        return Promise.resolve();\n    };\n    ;\n    return NoOpMapsAPILoader;\n}());\nexport { NoOpMapsAPILoader };\n//# sourceMappingURL=noop-maps-api-loader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@agm/core/services/maps-api-loader/noop-maps-api-loader.js\n// module id = 232\n// module chunks = 0","import * as tslib_1 from \"tslib\";\n/**\n * @license Angular v4.2.3\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { AUTO_STYLE, NoopAnimationPlayer, sequence, style, ɵAnimationGroupPlayer, ɵPRE_STYLE } from '@angular/animations';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction optimizeGroupPlayer(players) {\n    switch (players.length) {\n        case 0:\n            return new NoopAnimationPlayer();\n        case 1:\n            return players[0];\n        default:\n            return new ɵAnimationGroupPlayer(players);\n    }\n}\nfunction normalizeKeyframes(driver, normalizer, element, keyframes, preStyles, postStyles) {\n    if (preStyles === void 0) { preStyles = {}; }\n    if (postStyles === void 0) { postStyles = {}; }\n    var errors = [];\n    var normalizedKeyframes = [];\n    var previousOffset = -1;\n    var previousKeyframe = null;\n    keyframes.forEach(function (kf) {\n        var offset = kf['offset'];\n        var isSameOffset = offset == previousOffset;\n        var normalizedKeyframe = (isSameOffset && previousKeyframe) || {};\n        Object.keys(kf).forEach(function (prop) {\n            var normalizedProp = prop;\n            var normalizedValue = kf[prop];\n            if (normalizedValue == ɵPRE_STYLE) {\n                normalizedValue = preStyles[prop];\n            }\n            else if (normalizedValue == AUTO_STYLE) {\n                normalizedValue = postStyles[prop];\n            }\n            else if (prop != 'offset') {\n                normalizedProp = normalizer.normalizePropertyName(prop, errors);\n                normalizedValue = normalizer.normalizeStyleValue(prop, normalizedProp, kf[prop], errors);\n            }\n            normalizedKeyframe[normalizedProp] = normalizedValue;\n        });\n        if (!isSameOffset) {\n            normalizedKeyframes.push(normalizedKeyframe);\n        }\n        previousKeyframe = normalizedKeyframe;\n        previousOffset = offset;\n    });\n    if (errors.length) {\n        var LINE_START = '\\n - ';\n        throw new Error(\"Unable to animate due to the following errors:\" + LINE_START + errors.join(LINE_START));\n    }\n    return normalizedKeyframes;\n}\nfunction listenOnPlayer(player, eventName, event, callback) {\n    switch (eventName) {\n        case 'start':\n            player.onStart(function () { return callback(event && copyAnimationEvent(event, 'start', player.totalTime)); });\n            break;\n        case 'done':\n            player.onDone(function () { return callback(event && copyAnimationEvent(event, 'done', player.totalTime)); });\n            break;\n        case 'destroy':\n            player.onDestroy(function () { return callback(event && copyAnimationEvent(event, 'destroy', player.totalTime)); });\n            break;\n    }\n}\nfunction copyAnimationEvent(e, phaseName, totalTime) {\n    var event = makeAnimationEvent(e.element, e.triggerName, e.fromState, e.toState, phaseName || e.phaseName, totalTime == undefined ? e.totalTime : totalTime);\n    var data = e['_data'];\n    if (data != null) {\n        event['_data'] = data;\n    }\n    return event;\n}\nfunction makeAnimationEvent(element, triggerName, fromState, toState, phaseName, totalTime) {\n    if (phaseName === void 0) { phaseName = ''; }\n    if (totalTime === void 0) { totalTime = 0; }\n    return { element: element, triggerName: triggerName, fromState: fromState, toState: toState, phaseName: phaseName, totalTime: totalTime };\n}\nfunction getOrSetAsInMap(map, key, defaultValue) {\n    var value;\n    if (map instanceof Map) {\n        value = map.get(key);\n        if (!value) {\n            map.set(key, value = defaultValue);\n        }\n    }\n    else {\n        value = map[key];\n        if (!value) {\n            value = map[key] = defaultValue;\n        }\n    }\n    return value;\n}\nfunction parseTimelineCommand(command) {\n    var separatorPos = command.indexOf(':');\n    var id = command.substring(1, separatorPos);\n    var action = command.substr(separatorPos + 1);\n    return [id, action];\n}\nvar _contains = function (elm1, elm2) { return false; };\nvar _matches = function (element, selector) { return false; };\nvar _query = function (element, selector, multi) {\n    return [];\n};\nif (typeof Element != 'undefined') {\n    // this is well supported in all browsers\n    _contains = function (elm1, elm2) { return elm1.contains(elm2); };\n    if (Element.prototype.matches) {\n        _matches = function (element, selector) { return element.matches(selector); };\n    }\n    else {\n        var proto = Element.prototype;\n        var fn_1 = proto.matchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector ||\n            proto.oMatchesSelector || proto.webkitMatchesSelector;\n        if (fn_1) {\n            _matches = function (element, selector) { return fn_1.apply(element, [selector]); };\n        }\n    }\n    _query = function (element, selector, multi) {\n        var results = [];\n        if (multi) {\n            results.push.apply(results, element.querySelectorAll(selector));\n        }\n        else {\n            var elm = element.querySelector(selector);\n            if (elm) {\n                results.push(elm);\n            }\n        }\n        return results;\n    };\n}\nvar matchesElement = _matches;\nvar containsElement = _contains;\nvar invokeQuery = _query;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @experimental\n */\nvar NoopAnimationDriver = (function () {\n    function NoopAnimationDriver() {\n    }\n    NoopAnimationDriver.prototype.matchesElement = function (element, selector) {\n        return matchesElement(element, selector);\n    };\n    NoopAnimationDriver.prototype.containsElement = function (elm1, elm2) { return containsElement(elm1, elm2); };\n    NoopAnimationDriver.prototype.query = function (element, selector, multi) {\n        return invokeQuery(element, selector, multi);\n    };\n    NoopAnimationDriver.prototype.computeStyle = function (element, prop, defaultValue) {\n        return defaultValue || '';\n    };\n    NoopAnimationDriver.prototype.animate = function (element, keyframes, duration, delay, easing, previousPlayers) {\n        if (previousPlayers === void 0) { previousPlayers = []; }\n        return new NoopAnimationPlayer();\n    };\n    return NoopAnimationDriver;\n}());\n/**\n * @experimental\n */\nvar AnimationDriver = (function () {\n    function AnimationDriver() {\n    }\n    return AnimationDriver;\n}());\nAnimationDriver.NOOP = new NoopAnimationDriver();\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ONE_SECOND = 1000;\nvar ENTER_CLASSNAME = 'ng-enter';\nvar LEAVE_CLASSNAME = 'ng-leave';\nvar ENTER_SELECTOR = '.ng-enter';\nvar LEAVE_SELECTOR = '.ng-leave';\nvar NG_TRIGGER_CLASSNAME = 'ng-trigger';\nvar NG_TRIGGER_SELECTOR = '.ng-trigger';\nvar NG_ANIMATING_CLASSNAME = 'ng-animating';\nvar NG_ANIMATING_SELECTOR = '.ng-animating';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction resolveTimingValue(value) {\n    if (typeof value == 'number')\n        return value;\n    var /** @type {?} */ matches = ((value)).match(/^(-?[\\.\\d]+)(m?s)/);\n    if (!matches || matches.length < 2)\n        return 0;\n    return _convertTimeValueToMS(parseFloat(matches[1]), matches[2]);\n}\n/**\n * @param {?} value\n * @param {?} unit\n * @return {?}\n */\nfunction _convertTimeValueToMS(value, unit) {\n    switch (unit) {\n        case 's':\n            return value * ONE_SECOND;\n        default:\n            return value;\n    }\n}\n/**\n * @param {?} timings\n * @param {?} errors\n * @param {?=} allowNegativeValues\n * @return {?}\n */\nfunction resolveTiming(timings, errors, allowNegativeValues) {\n    return timings.hasOwnProperty('duration') ? (timings) :\n        parseTimeExpression(/** @type {?} */ (timings), errors, allowNegativeValues);\n}\n/**\n * @param {?} exp\n * @param {?} errors\n * @param {?=} allowNegativeValues\n * @return {?}\n */\nfunction parseTimeExpression(exp, errors, allowNegativeValues) {\n    var /** @type {?} */ regex = /^(-?[\\.\\d]+)(m?s)(?:\\s+(-?[\\.\\d]+)(m?s))?(?:\\s+([-a-z]+(?:\\(.+?\\))?))?$/i;\n    var /** @type {?} */ duration;\n    var /** @type {?} */ delay = 0;\n    var /** @type {?} */ easing = '';\n    if (typeof exp === 'string') {\n        var /** @type {?} */ matches = exp.match(regex);\n        if (matches === null) {\n            errors.push(\"The provided timing value \\\"\" + exp + \"\\\" is invalid.\");\n            return { duration: 0, delay: 0, easing: '' };\n        }\n        duration = _convertTimeValueToMS(parseFloat(matches[1]), matches[2]);\n        var /** @type {?} */ delayMatch = matches[3];\n        if (delayMatch != null) {\n            delay = _convertTimeValueToMS(Math.floor(parseFloat(delayMatch)), matches[4]);\n        }\n        var /** @type {?} */ easingVal = matches[5];\n        if (easingVal) {\n            easing = easingVal;\n        }\n    }\n    else {\n        duration = (exp);\n    }\n    if (!allowNegativeValues) {\n        var /** @type {?} */ containsErrors = false;\n        var /** @type {?} */ startIndex = errors.length;\n        if (duration < 0) {\n            errors.push(\"Duration values below 0 are not allowed for this animation step.\");\n            containsErrors = true;\n        }\n        if (delay < 0) {\n            errors.push(\"Delay values below 0 are not allowed for this animation step.\");\n            containsErrors = true;\n        }\n        if (containsErrors) {\n            errors.splice(startIndex, 0, \"The provided timing value \\\"\" + exp + \"\\\" is invalid.\");\n        }\n    }\n    return { duration: duration, delay: delay, easing: easing };\n}\n/**\n * @param {?} obj\n * @param {?=} destination\n * @return {?}\n */\nfunction copyObj(obj, destination) {\n    if (destination === void 0) { destination = {}; }\n    Object.keys(obj).forEach(function (prop) { destination[prop] = obj[prop]; });\n    return destination;\n}\n/**\n * @param {?} styles\n * @return {?}\n */\nfunction normalizeStyles(styles) {\n    var /** @type {?} */ normalizedStyles = {};\n    if (Array.isArray(styles)) {\n        styles.forEach(function (data) { return copyStyles(data, false, normalizedStyles); });\n    }\n    else {\n        copyStyles(styles, false, normalizedStyles);\n    }\n    return normalizedStyles;\n}\n/**\n * @param {?} styles\n * @param {?} readPrototype\n * @param {?=} destination\n * @return {?}\n */\nfunction copyStyles(styles, readPrototype, destination) {\n    if (destination === void 0) { destination = {}; }\n    if (readPrototype) {\n        // we make use of a for-in loop so that the\n        // prototypically inherited properties are\n        // revealed from the backFill map\n        for (var /** @type {?} */ prop in styles) {\n            destination[prop] = styles[prop];\n        }\n    }\n    else {\n        copyObj(styles, destination);\n    }\n    return destination;\n}\n/**\n * @param {?} element\n * @param {?} styles\n * @return {?}\n */\nfunction setStyles(element, styles) {\n    if (element['style']) {\n        Object.keys(styles).forEach(function (prop) {\n            var /** @type {?} */ camelProp = dashCaseToCamelCase(prop);\n            element.style[camelProp] = styles[prop];\n        });\n    }\n}\n/**\n * @param {?} element\n * @param {?} styles\n * @return {?}\n */\nfunction eraseStyles(element, styles) {\n    if (element['style']) {\n        Object.keys(styles).forEach(function (prop) {\n            var /** @type {?} */ camelProp = dashCaseToCamelCase(prop);\n            element.style[camelProp] = '';\n        });\n    }\n}\n/**\n * @param {?} steps\n * @return {?}\n */\nfunction normalizeAnimationEntry(steps) {\n    if (Array.isArray(steps)) {\n        if (steps.length == 1)\n            return steps[0];\n        return sequence(steps);\n    }\n    return (steps);\n}\n/**\n * @param {?} value\n * @param {?} options\n * @param {?} errors\n * @return {?}\n */\nfunction validateStyleParams(value, options, errors) {\n    var /** @type {?} */ params = options.params || {};\n    if (typeof value !== 'string')\n        return;\n    var /** @type {?} */ matches = value.toString().match(PARAM_REGEX);\n    if (matches) {\n        matches.forEach(function (varName) {\n            if (!params.hasOwnProperty(varName)) {\n                errors.push(\"Unable to resolve the local animation param \" + varName + \" in the given list of values\");\n            }\n        });\n    }\n}\nvar PARAM_REGEX = /\\{\\{\\s*(.+?)\\s*\\}\\}/g;\n/**\n * @param {?} value\n * @param {?} params\n * @param {?} errors\n * @return {?}\n */\nfunction interpolateParams(value, params, errors) {\n    var /** @type {?} */ original = value.toString();\n    var /** @type {?} */ str = original.replace(PARAM_REGEX, function (_, varName) {\n        var /** @type {?} */ localVal = params[varName];\n        // this means that the value was never overidden by the data passed in by the user\n        if (!params.hasOwnProperty(varName)) {\n            errors.push(\"Please provide a value for the animation param \" + varName);\n            localVal = '';\n        }\n        return localVal.toString();\n    });\n    // we do this to assert that numeric values stay as they are\n    return str == original ? value : str;\n}\n/**\n * @param {?} iterator\n * @return {?}\n */\nfunction iteratorToArray(iterator) {\n    var /** @type {?} */ arr = [];\n    var /** @type {?} */ item = iterator.next();\n    while (!item.done) {\n        arr.push(item.value);\n        item = iterator.next();\n    }\n    return arr;\n}\n/**\n * @param {?} source\n * @param {?} destination\n * @return {?}\n */\nfunction mergeAnimationOptions(source, destination) {\n    if (source.params) {\n        var /** @type {?} */ p0_1 = source.params;\n        if (!destination.params) {\n            destination.params = {};\n        }\n        var /** @type {?} */ p1_1 = destination.params;\n        Object.keys(p0_1).forEach(function (param) {\n            if (!p1_1.hasOwnProperty(param)) {\n                p1_1[param] = p0_1[param];\n            }\n        });\n    }\n    return destination;\n}\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_ANIMATION_OPTIONS = {};\n/**\n * @abstract\n */\nvar Ast = (function () {\n    function Ast() {\n        this.options = EMPTY_ANIMATION_OPTIONS;\n    }\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    Ast.prototype.visit = function (ast, context) { };\n    Object.defineProperty(Ast.prototype, \"params\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.options['params'] || null; },\n        enumerable: true,\n        configurable: true\n    });\n    return Ast;\n}());\nvar TriggerAst = (function (_super) {\n    tslib_1.__extends(TriggerAst, _super);\n    /**\n     * @param {?} name\n     * @param {?} states\n     * @param {?} transitions\n     */\n    function TriggerAst(name, states, transitions) {\n        var _this = _super.call(this) || this;\n        _this.name = name;\n        _this.states = states;\n        _this.transitions = transitions;\n        _this.queryCount = 0;\n        _this.depCount = 0;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TriggerAst.prototype.visit = function (visitor, context) { return visitor.visitTrigger(this, context); };\n    return TriggerAst;\n}(Ast));\nvar StateAst = (function (_super) {\n    tslib_1.__extends(StateAst, _super);\n    /**\n     * @param {?} name\n     * @param {?} style\n     */\n    function StateAst(name, style$$1) {\n        var _this = _super.call(this) || this;\n        _this.name = name;\n        _this.style = style$$1;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    StateAst.prototype.visit = function (visitor, context) { return visitor.visitState(this, context); };\n    return StateAst;\n}(Ast));\nvar TransitionAst = (function (_super) {\n    tslib_1.__extends(TransitionAst, _super);\n    /**\n     * @param {?} matchers\n     * @param {?} animation\n     */\n    function TransitionAst(matchers, animation) {\n        var _this = _super.call(this) || this;\n        _this.matchers = matchers;\n        _this.animation = animation;\n        _this.queryCount = 0;\n        _this.depCount = 0;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TransitionAst.prototype.visit = function (visitor, context) { return visitor.visitTransition(this, context); };\n    return TransitionAst;\n}(Ast));\nvar SequenceAst = (function (_super) {\n    tslib_1.__extends(SequenceAst, _super);\n    /**\n     * @param {?} steps\n     */\n    function SequenceAst(steps) {\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    SequenceAst.prototype.visit = function (visitor, context) { return visitor.visitSequence(this, context); };\n    return SequenceAst;\n}(Ast));\nvar GroupAst = (function (_super) {\n    tslib_1.__extends(GroupAst, _super);\n    /**\n     * @param {?} steps\n     */\n    function GroupAst(steps) {\n        var _this = _super.call(this) || this;\n        _this.steps = steps;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    GroupAst.prototype.visit = function (visitor, context) { return visitor.visitGroup(this, context); };\n    return GroupAst;\n}(Ast));\nvar AnimateAst = (function (_super) {\n    tslib_1.__extends(AnimateAst, _super);\n    /**\n     * @param {?} timings\n     * @param {?} style\n     */\n    function AnimateAst(timings, style$$1) {\n        var _this = _super.call(this) || this;\n        _this.timings = timings;\n        _this.style = style$$1;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AnimateAst.prototype.visit = function (visitor, context) { return visitor.visitAnimate(this, context); };\n    return AnimateAst;\n}(Ast));\nvar StyleAst = (function (_super) {\n    tslib_1.__extends(StyleAst, _super);\n    /**\n     * @param {?} styles\n     * @param {?} easing\n     * @param {?} offset\n     */\n    function StyleAst(styles, easing, offset) {\n        var _this = _super.call(this) || this;\n        _this.styles = styles;\n        _this.easing = easing;\n        _this.offset = offset;\n        _this.isEmptyStep = false;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    StyleAst.prototype.visit = function (visitor, context) { return visitor.visitStyle(this, context); };\n    return StyleAst;\n}(Ast));\nvar KeyframesAst = (function (_super) {\n    tslib_1.__extends(KeyframesAst, _super);\n    /**\n     * @param {?} styles\n     */\n    function KeyframesAst(styles) {\n        var _this = _super.call(this) || this;\n        _this.styles = styles;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    KeyframesAst.prototype.visit = function (visitor, context) { return visitor.visitKeyframes(this, context); };\n    return KeyframesAst;\n}(Ast));\nvar ReferenceAst = (function (_super) {\n    tslib_1.__extends(ReferenceAst, _super);\n    /**\n     * @param {?} animation\n     */\n    function ReferenceAst(animation) {\n        var _this = _super.call(this) || this;\n        _this.animation = animation;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = function (visitor, context) { return visitor.visitReference(this, context); };\n    return ReferenceAst;\n}(Ast));\nvar AnimateChildAst = (function (_super) {\n    tslib_1.__extends(AnimateChildAst, _super);\n    function AnimateChildAst() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AnimateChildAst.prototype.visit = function (visitor, context) { return visitor.visitAnimateChild(this, context); };\n    return AnimateChildAst;\n}(Ast));\nvar AnimateRefAst = (function (_super) {\n    tslib_1.__extends(AnimateRefAst, _super);\n    /**\n     * @param {?} animation\n     */\n    function AnimateRefAst(animation) {\n        var _this = _super.call(this) || this;\n        _this.animation = animation;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AnimateRefAst.prototype.visit = function (visitor, context) { return visitor.visitAnimateRef(this, context); };\n    return AnimateRefAst;\n}(Ast));\nvar QueryAst = (function (_super) {\n    tslib_1.__extends(QueryAst, _super);\n    /**\n     * @param {?} selector\n     * @param {?} limit\n     * @param {?} optional\n     * @param {?} includeSelf\n     * @param {?} animation\n     */\n    function QueryAst(selector, limit, optional, includeSelf, animation) {\n        var _this = _super.call(this) || this;\n        _this.selector = selector;\n        _this.limit = limit;\n        _this.optional = optional;\n        _this.includeSelf = includeSelf;\n        _this.animation = animation;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    QueryAst.prototype.visit = function (visitor, context) { return visitor.visitQuery(this, context); };\n    return QueryAst;\n}(Ast));\nvar StaggerAst = (function (_super) {\n    tslib_1.__extends(StaggerAst, _super);\n    /**\n     * @param {?} timings\n     * @param {?} animation\n     */\n    function StaggerAst(timings, animation) {\n        var _this = _super.call(this) || this;\n        _this.timings = timings;\n        _this.animation = animation;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    StaggerAst.prototype.visit = function (visitor, context) { return visitor.visitStagger(this, context); };\n    return StaggerAst;\n}(Ast));\nvar TimingAst = (function (_super) {\n    tslib_1.__extends(TimingAst, _super);\n    /**\n     * @param {?} duration\n     * @param {?=} delay\n     * @param {?=} easing\n     */\n    function TimingAst(duration, delay, easing) {\n        if (delay === void 0) { delay = 0; }\n        if (easing === void 0) { easing = null; }\n        var _this = _super.call(this) || this;\n        _this.duration = duration;\n        _this.delay = delay;\n        _this.easing = easing;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TimingAst.prototype.visit = function (visitor, context) { return visitor.visitTiming(this, context); };\n    return TimingAst;\n}(Ast));\nvar DynamicTimingAst = (function (_super) {\n    tslib_1.__extends(DynamicTimingAst, _super);\n    /**\n     * @param {?} value\n     */\n    function DynamicTimingAst(value) {\n        var _this = _super.call(this, 0, 0, '') || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DynamicTimingAst.prototype.visit = function (visitor, context) { return visitor.visitTiming(this, context); };\n    return DynamicTimingAst;\n}(TimingAst));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} visitor\n * @param {?} node\n * @param {?} context\n * @return {?}\n */\nfunction visitAnimationNode(visitor, node, context) {\n    switch (node.type) {\n        case 7 /* Trigger */:\n            return visitor.visitTrigger(/** @type {?} */ (node), context);\n        case 0 /* State */:\n            return visitor.visitState(/** @type {?} */ (node), context);\n        case 1 /* Transition */:\n            return visitor.visitTransition(/** @type {?} */ (node), context);\n        case 2 /* Sequence */:\n            return visitor.visitSequence(/** @type {?} */ (node), context);\n        case 3 /* Group */:\n            return visitor.visitGroup(/** @type {?} */ (node), context);\n        case 4 /* Animate */:\n            return visitor.visitAnimate(/** @type {?} */ (node), context);\n        case 5 /* Keyframes */:\n            return visitor.visitKeyframes(/** @type {?} */ (node), context);\n        case 6 /* Style */:\n            return visitor.visitStyle(/** @type {?} */ (node), context);\n        case 8 /* Reference */:\n            return visitor.visitReference(/** @type {?} */ (node), context);\n        case 9 /* AnimateChild */:\n            return visitor.visitAnimateChild(/** @type {?} */ (node), context);\n        case 10 /* AnimateRef */:\n            return visitor.visitAnimateRef(/** @type {?} */ (node), context);\n        case 11 /* Query */:\n            return visitor.visitQuery(/** @type {?} */ (node), context);\n        case 12 /* Stagger */:\n            return visitor.visitStagger(/** @type {?} */ (node), context);\n        default:\n            throw new Error(\"Unable to resolve animation metadata node #\" + node.type);\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANY_STATE = '*';\n/**\n * @param {?} transitionValue\n * @param {?} errors\n * @return {?}\n */\nfunction parseTransitionExpr(transitionValue, errors) {\n    var /** @type {?} */ expressions = [];\n    if (typeof transitionValue == 'string') {\n        ((transitionValue))\n            .split(/\\s*,\\s*/)\n            .forEach(function (str) { return parseInnerTransitionStr(str, expressions, errors); });\n    }\n    else {\n        expressions.push(/** @type {?} */ (transitionValue));\n    }\n    return expressions;\n}\n/**\n * @param {?} eventStr\n * @param {?} expressions\n * @param {?} errors\n * @return {?}\n */\nfunction parseInnerTransitionStr(eventStr, expressions, errors) {\n    if (eventStr[0] == ':') {\n        eventStr = parseAnimationAlias(eventStr, errors);\n    }\n    var /** @type {?} */ match = eventStr.match(/^(\\*|[-\\w]+)\\s*(<?[=-]>)\\s*(\\*|[-\\w]+)$/);\n    if (match == null || match.length < 4) {\n        errors.push(\"The provided transition expression \\\"\" + eventStr + \"\\\" is not supported\");\n        return expressions;\n    }\n    var /** @type {?} */ fromState = match[1];\n    var /** @type {?} */ separator = match[2];\n    var /** @type {?} */ toState = match[3];\n    expressions.push(makeLambdaFromStates(fromState, toState));\n    var /** @type {?} */ isFullAnyStateExpr = fromState == ANY_STATE && toState == ANY_STATE;\n    if (separator[0] == '<' && !isFullAnyStateExpr) {\n        expressions.push(makeLambdaFromStates(toState, fromState));\n    }\n}\n/**\n * @param {?} alias\n * @param {?} errors\n * @return {?}\n */\nfunction parseAnimationAlias(alias, errors) {\n    switch (alias) {\n        case ':enter':\n            return 'void => *';\n        case ':leave':\n            return '* => void';\n        default:\n            errors.push(\"The transition alias value \\\"\" + alias + \"\\\" is not supported\");\n            return '* => *';\n    }\n}\n/**\n * @param {?} lhs\n * @param {?} rhs\n * @return {?}\n */\nfunction makeLambdaFromStates(lhs, rhs) {\n    return function (fromState, toState) {\n        var /** @type {?} */ lhsMatch = lhs == ANY_STATE || lhs == fromState;\n        var /** @type {?} */ rhsMatch = rhs == ANY_STATE || rhs == toState;\n        if (!lhsMatch && typeof fromState === 'boolean') {\n            lhsMatch = fromState ? lhs === 'true' : lhs === 'false';\n        }\n        if (!rhsMatch && typeof toState === 'boolean') {\n            rhsMatch = toState ? rhs === 'true' : rhs === 'false';\n        }\n        return lhsMatch && rhsMatch;\n    };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SELF_TOKEN = ':self';\nvar SELF_TOKEN_REGEX = new RegExp(\"s*\" + SELF_TOKEN + \"s*,?\", 'g');\n/**\n * @param {?} metadata\n * @param {?} errors\n * @return {?}\n */\nfunction buildAnimationAst(metadata, errors) {\n    return new AnimationAstBuilderVisitor().build(metadata, errors);\n}\nvar LEAVE_TOKEN = ':leave';\nvar LEAVE_TOKEN_REGEX = new RegExp(LEAVE_TOKEN, 'g');\nvar ENTER_TOKEN = ':enter';\nvar ENTER_TOKEN_REGEX = new RegExp(ENTER_TOKEN, 'g');\nvar ROOT_SELECTOR = '';\nvar AnimationAstBuilderVisitor = (function () {\n    function AnimationAstBuilderVisitor() {\n    }\n    /**\n     * @param {?} metadata\n     * @param {?} errors\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.build = function (metadata, errors) {\n        var /** @type {?} */ context = new AnimationAstBuilderContext(errors);\n        this._resetContextStyleTimingState(context);\n        return (visitAnimationNode(this, normalizeAnimationEntry(metadata), context));\n    };\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype._resetContextStyleTimingState = function (context) {\n        context.currentQuerySelector = ROOT_SELECTOR;\n        context.collectedStyles[ROOT_SELECTOR] = {};\n        context.currentTime = 0;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitTrigger = function (metadata, context) {\n        var _this = this;\n        var /** @type {?} */ queryCount = context.queryCount = 0;\n        var /** @type {?} */ depCount = context.depCount = 0;\n        var /** @type {?} */ states = [];\n        var /** @type {?} */ transitions = [];\n        metadata.definitions.forEach(function (def) {\n            _this._resetContextStyleTimingState(context);\n            if (def.type == 0 /* State */) {\n                var /** @type {?} */ stateDef_1 = (def);\n                var /** @type {?} */ name = stateDef_1.name;\n                name.split(/\\s*,\\s*/).forEach(function (n) {\n                    stateDef_1.name = n;\n                    states.push(_this.visitState(stateDef_1, context));\n                });\n                stateDef_1.name = name;\n            }\n            else if (def.type == 1 /* Transition */) {\n                var /** @type {?} */ transition = _this.visitTransition(/** @type {?} */ (def), context);\n                queryCount += transition.queryCount;\n                depCount += transition.depCount;\n                transitions.push(transition);\n            }\n            else {\n                context.errors.push('only state() and transition() definitions can sit inside of a trigger()');\n            }\n        });\n        var /** @type {?} */ ast = new TriggerAst(metadata.name, states, transitions);\n        ast.options = normalizeAnimationOptions(metadata.options);\n        ast.queryCount = queryCount;\n        ast.depCount = depCount;\n        return ast;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitState = function (metadata, context) {\n        return new StateAst(metadata.name, this.visitStyle(metadata.styles, context));\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitTransition = function (metadata, context) {\n        context.queryCount = 0;\n        context.depCount = 0;\n        var /** @type {?} */ entry = visitAnimationNode(this, normalizeAnimationEntry(metadata.animation), context);\n        var /** @type {?} */ matchers = parseTransitionExpr(metadata.expr, context.errors);\n        var /** @type {?} */ ast = new TransitionAst(matchers, entry);\n        ast.options = normalizeAnimationOptions(metadata.options);\n        ast.queryCount = context.queryCount;\n        ast.depCount = context.depCount;\n        return ast;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitSequence = function (metadata, context) {\n        var _this = this;\n        var /** @type {?} */ ast = new SequenceAst(metadata.steps.map(function (s) { return visitAnimationNode(_this, s, context); }));\n        ast.options = normalizeAnimationOptions(metadata.options);\n        return ast;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitGroup = function (metadata, context) {\n        var _this = this;\n        var /** @type {?} */ currentTime = context.currentTime;\n        var /** @type {?} */ furthestTime = 0;\n        var /** @type {?} */ steps = metadata.steps.map(function (step) {\n            context.currentTime = currentTime;\n            var /** @type {?} */ innerAst = visitAnimationNode(_this, step, context);\n            furthestTime = Math.max(furthestTime, context.currentTime);\n            return innerAst;\n        });\n        context.currentTime = furthestTime;\n        var /** @type {?} */ ast = new GroupAst(steps);\n        ast.options = normalizeAnimationOptions(metadata.options);\n        return ast;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitAnimate = function (metadata, context) {\n        var /** @type {?} */ timingAst = constructTimingAst(metadata.timings, context.errors);\n        context.currentAnimateTimings = timingAst;\n        var /** @type {?} */ styles;\n        var /** @type {?} */ styleMetadata = metadata.styles ? metadata.styles : style({});\n        if (styleMetadata.type == 5 /* Keyframes */) {\n            styles = this.visitKeyframes(/** @type {?} */ (styleMetadata), context);\n        }\n        else {\n            var /** @type {?} */ styleMetadata_1 = (metadata.styles);\n            var /** @type {?} */ isEmpty = false;\n            if (!styleMetadata_1) {\n                isEmpty = true;\n                var /** @type {?} */ newStyleData = {};\n                if (timingAst.easing) {\n                    newStyleData['easing'] = timingAst.easing;\n                }\n                styleMetadata_1 = style(newStyleData);\n            }\n            context.currentTime += timingAst.duration + timingAst.delay;\n            var /** @type {?} */ styleAst = this.visitStyle(styleMetadata_1, context);\n            styleAst.isEmptyStep = isEmpty;\n            styles = styleAst;\n        }\n        context.currentAnimateTimings = null;\n        return new AnimateAst(timingAst, styles);\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitStyle = function (metadata, context) {\n        var /** @type {?} */ ast = this._makeStyleAst(metadata, context);\n        this._validateStyleAst(ast, context);\n        return ast;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype._makeStyleAst = function (metadata, context) {\n        var /** @type {?} */ styles = [];\n        if (Array.isArray(metadata.styles)) {\n            ((metadata.styles)).forEach(function (styleTuple) {\n                if (typeof styleTuple == 'string') {\n                    if (styleTuple == AUTO_STYLE) {\n                        styles.push(/** @type {?} */ (styleTuple));\n                    }\n                    else {\n                        context.errors.push(\"The provided style string value \" + styleTuple + \" is not allowed.\");\n                    }\n                }\n                else {\n                    styles.push(/** @type {?} */ (styleTuple));\n                }\n            });\n        }\n        else {\n            styles.push(metadata.styles);\n        }\n        var /** @type {?} */ collectedEasing = null;\n        styles.forEach(function (styleData) {\n            if (isObject(styleData)) {\n                var /** @type {?} */ styleMap = (styleData);\n                var /** @type {?} */ easing = styleMap['easing'];\n                if (easing) {\n                    collectedEasing = (easing);\n                    delete styleMap['easing'];\n                }\n            }\n        });\n        return new StyleAst(styles, collectedEasing, metadata.offset);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype._validateStyleAst = function (ast, context) {\n        var /** @type {?} */ timings = context.currentAnimateTimings;\n        var /** @type {?} */ endTime = context.currentTime;\n        var /** @type {?} */ startTime = context.currentTime;\n        if (timings && startTime > 0) {\n            startTime -= timings.duration + timings.delay;\n        }\n        ast.styles.forEach(function (tuple) {\n            if (typeof tuple == 'string')\n                return;\n            Object.keys(tuple).forEach(function (prop) {\n                var /** @type {?} */ collectedStyles = context.collectedStyles[((context.currentQuerySelector))];\n                var /** @type {?} */ collectedEntry = collectedStyles[prop];\n                var /** @type {?} */ updateCollectedStyle = true;\n                if (collectedEntry) {\n                    if (startTime != endTime && startTime >= collectedEntry.startTime &&\n                        endTime <= collectedEntry.endTime) {\n                        context.errors.push(\"The CSS property \\\"\" + prop + \"\\\" that exists between the times of \\\"\" + collectedEntry.startTime + \"ms\\\" and \\\"\" + collectedEntry.endTime + \"ms\\\" is also being animated in a parallel animation between the times of \\\"\" + startTime + \"ms\\\" and \\\"\" + endTime + \"ms\\\"\");\n                        updateCollectedStyle = false;\n                    }\n                    // we always choose the smaller start time value since we\n                    // want to have a record of the entire animation window where\n                    // the style property is being animated in between\n                    startTime = collectedEntry.startTime;\n                }\n                if (updateCollectedStyle) {\n                    collectedStyles[prop] = { startTime: startTime, endTime: endTime };\n                }\n                if (context.options) {\n                    validateStyleParams(tuple[prop], context.options, context.errors);\n                }\n            });\n        });\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitKeyframes = function (metadata, context) {\n        var _this = this;\n        if (!context.currentAnimateTimings) {\n            context.errors.push(\"keyframes() must be placed inside of a call to animate()\");\n            return new KeyframesAst([]);\n        }\n        var /** @type {?} */ MAX_KEYFRAME_OFFSET = 1;\n        var /** @type {?} */ totalKeyframesWithOffsets = 0;\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offsetsOutOfOrder = false;\n        var /** @type {?} */ keyframesOutOfRange = false;\n        var /** @type {?} */ previousOffset = 0;\n        var /** @type {?} */ keyframes = metadata.steps.map(function (styles) {\n            var /** @type {?} */ style$$1 = _this._makeStyleAst(styles, context);\n            var /** @type {?} */ offsetVal = style$$1.offset != null ? style$$1.offset : consumeOffset(style$$1.styles);\n            var /** @type {?} */ offset = 0;\n            if (offsetVal != null) {\n                totalKeyframesWithOffsets++;\n                offset = style$$1.offset = offsetVal;\n            }\n            keyframesOutOfRange = keyframesOutOfRange || offset < 0 || offset > 1;\n            offsetsOutOfOrder = offsetsOutOfOrder || offset < previousOffset;\n            previousOffset = offset;\n            offsets.push(offset);\n            return style$$1;\n        });\n        if (keyframesOutOfRange) {\n            context.errors.push(\"Please ensure that all keyframe offsets are between 0 and 1\");\n        }\n        if (offsetsOutOfOrder) {\n            context.errors.push(\"Please ensure that all keyframe offsets are in order\");\n        }\n        var /** @type {?} */ length = metadata.steps.length;\n        var /** @type {?} */ generatedOffset = 0;\n        if (totalKeyframesWithOffsets > 0 && totalKeyframesWithOffsets < length) {\n            context.errors.push(\"Not all style() steps within the declared keyframes() contain offsets\");\n        }\n        else if (totalKeyframesWithOffsets == 0) {\n            generatedOffset = MAX_KEYFRAME_OFFSET / (length - 1);\n        }\n        var /** @type {?} */ limit = length - 1;\n        var /** @type {?} */ currentTime = context.currentTime;\n        var /** @type {?} */ currentAnimateTimings = ((context.currentAnimateTimings));\n        var /** @type {?} */ animateDuration = currentAnimateTimings.duration;\n        keyframes.forEach(function (kf, i) {\n            var /** @type {?} */ offset = generatedOffset > 0 ? (i == limit ? 1 : (generatedOffset * i)) : offsets[i];\n            var /** @type {?} */ durationUpToThisFrame = offset * animateDuration;\n            context.currentTime = currentTime + currentAnimateTimings.delay + durationUpToThisFrame;\n            currentAnimateTimings.duration = durationUpToThisFrame;\n            _this._validateStyleAst(kf, context);\n            kf.offset = offset;\n        });\n        return new KeyframesAst(keyframes);\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitReference = function (metadata, context) {\n        var /** @type {?} */ entry = visitAnimationNode(this, normalizeAnimationEntry(metadata.animation), context);\n        var /** @type {?} */ ast = new ReferenceAst(entry);\n        ast.options = normalizeAnimationOptions(metadata.options);\n        return ast;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitAnimateChild = function (metadata, context) {\n        context.depCount++;\n        var /** @type {?} */ ast = new AnimateChildAst();\n        ast.options = normalizeAnimationOptions(metadata.options);\n        return ast;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitAnimateRef = function (metadata, context) {\n        var /** @type {?} */ animation = this.visitReference(metadata.animation, context);\n        var /** @type {?} */ ast = new AnimateRefAst(animation);\n        ast.options = normalizeAnimationOptions(metadata.options);\n        return ast;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitQuery = function (metadata, context) {\n        var /** @type {?} */ parentSelector = ((context.currentQuerySelector));\n        var /** @type {?} */ options = ((metadata.options || {}));\n        context.queryCount++;\n        context.currentQuery = metadata;\n        var _a = normalizeSelector(metadata.selector), selector = _a[0], includeSelf = _a[1];\n        context.currentQuerySelector =\n            parentSelector.length ? (parentSelector + ' ' + selector) : selector;\n        getOrSetAsInMap(context.collectedStyles, context.currentQuerySelector, {});\n        var /** @type {?} */ entry = visitAnimationNode(this, normalizeAnimationEntry(metadata.animation), context);\n        context.currentQuery = null;\n        context.currentQuerySelector = parentSelector;\n        var /** @type {?} */ ast = new QueryAst(selector, options.limit || 0, !!options.optional, includeSelf, entry);\n        ast.originalSelector = metadata.selector;\n        ast.options = normalizeAnimationOptions(metadata.options);\n        return ast;\n    };\n    /**\n     * @param {?} metadata\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationAstBuilderVisitor.prototype.visitStagger = function (metadata, context) {\n        if (!context.currentQuery) {\n            context.errors.push(\"stagger() can only be used inside of query()\");\n        }\n        var /** @type {?} */ timings = metadata.timings === 'full' ?\n            { duration: 0, delay: 0, easing: 'full' } :\n            resolveTiming(metadata.timings, context.errors, true);\n        var /** @type {?} */ animation = visitAnimationNode(this, normalizeAnimationEntry(metadata.animation), context);\n        return new StaggerAst(timings, animation);\n    };\n    return AnimationAstBuilderVisitor;\n}());\n/**\n * @param {?} selector\n * @return {?}\n */\nfunction normalizeSelector(selector) {\n    var /** @type {?} */ hasAmpersand = selector.split(/\\s*,\\s*/).find(function (token) { return token == SELF_TOKEN; }) ? true : false;\n    if (hasAmpersand) {\n        selector = selector.replace(SELF_TOKEN_REGEX, '');\n    }\n    selector = selector.replace(ENTER_TOKEN_REGEX, ENTER_SELECTOR)\n        .replace(LEAVE_TOKEN_REGEX, LEAVE_SELECTOR)\n        .replace(/@\\*/g, NG_TRIGGER_SELECTOR)\n        .replace(/@\\w+/g, function (match) { return NG_TRIGGER_SELECTOR + '-' + match.substr(1); })\n        .replace(/:animating/g, NG_ANIMATING_SELECTOR);\n    return [selector, hasAmpersand];\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction normalizeParams(obj) {\n    return obj ? copyObj(obj) : null;\n}\nvar AnimationAstBuilderContext = (function () {\n    /**\n     * @param {?} errors\n     */\n    function AnimationAstBuilderContext(errors) {\n        this.errors = errors;\n        this.queryCount = 0;\n        this.depCount = 0;\n        this.currentTransition = null;\n        this.currentQuery = null;\n        this.currentQuerySelector = null;\n        this.currentAnimateTimings = null;\n        this.currentTime = 0;\n        this.collectedStyles = {};\n        this.options = null;\n    }\n    return AnimationAstBuilderContext;\n}());\n/**\n * @param {?} styles\n * @return {?}\n */\nfunction consumeOffset(styles) {\n    if (typeof styles == 'string')\n        return null;\n    var /** @type {?} */ offset = null;\n    if (Array.isArray(styles)) {\n        styles.forEach(function (styleTuple) {\n            if (isObject(styleTuple) && styleTuple.hasOwnProperty('offset')) {\n                var /** @type {?} */ obj = (styleTuple);\n                offset = parseFloat(/** @type {?} */ (obj['offset']));\n                delete obj['offset'];\n            }\n        });\n    }\n    else if (isObject(styles) && styles.hasOwnProperty('offset')) {\n        var /** @type {?} */ obj = (styles);\n        offset = parseFloat(/** @type {?} */ (obj['offset']));\n        delete obj['offset'];\n    }\n    return offset;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isObject(value) {\n    return !Array.isArray(value) && typeof value == 'object';\n}\n/**\n * @param {?} value\n * @param {?} errors\n * @return {?}\n */\nfunction constructTimingAst(value, errors) {\n    var /** @type {?} */ timings = null;\n    if (value.hasOwnProperty('duration')) {\n        timings = (value);\n    }\n    else if (typeof value == 'number') {\n        var /** @type {?} */ duration = resolveTiming(/** @type {?} */ (value), errors).duration;\n        return new TimingAst(/** @type {?} */ (value), 0, '');\n    }\n    var /** @type {?} */ strValue = (value);\n    var /** @type {?} */ isDynamic = strValue.split(/\\s+/).some(function (v) { return v.charAt(0) == '{' && v.charAt(1) == '{'; });\n    if (isDynamic) {\n        return new DynamicTimingAst(strValue);\n    }\n    timings = timings || resolveTiming(strValue, errors);\n    return new TimingAst(timings.duration, timings.delay, timings.easing);\n}\n/**\n * @param {?} options\n * @return {?}\n */\nfunction normalizeAnimationOptions(options) {\n    if (options) {\n        options = copyObj(options);\n        if (options['params']) {\n            options['params'] = ((normalizeParams(options['params'])));\n        }\n    }\n    else {\n        options = {};\n    }\n    return options;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} element\n * @param {?} keyframes\n * @param {?} preStyleProps\n * @param {?} postStyleProps\n * @param {?} duration\n * @param {?} delay\n * @param {?=} easing\n * @param {?=} subTimeline\n * @return {?}\n */\nfunction createTimelineInstruction(element, keyframes, preStyleProps, postStyleProps, duration, delay, easing, subTimeline) {\n    if (easing === void 0) { easing = null; }\n    if (subTimeline === void 0) { subTimeline = false; }\n    return {\n        type: 1 /* TimelineAnimation */,\n        element: element,\n        keyframes: keyframes,\n        preStyleProps: preStyleProps,\n        postStyleProps: postStyleProps,\n        duration: duration,\n        delay: delay,\n        totalTime: duration + delay, easing: easing, subTimeline: subTimeline\n    };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ElementInstructionMap = (function () {\n    function ElementInstructionMap() {\n        this._map = new Map();\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    ElementInstructionMap.prototype.consume = function (element) {\n        var /** @type {?} */ instructions = this._map.get(element);\n        if (instructions) {\n            this._map.delete(element);\n        }\n        else {\n            instructions = [];\n        }\n        return instructions;\n    };\n    /**\n     * @param {?} element\n     * @param {?} instructions\n     * @return {?}\n     */\n    ElementInstructionMap.prototype.append = function (element, instructions) {\n        var /** @type {?} */ existingInstructions = this._map.get(element);\n        if (!existingInstructions) {\n            this._map.set(element, existingInstructions = []);\n        }\n        existingInstructions.push.apply(existingInstructions, instructions);\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    ElementInstructionMap.prototype.has = function (element) { return this._map.has(element); };\n    /**\n     * @return {?}\n     */\n    ElementInstructionMap.prototype.clear = function () { this._map.clear(); };\n    return ElementInstructionMap;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ONE_FRAME_IN_MILLISECONDS = 1;\n/**\n * @param {?} driver\n * @param {?} rootElement\n * @param {?} ast\n * @param {?=} startingStyles\n * @param {?=} finalStyles\n * @param {?=} options\n * @param {?=} subInstructions\n * @param {?=} errors\n * @return {?}\n */\nfunction buildAnimationTimelines(driver, rootElement, ast, startingStyles, finalStyles, options, subInstructions, errors) {\n    if (startingStyles === void 0) { startingStyles = {}; }\n    if (finalStyles === void 0) { finalStyles = {}; }\n    if (errors === void 0) { errors = []; }\n    return new AnimationTimelineBuilderVisitor().buildKeyframes(driver, rootElement, ast, startingStyles, finalStyles, options, subInstructions, errors);\n}\nvar AnimationTimelineBuilderVisitor = (function () {\n    function AnimationTimelineBuilderVisitor() {\n    }\n    /**\n     * @param {?} driver\n     * @param {?} rootElement\n     * @param {?} ast\n     * @param {?} startingStyles\n     * @param {?} finalStyles\n     * @param {?} options\n     * @param {?=} subInstructions\n     * @param {?=} errors\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.buildKeyframes = function (driver, rootElement, ast, startingStyles, finalStyles, options, subInstructions, errors) {\n        if (errors === void 0) { errors = []; }\n        subInstructions = subInstructions || new ElementInstructionMap();\n        var /** @type {?} */ context = new AnimationTimelineContext(driver, rootElement, subInstructions, errors, []);\n        context.options = options;\n        context.currentTimeline.setStyles([startingStyles], null, context.errors, options);\n        ast.visit(this, context);\n        // this checks to see if an actual animation happened\n        var /** @type {?} */ timelines = context.timelines.filter(function (timeline) { return timeline.containsAnimation(); });\n        if (timelines.length && Object.keys(finalStyles).length) {\n            var /** @type {?} */ tl = timelines[timelines.length - 1];\n            if (!tl.allowOnlyTimelineStyles()) {\n                tl.setStyles([finalStyles], null, context.errors, options);\n            }\n        }\n        return timelines.length ? timelines.map(function (timeline) { return timeline.buildKeyframes(); }) :\n            [createTimelineInstruction(rootElement, [], [], [], 0, 0, '', false)];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitTrigger = function (ast, context) {\n        // these values are not visited in this AST\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitState = function (ast, context) {\n        // these values are not visited in this AST\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitTransition = function (ast, context) {\n        // these values are not visited in this AST\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitAnimateChild = function (ast, context) {\n        var /** @type {?} */ elementInstructions = context.subInstructions.consume(context.element);\n        if (elementInstructions) {\n            var /** @type {?} */ innerContext = context.createSubContext(ast.options);\n            var /** @type {?} */ startTime = context.currentTimeline.currentTime;\n            var /** @type {?} */ endTime = this._visitSubInstructions(elementInstructions, innerContext, /** @type {?} */ (innerContext.options));\n            if (startTime != endTime) {\n                // we do this on the upper context because we created a sub context for\n                // the sub child animations\n                context.transformIntoNewTimeline(endTime);\n            }\n        }\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitAnimateRef = function (ast, context) {\n        var /** @type {?} */ innerContext = context.createSubContext(ast.options);\n        innerContext.transformIntoNewTimeline();\n        this.visitReference(ast.animation, innerContext);\n        context.transformIntoNewTimeline(innerContext.currentTimeline.currentTime);\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} instructions\n     * @param {?} context\n     * @param {?} options\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype._visitSubInstructions = function (instructions, context, options) {\n        var /** @type {?} */ startTime = context.currentTimeline.currentTime;\n        var /** @type {?} */ furthestTime = startTime;\n        // this is a special-case for when a user wants to skip a sub\n        // animation from being fired entirely.\n        var /** @type {?} */ duration = options.duration != null ? resolveTimingValue(options.duration) : null;\n        var /** @type {?} */ delay = options.delay != null ? resolveTimingValue(options.delay) : null;\n        if (duration !== 0) {\n            instructions.forEach(function (instruction) {\n                var /** @type {?} */ instructionTimings = context.appendInstructionToTimeline(instruction, duration, delay);\n                furthestTime =\n                    Math.max(furthestTime, instructionTimings.duration + instructionTimings.delay);\n            });\n        }\n        return furthestTime;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitReference = function (ast, context) {\n        context.updateOptions(ast.options, true);\n        ast.animation.visit(this, context);\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitSequence = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ subContextCount = context.subContextCount;\n        var /** @type {?} */ ctx = context;\n        var /** @type {?} */ options = ast.options;\n        if (options && (options.params || options.delay)) {\n            ctx = context.createSubContext(options);\n            ctx.transformIntoNewTimeline();\n            if (options.delay != null) {\n                if (ctx.previousNode instanceof StyleAst) {\n                    ctx.currentTimeline.snapshotCurrentStyles();\n                    ctx.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n                }\n                var /** @type {?} */ delay = resolveTimingValue(options.delay);\n                ctx.delayNextStep(delay);\n            }\n        }\n        if (ast.steps.length) {\n            ast.steps.forEach(function (s) { return s.visit(_this, ctx); });\n            // this is here just incase the inner steps only contain or end with a style() call\n            ctx.currentTimeline.applyStylesToKeyframe();\n            // this means that some animation function within the sequence\n            // ended up creating a sub timeline (which means the current\n            // timeline cannot overlap with the contents of the sequence)\n            if (ctx.subContextCount > subContextCount) {\n                ctx.transformIntoNewTimeline();\n            }\n        }\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitGroup = function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ innerTimelines = [];\n        var /** @type {?} */ furthestTime = context.currentTimeline.currentTime;\n        var /** @type {?} */ delay = ast.options && ast.options.delay ? resolveTimingValue(ast.options.delay) : 0;\n        ast.steps.forEach(function (s) {\n            var /** @type {?} */ innerContext = context.createSubContext(ast.options);\n            if (delay) {\n                innerContext.delayNextStep(delay);\n            }\n            s.visit(_this, innerContext);\n            furthestTime = Math.max(furthestTime, innerContext.currentTimeline.currentTime);\n            innerTimelines.push(innerContext.currentTimeline);\n        });\n        // this operation is run after the AST loop because otherwise\n        // if the parent timeline's collected styles were updated then\n        // it would pass in invalid data into the new-to-be forked items\n        innerTimelines.forEach(function (timeline) { return context.currentTimeline.mergeTimelineCollectedStyles(timeline); });\n        context.transformIntoNewTimeline(furthestTime);\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitTiming = function (ast, context) {\n        if (ast instanceof DynamicTimingAst) {\n            var /** @type {?} */ strValue = context.params ?\n                interpolateParams(ast.value, context.params, context.errors) :\n                ast.value.toString();\n            return resolveTiming(strValue, context.errors);\n        }\n        else {\n            return { duration: ast.duration, delay: ast.delay, easing: ast.easing };\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitAnimate = function (ast, context) {\n        var /** @type {?} */ timings = context.currentAnimateTimings = this.visitTiming(ast.timings, context);\n        var /** @type {?} */ timeline = context.currentTimeline;\n        if (timings.delay) {\n            context.incrementTime(timings.delay);\n            timeline.snapshotCurrentStyles();\n        }\n        var /** @type {?} */ style$$1 = ast.style;\n        if (style$$1 instanceof KeyframesAst) {\n            this.visitKeyframes(style$$1, context);\n        }\n        else {\n            context.incrementTime(timings.duration);\n            this.visitStyle(/** @type {?} */ (style$$1), context);\n            timeline.applyStylesToKeyframe();\n        }\n        context.currentAnimateTimings = null;\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitStyle = function (ast, context) {\n        var /** @type {?} */ timeline = context.currentTimeline;\n        var /** @type {?} */ timings = ((context.currentAnimateTimings));\n        // this is a special case for when a style() call\n        // directly follows  an animate() call (but not inside of an animate() call)\n        if (!timings && timeline.getCurrentStyleProperties().length) {\n            timeline.forwardFrame();\n        }\n        var /** @type {?} */ easing = (timings && timings.easing) || ast.easing;\n        if (ast.isEmptyStep) {\n            timeline.applyEmptyStep(easing);\n        }\n        else {\n            timeline.setStyles(ast.styles, easing, context.errors, context.options);\n        }\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitKeyframes = function (ast, context) {\n        var /** @type {?} */ currentAnimateTimings = ((context.currentAnimateTimings));\n        var /** @type {?} */ startTime = (((context.currentTimeline))).duration;\n        var /** @type {?} */ duration = currentAnimateTimings.duration;\n        var /** @type {?} */ innerContext = context.createSubContext();\n        var /** @type {?} */ innerTimeline = innerContext.currentTimeline;\n        innerTimeline.easing = currentAnimateTimings.easing;\n        ast.styles.forEach(function (step) {\n            var /** @type {?} */ offset = step.offset || 0;\n            innerTimeline.forwardTime(offset * duration);\n            innerTimeline.setStyles(step.styles, step.easing, context.errors, context.options);\n            innerTimeline.applyStylesToKeyframe();\n        });\n        // this will ensure that the parent timeline gets all the styles from\n        // the child even if the new timeline below is not used\n        context.currentTimeline.mergeTimelineCollectedStyles(innerTimeline);\n        // we do this because the window between this timeline and the sub timeline\n        // should ensure that the styles within are exactly the same as they were before\n        context.transformIntoNewTimeline(startTime + duration);\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitQuery = function (ast, context) {\n        var _this = this;\n        // in the event that the first step before this is a style step we need\n        // to ensure the styles are applied before the children are animated\n        var /** @type {?} */ startTime = context.currentTimeline.currentTime;\n        var /** @type {?} */ options = ((ast.options || {}));\n        var /** @type {?} */ delay = options.delay ? resolveTimingValue(options.delay) : 0;\n        if (delay && (context.previousNode instanceof StyleAst ||\n            (startTime == 0 && context.currentTimeline.getCurrentStyleProperties().length))) {\n            context.currentTimeline.snapshotCurrentStyles();\n            context.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n        }\n        var /** @type {?} */ furthestTime = startTime;\n        var /** @type {?} */ elms = context.invokeQuery(ast.selector, ast.originalSelector, ast.limit, ast.includeSelf, options.optional ? true : false, context.errors);\n        context.currentQueryTotal = elms.length;\n        var /** @type {?} */ sameElementTimeline = null;\n        elms.forEach(function (element, i) {\n            context.currentQueryIndex = i;\n            var /** @type {?} */ innerContext = context.createSubContext(ast.options, element);\n            if (delay) {\n                innerContext.delayNextStep(delay);\n            }\n            if (element === context.element) {\n                sameElementTimeline = innerContext.currentTimeline;\n            }\n            ast.animation.visit(_this, innerContext);\n            // this is here just incase the inner steps only contain or end\n            // with a style() call (which is here to signal that this is a preparatory\n            // call to style an element before it is animated again)\n            innerContext.currentTimeline.applyStylesToKeyframe();\n            var /** @type {?} */ endTime = innerContext.currentTimeline.currentTime;\n            furthestTime = Math.max(furthestTime, endTime);\n        });\n        context.currentQueryIndex = 0;\n        context.currentQueryTotal = 0;\n        context.transformIntoNewTimeline(furthestTime);\n        if (sameElementTimeline) {\n            context.currentTimeline.mergeTimelineCollectedStyles(sameElementTimeline);\n            context.currentTimeline.snapshotCurrentStyles();\n        }\n        context.previousNode = ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTimelineBuilderVisitor.prototype.visitStagger = function (ast, context) {\n        var /** @type {?} */ parentContext = ((context.parentContext));\n        var /** @type {?} */ tl = context.currentTimeline;\n        var /** @type {?} */ timings = ast.timings;\n        var /** @type {?} */ duration = Math.abs(timings.duration);\n        var /** @type {?} */ maxTime = duration * (context.currentQueryTotal - 1);\n        var /** @type {?} */ delay = duration * context.currentQueryIndex;\n        var /** @type {?} */ staggerTransformer = timings.duration < 0 ? 'reverse' : timings.easing;\n        switch (staggerTransformer) {\n            case 'reverse':\n                delay = maxTime - delay;\n                break;\n            case 'full':\n                delay = parentContext.currentStaggerTime;\n                break;\n        }\n        if (delay) {\n            context.currentTimeline.delayNextStep(delay);\n        }\n        var /** @type {?} */ startingTime = context.currentTimeline.currentTime;\n        ast.animation.visit(this, context);\n        context.previousNode = ast;\n        // time = duration + delay\n        // the reason why this computation is so complex is because\n        // the inner timeline may either have a delay value or a stretched\n        // keyframe depending on if a subtimeline is not used or is used.\n        parentContext.currentStaggerTime =\n            (tl.currentTime - startingTime) + (tl.startTime - parentContext.currentTimeline.startTime);\n    };\n    return AnimationTimelineBuilderVisitor;\n}());\nvar DEFAULT_NOOP_PREVIOUS_NODE = ({});\nvar AnimationTimelineContext = (function () {\n    /**\n     * @param {?} _driver\n     * @param {?} element\n     * @param {?} subInstructions\n     * @param {?} errors\n     * @param {?} timelines\n     * @param {?=} initialTimeline\n     */\n    function AnimationTimelineContext(_driver, element, subInstructions, errors, timelines, initialTimeline) {\n        this._driver = _driver;\n        this.element = element;\n        this.subInstructions = subInstructions;\n        this.errors = errors;\n        this.timelines = timelines;\n        this.parentContext = null;\n        this.currentAnimateTimings = null;\n        this.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n        this.subContextCount = 0;\n        this.options = {};\n        this.currentQueryIndex = 0;\n        this.currentQueryTotal = 0;\n        this.currentStaggerTime = 0;\n        this.currentTimeline = initialTimeline || new TimelineBuilder(element, 0);\n        timelines.push(this.currentTimeline);\n    }\n    Object.defineProperty(AnimationTimelineContext.prototype, \"params\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.options.params; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} options\n     * @param {?=} skipIfExists\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.updateOptions = function (options, skipIfExists) {\n        var _this = this;\n        if (!options)\n            return;\n        var /** @type {?} */ newOptions = (options);\n        var /** @type {?} */ optionsToUpdate = this.options;\n        // NOTE: this will get patched up when other animation methods support duration overrides\n        if (newOptions.duration != null) {\n            ((optionsToUpdate)).duration = resolveTimingValue(newOptions.duration);\n        }\n        if (newOptions.delay != null) {\n            optionsToUpdate.delay = resolveTimingValue(newOptions.delay);\n        }\n        var /** @type {?} */ newParams = newOptions.params;\n        if (newParams) {\n            var /** @type {?} */ paramsToUpdate_1 = ((optionsToUpdate.params));\n            if (!paramsToUpdate_1) {\n                paramsToUpdate_1 = this.options.params = {};\n            }\n            Object.keys(newParams).forEach(function (name) {\n                if (!skipIfExists || !paramsToUpdate_1.hasOwnProperty(name)) {\n                    paramsToUpdate_1[name] = interpolateParams(newParams[name], paramsToUpdate_1, _this.errors);\n                }\n            });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype._copyOptions = function () {\n        var /** @type {?} */ options = {};\n        if (this.options) {\n            var /** @type {?} */ oldParams_1 = this.options.params;\n            if (oldParams_1) {\n                var /** @type {?} */ params_1 = options['params'] = {};\n                Object.keys(this.options.params).forEach(function (name) { params_1[name] = oldParams_1[name]; });\n            }\n        }\n        return options;\n    };\n    /**\n     * @param {?=} options\n     * @param {?=} element\n     * @param {?=} newTime\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.createSubContext = function (options, element, newTime) {\n        if (options === void 0) { options = null; }\n        var /** @type {?} */ target = element || this.element;\n        var /** @type {?} */ context = new AnimationTimelineContext(this._driver, target, this.subInstructions, this.errors, this.timelines, this.currentTimeline.fork(target, newTime || 0));\n        context.previousNode = this.previousNode;\n        context.currentAnimateTimings = this.currentAnimateTimings;\n        context.options = this._copyOptions();\n        context.updateOptions(options);\n        context.currentQueryIndex = this.currentQueryIndex;\n        context.currentQueryTotal = this.currentQueryTotal;\n        context.parentContext = this;\n        this.subContextCount++;\n        return context;\n    };\n    /**\n     * @param {?=} newTime\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.transformIntoNewTimeline = function (newTime) {\n        this.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n        this.currentTimeline = this.currentTimeline.fork(this.element, newTime);\n        this.timelines.push(this.currentTimeline);\n        return this.currentTimeline;\n    };\n    /**\n     * @param {?} instruction\n     * @param {?} duration\n     * @param {?} delay\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.appendInstructionToTimeline = function (instruction, duration, delay) {\n        var /** @type {?} */ updatedTimings = {\n            duration: duration != null ? duration : instruction.duration,\n            delay: this.currentTimeline.currentTime + (delay != null ? delay : 0) + instruction.delay,\n            easing: ''\n        };\n        var /** @type {?} */ builder = new SubTimelineBuilder(instruction.element, instruction.keyframes, instruction.preStyleProps, instruction.postStyleProps, updatedTimings, instruction.stretchStartingKeyframe);\n        this.timelines.push(builder);\n        return updatedTimings;\n    };\n    /**\n     * @param {?} time\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.incrementTime = function (time) {\n        this.currentTimeline.forwardTime(this.currentTimeline.duration + time);\n    };\n    /**\n     * @param {?} delay\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.delayNextStep = function (delay) {\n        // negative delays are not yet supported\n        if (delay > 0) {\n            this.currentTimeline.delayNextStep(delay);\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} originalSelector\n     * @param {?} limit\n     * @param {?} includeSelf\n     * @param {?} optional\n     * @param {?} errors\n     * @return {?}\n     */\n    AnimationTimelineContext.prototype.invokeQuery = function (selector, originalSelector, limit, includeSelf, optional, errors) {\n        var /** @type {?} */ results = [];\n        if (includeSelf) {\n            results.push(this.element);\n        }\n        if (selector.length > 0) {\n            var /** @type {?} */ multi = limit != 1;\n            results.push.apply(results, this._driver.query(this.element, selector, multi));\n        }\n        if (!optional && results.length == 0) {\n            errors.push(\"`query(\\\"\" + originalSelector + \"\\\")` returned zero elements. (Use `query(\\\"\" + originalSelector + \"\\\", { optional: true })` if you wish to allow this.)\");\n        }\n        return results;\n    };\n    return AnimationTimelineContext;\n}());\nvar TimelineBuilder = (function () {\n    /**\n     * @param {?} element\n     * @param {?} startTime\n     * @param {?=} _elementTimelineStylesLookup\n     */\n    function TimelineBuilder(element, startTime, _elementTimelineStylesLookup) {\n        this.element = element;\n        this.startTime = startTime;\n        this._elementTimelineStylesLookup = _elementTimelineStylesLookup;\n        this.duration = 0;\n        this._previousKeyframe = {};\n        this._currentKeyframe = {};\n        this._keyframes = new Map();\n        this._styleSummary = {};\n        this._pendingStyles = {};\n        this._backFill = {};\n        this._currentEmptyStepKeyframe = null;\n        if (!this._elementTimelineStylesLookup) {\n            this._elementTimelineStylesLookup = new Map();\n        }\n        this._localTimelineStyles = Object.create(this._backFill, {});\n        this._globalTimelineStyles = this._elementTimelineStylesLookup.get(element);\n        if (!this._globalTimelineStyles) {\n            this._globalTimelineStyles = this._localTimelineStyles;\n            this._elementTimelineStylesLookup.set(element, this._localTimelineStyles);\n        }\n        this._loadKeyframe();\n    }\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.containsAnimation = function () {\n        switch (this._keyframes.size) {\n            case 0:\n                return false;\n            case 1:\n                return this.getCurrentStyleProperties().length > 0;\n            default:\n                return true;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.getCurrentStyleProperties = function () { return Object.keys(this._currentKeyframe); };\n    Object.defineProperty(TimelineBuilder.prototype, \"currentTime\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.startTime + this.duration; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} delay\n     * @return {?}\n     */\n    TimelineBuilder.prototype.delayNextStep = function (delay) {\n        if (this.duration == 0) {\n            this.startTime += delay;\n        }\n        else {\n            this.forwardTime(this.currentTime + delay);\n        }\n    };\n    /**\n     * @param {?} element\n     * @param {?=} currentTime\n     * @return {?}\n     */\n    TimelineBuilder.prototype.fork = function (element, currentTime) {\n        this.applyStylesToKeyframe();\n        return new TimelineBuilder(element, currentTime || this.currentTime, this._elementTimelineStylesLookup);\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype._loadKeyframe = function () {\n        if (this._currentKeyframe) {\n            this._previousKeyframe = this._currentKeyframe;\n        }\n        this._currentKeyframe = ((this._keyframes.get(this.duration)));\n        if (!this._currentKeyframe) {\n            this._currentKeyframe = Object.create(this._backFill, {});\n            this._keyframes.set(this.duration, this._currentKeyframe);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.forwardFrame = function () {\n        this.duration += ONE_FRAME_IN_MILLISECONDS;\n        this._loadKeyframe();\n    };\n    /**\n     * @param {?} time\n     * @return {?}\n     */\n    TimelineBuilder.prototype.forwardTime = function (time) {\n        this.applyStylesToKeyframe();\n        this.duration = time;\n        this._loadKeyframe();\n    };\n    /**\n     * @param {?} prop\n     * @param {?} value\n     * @return {?}\n     */\n    TimelineBuilder.prototype._updateStyle = function (prop, value) {\n        this._localTimelineStyles[prop] = value;\n        this._globalTimelineStyles[prop] = value;\n        this._styleSummary[prop] = { time: this.currentTime, value: value };\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.allowOnlyTimelineStyles = function () { return this._currentEmptyStepKeyframe !== this._currentKeyframe; };\n    /**\n     * @param {?} easing\n     * @return {?}\n     */\n    TimelineBuilder.prototype.applyEmptyStep = function (easing) {\n        var _this = this;\n        if (easing) {\n            this._previousKeyframe['easing'] = easing;\n        }\n        // special case for animate(duration):\n        // all missing styles are filled with a `*` value then\n        // if any destination styles are filled in later on the same\n        // keyframe then they will override the overridden styles\n        // We use `_globalTimelineStyles` here because there may be\n        // styles in previous keyframes that are not present in this timeline\n        Object.keys(this._globalTimelineStyles).forEach(function (prop) {\n            _this._backFill[prop] = _this._globalTimelineStyles[prop] || AUTO_STYLE;\n            _this._currentKeyframe[prop] = AUTO_STYLE;\n        });\n        this._currentEmptyStepKeyframe = this._currentKeyframe;\n    };\n    /**\n     * @param {?} input\n     * @param {?} easing\n     * @param {?} errors\n     * @param {?=} options\n     * @return {?}\n     */\n    TimelineBuilder.prototype.setStyles = function (input, easing, errors, options) {\n        var _this = this;\n        if (easing) {\n            this._previousKeyframe['easing'] = easing;\n        }\n        var /** @type {?} */ params = (options && options.params) || {};\n        var /** @type {?} */ styles = flattenStyles(input, this._globalTimelineStyles);\n        Object.keys(styles).forEach(function (prop) {\n            var /** @type {?} */ val = interpolateParams(styles[prop], params, errors);\n            _this._pendingStyles[prop] = val;\n            if (!_this._localTimelineStyles.hasOwnProperty(prop)) {\n                _this._backFill[prop] = _this._globalTimelineStyles.hasOwnProperty(prop) ?\n                    _this._globalTimelineStyles[prop] :\n                    AUTO_STYLE;\n            }\n            _this._updateStyle(prop, val);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.applyStylesToKeyframe = function () {\n        var _this = this;\n        var /** @type {?} */ styles = this._pendingStyles;\n        var /** @type {?} */ props = Object.keys(styles);\n        if (props.length == 0)\n            return;\n        this._pendingStyles = {};\n        props.forEach(function (prop) {\n            var /** @type {?} */ val = styles[prop];\n            _this._currentKeyframe[prop] = val;\n        });\n        Object.keys(this._localTimelineStyles).forEach(function (prop) {\n            if (!_this._currentKeyframe.hasOwnProperty(prop)) {\n                _this._currentKeyframe[prop] = _this._localTimelineStyles[prop];\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.snapshotCurrentStyles = function () {\n        var _this = this;\n        Object.keys(this._localTimelineStyles).forEach(function (prop) {\n            var /** @type {?} */ val = _this._localTimelineStyles[prop];\n            _this._pendingStyles[prop] = val;\n            _this._updateStyle(prop, val);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.getFinalKeyframe = function () { return this._keyframes.get(this.duration); };\n    Object.defineProperty(TimelineBuilder.prototype, \"properties\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ properties = [];\n            for (var /** @type {?} */ prop in this._currentKeyframe) {\n                properties.push(prop);\n            }\n            return properties;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} timeline\n     * @return {?}\n     */\n    TimelineBuilder.prototype.mergeTimelineCollectedStyles = function (timeline) {\n        var _this = this;\n        Object.keys(timeline._styleSummary).forEach(function (prop) {\n            var /** @type {?} */ details0 = _this._styleSummary[prop];\n            var /** @type {?} */ details1 = timeline._styleSummary[prop];\n            if (!details0 || details1.time > details0.time) {\n                _this._updateStyle(prop, details1.value);\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TimelineBuilder.prototype.buildKeyframes = function () {\n        var _this = this;\n        this.applyStylesToKeyframe();\n        var /** @type {?} */ preStyleProps = new Set();\n        var /** @type {?} */ postStyleProps = new Set();\n        var /** @type {?} */ isEmpty = this._keyframes.size === 1 && this.duration === 0;\n        var /** @type {?} */ finalKeyframes = [];\n        this._keyframes.forEach(function (keyframe, time) {\n            var /** @type {?} */ finalKeyframe = copyStyles(keyframe, true);\n            Object.keys(finalKeyframe).forEach(function (prop) {\n                var /** @type {?} */ value = finalKeyframe[prop];\n                if (value == ɵPRE_STYLE) {\n                    preStyleProps.add(prop);\n                }\n                else if (value == AUTO_STYLE) {\n                    postStyleProps.add(prop);\n                }\n            });\n            if (!isEmpty) {\n                finalKeyframe['offset'] = time / _this.duration;\n            }\n            finalKeyframes.push(finalKeyframe);\n        });\n        var /** @type {?} */ preProps = preStyleProps.size ? iteratorToArray(preStyleProps.values()) : [];\n        var /** @type {?} */ postProps = postStyleProps.size ? iteratorToArray(postStyleProps.values()) : [];\n        // special case for a 0-second animation (which is designed just to place styles onscreen)\n        if (isEmpty) {\n            var /** @type {?} */ kf0 = finalKeyframes[0];\n            var /** @type {?} */ kf1 = copyObj(kf0);\n            kf0['offset'] = 0;\n            kf1['offset'] = 1;\n            finalKeyframes = [kf0, kf1];\n        }\n        return createTimelineInstruction(this.element, finalKeyframes, preProps, postProps, this.duration, this.startTime, this.easing, false);\n    };\n    return TimelineBuilder;\n}());\nvar SubTimelineBuilder = (function (_super) {\n    tslib_1.__extends(SubTimelineBuilder, _super);\n    /**\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} preStyleProps\n     * @param {?} postStyleProps\n     * @param {?} timings\n     * @param {?=} _stretchStartingKeyframe\n     */\n    function SubTimelineBuilder(element, keyframes, preStyleProps, postStyleProps, timings, _stretchStartingKeyframe) {\n        if (_stretchStartingKeyframe === void 0) { _stretchStartingKeyframe = false; }\n        var _this = _super.call(this, element, timings.delay) || this;\n        _this.element = element;\n        _this.keyframes = keyframes;\n        _this.preStyleProps = preStyleProps;\n        _this.postStyleProps = postStyleProps;\n        _this._stretchStartingKeyframe = _stretchStartingKeyframe;\n        _this.timings = { duration: timings.duration, delay: timings.delay, easing: timings.easing };\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    SubTimelineBuilder.prototype.containsAnimation = function () { return this.keyframes.length > 1; };\n    /**\n     * @return {?}\n     */\n    SubTimelineBuilder.prototype.buildKeyframes = function () {\n        var /** @type {?} */ keyframes = this.keyframes;\n        var _a = this.timings, delay = _a.delay, duration = _a.duration, easing = _a.easing;\n        if (this._stretchStartingKeyframe && delay) {\n            var /** @type {?} */ newKeyframes = [];\n            var /** @type {?} */ totalTime = duration + delay;\n            var /** @type {?} */ startingGap = delay / totalTime;\n            // the original starting keyframe now starts once the delay is done\n            var /** @type {?} */ newFirstKeyframe = copyStyles(keyframes[0], false);\n            newFirstKeyframe['offset'] = 0;\n            newKeyframes.push(newFirstKeyframe);\n            var /** @type {?} */ oldFirstKeyframe = copyStyles(keyframes[0], false);\n            oldFirstKeyframe['offset'] = roundOffset(startingGap);\n            newKeyframes.push(oldFirstKeyframe);\n            /*\n              When the keyframe is stretched then it means that the delay before the animation\n              starts is gone. Instead the first keyframe is placed at the start of the animation\n              and it is then copied to where it starts when the original delay is over. This basically\n              means nothing animates during that delay, but the styles are still renderered. For this\n              to work the original offset values that exist in the original keyframes must be \"warped\"\n              so that they can take the new keyframe + delay into account.\n      \n              delay=1000, duration=1000, keyframes = 0 .5 1\n      \n              turns into\n      \n              delay=0, duration=2000, keyframes = 0 .33 .66 1\n             */\n            // offsets between 1 ... n -1 are all warped by the keyframe stretch\n            var /** @type {?} */ limit = keyframes.length - 1;\n            for (var /** @type {?} */ i = 1; i <= limit; i++) {\n                var /** @type {?} */ kf = copyStyles(keyframes[i], false);\n                var /** @type {?} */ oldOffset = (kf['offset']);\n                var /** @type {?} */ timeAtKeyframe = delay + oldOffset * duration;\n                kf['offset'] = roundOffset(timeAtKeyframe / totalTime);\n                newKeyframes.push(kf);\n            }\n            // the new starting keyframe should be added at the start\n            duration = totalTime;\n            delay = 0;\n            easing = '';\n            keyframes = newKeyframes;\n        }\n        return createTimelineInstruction(this.element, keyframes, this.preStyleProps, this.postStyleProps, duration, delay, easing, true);\n    };\n    return SubTimelineBuilder;\n}(TimelineBuilder));\n/**\n * @param {?} offset\n * @param {?=} decimalPoints\n * @return {?}\n */\nfunction roundOffset(offset, decimalPoints) {\n    if (decimalPoints === void 0) { decimalPoints = 3; }\n    var /** @type {?} */ mult = Math.pow(10, decimalPoints - 1);\n    return Math.round(offset * mult) / mult;\n}\n/**\n * @param {?} input\n * @param {?} allStyles\n * @return {?}\n */\nfunction flattenStyles(input, allStyles) {\n    var /** @type {?} */ styles = {};\n    var /** @type {?} */ allProperties;\n    input.forEach(function (token) {\n        if (token === '*') {\n            allProperties = allProperties || Object.keys(allStyles);\n            allProperties.forEach(function (prop) { styles[prop] = AUTO_STYLE; });\n        }\n        else {\n            copyStyles(/** @type {?} */ (token), false, styles);\n        }\n    });\n    return styles;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Animation = (function () {\n    /**\n     * @param {?} _driver\n     * @param {?} input\n     */\n    function Animation(_driver, input) {\n        this._driver = _driver;\n        var errors = [];\n        var ast = buildAnimationAst(input, errors);\n        if (errors.length) {\n            var errorMessage = \"animation validation failed:\\n\" + errors.join(\"\\n\");\n            throw new Error(errorMessage);\n        }\n        this._animationAst = ast;\n    }\n    /**\n     * @param {?} element\n     * @param {?} startingStyles\n     * @param {?} destinationStyles\n     * @param {?} options\n     * @param {?=} subInstructions\n     * @return {?}\n     */\n    Animation.prototype.buildTimelines = function (element, startingStyles, destinationStyles, options, subInstructions) {\n        var /** @type {?} */ start = Array.isArray(startingStyles) ? normalizeStyles(startingStyles) : (startingStyles);\n        var /** @type {?} */ dest = Array.isArray(destinationStyles) ? normalizeStyles(destinationStyles) : (destinationStyles);\n        var /** @type {?} */ errors = [];\n        subInstructions = subInstructions || new ElementInstructionMap();\n        var /** @type {?} */ result = buildAnimationTimelines(this._driver, element, this._animationAst, start, dest, options, subInstructions, errors);\n        if (errors.length) {\n            var /** @type {?} */ errorMessage = \"animation building failed:\\n\" + errors.join(\"\\n\");\n            throw new Error(errorMessage);\n        }\n        return result;\n    };\n    return Animation;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @experimental Animation support is experimental.\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */ var AnimationStyleNormalizer = (function () {\n    function AnimationStyleNormalizer() {\n    }\n    return AnimationStyleNormalizer;\n}());\n/**\n * @experimental Animation support is experimental.\n */\nvar NoopAnimationStyleNormalizer = (function () {\n    function NoopAnimationStyleNormalizer() {\n    }\n    NoopAnimationStyleNormalizer.prototype.normalizePropertyName = function (propertyName, errors) { return propertyName; };\n    NoopAnimationStyleNormalizer.prototype.normalizeStyleValue = function (userProvidedProperty, normalizedProperty, value, errors) {\n        return value;\n    };\n    return NoopAnimationStyleNormalizer;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar WebAnimationsStyleNormalizer = (function (_super) {\n    tslib_1.__extends(WebAnimationsStyleNormalizer, _super);\n    function WebAnimationsStyleNormalizer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} propertyName\n     * @param {?} errors\n     * @return {?}\n     */\n    WebAnimationsStyleNormalizer.prototype.normalizePropertyName = function (propertyName, errors) {\n        return dashCaseToCamelCase(propertyName);\n    };\n    /**\n     * @param {?} userProvidedProperty\n     * @param {?} normalizedProperty\n     * @param {?} value\n     * @param {?} errors\n     * @return {?}\n     */\n    WebAnimationsStyleNormalizer.prototype.normalizeStyleValue = function (userProvidedProperty, normalizedProperty, value, errors) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = value.toString().trim();\n        if (DIMENSIONAL_PROP_MAP[normalizedProperty] && value !== 0 && value !== '0') {\n            if (typeof value === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = value.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errors.push(\"Please provide a CSS unit value for \" + userProvidedProperty + \":\" + value);\n                }\n            }\n        }\n        return strVal + unit;\n    };\n    return WebAnimationsStyleNormalizer;\n}(AnimationStyleNormalizer));\nvar DIMENSIONAL_PROP_MAP = makeBooleanMap('width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective'\n    .split(','));\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction makeBooleanMap(keys) {\n    var /** @type {?} */ map = {};\n    keys.forEach(function (key) { return map[key] = true; });\n    return map;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} element\n * @param {?} triggerName\n * @param {?} fromState\n * @param {?} toState\n * @param {?} isRemovalTransition\n * @param {?} fromStyles\n * @param {?} toStyles\n * @param {?} timelines\n * @param {?} queriedElements\n * @param {?} preStyleProps\n * @param {?} postStyleProps\n * @return {?}\n */\nfunction createTransitionInstruction(element, triggerName, fromState, toState, isRemovalTransition, fromStyles, toStyles, timelines, queriedElements, preStyleProps, postStyleProps) {\n    return {\n        type: 0 /* TransitionAnimation */,\n        element: element,\n        triggerName: triggerName,\n        isRemovalTransition: isRemovalTransition,\n        fromState: fromState,\n        fromStyles: fromStyles,\n        toState: toState,\n        toStyles: toStyles,\n        timelines: timelines,\n        queriedElements: queriedElements,\n        preStyleProps: preStyleProps,\n        postStyleProps: postStyleProps\n    };\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AnimationTransitionFactory = (function () {\n    /**\n     * @param {?} _triggerName\n     * @param {?} ast\n     * @param {?} _stateStyles\n     */\n    function AnimationTransitionFactory(_triggerName, ast, _stateStyles) {\n        this._triggerName = _triggerName;\n        this.ast = ast;\n        this._stateStyles = _stateStyles;\n    }\n    /**\n     * @param {?} currentState\n     * @param {?} nextState\n     * @return {?}\n     */\n    AnimationTransitionFactory.prototype.match = function (currentState, nextState) {\n        return oneOrMoreTransitionsMatch(this.ast.matchers, currentState, nextState);\n    };\n    /**\n     * @param {?} driver\n     * @param {?} element\n     * @param {?} currentState\n     * @param {?} nextState\n     * @param {?=} options\n     * @param {?=} subInstructions\n     * @return {?}\n     */\n    AnimationTransitionFactory.prototype.build = function (driver, element, currentState, nextState, options, subInstructions) {\n        var /** @type {?} */ animationOptions = mergeAnimationOptions(this.ast.options || {}, options || {});\n        var /** @type {?} */ backupStateStyles = this._stateStyles['*'] || {};\n        var /** @type {?} */ currentStateStyles = this._stateStyles[currentState] || backupStateStyles;\n        var /** @type {?} */ nextStateStyles = this._stateStyles[nextState] || backupStateStyles;\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ timelines = buildAnimationTimelines(driver, element, this.ast.animation, currentStateStyles, nextStateStyles, animationOptions, subInstructions, errors);\n        if (errors.length) {\n            var /** @type {?} */ errorMessage = \"animation building failed:\\n\" + errors.join(\"\\n\");\n            throw new Error(errorMessage);\n        }\n        var /** @type {?} */ preStyleMap = new Map();\n        var /** @type {?} */ postStyleMap = new Map();\n        var /** @type {?} */ queriedElements = new Set();\n        timelines.forEach(function (tl) {\n            var /** @type {?} */ elm = tl.element;\n            var /** @type {?} */ preProps = getOrSetAsInMap(preStyleMap, elm, {});\n            tl.preStyleProps.forEach(function (prop) { return preProps[prop] = true; });\n            var /** @type {?} */ postProps = getOrSetAsInMap(postStyleMap, elm, {});\n            tl.postStyleProps.forEach(function (prop) { return postProps[prop] = true; });\n            if (elm !== element) {\n                queriedElements.add(elm);\n            }\n        });\n        var /** @type {?} */ queriedElementsList = iteratorToArray(queriedElements.values());\n        return createTransitionInstruction(element, this._triggerName, currentState, nextState, nextState === 'void', currentStateStyles, nextStateStyles, timelines, queriedElementsList, preStyleMap, postStyleMap);\n    };\n    return AnimationTransitionFactory;\n}());\n/**\n * @param {?} matchFns\n * @param {?} currentState\n * @param {?} nextState\n * @return {?}\n */\nfunction oneOrMoreTransitionsMatch(matchFns, currentState, nextState) {\n    return matchFns.some(function (fn) { return fn(currentState, nextState); });\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} ast\n * @return {?}\n */\nfunction buildTrigger(name, ast) {\n    return new AnimationTrigger(name, ast);\n}\n/**\n * \\@experimental Animation support is experimental.\n */\nvar AnimationTrigger = (function () {\n    /**\n     * @param {?} name\n     * @param {?} ast\n     */\n    function AnimationTrigger(name, ast) {\n        var _this = this;\n        this.name = name;\n        this.ast = ast;\n        this.transitionFactories = [];\n        this.states = {};\n        ast.states.forEach(function (ast) {\n            var obj = _this.states[ast.name] = {};\n            ast.style.styles.forEach(function (styleTuple) {\n                if (typeof styleTuple == 'object') {\n                    copyStyles(styleTuple, false, obj);\n                }\n            });\n        });\n        balanceProperties(this.states, 'true', '1');\n        balanceProperties(this.states, 'false', '0');\n        ast.transitions.forEach(function (ast) {\n            _this.transitionFactories.push(new AnimationTransitionFactory(name, ast, _this.states));\n        });\n        this.fallbackTransition = createFallbackTransition(name, this.states);\n    }\n    Object.defineProperty(AnimationTrigger.prototype, \"containsQueries\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.ast.queryCount > 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} currentState\n     * @param {?} nextState\n     * @return {?}\n     */\n    AnimationTrigger.prototype.matchTransition = function (currentState, nextState) {\n        var /** @type {?} */ entry = this.transitionFactories.find(function (f) { return f.match(currentState, nextState); });\n        return entry || null;\n    };\n    return AnimationTrigger;\n}());\n/**\n * @param {?} triggerName\n * @param {?} states\n * @return {?}\n */\nfunction createFallbackTransition(triggerName, states) {\n    var /** @type {?} */ matchers = [function (fromState, toState) { return true; }];\n    var /** @type {?} */ animation = new SequenceAst([]);\n    var /** @type {?} */ transition = new TransitionAst(matchers, animation);\n    return new AnimationTransitionFactory(triggerName, transition, states);\n}\n/**\n * @param {?} obj\n * @param {?} key1\n * @param {?} key2\n * @return {?}\n */\nfunction balanceProperties(obj, key1, key2) {\n    if (obj.hasOwnProperty(key1)) {\n        if (!obj.hasOwnProperty(key2)) {\n            obj[key2] = obj[key1];\n        }\n    }\n    else if (obj.hasOwnProperty(key2)) {\n        obj[key1] = obj[key2];\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_INSTRUCTION_MAP = new ElementInstructionMap();\nvar TimelineAnimationEngine = (function () {\n    /**\n     * @param {?} _driver\n     * @param {?} _normalizer\n     */\n    function TimelineAnimationEngine(_driver, _normalizer) {\n        this._driver = _driver;\n        this._normalizer = _normalizer;\n        this._animations = {};\n        this._playersById = {};\n        this.players = [];\n    }\n    /**\n     * @param {?} id\n     * @param {?} metadata\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.register = function (id, metadata) {\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ ast = buildAnimationAst(metadata, errors);\n        if (errors.length) {\n            throw new Error(\"Unable to build the animation due to the following errors: \" + errors.join(\"\\n\"));\n        }\n        else {\n            this._animations[id] = ast;\n        }\n    };\n    /**\n     * @param {?} i\n     * @param {?} preStyles\n     * @param {?=} postStyles\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype._buildPlayer = function (i, preStyles, postStyles) {\n        var /** @type {?} */ element = i.element;\n        var /** @type {?} */ keyframes = normalizeKeyframes(this._driver, this._normalizer, element, i.keyframes, preStyles, postStyles);\n        return this._driver.animate(element, keyframes, i.duration, i.delay, i.easing, []);\n    };\n    /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?=} options\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.create = function (id, element, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ ast = this._animations[id];\n        var /** @type {?} */ instructions;\n        var /** @type {?} */ autoStylesMap = new Map();\n        if (ast) {\n            instructions = buildAnimationTimelines(this._driver, element, ast, {}, {}, options, EMPTY_INSTRUCTION_MAP, errors);\n            instructions.forEach(function (inst) {\n                var /** @type {?} */ styles = getOrSetAsInMap(autoStylesMap, inst.element, {});\n                inst.postStyleProps.forEach(function (prop) { return styles[prop] = null; });\n            });\n        }\n        else {\n            errors.push('The requested animation doesn\\'t exist or has already been destroyed');\n            instructions = [];\n        }\n        if (errors.length) {\n            throw new Error(\"Unable to create the animation due to the following errors: \" + errors.join(\"\\n\"));\n        }\n        autoStylesMap.forEach(function (styles, element) {\n            Object.keys(styles).forEach(function (prop) { styles[prop] = _this._driver.computeStyle(element, prop, AUTO_STYLE); });\n        });\n        var /** @type {?} */ players = instructions.map(function (i) {\n            var /** @type {?} */ styles = autoStylesMap.get(i.element);\n            return _this._buildPlayer(i, {}, styles);\n        });\n        var /** @type {?} */ player = optimizeGroupPlayer(players);\n        this._playersById[id] = player;\n        player.onDestroy(function () { return _this.destroy(id); });\n        this.players.push(player);\n        return player;\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.destroy = function (id) {\n        var /** @type {?} */ player = this._getPlayer(id);\n        player.destroy();\n        delete this._playersById[id];\n        var /** @type {?} */ index = this.players.indexOf(player);\n        if (index >= 0) {\n            this.players.splice(index, 1);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype._getPlayer = function (id) {\n        var /** @type {?} */ player = this._playersById[id];\n        if (!player) {\n            throw new Error(\"Unable to find the timeline player referenced by \" + id);\n        }\n        return player;\n    };\n    /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.listen = function (id, element, eventName, callback) {\n        // triggerName, fromState, toState are all ignored for timeline animations\n        var /** @type {?} */ baseEvent = makeAnimationEvent(element, '', '', '');\n        listenOnPlayer(this._getPlayer(id), eventName, baseEvent, callback);\n        return function () { };\n    };\n    /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?} command\n     * @param {?} args\n     * @return {?}\n     */\n    TimelineAnimationEngine.prototype.command = function (id, element, command, args) {\n        if (command == 'register') {\n            this.register(id, /** @type {?} */ (args[0]));\n            return;\n        }\n        if (command == 'create') {\n            var /** @type {?} */ options = ((args[0] || {}));\n            this.create(id, element, options);\n            return;\n        }\n        var /** @type {?} */ player = this._getPlayer(id);\n        switch (command) {\n            case 'play':\n                player.play();\n                break;\n            case 'pause':\n                player.pause();\n                break;\n            case 'reset':\n                player.reset();\n                break;\n            case 'restart':\n                player.restart();\n                break;\n            case 'finish':\n                player.finish();\n                break;\n            case 'init':\n                player.init();\n                break;\n            case 'setPosition':\n                player.setPosition(parseFloat(/** @type {?} */ (args[0])));\n                break;\n            case 'destroy':\n                this.destroy(id);\n                break;\n        }\n    };\n    return TimelineAnimationEngine;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_PLAYER_ARRAY = [];\nvar NULL_REMOVAL_STATE = {\n    namespaceId: '',\n    setForRemoval: null,\n    hasAnimation: false,\n    removedBeforeQueried: false\n};\nvar NULL_REMOVED_QUERIED_STATE = {\n    namespaceId: '',\n    setForRemoval: null,\n    hasAnimation: false,\n    removedBeforeQueried: true\n};\nvar REMOVAL_FLAG = '__ng_removed';\nvar StateValue = (function () {\n    /**\n     * @param {?} input\n     */\n    function StateValue(input) {\n        var isObj = input && input.hasOwnProperty('value');\n        var value = isObj ? input['value'] : input;\n        this.value = normalizeTriggerValue(value);\n        if (isObj) {\n            var options = copyObj(input);\n            delete options['value'];\n            this.options = options;\n        }\n        else {\n            this.options = {};\n        }\n        if (!this.options.params) {\n            this.options.params = {};\n        }\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    StateValue.prototype.absorbOptions = function (options) {\n        var /** @type {?} */ newParams = options.params;\n        if (newParams) {\n            var /** @type {?} */ oldParams_2 = ((this.options.params));\n            Object.keys(newParams).forEach(function (prop) {\n                if (oldParams_2[prop] == null) {\n                    oldParams_2[prop] = newParams[prop];\n                }\n            });\n        }\n    };\n    return StateValue;\n}());\nvar VOID_VALUE = 'void';\nvar DEFAULT_STATE_VALUE = new StateValue(VOID_VALUE);\nvar DELETED_STATE_VALUE = new StateValue('DELETED');\nvar POTENTIAL_ENTER_CLASSNAME = ENTER_CLASSNAME + '-temp';\nvar POTENTIAL_ENTER_SELECTOR = '.' + POTENTIAL_ENTER_CLASSNAME;\nvar AnimationTransitionNamespace = (function () {\n    /**\n     * @param {?} id\n     * @param {?} hostElement\n     * @param {?} _engine\n     */\n    function AnimationTransitionNamespace(id, hostElement, _engine) {\n        this.id = id;\n        this.hostElement = hostElement;\n        this._engine = _engine;\n        this.players = [];\n        this._triggers = {};\n        this._queue = [];\n        this._elementListeners = new Map();\n        this._hostClassName = 'ng-tns-' + id;\n        addClass(hostElement, this._hostClassName);\n    }\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @param {?} phase\n     * @param {?} callback\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.listen = function (element, name, phase, callback) {\n        var _this = this;\n        if (!this._triggers.hasOwnProperty(name)) {\n            throw new Error(\"Unable to listen on the animation trigger event \\\"\" + phase + \"\\\" because the animation trigger \\\"\" + name + \"\\\" doesn't exist!\");\n        }\n        if (phase == null || phase.length == 0) {\n            throw new Error(\"Unable to listen on the animation trigger \\\"\" + name + \"\\\" because the provided event is undefined!\");\n        }\n        if (!isTriggerEventValid(phase)) {\n            throw new Error(\"The provided animation trigger event \\\"\" + phase + \"\\\" for the animation trigger \\\"\" + name + \"\\\" is not supported!\");\n        }\n        var /** @type {?} */ listeners = getOrSetAsInMap(this._elementListeners, element, []);\n        var /** @type {?} */ data = { name: name, phase: phase, callback: callback };\n        listeners.push(data);\n        var /** @type {?} */ triggersWithStates = getOrSetAsInMap(this._engine.statesByElement, element, {});\n        if (!triggersWithStates.hasOwnProperty(name)) {\n            addClass(element, NG_TRIGGER_CLASSNAME);\n            addClass(element, NG_TRIGGER_CLASSNAME + '-' + name);\n            triggersWithStates[name] = null;\n        }\n        return function () {\n            // the event listener is removed AFTER the flush has occurred such\n            // that leave animations callbacks can fire (otherwise if the node\n            // is removed in between then the listeners would be deregistered)\n            _this._engine.afterFlush(function () {\n                var /** @type {?} */ index = listeners.indexOf(data);\n                if (index >= 0) {\n                    listeners.splice(index, 1);\n                }\n                if (!_this._triggers[name]) {\n                    delete triggersWithStates[name];\n                }\n            });\n        };\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.register = function (name, ast) {\n        if (this._triggers[name]) {\n            // throw\n            return false;\n        }\n        else {\n            this._triggers[name] = ast;\n            return true;\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype._getTrigger = function (name) {\n        var /** @type {?} */ trigger = this._triggers[name];\n        if (!trigger) {\n            throw new Error(\"The provided animation trigger \\\"\" + name + \"\\\" has not been registered!\");\n        }\n        return trigger;\n    };\n    /**\n     * @param {?} element\n     * @param {?} triggerName\n     * @param {?} value\n     * @param {?=} defaultToFallback\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.trigger = function (element, triggerName, value, defaultToFallback) {\n        var _this = this;\n        if (defaultToFallback === void 0) { defaultToFallback = true; }\n        var /** @type {?} */ trigger = this._getTrigger(triggerName);\n        var /** @type {?} */ player = new TransitionAnimationPlayer(this.id, triggerName, element);\n        var /** @type {?} */ triggersWithStates = this._engine.statesByElement.get(element);\n        if (!triggersWithStates) {\n            addClass(element, NG_TRIGGER_CLASSNAME);\n            addClass(element, NG_TRIGGER_CLASSNAME + '-' + triggerName);\n            this._engine.statesByElement.set(element, triggersWithStates = {});\n        }\n        var /** @type {?} */ fromState = triggersWithStates[triggerName];\n        var /** @type {?} */ toState = new StateValue(value);\n        var /** @type {?} */ isObj = value && value.hasOwnProperty('value');\n        if (!isObj && fromState) {\n            toState.absorbOptions(fromState.options);\n        }\n        triggersWithStates[triggerName] = toState;\n        if (!fromState) {\n            fromState = DEFAULT_STATE_VALUE;\n        }\n        else if (fromState === DELETED_STATE_VALUE) {\n            return player;\n        }\n        var /** @type {?} */ playersOnElement = getOrSetAsInMap(this._engine.playersByElement, element, []);\n        playersOnElement.forEach(function (player) {\n            // only remove the player if it is queued on the EXACT same trigger/namespace\n            // we only also deal with queued players here because if the animation has\n            // started then we want to keep the player alive until the flush happens\n            // (which is where the previousPlayers are passed into the new palyer)\n            if (player.namespaceId == _this.id && player.triggerName == triggerName && player.queued) {\n                player.destroy();\n            }\n        });\n        var /** @type {?} */ transition = trigger.matchTransition(fromState.value, toState.value);\n        var /** @type {?} */ isFallbackTransition = false;\n        if (!transition) {\n            if (!defaultToFallback)\n                return;\n            transition = trigger.fallbackTransition;\n            isFallbackTransition = true;\n        }\n        this._engine.totalQueuedPlayers++;\n        this._queue.push({ element: element, triggerName: triggerName, transition: transition, fromState: fromState, toState: toState, player: player, isFallbackTransition: isFallbackTransition });\n        if (!isFallbackTransition) {\n            addClass(element, NG_ANIMATING_CLASSNAME);\n        }\n        player.onDone(function () {\n            removeClass(element, NG_ANIMATING_CLASSNAME);\n            var /** @type {?} */ index = _this.players.indexOf(player);\n            if (index >= 0) {\n                _this.players.splice(index, 1);\n            }\n            var /** @type {?} */ players = _this._engine.playersByElement.get(element);\n            if (players) {\n                var /** @type {?} */ index_1 = players.indexOf(player);\n                if (index_1 >= 0) {\n                    players.splice(index_1, 1);\n                }\n            }\n        });\n        this.players.push(player);\n        playersOnElement.push(player);\n        return player;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.deregister = function (name) {\n        var _this = this;\n        delete this._triggers[name];\n        this._engine.statesByElement.forEach(function (stateMap, element) { delete stateMap[name]; });\n        this._elementListeners.forEach(function (listeners, element) {\n            _this._elementListeners.set(element, listeners.filter(function (entry) { return entry.name != name; }));\n        });\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.clearElementCache = function (element) {\n        this._engine.statesByElement.delete(element);\n        this._elementListeners.delete(element);\n        var /** @type {?} */ elementPlayers = this._engine.playersByElement.get(element);\n        if (elementPlayers) {\n            elementPlayers.forEach(function (player) { return player.destroy(); });\n            this._engine.playersByElement.delete(element);\n        }\n    };\n    /**\n     * @param {?} rootElement\n     * @param {?} context\n     * @param {?=} animate\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype._destroyInnerNodes = function (rootElement, context, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = false; }\n        this._engine.driver.query(rootElement, NG_TRIGGER_SELECTOR, true).forEach(function (elm) {\n            if (animate && containsClass(elm, _this._hostClassName)) {\n                var /** @type {?} */ innerNs = _this._engine.namespacesByHostElement.get(elm);\n                // special case for a host element with animations on the same element\n                if (innerNs) {\n                    innerNs.removeNode(elm, context, true);\n                }\n                _this.removeNode(elm, context, true);\n            }\n            else {\n                _this.clearElementCache(elm);\n            }\n        });\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @param {?=} doNotRecurse\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.removeNode = function (element, context, doNotRecurse) {\n        var _this = this;\n        var /** @type {?} */ engine = this._engine;\n        if (!doNotRecurse && element.childElementCount) {\n            this._destroyInnerNodes(element, context, true);\n        }\n        var /** @type {?} */ triggerStates = engine.statesByElement.get(element);\n        if (triggerStates) {\n            var /** @type {?} */ players_1 = [];\n            Object.keys(triggerStates).forEach(function (triggerName) {\n                // this check is here in the event that an element is removed\n                // twice (both on the host level and the component level)\n                if (_this._triggers[triggerName]) {\n                    var /** @type {?} */ player = _this.trigger(element, triggerName, VOID_VALUE, false);\n                    if (player) {\n                        players_1.push(player);\n                    }\n                }\n            });\n            if (players_1.length) {\n                engine.markElementAsRemoved(this.id, element, true, context);\n                optimizeGroupPlayer(players_1).onDone(function () { return engine.processLeaveNode(element); });\n                return;\n            }\n        }\n        // find the player that is animating and make sure that the\n        // removal is delayed until that player has completed\n        var /** @type {?} */ containsPotentialParentTransition = false;\n        if (engine.totalAnimations) {\n            var /** @type {?} */ currentPlayers = engine.players.length ? engine.playersByQueriedElement.get(element) : [];\n            // when this `if statement` does not continue forward it means that\n            // a previous animation query has selected the current element and\n            // is animating it. In this situation want to continue fowards and\n            // allow the element to be queued up for animation later.\n            if (currentPlayers && currentPlayers.length) {\n                containsPotentialParentTransition = true;\n            }\n            else {\n                var /** @type {?} */ parent = element;\n                while (parent = parent.parentNode) {\n                    var /** @type {?} */ triggers = engine.statesByElement.get(parent);\n                    if (triggers) {\n                        containsPotentialParentTransition = true;\n                        break;\n                    }\n                }\n            }\n        }\n        // at this stage we know that the element will either get removed\n        // during flush or will be picked up by a parent query. Either way\n        // we need to fire the listeners for this element when it DOES get\n        // removed (once the query parent animation is done or after flush)\n        var /** @type {?} */ listeners = this._elementListeners.get(element);\n        if (listeners) {\n            var /** @type {?} */ visitedTriggers_1 = new Set();\n            listeners.forEach(function (listener) {\n                var /** @type {?} */ triggerName = listener.name;\n                if (visitedTriggers_1.has(triggerName))\n                    return;\n                visitedTriggers_1.add(triggerName);\n                var /** @type {?} */ trigger = _this._triggers[triggerName];\n                var /** @type {?} */ transition = trigger.fallbackTransition;\n                var /** @type {?} */ elementStates = ((engine.statesByElement.get(element)));\n                var /** @type {?} */ fromState = elementStates[triggerName] || DEFAULT_STATE_VALUE;\n                var /** @type {?} */ toState = new StateValue(VOID_VALUE);\n                var /** @type {?} */ player = new TransitionAnimationPlayer(_this.id, triggerName, element);\n                _this._engine.totalQueuedPlayers++;\n                _this._queue.push({\n                    element: element,\n                    triggerName: triggerName,\n                    transition: transition,\n                    fromState: fromState,\n                    toState: toState,\n                    player: player,\n                    isFallbackTransition: true\n                });\n            });\n        }\n        // whether or not a parent has an animation we need to delay the deferral of the leave\n        // operation until we have more information (which we do after flush() has been called)\n        if (containsPotentialParentTransition) {\n            engine.markElementAsRemoved(this.id, element, false, context);\n        }\n        else {\n            // we do this after the flush has occurred such\n            // that the callbacks can be fired\n            engine.afterFlush(function () { return _this.clearElementCache(element); });\n            engine.destroyInnerAnimations(element);\n            engine._onRemovalComplete(element, context);\n        }\n    };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.insertNode = function (element, parent) { addClass(element, this._hostClassName); };\n    /**\n     * @param {?} microtaskId\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.drainQueuedTransitions = function (microtaskId) {\n        var _this = this;\n        var /** @type {?} */ instructions = [];\n        this._queue.forEach(function (entry) {\n            var /** @type {?} */ player = entry.player;\n            if (player.destroyed)\n                return;\n            var /** @type {?} */ element = entry.element;\n            var /** @type {?} */ listeners = _this._elementListeners.get(element);\n            if (listeners) {\n                listeners.forEach(function (listener) {\n                    if (listener.name == entry.triggerName) {\n                        var /** @type {?} */ baseEvent = makeAnimationEvent(element, entry.triggerName, entry.fromState.value, entry.toState.value);\n                        ((baseEvent))['_data'] = microtaskId;\n                        listenOnPlayer(entry.player, listener.phase, baseEvent, listener.callback);\n                    }\n                });\n            }\n            if (player.markedForDestroy) {\n                _this._engine.afterFlush(function () {\n                    // now we can destroy the element properly since the event listeners have\n                    // been bound to the player\n                    player.destroy();\n                });\n            }\n            else {\n                instructions.push(entry);\n            }\n        });\n        this._queue = [];\n        return instructions.sort(function (a, b) {\n            // if depCount == 0 them move to front\n            // otherwise if a contains b then move back\n            var /** @type {?} */ d0 = a.transition.ast.depCount;\n            var /** @type {?} */ d1 = b.transition.ast.depCount;\n            if (d0 == 0 || d1 == 0) {\n                return d0 - d1;\n            }\n            return _this._engine.driver.containsElement(a.element, b.element) ? 1 : -1;\n        });\n    };\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.destroy = function (context) {\n        this.players.forEach(function (p) { return p.destroy(); });\n        this._destroyInnerNodes(this.hostElement, context);\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    AnimationTransitionNamespace.prototype.elementContainsData = function (element) {\n        var /** @type {?} */ containsData = false;\n        if (this._elementListeners.has(element))\n            containsData = true;\n        containsData =\n            (this._queue.find(function (entry) { return entry.element === element; }) ? true : false) || containsData;\n        return containsData;\n    };\n    return AnimationTransitionNamespace;\n}());\nvar TransitionAnimationEngine = (function () {\n    /**\n     * @param {?} driver\n     * @param {?} _normalizer\n     */\n    function TransitionAnimationEngine(driver, _normalizer) {\n        this.driver = driver;\n        this._normalizer = _normalizer;\n        this.players = [];\n        this.newHostElements = new Map();\n        this.playersByElement = new Map();\n        this.playersByQueriedElement = new Map();\n        this.statesByElement = new Map();\n        this.totalAnimations = 0;\n        this.totalQueuedPlayers = 0;\n        this._namespaceLookup = {};\n        this._namespaceList = [];\n        this._flushFns = [];\n        this._whenQuietFns = [];\n        this.namespacesByHostElement = new Map();\n        this.collectedEnterElements = [];\n        this.collectedLeaveElements = [];\n        this.onRemovalComplete = function (element, context) { };\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._onRemovalComplete = function (element, context) { this.onRemovalComplete(element, context); };\n    Object.defineProperty(TransitionAnimationEngine.prototype, \"queuedPlayers\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ players = [];\n            this._namespaceList.forEach(function (ns) {\n                ns.players.forEach(function (player) {\n                    if (player.queued) {\n                        players.push(player);\n                    }\n                });\n            });\n            return players;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.createNamespace = function (namespaceId, hostElement) {\n        var /** @type {?} */ ns = new AnimationTransitionNamespace(namespaceId, hostElement, this);\n        if (hostElement.parentNode) {\n            this._balanceNamespaceList(ns, hostElement);\n        }\n        else {\n            // defer this later until flush during when the host element has\n            // been inserted so that we know exactly where to place it in\n            // the namespace list\n            this.newHostElements.set(hostElement, ns);\n            // given that this host element is apart of the animation code, it\n            // may or may not be inserted by a parent node that is an of an\n            // animation renderer type. If this happens then we can still have\n            // access to this item when we query for :enter nodes. If the parent\n            // is a renderer then the set data-structure will normalize the entry\n            this.collectEnterElement(hostElement);\n        }\n        return this._namespaceLookup[namespaceId] = ns;\n    };\n    /**\n     * @param {?} ns\n     * @param {?} hostElement\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._balanceNamespaceList = function (ns, hostElement) {\n        var /** @type {?} */ limit = this._namespaceList.length - 1;\n        if (limit >= 0) {\n            var /** @type {?} */ found = false;\n            for (var /** @type {?} */ i = limit; i >= 0; i--) {\n                var /** @type {?} */ nextNamespace = this._namespaceList[i];\n                if (this.driver.containsElement(nextNamespace.hostElement, hostElement)) {\n                    this._namespaceList.splice(i + 1, 0, ns);\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                this._namespaceList.splice(0, 0, ns);\n            }\n        }\n        else {\n            this._namespaceList.push(ns);\n        }\n        this.namespacesByHostElement.set(hostElement, ns);\n        return ns;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.register = function (namespaceId, hostElement) {\n        var /** @type {?} */ ns = this._namespaceLookup[namespaceId];\n        if (!ns) {\n            ns = this.createNamespace(namespaceId, hostElement);\n        }\n        return ns;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} name\n     * @param {?} trigger\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.registerTrigger = function (namespaceId, name, trigger) {\n        var /** @type {?} */ ns = this._namespaceLookup[namespaceId];\n        if (ns && ns.register(name, trigger)) {\n            this.totalAnimations++;\n        }\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} context\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.destroy = function (namespaceId, context) {\n        var _this = this;\n        if (!namespaceId)\n            return;\n        var /** @type {?} */ ns = this._fetchNamespace(namespaceId);\n        this.afterFlush(function () {\n            _this.namespacesByHostElement.delete(ns.hostElement);\n            delete _this._namespaceLookup[namespaceId];\n            var /** @type {?} */ index = _this._namespaceList.indexOf(ns);\n            if (index >= 0) {\n                _this._namespaceList.splice(index, 1);\n            }\n        });\n        this.afterFlushAnimationsDone(function () { return ns.destroy(context); });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._fetchNamespace = function (id) { return this._namespaceLookup[id]; };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.trigger = function (namespaceId, element, name, value) {\n        if (isElementNode(element)) {\n            this._fetchNamespace(namespaceId).trigger(element, name, value);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} parent\n     * @param {?} insertBefore\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.insertNode = function (namespaceId, element, parent, insertBefore) {\n        if (!isElementNode(element))\n            return;\n        // special case for when an element is removed and reinserted (move operation)\n        // when this occurs we do not want to use the element for deletion later\n        var /** @type {?} */ details = (element[REMOVAL_FLAG]);\n        if (details && details.setForRemoval) {\n            details.setForRemoval = false;\n        }\n        // in the event that the namespaceId is blank then the caller\n        // code does not contain any animation code in it, but it is\n        // just being called so that the node is marked as being inserted\n        if (namespaceId) {\n            this._fetchNamespace(namespaceId).insertNode(element, parent);\n        }\n        // only *directives and host elements are inserted before\n        if (insertBefore) {\n            this.collectEnterElement(element);\n        }\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.collectEnterElement = function (element) { this.collectedEnterElements.push(element); };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} context\n     * @param {?=} doNotRecurse\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.removeNode = function (namespaceId, element, context, doNotRecurse) {\n        if (!isElementNode(element)) {\n            this._onRemovalComplete(element, context);\n            return;\n        }\n        var /** @type {?} */ ns = namespaceId ? this._fetchNamespace(namespaceId) : null;\n        if (ns) {\n            ns.removeNode(element, context, doNotRecurse);\n        }\n        else {\n            this.markElementAsRemoved(namespaceId, element, false, context);\n        }\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?=} hasAnimation\n     * @param {?=} context\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.markElementAsRemoved = function (namespaceId, element, hasAnimation, context) {\n        this.collectedLeaveElements.push(element);\n        element[REMOVAL_FLAG] = {\n            namespaceId: namespaceId,\n            setForRemoval: context, hasAnimation: hasAnimation,\n            removedBeforeQueried: false\n        };\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} name\n     * @param {?} phase\n     * @param {?} callback\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.listen = function (namespaceId, element, name, phase, callback) {\n        if (isElementNode(element)) {\n            return this._fetchNamespace(namespaceId).listen(element, name, phase, callback);\n        }\n        return function () { };\n    };\n    /**\n     * @param {?} entry\n     * @param {?} subTimelines\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._buildInstruction = function (entry, subTimelines) {\n        return entry.transition.build(this.driver, entry.element, entry.fromState.value, entry.toState.value, entry.toState.options, subTimelines);\n    };\n    /**\n     * @param {?} containerElement\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.destroyInnerAnimations = function (containerElement) {\n        var _this = this;\n        this.driver.query(containerElement, NG_TRIGGER_SELECTOR, true).forEach(function (element) {\n            var /** @type {?} */ players = _this.playersByElement.get(element);\n            if (players) {\n                players.forEach(function (player) {\n                    // special case for when an element is set for destruction, but hasn't started.\n                    // in this situation we want to delay the destruction until the flush occurs\n                    // so that any event listeners attached to the player are triggered.\n                    if (player.queued) {\n                        player.markedForDestroy = true;\n                    }\n                    else {\n                        player.destroy();\n                    }\n                });\n            }\n            var /** @type {?} */ stateMap = _this.statesByElement.get(element);\n            if (stateMap) {\n                Object.keys(stateMap).forEach(function (triggerName) { return stateMap[triggerName] = DELETED_STATE_VALUE; });\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.whenRenderingDone = function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            if (_this.players.length) {\n                return optimizeGroupPlayer(_this.players).onDone(function () { return resolve(); });\n            }\n            else {\n                resolve();\n            }\n        });\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.processLeaveNode = function (element) {\n        var /** @type {?} */ details = (element[REMOVAL_FLAG]);\n        if (details && details.setForRemoval) {\n            // this will prevent it from removing it twice\n            element[REMOVAL_FLAG] = NULL_REMOVAL_STATE;\n            if (details.namespaceId) {\n                this.destroyInnerAnimations(element);\n                var /** @type {?} */ ns = this._fetchNamespace(details.namespaceId);\n                if (ns) {\n                    ns.clearElementCache(element);\n                }\n            }\n            this._onRemovalComplete(element, details.setForRemoval);\n        }\n    };\n    /**\n     * @param {?=} microtaskId\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.flush = function (microtaskId) {\n        var _this = this;\n        if (microtaskId === void 0) { microtaskId = -1; }\n        var /** @type {?} */ players = [];\n        if (this.newHostElements.size) {\n            this.newHostElements.forEach(function (ns, element) { return _this._balanceNamespaceList(ns, element); });\n            this.newHostElements.clear();\n        }\n        if (this._namespaceList.length &&\n            (this.totalQueuedPlayers || this.collectedLeaveElements.length)) {\n            players = this._flushAnimations(microtaskId);\n        }\n        else {\n            for (var /** @type {?} */ i = 0; i < this.collectedLeaveElements.length; i++) {\n                var /** @type {?} */ element = this.collectedLeaveElements[i];\n                this.processLeaveNode(element);\n            }\n        }\n        this.totalQueuedPlayers = 0;\n        this.collectedEnterElements.length = 0;\n        this.collectedLeaveElements.length = 0;\n        this._flushFns.forEach(function (fn) { return fn(); });\n        this._flushFns = [];\n        if (this._whenQuietFns.length) {\n            // we move these over to a variable so that\n            // if any new callbacks are registered in another\n            // flush they do not populate the existing set\n            var /** @type {?} */ quietFns_1 = this._whenQuietFns;\n            this._whenQuietFns = [];\n            if (players.length) {\n                optimizeGroupPlayer(players).onDone(function () { quietFns_1.forEach(function (fn) { return fn(); }); });\n            }\n            else {\n                quietFns_1.forEach(function (fn) { return fn(); });\n            }\n        }\n    };\n    /**\n     * @param {?} microtaskId\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._flushAnimations = function (microtaskId) {\n        var _this = this;\n        var /** @type {?} */ subTimelines = new ElementInstructionMap();\n        var /** @type {?} */ skippedPlayers = [];\n        var /** @type {?} */ skippedPlayersMap = new Map();\n        var /** @type {?} */ queuedInstructions = [];\n        var /** @type {?} */ queriedElements = new Map();\n        var /** @type {?} */ allPreStyleElements = new Map();\n        var /** @type {?} */ allPostStyleElements = new Map();\n        // this must occur before the instructions are built below such that\n        // the :enter queries match the elements (since the timeline queries\n        // are fired during instruction building).\n        var /** @type {?} */ bodyNode = getBodyNode();\n        var /** @type {?} */ allEnterNodes = this.collectedEnterElements.length ?\n            collectEnterElements(this.driver, this.collectedEnterElements) :\n            [];\n        var /** @type {?} */ allLeaveNodes = [];\n        var /** @type {?} */ leaveNodesWithoutAnimations = [];\n        for (var /** @type {?} */ i = 0; i < this.collectedLeaveElements.length; i++) {\n            var /** @type {?} */ element = this.collectedLeaveElements[i];\n            var /** @type {?} */ details = (element[REMOVAL_FLAG]);\n            if (details && details.setForRemoval) {\n                addClass(element, LEAVE_CLASSNAME);\n                allLeaveNodes.push(element);\n                if (!details.hasAnimation) {\n                    leaveNodesWithoutAnimations.push(element);\n                }\n            }\n        }\n        for (var /** @type {?} */ i = this._namespaceList.length - 1; i >= 0; i--) {\n            var /** @type {?} */ ns = this._namespaceList[i];\n            ns.drainQueuedTransitions(microtaskId).forEach(function (entry) {\n                var /** @type {?} */ player = entry.player;\n                var /** @type {?} */ element = entry.element;\n                if (!bodyNode || !_this.driver.containsElement(bodyNode, element)) {\n                    player.destroy();\n                    return;\n                }\n                var /** @type {?} */ instruction = _this._buildInstruction(entry, subTimelines);\n                if (!instruction)\n                    return;\n                // if a unmatched transition is queued to go then it SHOULD NOT render\n                // an animation and cancel the previously running animations.\n                if (entry.isFallbackTransition) {\n                    player.onStart(function () { return eraseStyles(element, instruction.fromStyles); });\n                    player.onDestroy(function () { return setStyles(element, instruction.toStyles); });\n                    skippedPlayers.push(player);\n                    return;\n                }\n                // this means that if a parent animation uses this animation as a sub trigger\n                // then it will instruct the timeline builder to not add a player delay, but\n                // instead stretch the first keyframe gap up until the animation starts. The\n                // reason this is important is to prevent extra initialization styles from being\n                // required by the user in the animation.\n                instruction.timelines.forEach(function (tl) { return tl.stretchStartingKeyframe = true; });\n                subTimelines.append(element, instruction.timelines);\n                var /** @type {?} */ tuple = { instruction: instruction, player: player, element: element };\n                queuedInstructions.push(tuple);\n                instruction.queriedElements.forEach(function (element) { return getOrSetAsInMap(queriedElements, element, []).push(player); });\n                instruction.preStyleProps.forEach(function (stringMap, element) {\n                    var /** @type {?} */ props = Object.keys(stringMap);\n                    if (props.length) {\n                        var /** @type {?} */ setVal_1 = ((allPreStyleElements.get(element)));\n                        if (!setVal_1) {\n                            allPreStyleElements.set(element, setVal_1 = new Set());\n                        }\n                        props.forEach(function (prop) { return setVal_1.add(prop); });\n                    }\n                });\n                instruction.postStyleProps.forEach(function (stringMap, element) {\n                    var /** @type {?} */ props = Object.keys(stringMap);\n                    var /** @type {?} */ setVal = ((allPostStyleElements.get(element)));\n                    if (!setVal) {\n                        allPostStyleElements.set(element, setVal = new Set());\n                    }\n                    props.forEach(function (prop) { return setVal.add(prop); });\n                });\n            });\n        }\n        // these can only be detected here since we have a map of all the elements\n        // that have animations attached to them...\n        var /** @type {?} */ enterNodesWithoutAnimations = [];\n        for (var /** @type {?} */ i = 0; i < allEnterNodes.length; i++) {\n            var /** @type {?} */ element = allEnterNodes[i];\n            if (!subTimelines.has(element)) {\n                enterNodesWithoutAnimations.push(element);\n            }\n        }\n        var /** @type {?} */ allPreviousPlayersMap = new Map();\n        var /** @type {?} */ sortedParentElements = [];\n        queuedInstructions.forEach(function (entry) {\n            var /** @type {?} */ element = entry.element;\n            if (subTimelines.has(element)) {\n                sortedParentElements.unshift(element);\n                _this._beforeAnimationBuild(entry.player.namespaceId, entry.instruction, allPreviousPlayersMap);\n            }\n        });\n        skippedPlayers.forEach(function (player) {\n            var /** @type {?} */ element = player.element;\n            var /** @type {?} */ previousPlayers = _this._getPreviousPlayers(element, false, player.namespaceId, player.triggerName, null);\n            previousPlayers.forEach(function (prevPlayer) { getOrSetAsInMap(allPreviousPlayersMap, element, []).push(prevPlayer); });\n        });\n        allPreviousPlayersMap.forEach(function (players) { return players.forEach(function (player) { return player.destroy(); }); });\n        // PRE STAGE: fill the ! styles\n        var /** @type {?} */ preStylesMap = allPreStyleElements.size ?\n            cloakAndComputeStyles(this.driver, enterNodesWithoutAnimations, allPreStyleElements, ɵPRE_STYLE) :\n            new Map();\n        // POST STAGE: fill the * styles\n        var /** @type {?} */ postStylesMap = cloakAndComputeStyles(this.driver, leaveNodesWithoutAnimations, allPostStyleElements, AUTO_STYLE);\n        var /** @type {?} */ rootPlayers = [];\n        var /** @type {?} */ subPlayers = [];\n        queuedInstructions.forEach(function (entry) {\n            var element = entry.element, player = entry.player, instruction = entry.instruction;\n            // this means that it was never consumed by a parent animation which\n            // means that it is independent and therefore should be set for animation\n            if (subTimelines.has(element)) {\n                var /** @type {?} */ innerPlayer = _this._buildAnimation(player.namespaceId, instruction, allPreviousPlayersMap, skippedPlayersMap, preStylesMap, postStylesMap);\n                player.setRealPlayer(innerPlayer);\n                var /** @type {?} */ parentHasPriority = null;\n                for (var /** @type {?} */ i = 0; i < sortedParentElements.length; i++) {\n                    var /** @type {?} */ parent = sortedParentElements[i];\n                    if (parent === element)\n                        break;\n                    if (_this.driver.containsElement(parent, element)) {\n                        parentHasPriority = parent;\n                        break;\n                    }\n                }\n                if (parentHasPriority) {\n                    var /** @type {?} */ parentPlayers = _this.playersByElement.get(parentHasPriority);\n                    if (parentPlayers && parentPlayers.length) {\n                        player.parentPlayer = optimizeGroupPlayer(parentPlayers);\n                    }\n                    skippedPlayers.push(player);\n                }\n                else {\n                    rootPlayers.push(player);\n                }\n            }\n            else {\n                eraseStyles(element, instruction.fromStyles);\n                player.onDestroy(function () { return setStyles(element, instruction.toStyles); });\n                subPlayers.push(player);\n            }\n        });\n        subPlayers.forEach(function (player) {\n            var /** @type {?} */ playersForElement = skippedPlayersMap.get(player.element);\n            if (playersForElement && playersForElement.length) {\n                var /** @type {?} */ innerPlayer = optimizeGroupPlayer(playersForElement);\n                player.setRealPlayer(innerPlayer);\n            }\n        });\n        // the reason why we don't actually play the animation is\n        // because all that a skipped player is designed to do is to\n        // fire the start/done transition callback events\n        skippedPlayers.forEach(function (player) {\n            if (player.parentPlayer) {\n                player.parentPlayer.onDestroy(function () { return player.destroy(); });\n            }\n            else {\n                player.destroy();\n            }\n        });\n        // run through all of the queued removals and see if they\n        // were picked up by a query. If not then perform the removal\n        // operation right away unless a parent animation is ongoing.\n        for (var /** @type {?} */ i = 0; i < allLeaveNodes.length; i++) {\n            var /** @type {?} */ element = allLeaveNodes[i];\n            var /** @type {?} */ players = queriedElements.get(element);\n            if (players) {\n                removeNodesAfterAnimationDone(this, element, players);\n            }\n            else {\n                var /** @type {?} */ details = (element[REMOVAL_FLAG]);\n                if (details && !details.hasAnimation) {\n                    this.processLeaveNode(element);\n                }\n            }\n        }\n        rootPlayers.forEach(function (player) {\n            _this.players.push(player);\n            player.onDone(function () {\n                player.destroy();\n                var /** @type {?} */ index = _this.players.indexOf(player);\n                _this.players.splice(index, 1);\n            });\n            player.play();\n        });\n        allEnterNodes.forEach(function (element) { return removeClass(element, ENTER_CLASSNAME); });\n        return rootPlayers;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.elementContainsData = function (namespaceId, element) {\n        var /** @type {?} */ containsData = false;\n        var /** @type {?} */ details = (element[REMOVAL_FLAG]);\n        if (details && details.setForRemoval)\n            containsData = true;\n        if (this.playersByElement.has(element))\n            containsData = true;\n        if (this.playersByQueriedElement.has(element))\n            containsData = true;\n        if (this.statesByElement.has(element))\n            containsData = true;\n        return this._fetchNamespace(namespaceId).elementContainsData(element) || containsData;\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.afterFlush = function (callback) { this._flushFns.push(callback); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype.afterFlushAnimationsDone = function (callback) { this._whenQuietFns.push(callback); };\n    /**\n     * @param {?} element\n     * @param {?} isQueriedElement\n     * @param {?=} namespaceId\n     * @param {?=} triggerName\n     * @param {?=} toStateValue\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._getPreviousPlayers = function (element, isQueriedElement, namespaceId, triggerName, toStateValue) {\n        var /** @type {?} */ players = [];\n        if (isQueriedElement) {\n            var /** @type {?} */ queriedElementPlayers = this.playersByQueriedElement.get(element);\n            if (queriedElementPlayers) {\n                players = queriedElementPlayers;\n            }\n        }\n        else {\n            var /** @type {?} */ elementPlayers = this.playersByElement.get(element);\n            if (elementPlayers) {\n                var /** @type {?} */ isRemovalAnimation_1 = !toStateValue || toStateValue == VOID_VALUE;\n                elementPlayers.forEach(function (player) {\n                    if (player.queued)\n                        return;\n                    if (!isRemovalAnimation_1 && player.triggerName != triggerName)\n                        return;\n                    players.push(player);\n                });\n            }\n        }\n        if (namespaceId || triggerName) {\n            players = players.filter(function (player) {\n                if (namespaceId && namespaceId != player.namespaceId)\n                    return false;\n                if (triggerName && triggerName != player.triggerName)\n                    return false;\n                return true;\n            });\n        }\n        return players;\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} instruction\n     * @param {?} allPreviousPlayersMap\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._beforeAnimationBuild = function (namespaceId, instruction, allPreviousPlayersMap) {\n        var _this = this;\n        // it's important to do this step before destroying the players\n        // so that the onDone callback below won't fire before this\n        eraseStyles(instruction.element, instruction.fromStyles);\n        var /** @type {?} */ triggerName = instruction.triggerName;\n        var /** @type {?} */ rootElement = instruction.element;\n        // when a removal animation occurs, ALL previous players are collected\n        // and destroyed (even if they are outside of the current namespace)\n        var /** @type {?} */ targetNameSpaceId = instruction.isRemovalTransition ? undefined : namespaceId;\n        var /** @type {?} */ targetTriggerName = instruction.isRemovalTransition ? undefined : triggerName;\n        instruction.timelines.map(function (timelineInstruction) {\n            var /** @type {?} */ element = timelineInstruction.element;\n            var /** @type {?} */ isQueriedElement = element !== rootElement;\n            var /** @type {?} */ players = getOrSetAsInMap(allPreviousPlayersMap, element, []);\n            var /** @type {?} */ previousPlayers = _this._getPreviousPlayers(element, isQueriedElement, targetNameSpaceId, targetTriggerName, instruction.toState);\n            previousPlayers.forEach(function (player) {\n                var /** @type {?} */ realPlayer = (player.getRealPlayer());\n                if (realPlayer.beforeDestroy) {\n                    realPlayer.beforeDestroy();\n                }\n                players.push(player);\n            });\n        });\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} instruction\n     * @param {?} allPreviousPlayersMap\n     * @param {?} skippedPlayersMap\n     * @param {?} preStylesMap\n     * @param {?} postStylesMap\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._buildAnimation = function (namespaceId, instruction, allPreviousPlayersMap, skippedPlayersMap, preStylesMap, postStylesMap) {\n        var _this = this;\n        var /** @type {?} */ triggerName = instruction.triggerName;\n        var /** @type {?} */ rootElement = instruction.element;\n        // we first run this so that the previous animation player\n        // data can be passed into the successive animation players\n        var /** @type {?} */ allQueriedPlayers = [];\n        var /** @type {?} */ allConsumedElements = new Set();\n        var /** @type {?} */ allSubElements = new Set();\n        var /** @type {?} */ allNewPlayers = instruction.timelines.map(function (timelineInstruction) {\n            var /** @type {?} */ element = timelineInstruction.element;\n            // FIXME (matsko): make sure to-be-removed animations are removed properly\n            var /** @type {?} */ details = element[REMOVAL_FLAG];\n            if (details && details.removedBeforeQueried)\n                return new NoopAnimationPlayer();\n            var /** @type {?} */ isQueriedElement = element !== rootElement;\n            var /** @type {?} */ previousPlayers = EMPTY_PLAYER_ARRAY;\n            if (!allConsumedElements.has(element)) {\n                allConsumedElements.add(element);\n                var /** @type {?} */ _previousPlayers = allPreviousPlayersMap.get(element);\n                if (_previousPlayers) {\n                    previousPlayers = _previousPlayers.map(function (p) { return p.getRealPlayer(); });\n                }\n            }\n            var /** @type {?} */ preStyles = preStylesMap.get(element);\n            var /** @type {?} */ postStyles = postStylesMap.get(element);\n            var /** @type {?} */ keyframes = normalizeKeyframes(_this.driver, _this._normalizer, element, timelineInstruction.keyframes, preStyles, postStyles);\n            var /** @type {?} */ player = _this._buildPlayer(timelineInstruction, keyframes, previousPlayers);\n            // this means that this particular player belongs to a sub trigger. It is\n            // important that we match this player up with the corresponding (@trigger.listener)\n            if (timelineInstruction.subTimeline && skippedPlayersMap) {\n                allSubElements.add(element);\n            }\n            if (isQueriedElement) {\n                var /** @type {?} */ wrappedPlayer = new TransitionAnimationPlayer(namespaceId, triggerName, element);\n                wrappedPlayer.setRealPlayer(player);\n                allQueriedPlayers.push(wrappedPlayer);\n            }\n            return player;\n        });\n        allQueriedPlayers.forEach(function (player) {\n            getOrSetAsInMap(_this.playersByQueriedElement, player.element, []).push(player);\n            player.onDone(function () { deleteOrUnsetInMap(_this.playersByQueriedElement, player.element, player); });\n        });\n        allConsumedElements.forEach(function (element) { return addClass(element, NG_ANIMATING_CLASSNAME); });\n        var /** @type {?} */ player = optimizeGroupPlayer(allNewPlayers);\n        player.onDestroy(function () {\n            allConsumedElements.forEach(function (element) { return removeClass(element, NG_ANIMATING_CLASSNAME); });\n            setStyles(rootElement, instruction.toStyles);\n        });\n        // this basically makes all of the callbacks for sub element animations\n        // be dependent on the upper players for when they finish\n        allSubElements.forEach(function (element) { getOrSetAsInMap(skippedPlayersMap, element, []).push(player); });\n        return player;\n    };\n    /**\n     * @param {?} instruction\n     * @param {?} keyframes\n     * @param {?} previousPlayers\n     * @return {?}\n     */\n    TransitionAnimationEngine.prototype._buildPlayer = function (instruction, keyframes, previousPlayers) {\n        if (keyframes.length > 0) {\n            return this.driver.animate(instruction.element, keyframes, instruction.duration, instruction.delay, instruction.easing, previousPlayers);\n        }\n        // special case for when an empty transition|definition is provided\n        // ... there is no point in rendering an empty animation\n        return new NoopAnimationPlayer();\n    };\n    return TransitionAnimationEngine;\n}());\nvar TransitionAnimationPlayer = (function () {\n    /**\n     * @param {?} namespaceId\n     * @param {?} triggerName\n     * @param {?} element\n     */\n    function TransitionAnimationPlayer(namespaceId, triggerName, element) {\n        this.namespaceId = namespaceId;\n        this.triggerName = triggerName;\n        this.element = element;\n        this._player = new NoopAnimationPlayer();\n        this._containsRealPlayer = false;\n        this._queuedCallbacks = {};\n        this._destroyed = false;\n        this.markedForDestroy = false;\n    }\n    Object.defineProperty(TransitionAnimationPlayer.prototype, \"queued\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._containsRealPlayer == false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TransitionAnimationPlayer.prototype, \"destroyed\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} player\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.setRealPlayer = function (player) {\n        var _this = this;\n        if (this._containsRealPlayer)\n            return;\n        this._player = player;\n        Object.keys(this._queuedCallbacks).forEach(function (phase) {\n            _this._queuedCallbacks[phase].forEach(function (callback) { return listenOnPlayer(player, phase, undefined, callback); });\n        });\n        this._queuedCallbacks = {};\n        this._containsRealPlayer = true;\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.getRealPlayer = function () { return this._player; };\n    /**\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype._queueEvent = function (name, callback) {\n        getOrSetAsInMap(this._queuedCallbacks, name, []).push(callback);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.onDone = function (fn) {\n        if (this.queued) {\n            this._queueEvent('done', fn);\n        }\n        this._player.onDone(fn);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.onStart = function (fn) {\n        if (this.queued) {\n            this._queueEvent('start', fn);\n        }\n        this._player.onStart(fn);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.onDestroy = function (fn) {\n        if (this.queued) {\n            this._queueEvent('destroy', fn);\n        }\n        this._player.onDestroy(fn);\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.init = function () { this._player.init(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.hasStarted = function () { return this.queued ? false : this._player.hasStarted(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.play = function () { !this.queued && this._player.play(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.pause = function () { !this.queued && this._player.pause(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.restart = function () { !this.queued && this._player.restart(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.finish = function () { this._player.finish(); };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.destroy = function () {\n        this._destroyed = true;\n        this._player.destroy();\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.reset = function () { !this.queued && this._player.reset(); };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.setPosition = function (p) {\n        if (!this.queued) {\n            this._player.setPosition(p);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TransitionAnimationPlayer.prototype.getPosition = function () { return this.queued ? 0 : this._player.getPosition(); };\n    Object.defineProperty(TransitionAnimationPlayer.prototype, \"totalTime\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._player.totalTime; },\n        enumerable: true,\n        configurable: true\n    });\n    return TransitionAnimationPlayer;\n}());\n/**\n * @param {?} map\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nfunction deleteOrUnsetInMap(map, key, value) {\n    var /** @type {?} */ currentValues;\n    if (map instanceof Map) {\n        currentValues = map.get(key);\n        if (currentValues) {\n            if (currentValues.length) {\n                var /** @type {?} */ index = currentValues.indexOf(value);\n                currentValues.splice(index, 1);\n            }\n            if (currentValues.length == 0) {\n                map.delete(key);\n            }\n        }\n    }\n    else {\n        currentValues = map[key];\n        if (currentValues) {\n            if (currentValues.length) {\n                var /** @type {?} */ index = currentValues.indexOf(value);\n                currentValues.splice(index, 1);\n            }\n            if (currentValues.length == 0) {\n                delete map[key];\n            }\n        }\n    }\n    return currentValues;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeTriggerValue(value) {\n    switch (typeof value) {\n        case 'boolean':\n            return value ? '1' : '0';\n        default:\n            return value != null ? value.toString() : null;\n    }\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isElementNode(node) {\n    return node && node['nodeType'] === 1;\n}\n/**\n * @param {?} eventName\n * @return {?}\n */\nfunction isTriggerEventValid(eventName) {\n    return eventName == 'start' || eventName == 'done';\n}\n/**\n * @param {?} element\n * @param {?=} value\n * @return {?}\n */\nfunction cloakElement(element, value) {\n    var /** @type {?} */ oldValue = element.style.display;\n    element.style.display = value != null ? value : 'none';\n    return oldValue;\n}\n/**\n * @param {?} driver\n * @param {?} rootElement\n * @param {?} selector\n * @return {?}\n */\nfunction filterNodeClasses(driver, rootElement, selector) {\n    var /** @type {?} */ rootElements = [];\n    if (!rootElement)\n        return rootElements;\n    var /** @type {?} */ cursor = rootElement;\n    var /** @type {?} */ nextCursor = {};\n    var /** @type {?} */ potentialCursorStack = [];\n    do {\n        // 1. query from root\n        nextCursor = cursor ? driver.query(cursor, selector, false)[0] : null;\n        // this is used to avoid the extra matchesElement call when we\n        // know that the element does match based it on being queried\n        var /** @type {?} */ justQueried = !!nextCursor;\n        if (!nextCursor) {\n            var /** @type {?} */ nextPotentialCursor = potentialCursorStack.pop();\n            if (nextPotentialCursor) {\n                // 1a)\n                nextCursor = nextPotentialCursor;\n            }\n            else {\n                cursor = cursor.parentElement;\n                // 1b)\n                if (!cursor)\n                    break;\n                // 1c)\n                nextCursor = cursor = cursor.nextElementSibling;\n                continue;\n            }\n        }\n        // 2. visit the next node\n        while (nextCursor) {\n            var /** @type {?} */ matches = justQueried || driver.matchesElement(nextCursor, selector);\n            justQueried = false;\n            var /** @type {?} */ nextPotentialCursor = nextCursor.nextElementSibling;\n            // 2a)\n            if (!matches) {\n                potentialCursorStack.push(nextPotentialCursor);\n                cursor = nextCursor;\n                break;\n            }\n            // 2b)\n            rootElements.push(nextCursor);\n            nextCursor = nextPotentialCursor;\n            if (nextCursor) {\n                cursor = nextCursor;\n            }\n            else {\n                cursor = cursor.parentElement;\n                if (!cursor)\n                    break;\n                nextCursor = cursor = cursor.nextElementSibling;\n            }\n        }\n    } while (nextCursor && nextCursor !== rootElement);\n    return rootElements;\n}\n/**\n * @param {?} driver\n * @param {?} elements\n * @param {?} elementPropsMap\n * @param {?} defaultStyle\n * @return {?}\n */\nfunction cloakAndComputeStyles(driver, elements, elementPropsMap, defaultStyle) {\n    var /** @type {?} */ cloakVals = elements.map(function (element) { return cloakElement(element); });\n    var /** @type {?} */ valuesMap = new Map();\n    elementPropsMap.forEach(function (props, element) {\n        var /** @type {?} */ styles = {};\n        props.forEach(function (prop) {\n            var /** @type {?} */ value = styles[prop] = driver.computeStyle(element, prop, defaultStyle);\n            // there is no easy way to detect this because a sub element could be removed\n            // by a parent animation element being detached.\n            if (!value || value.length == 0) {\n                element[REMOVAL_FLAG] = NULL_REMOVED_QUERIED_STATE;\n            }\n        });\n        valuesMap.set(element, styles);\n    });\n    elements.forEach(function (element, i) { return cloakElement(element, cloakVals[i]); });\n    return valuesMap;\n}\n/**\n * @param {?} driver\n * @param {?} allEnterNodes\n * @return {?}\n */\nfunction collectEnterElements(driver, allEnterNodes) {\n    allEnterNodes.forEach(function (element) { return addClass(element, POTENTIAL_ENTER_CLASSNAME); });\n    var /** @type {?} */ enterNodes = filterNodeClasses(driver, getBodyNode(), POTENTIAL_ENTER_SELECTOR);\n    enterNodes.forEach(function (element) { return addClass(element, ENTER_CLASSNAME); });\n    allEnterNodes.forEach(function (element) { return removeClass(element, POTENTIAL_ENTER_CLASSNAME); });\n    return enterNodes;\n}\nvar CLASSES_CACHE_KEY = '$$classes';\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nfunction containsClass(element, className) {\n    if (element.classList) {\n        return element.classList.contains(className);\n    }\n    else {\n        var /** @type {?} */ classes = element[CLASSES_CACHE_KEY];\n        return classes && classes[className];\n    }\n}\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nfunction addClass(element, className) {\n    if (element.classList) {\n        element.classList.add(className);\n    }\n    else {\n        var /** @type {?} */ classes = element[CLASSES_CACHE_KEY];\n        if (!classes) {\n            classes = element[CLASSES_CACHE_KEY] = {};\n        }\n        classes[className] = true;\n    }\n}\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nfunction removeClass(element, className) {\n    if (element.classList) {\n        element.classList.remove(className);\n    }\n    else {\n        var /** @type {?} */ classes = element[CLASSES_CACHE_KEY];\n        if (classes) {\n            delete classes[className];\n        }\n    }\n}\n/**\n * @return {?}\n */\nfunction getBodyNode() {\n    if (typeof document != 'undefined') {\n        return document.body;\n    }\n    return null;\n}\n/**\n * @param {?} engine\n * @param {?} element\n * @param {?} players\n * @return {?}\n */\nfunction removeNodesAfterAnimationDone(engine, element, players) {\n    optimizeGroupPlayer(players).onDone(function () { return engine.processLeaveNode(element); });\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AnimationEngine = (function () {\n    /**\n     * @param {?} driver\n     * @param {?} normalizer\n     */\n    function AnimationEngine(driver, normalizer) {\n        var _this = this;\n        this._triggerCache = {};\n        this.onRemovalComplete = function (element, context) { };\n        this._transitionEngine = new TransitionAnimationEngine(driver, normalizer);\n        this._timelineEngine = new TimelineAnimationEngine(driver, normalizer);\n        this._transitionEngine.onRemovalComplete =\n            function (element, context) { _this.onRemovalComplete(element, context); };\n    }\n    /**\n     * @param {?} componentId\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @param {?} name\n     * @param {?} metadata\n     * @return {?}\n     */\n    AnimationEngine.prototype.registerTrigger = function (componentId, namespaceId, hostElement, name, metadata) {\n        var /** @type {?} */ cacheKey = componentId + '-' + name;\n        var /** @type {?} */ trigger = this._triggerCache[cacheKey];\n        if (!trigger) {\n            var /** @type {?} */ errors = [];\n            var /** @type {?} */ ast = (buildAnimationAst(/** @type {?} */ (metadata), errors));\n            if (errors.length) {\n                throw new Error(\"The animation trigger \\\"\" + name + \"\\\" has failed to build due to the following errors:\\n - \" + errors.join(\"\\n - \"));\n            }\n            trigger = buildTrigger(name, ast);\n            this._triggerCache[cacheKey] = trigger;\n        }\n        this._transitionEngine.registerTrigger(namespaceId, name, trigger);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} hostElement\n     * @return {?}\n     */\n    AnimationEngine.prototype.register = function (namespaceId, hostElement) {\n        this._transitionEngine.register(namespaceId, hostElement);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationEngine.prototype.destroy = function (namespaceId, context) {\n        this._transitionEngine.destroy(namespaceId, context);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} parent\n     * @param {?} insertBefore\n     * @return {?}\n     */\n    AnimationEngine.prototype.onInsert = function (namespaceId, element, parent, insertBefore) {\n        this._transitionEngine.insertNode(namespaceId, element, parent, insertBefore);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    AnimationEngine.prototype.onRemove = function (namespaceId, element, context) {\n        this._transitionEngine.removeNode(namespaceId, element, context);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    AnimationEngine.prototype.setProperty = function (namespaceId, element, property, value) {\n        // @@property\n        if (property.charAt(0) == '@') {\n            var _a = parseTimelineCommand(property), id = _a[0], action = _a[1];\n            var /** @type {?} */ args = (value);\n            this._timelineEngine.command(id, element, action, args);\n            return false;\n        }\n        return this._transitionEngine.trigger(namespaceId, element, property, value);\n    };\n    /**\n     * @param {?} namespaceId\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} eventPhase\n     * @param {?} callback\n     * @return {?}\n     */\n    AnimationEngine.prototype.listen = function (namespaceId, element, eventName, eventPhase, callback) {\n        // @@listen\n        if (eventName.charAt(0) == '@') {\n            var _a = parseTimelineCommand(eventName), id = _a[0], action = _a[1];\n            return this._timelineEngine.listen(id, element, action, callback);\n        }\n        return this._transitionEngine.listen(namespaceId, element, eventName, eventPhase, callback);\n    };\n    /**\n     * @param {?=} microtaskId\n     * @return {?}\n     */\n    AnimationEngine.prototype.flush = function (microtaskId) {\n        if (microtaskId === void 0) { microtaskId = -1; }\n        this._transitionEngine.flush(microtaskId);\n    };\n    Object.defineProperty(AnimationEngine.prototype, \"players\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return ((this._transitionEngine.players))\n                .concat(/** @type {?} */ (this._timelineEngine.players));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    AnimationEngine.prototype.whenRenderingDone = function () { return this._transitionEngine.whenRenderingDone(); };\n    return AnimationEngine;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar WebAnimationsPlayer = (function () {\n    /**\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} options\n     * @param {?=} previousPlayers\n     */\n    function WebAnimationsPlayer(element, keyframes, options, previousPlayers) {\n        if (previousPlayers === void 0) { previousPlayers = []; }\n        var _this = this;\n        this.element = element;\n        this.keyframes = keyframes;\n        this.options = options;\n        this.previousPlayers = previousPlayers;\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._onDestroyFns = [];\n        this._initialized = false;\n        this._finished = false;\n        this._started = false;\n        this._destroyed = false;\n        this.time = 0;\n        this.parentPlayer = null;\n        this.currentSnapshot = {};\n        this._duration = options['duration'];\n        this._delay = options['delay'] || 0;\n        this.time = this._duration + this._delay;\n        this.previousStyles = {};\n        previousPlayers.forEach(function (player) {\n            var styles = player.currentSnapshot;\n            Object.keys(styles).forEach(function (prop) { return _this.previousStyles[prop] = styles[prop]; });\n        });\n    }\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._onFinish = function () {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(function (fn) { return fn(); });\n            this._onDoneFns = [];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.init = function () {\n        this._buildPlayer();\n        this._preparePlayerBeforeStart();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._buildPlayer = function () {\n        var _this = this;\n        if (this._initialized)\n            return;\n        this._initialized = true;\n        var /** @type {?} */ keyframes = this.keyframes.map(function (styles) { return copyStyles(styles, false); });\n        var /** @type {?} */ previousStyleProps = Object.keys(this.previousStyles);\n        if (previousStyleProps.length) {\n            var /** @type {?} */ startingKeyframe_1 = keyframes[0];\n            var /** @type {?} */ missingStyleProps_1 = [];\n            previousStyleProps.forEach(function (prop) {\n                if (!startingKeyframe_1.hasOwnProperty(prop)) {\n                    missingStyleProps_1.push(prop);\n                }\n                startingKeyframe_1[prop] = _this.previousStyles[prop];\n            });\n            if (missingStyleProps_1.length) {\n                var /** @type {?} */ self_1 = this;\n                var _loop_1 = function () {\n                    var /** @type {?} */ kf = keyframes[i];\n                    missingStyleProps_1.forEach(function (prop) {\n                        kf[prop] = _computeStyle(self_1.element, prop);\n                    });\n                };\n                // tslint:disable-next-line\n                for (var /** @type {?} */ i = 1; i < keyframes.length; i++) {\n                    _loop_1();\n                }\n            }\n        }\n        this._player = this._triggerWebAnimation(this.element, keyframes, this.options);\n        this._finalKeyframe = keyframes.length ? keyframes[keyframes.length - 1] : {};\n        this._player.addEventListener('finish', function () { return _this._onFinish(); });\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._preparePlayerBeforeStart = function () {\n        // this is required so that the player doesn't start to animate right away\n        if (this._delay) {\n            this._resetDomPlayerState();\n        }\n        else {\n            this._player.pause();\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} options\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._triggerWebAnimation = function (element, keyframes, options) {\n        // jscompiler doesn't seem to know animate is a native property because it's not fully\n        // supported yet across common browsers (we polyfill it for Edge/Safari) [CL #143630929]\n        return (element['animate'](keyframes, options));\n    };\n    Object.defineProperty(WebAnimationsPlayer.prototype, \"domPlayer\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._player; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.onStart = function (fn) { this._onStartFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.onDone = function (fn) { this._onDoneFns.push(fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.onDestroy = function (fn) { this._onDestroyFns.push(fn); };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.play = function () {\n        this._buildPlayer();\n        if (!this.hasStarted()) {\n            this._onStartFns.forEach(function (fn) { return fn(); });\n            this._onStartFns = [];\n            this._started = true;\n        }\n        this._player.play();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.pause = function () {\n        this.init();\n        this._player.pause();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.finish = function () {\n        this.init();\n        this._onFinish();\n        this._player.finish();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.reset = function () {\n        this._resetDomPlayerState();\n        this._destroyed = false;\n        this._finished = false;\n        this._started = false;\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype._resetDomPlayerState = function () {\n        if (this._player) {\n            this._player.cancel();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.restart = function () {\n        this.reset();\n        this.play();\n    };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.hasStarted = function () { return this._started; };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.destroy = function () {\n        if (!this._destroyed) {\n            this._resetDomPlayerState();\n            this._onFinish();\n            this._destroyed = true;\n            this._onDestroyFns.forEach(function (fn) { return fn(); });\n            this._onDestroyFns = [];\n        }\n    };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.setPosition = function (p) { this._player.currentTime = p * this.time; };\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.getPosition = function () { return this._player.currentTime / this.time; };\n    Object.defineProperty(WebAnimationsPlayer.prototype, \"totalTime\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._delay + this._duration; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    WebAnimationsPlayer.prototype.beforeDestroy = function () {\n        var _this = this;\n        var /** @type {?} */ styles = {};\n        if (this.hasStarted()) {\n            Object.keys(this._finalKeyframe).forEach(function (prop) {\n                if (prop != 'offset') {\n                    styles[prop] =\n                        _this._finished ? _this._finalKeyframe[prop] : _computeStyle(_this.element, prop);\n                }\n            });\n        }\n        this.currentSnapshot = styles;\n    };\n    return WebAnimationsPlayer;\n}());\n/**\n * @param {?} element\n * @param {?} prop\n * @return {?}\n */\nfunction _computeStyle(element, prop) {\n    return ((window.getComputedStyle(element)))[prop];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar WebAnimationsDriver = (function () {\n    function WebAnimationsDriver() {\n    }\n    /**\n     * @param {?} element\n     * @param {?} selector\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.matchesElement = function (element, selector) {\n        return matchesElement(element, selector);\n    };\n    /**\n     * @param {?} elm1\n     * @param {?} elm2\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.containsElement = function (elm1, elm2) { return containsElement(elm1, elm2); };\n    /**\n     * @param {?} element\n     * @param {?} selector\n     * @param {?} multi\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.query = function (element, selector, multi) {\n        return invokeQuery(element, selector, multi);\n    };\n    /**\n     * @param {?} element\n     * @param {?} prop\n     * @param {?=} defaultValue\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.computeStyle = function (element, prop, defaultValue) {\n        return (((window.getComputedStyle(element)))[prop]);\n    };\n    /**\n     * @param {?} element\n     * @param {?} keyframes\n     * @param {?} duration\n     * @param {?} delay\n     * @param {?} easing\n     * @param {?=} previousPlayers\n     * @return {?}\n     */\n    WebAnimationsDriver.prototype.animate = function (element, keyframes, duration, delay, easing, previousPlayers) {\n        if (previousPlayers === void 0) { previousPlayers = []; }\n        var /** @type {?} */ fill = delay == 0 ? 'both' : 'forwards';\n        var /** @type {?} */ playerOptions = { duration: duration, delay: delay, fill: fill };\n        // we check for this to avoid having a null|undefined value be present\n        // for the easing (which results in an error for certain browsers #9752)\n        if (easing) {\n            playerOptions['easing'] = easing;\n        }\n        var /** @type {?} */ previousWebAnimationPlayers = (previousPlayers.filter(function (player) { return player instanceof WebAnimationsPlayer; }));\n        return new WebAnimationsPlayer(element, keyframes, playerOptions, previousWebAnimationPlayers);\n    };\n    return WebAnimationsDriver;\n}());\n/**\n * @return {?}\n */\nfunction supportsWebAnimations() {\n    return typeof Element !== 'undefined' && typeof ((Element)).prototype['animate'] === 'function';\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation browser package.\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the animation package.\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { AnimationDriver, Animation as ɵAnimation, AnimationStyleNormalizer as ɵAnimationStyleNormalizer, NoopAnimationStyleNormalizer as ɵNoopAnimationStyleNormalizer, WebAnimationsStyleNormalizer as ɵWebAnimationsStyleNormalizer, NoopAnimationDriver as ɵNoopAnimationDriver, AnimationEngine as ɵAnimationEngine, WebAnimationsDriver as ɵWebAnimationsDriver, supportsWebAnimations as ɵsupportsWebAnimations, WebAnimationsPlayer as ɵWebAnimationsPlayer };\n//# sourceMappingURL=browser.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/animations/@angular/animations/browser.es5.js\n// module id = 233\n// module chunks = 0","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n  * @license Angular Material v2.0.0-beta.3\n  * Copyright (c) 2017 Google, Inc. https://material.angular.io/\n  * License: MIT\n  */\nimport { ApplicationRef, Attribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, ComponentFactoryResolver, ContentChild, ContentChildren, Directive, ElementRef, EventEmitter, Host, HostBinding, Inject, Injectable, Injector, Input, NgModule, NgZone, OpaqueToken, Optional, Output, Renderer, SecurityContext, Self, SkipSelf, TemplateRef, ViewChild, ViewContainerRef, ViewEncapsulation, forwardRef, isDevMode } from '@angular/core';\nimport { DOCUMENT, DomSanitizer, HAMMER_GESTURE_CONFIG, HammerGestureConfig } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/fromEvent';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/operator/auditTime';\nimport { FormGroupDirective, FormsModule, NG_VALUE_ACCESSOR, NgControl, NgForm } from '@angular/forms';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/operator/first';\nimport { Http, HttpModule } from '@angular/http';\nimport 'rxjs/add/observable/forkJoin';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/share';\nimport 'rxjs/add/operator/finally';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/switchMap';\n/** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\nvar hasDoneGlobalChecks = false;\nvar MATERIAL_COMPATIBILITY_MODE = new OpaqueToken('md-compatibility-mode');\n/** Selector that matches all elements that may have style collisions with AngularJS Material. */\nvar MAT_ELEMENTS_SELECTOR = \"\\n  [mat-button],\\n  [mat-dialog-actions],\\n  [mat-dialog-close],\\n  [mat-dialog-content],\\n  [mat-dialog-title],\\n  [mat-fab],\\n  [mat-icon-button],\\n  [mat-menu-trigger-for],\\n  [mat-mini-fab],\\n  [mat-raised-button],\\n  [mat-tab-label],\\n  [mat-tab-link],\\n  [mat-tab-nav-bar],\\n  [matTooltip],\\n  mat-autocomplete,\\n  mat-button-toggle,\\n  mat-button-toggle-group,\\n  mat-button-toggle,\\n  mat-card,\\n  mat-card-actions,\\n  mat-card-content,\\n  mat-card-footer,\\n  mat-card-header,\\n  mat-card-subtitle,\\n  mat-card-title,\\n  mat-card-title-group,\\n  mat-checkbox,\\n  mat-chip,\\n  mat-dialog-actions,\\n  mat-dialog-container,\\n  mat-dialog-content,\\n  mat-divider,\\n  mat-grid-list,\\n  mat-grid-tile,\\n  mat-grid-tile-footer,\\n  mat-grid-tile-header,\\n  mat-hint,\\n  mat-icon,\\n  mat-list,\\n  mat-list-item,\\n  mat-menu,\\n  mat-nav-list,\\n  mat-option,\\n  mat-placeholder,\\n  mat-progress-bar,\\n  mat-pseudo-checkbox,\\n  mat-radio-button,\\n  mat-radio-group,\\n  mat-select,\\n  mat-sidenav,\\n  mat-sidenav-container,\\n  mat-slider,\\n  mat-spinner,\\n  mat-tab,\\n  mat-tab-group,\\n  mat-toolbar,\\n  mat-error\";\n/** Selector that matches all elements that may have style collisions with AngularJS Material. */\nvar MD_ELEMENTS_SELECTOR = \"\\n  [md-button],\\n  [md-dialog-actions],\\n  [md-dialog-close],\\n  [md-dialog-content],\\n  [md-dialog-title],\\n  [md-fab],\\n  [md-icon-button],\\n  [md-menu-trigger-for],\\n  [md-mini-fab],\\n  [md-raised-button],\\n  [md-tab-label],\\n  [md-tab-link],\\n  [md-tab-nav-bar],\\n  [mdTooltip],\\n  md-autocomplete,\\n  md-button-toggle,\\n  md-button-toggle-group,\\n  md-button-toggle,\\n  md-card,\\n  md-card-actions,\\n  md-card-content,\\n  md-card-footer,\\n  md-card-header,\\n  md-card-subtitle,\\n  md-card-title,\\n  md-card-title-group,\\n  md-checkbox,\\n  md-chip,\\n  md-dialog-actions,\\n  md-dialog-container,\\n  md-dialog-content,\\n  md-divider,\\n  md-grid-list,\\n  md-grid-tile,\\n  md-grid-tile-footer,\\n  md-grid-tile-header,\\n  md-hint,\\n  md-icon,\\n  md-list,\\n  md-list-item,\\n  md-menu,\\n  md-nav-list,\\n  md-option,\\n  md-placeholder,\\n  md-progress-bar,\\n  md-pseudo-checkbox,\\n  md-radio-button,\\n  md-radio-group,\\n  md-select,\\n  md-sidenav,\\n  md-sidenav-container,\\n  md-slider,\\n  md-spinner,\\n  md-tab,\\n  md-tab-group,\\n  md-toolbar,\\n  md-error\";\n/**\n * Directive that enforces that the `mat-` prefix cannot be used.\n */\nvar MatPrefixRejector = (function () {\n    /**\n     * @param {?} isCompatibilityMode\n     */\n    function MatPrefixRejector(isCompatibilityMode) {\n        if (!isCompatibilityMode) {\n            throw Error('The \"mat-\" prefix cannot be used out of ng-material v1 compatibility mode.');\n        }\n    }\n    return MatPrefixRejector;\n}());\nMatPrefixRejector.decorators = [\n    { type: Directive, args: [{ selector: MAT_ELEMENTS_SELECTOR },] },\n];\n/**\n * @nocollapse\n */\nMatPrefixRejector.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_COMPATIBILITY_MODE,] },] },\n]; };\n/**\n * Directive that enforces that the `md-` prefix cannot be used.\n */\nvar MdPrefixRejector = (function () {\n    /**\n     * @param {?} isCompatibilityMode\n     */\n    function MdPrefixRejector(isCompatibilityMode) {\n        if (isCompatibilityMode) {\n            throw Error('The \"md-\" prefix cannot be used in ng-material v1 compatibility mode.');\n        }\n    }\n    return MdPrefixRejector;\n}());\nMdPrefixRejector.decorators = [\n    { type: Directive, args: [{ selector: MD_ELEMENTS_SELECTOR },] },\n];\n/**\n * @nocollapse\n */\nMdPrefixRejector.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_COMPATIBILITY_MODE,] },] },\n]; };\n/**\n * Module that enforces the default compatibility mode settings. When this module is loaded\n * without NoConflictStyleCompatibilityMode also being imported, it will throw an error if\n * there are any uses of the `mat-` prefix.\n */\nvar CompatibilityModule = (function () {\n    /**\n     * @param {?} _document\n     */\n    function CompatibilityModule(_document) {\n        this._document = _document;\n        if (!hasDoneGlobalChecks && isDevMode()) {\n            this._checkDoctype();\n            this._checkTheme();\n            hasDoneGlobalChecks = true;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    CompatibilityModule.forRoot = function () {\n        return {\n            ngModule: CompatibilityModule,\n            providers: [],\n        };\n    };\n    /**\n     * @return {?}\n     */\n    CompatibilityModule.prototype._checkDoctype = function () {\n        if (this._document && !this._document.doctype) {\n            console.warn('Current document does not have a doctype. This may cause ' +\n                'some Angular Material components not to behave as expected.');\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompatibilityModule.prototype._checkTheme = function () {\n        if (this._document) {\n            var /** @type {?} */ testElement = this._document.createElement('div');\n            testElement.classList.add('mat-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n            if (getComputedStyle(testElement).display !== 'none') {\n                console.warn('Could not find Angular Material core theme. Most Material ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: https://material.angular.io/guide/theming');\n            }\n            this._document.body.removeChild(testElement);\n        }\n    };\n    return CompatibilityModule;\n}());\nCompatibilityModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [MatPrefixRejector, MdPrefixRejector],\n                exports: [MatPrefixRejector, MdPrefixRejector],\n            },] },\n];\n/**\n * @nocollapse\n */\nCompatibilityModule.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] },] },\n]; };\n/**\n * Module that enforces \"no-conflict\" compatibility mode settings. When this module is loaded,\n * it will throw an error if there are any uses of the `md-` prefix.\n */\nvar NoConflictStyleCompatibilityMode = (function () {\n    function NoConflictStyleCompatibilityMode() {\n    }\n    return NoConflictStyleCompatibilityMode;\n}());\nNoConflictStyleCompatibilityMode.decorators = [\n    { type: NgModule, args: [{\n                providers: [{\n                        provide: MATERIAL_COMPATIBILITY_MODE, useValue: true,\n                    }],\n            },] },\n];\n/**\n * @nocollapse\n */\nNoConflictStyleCompatibilityMode.ctorParameters = function () { return []; };\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MdLine) query, then\n * counted by checking the query list's length.\n */\nvar MdLine = (function () {\n    function MdLine() {\n    }\n    return MdLine;\n}());\nMdLine.decorators = [\n    { type: Directive, args: [{\n                selector: '[md-line], [mat-line]',\n                host: {\n                    '[class.mat-line]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdLine.ctorParameters = function () { return []; };\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n */\nvar MdLineSetter = (function () {\n    /**\n     * @param {?} _lines\n     * @param {?} _renderer\n     * @param {?} _element\n     */\n    function MdLineSetter(_lines, _renderer, _element) {\n        var _this = this;\n        this._lines = _lines;\n        this._renderer = _renderer;\n        this._element = _element;\n        this._setLineClass(this._lines.length);\n        this._lines.changes.subscribe(function () {\n            _this._setLineClass(_this._lines.length);\n        });\n    }\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    MdLineSetter.prototype._setLineClass = function (count) {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(\"mat-\" + count + \"-line\", true);\n        }\n        else if (count > 3) {\n            this._setClass(\"mat-multi-line\", true);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdLineSetter.prototype._resetClasses = function () {\n        this._setClass('mat-2-line', false);\n        this._setClass('mat-3-line', false);\n        this._setClass('mat-multi-line', false);\n    };\n    /**\n     * @param {?} className\n     * @param {?} bool\n     * @return {?}\n     */\n    MdLineSetter.prototype._setClass = function (className, bool) {\n        this._renderer.setElementClass(this._element.nativeElement, className, bool);\n    };\n    return MdLineSetter;\n}());\nvar MdLineModule = (function () {\n    function MdLineModule() {\n    }\n    return MdLineModule;\n}());\nMdLineModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CompatibilityModule],\n                exports: [MdLine, CompatibilityModule],\n                declarations: [MdLine],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdLineModule.ctorParameters = function () { return []; };\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Applications should use this directive instead of the native attribute so that Material\n * components can listen on changes of direction.\n */\nvar Dir = (function () {\n    function Dir() {\n        /** Layout direction of the element. */\n        this._dir = 'ltr';\n        /** Event emitted when the direction changes. */\n        this.dirChange = new EventEmitter();\n    }\n    Object.defineProperty(Dir.prototype, \"dir\", {\n        /**\n         * \\@docs-private\n         * @return {?}\n         */\n        get: function () {\n            return this._dir;\n        },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) {\n            var /** @type {?} */ old = this._dir;\n            this._dir = v;\n            if (old != this._dir) {\n                this.dirChange.emit();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Dir.prototype, \"value\", {\n        /**\n         * Current layout direction of the element.\n         * @return {?}\n         */\n        get: function () { return this.dir; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this.dir = v; },\n        enumerable: true,\n        configurable: true\n    });\n    return Dir;\n}());\nDir.decorators = [\n    { type: Directive, args: [{\n                selector: '[dir]',\n                // TODO(hansl): maybe `$implicit` isn't the best option here, but for now that's the best we got.\n                exportAs: '$implicit'\n            },] },\n];\n/**\n * @nocollapse\n */\nDir.ctorParameters = function () { return []; };\nDir.propDecorators = {\n    '_dir': [{ type: Input, args: ['dir',] },],\n    'dirChange': [{ type: Output },],\n    'dir': [{ type: HostBinding, args: ['attr.dir',] },],\n};\nvar RtlModule = (function () {\n    function RtlModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    RtlModule.forRoot = function () {\n        return {\n            ngModule: RtlModule,\n            providers: []\n        };\n    };\n    return RtlModule;\n}());\nRtlModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [Dir],\n                declarations: [Dir]\n            },] },\n];\n/**\n * @nocollapse\n */\nRtlModule.ctorParameters = function () { return []; };\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nvar ObserveContent = (function () {\n    /**\n     * @param {?} _elementRef\n     */\n    function ObserveContent(_elementRef) {\n        this._elementRef = _elementRef;\n        /** Event emitted for each change in the element's content. */\n        this.event = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    ObserveContent.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this._observer = new MutationObserver(function (mutations) { return mutations.forEach(function () { return _this.event.emit(); }); });\n        this._observer.observe(this._elementRef.nativeElement, {\n            characterData: true,\n            childList: true,\n            subtree: true\n        });\n    };\n    /**\n     * @return {?}\n     */\n    ObserveContent.prototype.ngOnDestroy = function () {\n        if (this._observer) {\n            this._observer.disconnect();\n        }\n    };\n    return ObserveContent;\n}());\nObserveContent.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkObserveContent]'\n            },] },\n];\n/**\n * @nocollapse\n */\nObserveContent.ctorParameters = function () { return [\n    { type: ElementRef, },\n]; };\nObserveContent.propDecorators = {\n    'event': [{ type: Output, args: ['cdkObserveContent',] },],\n};\nvar ObserveContentModule = (function () {\n    function ObserveContentModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    ObserveContentModule.forRoot = function () {\n        return {\n            ngModule: ObserveContentModule,\n            providers: []\n        };\n    };\n    return ObserveContentModule;\n}());\nObserveContentModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [ObserveContent],\n                declarations: [ObserveContent]\n            },] },\n];\n/**\n * @nocollapse\n */\nObserveContentModule.ctorParameters = function () { return []; };\n// Due to a bug in the ChromeDriver, Angular keyboard events are not triggered by `sendKeys`\n// during E2E tests when using dot notation such as `(keydown.rightArrow)`. To get around this,\n// we are temporarily using a single (keydown) handler.\n// See: https://github.com/angular/angular/issues/9419\nvar UP_ARROW = 38;\nvar DOWN_ARROW = 40;\nvar RIGHT_ARROW = 39;\nvar LEFT_ARROW = 37;\nvar PAGE_UP = 33;\nvar PAGE_DOWN = 34;\nvar HOME = 36;\nvar END = 35;\nvar ENTER = 13;\nvar SPACE = 32;\nvar TAB = 9;\nvar ESCAPE = 27;\nvar BACKSPACE = 8;\nvar DELETE = 46;\n/**\n * Coerces a data-bound value (typically a string) to a boolean.\n * @param {?} value\n * @return {?}\n */\nfunction coerceBooleanProperty(value) {\n    return value != null && \"\" + value !== 'false';\n}\nvar RippleState = {};\nRippleState.FADING_IN = 0;\nRippleState.VISIBLE = 1;\nRippleState.FADING_OUT = 2;\nRippleState.HIDDEN = 3;\nRippleState[RippleState.FADING_IN] = \"FADING_IN\";\nRippleState[RippleState.VISIBLE] = \"VISIBLE\";\nRippleState[RippleState.FADING_OUT] = \"FADING_OUT\";\nRippleState[RippleState.HIDDEN] = \"HIDDEN\";\n/**\n * Reference to a previously launched ripple element.\n */\nvar RippleRef = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} element\n     * @param {?} config\n     */\n    function RippleRef(_renderer, element, config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /** Current state of the ripple reference. */\n        this.state = RippleState.HIDDEN;\n    }\n    /**\n     * Fades out the ripple element.\n     * @return {?}\n     */\n    RippleRef.prototype.fadeOut = function () {\n        this._renderer.fadeOutRipple(this);\n    };\n    return RippleRef;\n}());\n/** Fade-in duration for the ripples. Can be modified with the speedFactor option. */\nvar RIPPLE_FADE_IN_DURATION = 450;\n/** Fade-out duration for the ripples in milliseconds. This can't be modified by the speedFactor. */\nvar RIPPLE_FADE_OUT_DURATION = 400;\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nvar RippleRenderer = (function () {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _ruler\n     */\n    function RippleRenderer(_elementRef, _ngZone, _ruler) {\n        this._ngZone = _ngZone;\n        this._ruler = _ruler;\n        this._isMousedown = false;\n        this._triggerEvents = new Map();\n        this._activeRipples = new Set();\n        /** Ripple config for all ripples created by events. */\n        this.rippleConfig = {};\n        /** Whether mouse ripples should be created or not. */\n        this.rippleDisabled = false;\n        this._containerElement = _elementRef.nativeElement;\n        // Specify events which need to be registered on the trigger.\n        this._triggerEvents.set('mousedown', this.onMousedown.bind(this));\n        this._triggerEvents.set('mouseup', this.onMouseup.bind(this));\n        this._triggerEvents.set('mouseleave', this.onMouseLeave.bind(this));\n        // By default use the host element as trigger element.\n        this.setTriggerElement(this._containerElement);\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param {?} pageX\n     * @param {?} pageY\n     * @param {?=} config\n     * @return {?}\n     */\n    RippleRenderer.prototype.fadeInRipple = function (pageX, pageY, config) {\n        var _this = this;\n        if (config === void 0) { config = {}; }\n        var /** @type {?} */ containerRect = this._containerElement.getBoundingClientRect();\n        if (config.centered) {\n            pageX = containerRect.left + containerRect.width / 2;\n            pageY = containerRect.top + containerRect.height / 2;\n        }\n        else {\n            // Subtract scroll values from the coordinates because calculations below\n            // are always relative to the viewport rectangle.\n            var /** @type {?} */ scrollPosition = this._ruler.getViewportScrollPosition();\n            pageX -= scrollPosition.left;\n            pageY -= scrollPosition.top;\n        }\n        var /** @type {?} */ radius = config.radius || distanceToFurthestCorner(pageX, pageY, containerRect);\n        var /** @type {?} */ duration = RIPPLE_FADE_IN_DURATION * (1 / (config.speedFactor || 1));\n        var /** @type {?} */ offsetX = pageX - containerRect.left;\n        var /** @type {?} */ offsetY = pageY - containerRect.top;\n        var /** @type {?} */ ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = offsetX - radius + \"px\";\n        ripple.style.top = offsetY - radius + \"px\";\n        ripple.style.height = radius * 2 + \"px\";\n        ripple.style.width = radius * 2 + \"px\";\n        // If the color is not set, the default CSS color will be used.\n        ripple.style.backgroundColor = config.color;\n        ripple.style.transitionDuration = duration + \"ms\";\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        var /** @type {?} */ rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = RippleState.FADING_IN;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this.runTimeoutOutsideZone(function () {\n            rippleRef.state = RippleState.VISIBLE;\n            if (!config.persistent && !_this._isMousedown) {\n                rippleRef.fadeOut();\n            }\n        }, duration);\n        return rippleRef;\n    };\n    /**\n     * Fades out a ripple reference.\n     * @param {?} rippleRef\n     * @return {?}\n     */\n    RippleRenderer.prototype.fadeOutRipple = function (rippleRef) {\n        // For ripples that are not active anymore, don't re-un the fade-out animation.\n        if (!this._activeRipples.delete(rippleRef)) {\n            return;\n        }\n        var /** @type {?} */ rippleEl = rippleRef.element;\n        rippleEl.style.transitionDuration = RIPPLE_FADE_OUT_DURATION + \"ms\";\n        rippleEl.style.opacity = '0';\n        rippleRef.state = RippleState.FADING_OUT;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this.runTimeoutOutsideZone(function () {\n            rippleRef.state = RippleState.HIDDEN;\n            rippleEl.parentNode.removeChild(rippleEl);\n        }, RIPPLE_FADE_OUT_DURATION);\n    };\n    /**\n     * Fades out all currently active ripples.\n     * @return {?}\n     */\n    RippleRenderer.prototype.fadeOutAll = function () {\n        this._activeRipples.forEach(function (ripple) { return ripple.fadeOut(); });\n    };\n    /**\n     * Sets the trigger element and registers the mouse events.\n     * @param {?} element\n     * @return {?}\n     */\n    RippleRenderer.prototype.setTriggerElement = function (element) {\n        var _this = this;\n        // Remove all previously register event listeners from the trigger element.\n        if (this._triggerElement) {\n            this._triggerEvents.forEach(function (fn, type) { return _this._triggerElement.removeEventListener(type, fn); });\n        }\n        if (element) {\n            // If the element is not null, register all event listeners on the trigger element.\n            this._ngZone.runOutsideAngular(function () {\n                _this._triggerEvents.forEach(function (fn, type) { return element.addEventListener(type, fn); });\n            });\n        }\n        this._triggerElement = element;\n    };\n    /**\n     * Listener being called on mousedown event.\n     * @param {?} event\n     * @return {?}\n     */\n    RippleRenderer.prototype.onMousedown = function (event) {\n        if (!this.rippleDisabled) {\n            this._isMousedown = true;\n            this.fadeInRipple(event.pageX, event.pageY, this.rippleConfig);\n        }\n    };\n    /**\n     * Listener being called on mouseup event.\n     * @return {?}\n     */\n    RippleRenderer.prototype.onMouseup = function () {\n        this._isMousedown = false;\n        // Fade-out all ripples that are completely visible and not persistent.\n        this._activeRipples.forEach(function (ripple) {\n            if (!ripple.config.persistent && ripple.state === RippleState.VISIBLE) {\n                ripple.fadeOut();\n            }\n        });\n    };\n    /**\n     * Listener being called on mouseleave event.\n     * @return {?}\n     */\n    RippleRenderer.prototype.onMouseLeave = function () {\n        if (this._isMousedown) {\n            this.onMouseup();\n        }\n    };\n    /**\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n     * @param {?} fn\n     * @param {?=} delay\n     * @return {?}\n     */\n    RippleRenderer.prototype.runTimeoutOutsideZone = function (fn, delay) {\n        if (delay === void 0) { delay = 0; }\n        this._ngZone.runOutsideAngular(function () { return setTimeout(fn, delay); });\n    };\n    return RippleRenderer;\n}());\n/**\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    var /** @type {?} */ distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    var /** @type {?} */ distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n/** Time in ms to throttle the scrolling events by default. */\nvar DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nvar ScrollDispatcher = (function () {\n    /**\n     * @param {?} _ngZone\n     */\n    function ScrollDispatcher(_ngZone) {\n        this._ngZone = _ngZone;\n        /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n        this._scrolled = new Subject();\n        /** Keeps track of the global `scroll` and `resize` subscriptions. */\n        this._globalSubscription = null;\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollableReferences = new Map();\n    }\n    /**\n     * Registers a Scrollable with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event in its scrolled observable.\n     * @param {?} scrollable Scrollable instance to be registered.\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.register = function (scrollable) {\n        var _this = this;\n        var /** @type {?} */ scrollSubscription = scrollable.elementScrolled().subscribe(function () { return _this._notify(); });\n        this.scrollableReferences.set(scrollable, scrollSubscription);\n    };\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param {?} scrollable Scrollable instance to be deregistered.\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.deregister = function (scrollable) {\n        if (this.scrollableReferences.has(scrollable)) {\n            this.scrollableReferences.get(scrollable).unsubscribe();\n            this.scrollableReferences.delete(scrollable);\n        }\n    };\n    /**\n     * Subscribes to an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     * @param {?=} auditTimeInMs\n     * @param {?=} callback\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.scrolled = function (auditTimeInMs, callback) {\n        var _this = this;\n        if (auditTimeInMs === void 0) { auditTimeInMs = DEFAULT_SCROLL_TIME; }\n        // In the case of a 0ms delay, use an observable without auditTime\n        // since it does add a perceptible delay in processing overhead.\n        var /** @type {?} */ observable = auditTimeInMs > 0 ?\n            this._scrolled.asObservable().auditTime(auditTimeInMs) :\n            this._scrolled.asObservable();\n        this._scrolledCount++;\n        if (!this._globalSubscription) {\n            this._globalSubscription = this._ngZone.runOutsideAngular(function () {\n                return Observable.merge(Observable.fromEvent(window.document, 'scroll'), Observable.fromEvent(window, 'resize')).subscribe(function () { return _this._notify(); });\n            });\n        }\n        // Note that we need to do the subscribing from here, in order to be able to remove\n        // the global event listeners once there are no more subscriptions.\n        var /** @type {?} */ subscription = observable.subscribe(callback);\n        subscription.add(function () {\n            _this._scrolledCount--;\n            if (_this._globalSubscription && !_this.scrollableReferences.size && !_this._scrolledCount) {\n                _this._globalSubscription.unsubscribe();\n                _this._globalSubscription = null;\n            }\n        });\n        return subscription;\n    };\n    /**\n     * Returns all registered Scrollables that contain the provided element.\n     * @param {?} elementRef\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.getScrollContainers = function (elementRef) {\n        var _this = this;\n        var /** @type {?} */ scrollingContainers = [];\n        this.scrollableReferences.forEach(function (subscription, scrollable) {\n            if (_this.scrollableContainsElement(scrollable, elementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        });\n        return scrollingContainers;\n    };\n    /**\n     * Returns true if the element is contained within the provided Scrollable.\n     * @param {?} scrollable\n     * @param {?} elementRef\n     * @return {?}\n     */\n    ScrollDispatcher.prototype.scrollableContainsElement = function (scrollable, elementRef) {\n        var /** @type {?} */ element = elementRef.nativeElement;\n        var /** @type {?} */ scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while (element = element.parentElement);\n    };\n    /**\n     * Sends a notification that a scroll event has been fired.\n     * @return {?}\n     */\n    ScrollDispatcher.prototype._notify = function () {\n        this._scrolled.next();\n    };\n    return ScrollDispatcher;\n}());\nScrollDispatcher.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nScrollDispatcher.ctorParameters = function () { return [\n    { type: NgZone, },\n]; };\n/**\n * @param {?} parentDispatcher\n * @param {?} ngZone\n * @return {?}\n */\nfunction SCROLL_DISPATCHER_PROVIDER_FACTORY(parentDispatcher, ngZone) {\n    return parentDispatcher || new ScrollDispatcher(ngZone);\n}\nvar SCROLL_DISPATCHER_PROVIDER = {\n    // If there is already a ScrollDispatcher available, use that. Otherwise, provide a new one.\n    provide: ScrollDispatcher,\n    deps: [[new Optional(), new SkipSelf(), ScrollDispatcher], NgZone],\n    useFactory: SCROLL_DISPATCHER_PROVIDER_FACTORY\n};\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * \\@docs-private\n */\nvar ViewportRuler = (function () {\n    /**\n     * @param {?} scrollDispatcher\n     */\n    function ViewportRuler(scrollDispatcher) {\n        var _this = this;\n        // Initially cache the document rectangle.\n        this._cacheViewportGeometry();\n        // Subscribe to scroll and resize events and update the document rectangle on changes.\n        scrollDispatcher.scrolled(null, function () { return _this._cacheViewportGeometry(); });\n    }\n    /**\n     * Gets a ClientRect for the viewport's bounds.\n     * @param {?=} documentRect\n     * @return {?}\n     */\n    ViewportRuler.prototype.getViewportRect = function (documentRect) {\n        if (documentRect === void 0) { documentRect = this._documentRect; }\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        var /** @type {?} */ scrollPosition = this.getViewportScrollPosition(documentRect);\n        var /** @type {?} */ height = window.innerHeight;\n        var /** @type {?} */ width = window.innerWidth;\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height: height,\n            width: width,\n        };\n    };\n    /**\n     * Gets the (top, left) scroll position of the viewport.\n     * @param {?=} documentRect\n     * @return {?}\n     */\n    ViewportRuler.prototype.getViewportScrollPosition = function (documentRect) {\n        if (documentRect === void 0) { documentRect = this._documentRect; }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        var /** @type {?} */ top = -documentRect.top || document.body.scrollTop || window.scrollY || 0;\n        var /** @type {?} */ left = -documentRect.left || document.body.scrollLeft || window.scrollX || 0;\n        return { top: top, left: left };\n    };\n    /**\n     * Caches the latest client rectangle of the document element.\n     * @return {?}\n     */\n    ViewportRuler.prototype._cacheViewportGeometry = function () {\n        this._documentRect = document.documentElement.getBoundingClientRect();\n    };\n    return ViewportRuler;\n}());\nViewportRuler.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nViewportRuler.ctorParameters = function () { return [\n    { type: ScrollDispatcher, },\n]; };\n/**\n * @param {?} parentRuler\n * @param {?} scrollDispatcher\n * @return {?}\n */\nfunction VIEWPORT_RULER_PROVIDER_FACTORY(parentRuler, scrollDispatcher) {\n    return parentRuler || new ViewportRuler(scrollDispatcher);\n}\nvar VIEWPORT_RULER_PROVIDER = {\n    // If there is already a ViewportRuler available, use that. Otherwise, provide a new one.\n    provide: ViewportRuler,\n    deps: [[new Optional(), new SkipSelf(), ViewportRuler], ScrollDispatcher],\n    useFactory: VIEWPORT_RULER_PROVIDER_FACTORY\n};\n/** OpaqueToken that can be used to specify the global ripple options. */\nvar MD_RIPPLE_GLOBAL_OPTIONS = new OpaqueToken('md-ripple-global-options');\nvar MdRipple = (function () {\n    /**\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} ruler\n     * @param {?} globalOptions\n     */\n    function MdRipple(elementRef, ngZone, ruler, \n        // Type needs to be `any` because of https://github.com/angular/angular/issues/12631\n        globalOptions) {\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        /**\n         * If set, the normal duration of ripple animations is divided by this value. For example,\n         * setting it to 0.5 will cause the animations to take twice as long.\n         * A changed speedFactor will not modify the fade-out duration of the ripples.\n         */\n        this.speedFactor = 1;\n        this._rippleRenderer = new RippleRenderer(elementRef, ngZone, ruler);\n        this._globalOptions = globalOptions ? globalOptions : {};\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MdRipple.prototype.ngOnChanges = function (changes) {\n        if (changes['trigger'] && this.trigger) {\n            this._rippleRenderer.setTriggerElement(this.trigger);\n        }\n        this._rippleRenderer.rippleDisabled = this._globalOptions.disabled || this.disabled;\n        this._rippleRenderer.rippleConfig = this.rippleConfig;\n    };\n    /**\n     * @return {?}\n     */\n    MdRipple.prototype.ngOnDestroy = function () {\n        // Set the trigger element to null to cleanup all listeners.\n        this._rippleRenderer.setTriggerElement(null);\n    };\n    /**\n     * Launches a manual ripple at the specified position.\n     * @param {?} pageX\n     * @param {?} pageY\n     * @param {?=} config\n     * @return {?}\n     */\n    MdRipple.prototype.launch = function (pageX, pageY, config) {\n        if (config === void 0) { config = this.rippleConfig; }\n        return this._rippleRenderer.fadeInRipple(pageX, pageY, config);\n    };\n    /**\n     * Fades out all currently showing ripple elements.\n     * @return {?}\n     */\n    MdRipple.prototype.fadeOutAll = function () {\n        this._rippleRenderer.fadeOutAll();\n    };\n    Object.defineProperty(MdRipple.prototype, \"rippleConfig\", {\n        /**\n         * Ripple configuration from the directive's input values.\n         * @return {?}\n         */\n        get: function () {\n            return {\n                centered: this.centered,\n                speedFactor: this.speedFactor * (this._globalOptions.baseSpeedFactor || 1),\n                radius: this.radius,\n                color: this.color\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return MdRipple;\n}());\nMdRipple.decorators = [\n    { type: Directive, args: [{\n                selector: '[md-ripple], [mat-ripple], [mdRipple], [matRipple]',\n                exportAs: 'mdRipple',\n                host: {\n                    '[class.mat-ripple]': 'true',\n                    '[class.mat-ripple-unbounded]': 'unbounded'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdRipple.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: NgZone, },\n    { type: ViewportRuler, },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MD_RIPPLE_GLOBAL_OPTIONS,] },] },\n]; };\nMdRipple.propDecorators = {\n    'trigger': [{ type: Input, args: ['mdRippleTrigger',] },],\n    'centered': [{ type: Input, args: ['mdRippleCentered',] },],\n    'disabled': [{ type: Input, args: ['mdRippleDisabled',] },],\n    'radius': [{ type: Input, args: ['mdRippleRadius',] },],\n    'speedFactor': [{ type: Input, args: ['mdRippleSpeedFactor',] },],\n    'color': [{ type: Input, args: ['mdRippleColor',] },],\n    'unbounded': [{ type: Input, args: ['mdRippleUnbounded',] },],\n};\nvar MdRippleModule = (function () {\n    function MdRippleModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdRippleModule.forRoot = function () {\n        return {\n            ngModule: MdRippleModule,\n            providers: []\n        };\n    };\n    return MdRippleModule;\n}());\nMdRippleModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CompatibilityModule],\n                exports: [MdRipple, CompatibilityModule],\n                declarations: [MdRipple],\n                providers: [VIEWPORT_RULER_PROVIDER, SCROLL_DISPATCHER_PROVIDER],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdRippleModule.ctorParameters = function () { return []; };\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with <md-checkbox> and should *not* be used if the user would directly interact\n * with the checkbox. The pseudo-checkbox should only be used as an implementation detail of\n * more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\nvar MdPseudoCheckbox = (function () {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _renderer\n     */\n    function MdPseudoCheckbox(_elementRef, _renderer) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        /** Display state of the checkbox. */\n        this.state = 'unchecked';\n        /** Whether the checkbox is disabled. */\n        this.disabled = false;\n        this.color = 'accent';\n    }\n    Object.defineProperty(MdPseudoCheckbox.prototype, \"color\", {\n        /**\n         * Color of the checkbox.\n         * @return {?}\n         */\n        get: function () { return this._color; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (value) {\n                var /** @type {?} */ nativeElement = this._elementRef.nativeElement;\n                this._renderer.setElementClass(nativeElement, \"mat-\" + this.color, false);\n                this._renderer.setElementClass(nativeElement, \"mat-\" + value, true);\n                this._color = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    return MdPseudoCheckbox;\n}());\nMdPseudoCheckbox.decorators = [\n    { type: Component, args: [{ encapsulation: ViewEncapsulation.None,\n                selector: 'md-pseudo-checkbox, mat-pseudo-checkbox',\n                styles: [\".mat-pseudo-checkbox{width:20px;height:20px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:9px;left:2px;width:16px;opacity:1}.mat-pseudo-checkbox-checked::after{top:5px;left:3px;width:12px;height:5px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1} /*# sourceMappingURL=pseudo-checkbox.css.map */ \"],\n                template: '',\n                host: {\n                    '[class.mat-pseudo-checkbox]': 'true',\n                    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                },\n            },] },\n];\n/**\n * @nocollapse\n */\nMdPseudoCheckbox.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: Renderer, },\n]; };\nMdPseudoCheckbox.propDecorators = {\n    'state': [{ type: Input },],\n    'disabled': [{ type: Input },],\n    'color': [{ type: Input },],\n};\nvar MdSelectionModule = (function () {\n    function MdSelectionModule() {\n    }\n    return MdSelectionModule;\n}());\nMdSelectionModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [MdPseudoCheckbox],\n                declarations: [MdPseudoCheckbox]\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSelectionModule.ctorParameters = function () { return []; };\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nvar _uniqueIdCounter = 0;\n/**\n * Event object emitted by MdOption when selected or deselected.\n */\nvar MdOptionSelectionChange = (function () {\n    /**\n     * @param {?} source\n     * @param {?=} isUserInput\n     */\n    function MdOptionSelectionChange(source, isUserInput) {\n        if (isUserInput === void 0) { isUserInput = false; }\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n    return MdOptionSelectionChange;\n}());\n/**\n * Single option inside of a `<md-select>` element.\n */\nvar MdOption = (function () {\n    /**\n     * @param {?} _element\n     * @param {?} _renderer\n     * @param {?} _isCompatibilityMode\n     */\n    function MdOption(_element, _renderer, _isCompatibilityMode) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._isCompatibilityMode = _isCompatibilityMode;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._id = \"md-option-\" + _uniqueIdCounter++;\n        /** Whether the wrapping component is in multiple selection mode. */\n        this.multiple = false;\n        /** Event emitted when the option is selected or deselected. */\n        this.onSelectionChange = new EventEmitter();\n    }\n    Object.defineProperty(MdOption.prototype, \"id\", {\n        /**\n         * The unique ID of the option.\n         * @return {?}\n         */\n        get: function () { return this._id; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdOption.prototype, \"selected\", {\n        /**\n         * Whether or not the option is currently selected.\n         * @return {?}\n         */\n        get: function () { return this._selected; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdOption.prototype, \"disabled\", {\n        /**\n         * Whether the option is disabled.\n         * @return {?}\n         */\n        get: function () { return this._disabled; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._disabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdOption.prototype, \"active\", {\n        /**\n         * Whether or not the option is currently active and ready to be selected.\n         * An active option displays styles as if it is focused, but the\n         * focus is actually retained somewhere else. This comes in handy\n         * for components like autocomplete where focus must remain on the input.\n         * @return {?}\n         */\n        get: function () {\n            return this._active;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdOption.prototype, \"viewValue\", {\n        /**\n         * The displayed value of the option. It is necessary to show the selected option in the\n         * select's trigger.\n         * @return {?}\n         */\n        get: function () {\n            // TODO(kara): Add input property alternative for node envs.\n            return this._getHostElement().textContent.trim();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Selects the option.\n     * @return {?}\n     */\n    MdOption.prototype.select = function () {\n        this._selected = true;\n        this._emitSelectionChangeEvent();\n    };\n    /**\n     * Deselects the option.\n     * @return {?}\n     */\n    MdOption.prototype.deselect = function () {\n        this._selected = false;\n        this._emitSelectionChangeEvent();\n    };\n    /**\n     * Sets focus onto this option.\n     * @return {?}\n     */\n    MdOption.prototype.focus = function () {\n        this._renderer.invokeElementMethod(this._getHostElement(), 'focus');\n    };\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    MdOption.prototype.setActiveStyles = function () {\n        this._active = true;\n    };\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    MdOption.prototype.setInactiveStyles = function () {\n        this._active = false;\n    };\n    /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    MdOption.prototype._handleKeydown = function (event) {\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n        }\n    };\n    /**\n     * Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.\n     * @return {?}\n     */\n    MdOption.prototype._selectViaInteraction = function () {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._emitSelectionChangeEvent(true);\n        }\n    };\n    /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n    MdOption.prototype._getTabIndex = function () {\n        return this.disabled ? '-1' : '0';\n    };\n    /**\n     * Fetches the host DOM element.\n     * @return {?}\n     */\n    MdOption.prototype._getHostElement = function () {\n        return this._element.nativeElement;\n    };\n    /**\n     * Emits the selection change event.\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    MdOption.prototype._emitSelectionChangeEvent = function (isUserInput) {\n        if (isUserInput === void 0) { isUserInput = false; }\n        this.onSelectionChange.emit(new MdOptionSelectionChange(this, isUserInput));\n    };\n    ;\n    return MdOption;\n}());\nMdOption.decorators = [\n    { type: Component, args: [{ selector: 'md-option, mat-option',\n                host: {\n                    'role': 'option',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[class.mat-selected]': 'selected',\n                    '[class.mat-option-multiple]': 'multiple',\n                    '[class.mat-active]': 'active',\n                    '[id]': 'id',\n                    '[attr.aria-selected]': 'selected.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[class.mat-option-disabled]': 'disabled',\n                    '(click)': '_selectViaInteraction()',\n                    '(keydown)': '_handleKeydown($event)',\n                    '[class.mat-option]': 'true',\n                },\n                template: \"<span [ngSwitch]=\\\"_isCompatibilityMode\\\" *ngIf=\\\"multiple\\\"> <mat-pseudo-checkbox class=\\\"mat-option-pseudo-checkbox\\\" *ngSwitchCase=\\\"true\\\" [state]=\\\"selected ? 'checked' : ''\\\" color=\\\"primary\\\"></mat-pseudo-checkbox> <md-pseudo-checkbox class=\\\"mat-option-pseudo-checkbox\\\" *ngSwitchDefault [state]=\\\"selected ? 'checked' : ''\\\" color=\\\"primary\\\"></md-pseudo-checkbox> </span> <ng-content></ng-content> <div class=\\\"mat-option-ripple\\\" *ngIf=\\\"!disabled\\\" md-ripple [mdRippleTrigger]=\\\"_getHostElement()\\\"> </div> \",\n                encapsulation: ViewEncapsulation.None\n            },] },\n];\n/**\n * @nocollapse\n */\nMdOption.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: Renderer, },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_COMPATIBILITY_MODE,] },] },\n]; };\nMdOption.propDecorators = {\n    'value': [{ type: Input },],\n    'disabled': [{ type: Input },],\n    'onSelectionChange': [{ type: Output },],\n};\nvar MdOptionModule = (function () {\n    function MdOptionModule() {\n    }\n    /**\n     * @return {?}\n     */\n    MdOptionModule.forRoot = function () {\n        return {\n            ngModule: MdOptionModule,\n            providers: []\n        };\n    };\n    return MdOptionModule;\n}());\nMdOptionModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MdRippleModule, CommonModule, MdSelectionModule],\n                exports: [MdOption],\n                declarations: [MdOption]\n            },] },\n];\n/**\n * @nocollapse\n */\nMdOptionModule.ctorParameters = function () { return []; };\n/**\n * Wrapper around Error that sets the error message.\n * \\@docs-private\n */\nvar MdError = (function (_super) {\n    __extends(MdError, _super);\n    /**\n     * @param {?} value\n     */\n    function MdError(value) {\n        var _this = _super.call(this) || this;\n        _this.message = value;\n        return _this;\n    }\n    return MdError;\n}(Error));\n/**\n * Exception thrown when attempting to attach a null portal to a host.\n * \\@docs-private\n */\nvar NullPortalError = (function (_super) {\n    __extends(NullPortalError, _super);\n    function NullPortalError() {\n        return _super.call(this, 'Must provide a portal to attach') || this;\n    }\n    return NullPortalError;\n}(MdError));\n/**\n * Exception thrown when attempting to attach a portal to a host that is already attached.\n * \\@docs-private\n */\nvar PortalAlreadyAttachedError = (function (_super) {\n    __extends(PortalAlreadyAttachedError, _super);\n    function PortalAlreadyAttachedError() {\n        return _super.call(this, 'Host already has a portal attached') || this;\n    }\n    return PortalAlreadyAttachedError;\n}(MdError));\n/**\n * Exception thrown when attempting to attach a portal to an already-disposed host.\n * \\@docs-private\n */\nvar PortalHostAlreadyDisposedError = (function (_super) {\n    __extends(PortalHostAlreadyDisposedError, _super);\n    function PortalHostAlreadyDisposedError() {\n        return _super.call(this, 'This PortalHost has already been disposed') || this;\n    }\n    return PortalHostAlreadyDisposedError;\n}(MdError));\n/**\n * Exception thrown when attempting to attach an unknown portal type.\n * \\@docs-private\n */\nvar UnknownPortalTypeError = (function (_super) {\n    __extends(UnknownPortalTypeError, _super);\n    function UnknownPortalTypeError() {\n        return _super.call(this, 'Attempting to attach an unknown Portal type. ' +\n            'BasePortalHost accepts either a ComponentPortal or a TemplatePortal.') || this;\n    }\n    return UnknownPortalTypeError;\n}(MdError));\n/**\n * Exception thrown when attempting to attach a portal to a null host.\n * \\@docs-private\n */\nvar NullPortalHostError = (function (_super) {\n    __extends(NullPortalHostError, _super);\n    function NullPortalHostError() {\n        return _super.call(this, 'Attempting to attach a portal to a null PortalHost') || this;\n    }\n    return NullPortalHostError;\n}(MdError));\n/**\n * Exception thrown when attempting to detach a portal that is not attached.\n * \\@docs-private\n */\nvar NoPortalAttachedError = (function (_super) {\n    __extends(NoPortalAttachedError, _super);\n    function NoPortalAttachedError() {\n        return _super.call(this, 'Attempting to detach a portal that is not attached to a host') || this;\n    }\n    return NoPortalAttachedError;\n}(MdError));\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalHost`.\n * @abstract\n */\nvar Portal = (function () {\n    function Portal() {\n    }\n    /**\n     * Attach this portal to a host.\n     * @param {?} host\n     * @return {?}\n     */\n    Portal.prototype.attach = function (host) {\n        if (host == null) {\n            throw new NullPortalHostError();\n        }\n        if (host.hasAttached()) {\n            throw new PortalAlreadyAttachedError();\n        }\n        this._attachedHost = host;\n        return (host.attach(this));\n    };\n    /**\n     * Detach this portal from its host\n     * @return {?}\n     */\n    Portal.prototype.detach = function () {\n        var /** @type {?} */ host = this._attachedHost;\n        if (host == null) {\n            throw new NoPortalAttachedError();\n        }\n        this._attachedHost = null;\n        return host.detach();\n    };\n    Object.defineProperty(Portal.prototype, \"isAttached\", {\n        /**\n         * Whether this portal is attached to a host.\n         * @return {?}\n         */\n        get: function () {\n            return this._attachedHost != null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the PortalHost reference without performing `attach()`. This is used directly by\n     * the PortalHost when it is performing an `attach()` or `detach()`.\n     * @param {?} host\n     * @return {?}\n     */\n    Portal.prototype.setAttachedHost = function (host) {\n        this._attachedHost = host;\n    };\n    return Portal;\n}());\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nvar ComponentPortal = (function (_super) {\n    __extends(ComponentPortal, _super);\n    /**\n     * @param {?} component\n     * @param {?=} viewContainerRef\n     * @param {?=} injector\n     */\n    function ComponentPortal(component, viewContainerRef, injector) {\n        if (viewContainerRef === void 0) { viewContainerRef = null; }\n        if (injector === void 0) { injector = null; }\n        var _this = _super.call(this) || this;\n        _this.component = component;\n        _this.viewContainerRef = viewContainerRef;\n        _this.injector = injector;\n        return _this;\n    }\n    return ComponentPortal;\n}(Portal));\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nvar TemplatePortal = (function (_super) {\n    __extends(TemplatePortal, _super);\n    /**\n     * @param {?} template\n     * @param {?} viewContainerRef\n     */\n    function TemplatePortal(template, viewContainerRef) {\n        var _this = _super.call(this) || this;\n        /**\n         * Additional locals for the instantiated embedded view.\n         * These locals can be seen as \"exports\" for the template, such as how ngFor has\n         * index / event / odd.\n         * See https://angular.io/docs/ts/latest/api/core/EmbeddedViewRef-class.html\n         */\n        _this.locals = new Map();\n        _this.templateRef = template;\n        _this.viewContainerRef = viewContainerRef;\n        return _this;\n    }\n    Object.defineProperty(TemplatePortal.prototype, \"origin\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.templateRef.elementRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} host\n     * @param {?=} locals\n     * @return {?}\n     */\n    TemplatePortal.prototype.attach = function (host, locals) {\n        this.locals = locals == null ? new Map() : locals;\n        return _super.prototype.attach.call(this, host);\n    };\n    /**\n     * @return {?}\n     */\n    TemplatePortal.prototype.detach = function () {\n        this.locals = new Map();\n        return _super.prototype.detach.call(this);\n    };\n    return TemplatePortal;\n}(Portal));\n/**\n * Partial implementation of PortalHost that only deals with attaching either a\n * ComponentPortal or a TemplatePortal.\n * @abstract\n */\nvar BasePortalHost = (function () {\n    function BasePortalHost() {\n        this._isDisposed = false;\n    }\n    /**\n     * Whether this host has an attached portal.\n     * @return {?}\n     */\n    BasePortalHost.prototype.hasAttached = function () {\n        return !!this._attachedPortal;\n    };\n    /**\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalHost.prototype.attach = function (portal) {\n        if (!portal) {\n            throw new NullPortalError();\n        }\n        if (this.hasAttached()) {\n            throw new PortalAlreadyAttachedError();\n        }\n        if (this._isDisposed) {\n            throw new PortalHostAlreadyDisposedError();\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n        }\n        throw new UnknownPortalTypeError();\n    };\n    /**\n     * @abstract\n     * @template T\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalHost.prototype.attachComponentPortal = function (portal) { };\n    /**\n     * @abstract\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalHost.prototype.attachTemplatePortal = function (portal) { };\n    /**\n     * @return {?}\n     */\n    BasePortalHost.prototype.detach = function () {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    };\n    /**\n     * @return {?}\n     */\n    BasePortalHost.prototype.dispose = function () {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    BasePortalHost.prototype.setDisposeFn = function (fn) {\n        this._disposeFn = fn;\n    };\n    /**\n     * @return {?}\n     */\n    BasePortalHost.prototype._invokeDisposeFn = function () {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    };\n    return BasePortalHost;\n}());\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n *\n * Usage:\n * <ng-template portal #greeting>\n *   <p> Hello {{name}} </p>\n * </ng-template>\n */\nvar TemplatePortalDirective = (function (_super) {\n    __extends(TemplatePortalDirective, _super);\n    /**\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     */\n    function TemplatePortalDirective(templateRef, viewContainerRef) {\n        return _super.call(this, templateRef, viewContainerRef) || this;\n    }\n    return TemplatePortalDirective;\n}(TemplatePortal));\nTemplatePortalDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdk-portal], [portal]',\n                exportAs: 'cdkPortal',\n            },] },\n];\n/**\n * @nocollapse\n */\nTemplatePortalDirective.ctorParameters = function () { return [\n    { type: TemplateRef, },\n    { type: ViewContainerRef, },\n]; };\n/**\n * Directive version of a PortalHost. Because the directive *is* a PortalHost, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * <ng-template [cdkPortalHost]=\"greeting\"></ng-template>\n */\nvar PortalHostDirective = (function (_super) {\n    __extends(PortalHostDirective, _super);\n    /**\n     * @param {?} _componentFactoryResolver\n     * @param {?} _viewContainerRef\n     */\n    function PortalHostDirective(_componentFactoryResolver, _viewContainerRef) {\n        var _this = _super.call(this) || this;\n        _this._componentFactoryResolver = _componentFactoryResolver;\n        _this._viewContainerRef = _viewContainerRef;\n        return _this;\n    }\n    Object.defineProperty(PortalHostDirective.prototype, \"_deprecatedPortal\", {\n        /**\n         * @deprecated\n         * @return {?}\n         */\n        get: function () { return this.portal; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this.portal = v; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PortalHostDirective.prototype, \"portal\", {\n        /**\n         * Portal associated with the Portal host.\n         * @return {?}\n         */\n        get: function () {\n            return this._portal;\n        },\n        /**\n         * @param {?} portal\n         * @return {?}\n         */\n        set: function (portal) {\n            if (this.hasAttached()) {\n                _super.prototype.detach.call(this);\n            }\n            if (portal) {\n                _super.prototype.attach.call(this, portal);\n            }\n            this._portal = portal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    PortalHostDirective.prototype.ngOnDestroy = function () {\n        _super.prototype.dispose.call(this);\n        this._portal = null;\n    };\n    /**\n     * Attach the given ComponentPortal to this PortalHost using the ComponentFactoryResolver.\n     *\n     * @template T\n     * @param {?} portal Portal to be attached to the portal host.\n     * @return {?}\n     */\n    PortalHostDirective.prototype.attachComponentPortal = function (portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalHost.\n        var /** @type {?} */ viewContainerRef = portal.viewContainerRef != null ?\n            portal.viewContainerRef :\n            this._viewContainerRef;\n        var /** @type {?} */ componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n        var /** @type {?} */ ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.parentInjector);\n        _super.prototype.setDisposeFn.call(this, function () { return ref.destroy(); });\n        this._portal = portal;\n        return ref;\n    };\n    /**\n     * Attach the given TemplatePortal to this PortlHost as an embedded View.\n     * @param {?} portal Portal to be attached.\n     * @return {?}\n     */\n    PortalHostDirective.prototype.attachTemplatePortal = function (portal) {\n        var _this = this;\n        portal.setAttachedHost(this);\n        this._viewContainerRef.createEmbeddedView(portal.templateRef);\n        _super.prototype.setDisposeFn.call(this, function () { return _this._viewContainerRef.clear(); });\n        this._portal = portal;\n        // TODO(jelbourn): return locals from view\n        return new Map();\n    };\n    return PortalHostDirective;\n}(BasePortalHost));\nPortalHostDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkPortalHost], [portalHost]',\n                inputs: ['portal: cdkPortalHost']\n            },] },\n];\n/**\n * @nocollapse\n */\nPortalHostDirective.ctorParameters = function () { return [\n    { type: ComponentFactoryResolver, },\n    { type: ViewContainerRef, },\n]; };\nPortalHostDirective.propDecorators = {\n    '_deprecatedPortal': [{ type: Input, args: ['portalHost',] },],\n};\nvar PortalModule = (function () {\n    function PortalModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    PortalModule.forRoot = function () {\n        return {\n            ngModule: PortalModule,\n            providers: []\n        };\n    };\n    return PortalModule;\n}());\nPortalModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [TemplatePortalDirective, PortalHostDirective],\n                declarations: [TemplatePortalDirective, PortalHostDirective],\n            },] },\n];\n/**\n * @nocollapse\n */\nPortalModule.ctorParameters = function () { return []; };\n/**\n * OverlayState is a bag of values for either the initial configuration or current state of an\n * overlay.\n */\nvar OverlayState = (function () {\n    function OverlayState() {\n        /** Whether the overlay has a backdrop. */\n        this.hasBackdrop = false;\n        /** Custom class to add to the backdrop **/\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /** The direction of the text in the overlay panel. */\n        this.direction = 'ltr';\n        // TODO(jelbourn): configuration still to add\n        // - focus trap\n        // - disable pointer events\n        // - z-index\n    }\n    return OverlayState;\n}());\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n *\n * This is the only part of the portal core that directly touches the DOM.\n */\nvar DomPortalHost = (function (_super) {\n    __extends(DomPortalHost, _super);\n    /**\n     * @param {?} _hostDomElement\n     * @param {?} _componentFactoryResolver\n     * @param {?} _appRef\n     * @param {?} _defaultInjector\n     */\n    function DomPortalHost(_hostDomElement, _componentFactoryResolver, _appRef, _defaultInjector) {\n        var _this = _super.call(this) || this;\n        _this._hostDomElement = _hostDomElement;\n        _this._componentFactoryResolver = _componentFactoryResolver;\n        _this._appRef = _appRef;\n        _this._defaultInjector = _defaultInjector;\n        return _this;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @template T\n     * @param {?} portal Portal to be attached\n     * @return {?}\n     */\n    DomPortalHost.prototype.attachComponentPortal = function (portal) {\n        var _this = this;\n        var /** @type {?} */ componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n        var /** @type {?} */ componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.parentInjector);\n            this.setDisposeFn(function () { return componentRef.destroy(); });\n        }\n        else {\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn(function () {\n                _this._appRef.detachView(componentRef.hostView);\n                componentRef.destroy();\n            });\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this._hostDomElement.appendChild(this._getComponentRootNode(componentRef));\n        return componentRef;\n    };\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @param {?} portal Portal to be attached.\n     * @return {?}\n     */\n    DomPortalHost.prototype.attachTemplatePortal = function (portal) {\n        var _this = this;\n        var /** @type {?} */ viewContainer = portal.viewContainerRef;\n        var /** @type {?} */ viewRef = viewContainer.createEmbeddedView(portal.templateRef);\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalHost the view can be added everywhere in the DOM (e.g Overlay Container)\n        // To move the view to the specified host element. We just re-append the existing root nodes.\n        viewRef.rootNodes.forEach(function (rootNode) { return _this._hostDomElement.appendChild(rootNode); });\n        this.setDisposeFn((function () {\n            var /** @type {?} */ index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        }));\n        // TODO(jelbourn): Return locals from view.\n        return new Map();\n    };\n    /**\n     * Clears out a portal from the DOM.\n     * @return {?}\n     */\n    DomPortalHost.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (this._hostDomElement.parentNode != null) {\n            this._hostDomElement.parentNode.removeChild(this._hostDomElement);\n        }\n    };\n    /**\n     * Gets the root HTMLElement for an instantiated component.\n     * @param {?} componentRef\n     * @return {?}\n     */\n    DomPortalHost.prototype._getComponentRootNode = function (componentRef) {\n        return (((componentRef.hostView)).rootNodes[0]);\n    };\n    return DomPortalHost;\n}(BasePortalHost));\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nvar OverlayRef = (function () {\n    /**\n     * @param {?} _portalHost\n     * @param {?} _pane\n     * @param {?} _state\n     * @param {?} _ngZone\n     */\n    function OverlayRef(_portalHost, _pane, _state, _ngZone) {\n        this._portalHost = _portalHost;\n        this._pane = _pane;\n        this._state = _state;\n        this._ngZone = _ngZone;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n    }\n    Object.defineProperty(OverlayRef.prototype, \"overlayElement\", {\n        /**\n         * The overlay's HTML element\n         * @return {?}\n         */\n        get: function () {\n            return this._pane;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Attaches the overlay to a portal instance and adds the backdrop.\n     * @param {?} portal Portal instance to which to attach the overlay.\n     * @return {?} The portal attachment result.\n     */\n    OverlayRef.prototype.attach = function (portal) {\n        var /** @type {?} */ attachResult = this._portalHost.attach(portal);\n        // Update the pane element with the given state configuration.\n        this._updateStackingOrder();\n        this.updateSize();\n        this.updateDirection();\n        this.updatePosition();\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._state.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        return attachResult;\n    };\n    /**\n     * Detaches an overlay from a portal.\n     * @return {?} Resolves when the overlay has been detached.\n     */\n    OverlayRef.prototype.detach = function () {\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        return this._portalHost.detach();\n    };\n    /**\n     * Cleans up the overlay from the DOM.\n     * @return {?}\n     */\n    OverlayRef.prototype.dispose = function () {\n        if (this._state.positionStrategy) {\n            this._state.positionStrategy.dispose();\n        }\n        this.detachBackdrop();\n        this._portalHost.dispose();\n    };\n    /**\n     * Checks whether the overlay has been attached.\n     * @return {?}\n     */\n    OverlayRef.prototype.hasAttached = function () {\n        return this._portalHost.hasAttached();\n    };\n    /**\n     * Returns an observable that emits when the backdrop has been clicked.\n     * @return {?}\n     */\n    OverlayRef.prototype.backdropClick = function () {\n        return this._backdropClick.asObservable();\n    };\n    /**\n     * Gets the current state config of the overlay.\n     * @return {?}\n     */\n    OverlayRef.prototype.getState = function () {\n        return this._state;\n    };\n    /**\n     * Updates the position of the overlay based on the position strategy.\n     * @return {?}\n     */\n    OverlayRef.prototype.updatePosition = function () {\n        if (this._state.positionStrategy) {\n            this._state.positionStrategy.apply(this._pane);\n        }\n    };\n    /**\n     * Updates the text direction of the overlay panel. *\n     * @return {?}\n     */\n    OverlayRef.prototype.updateDirection = function () {\n        this._pane.setAttribute('dir', this._state.direction);\n    };\n    /**\n     * Updates the size of the overlay based on the overlay config.\n     * @return {?}\n     */\n    OverlayRef.prototype.updateSize = function () {\n        if (this._state.width || this._state.width === 0) {\n            this._pane.style.width = formatCssUnit(this._state.width);\n        }\n        if (this._state.height || this._state.height === 0) {\n            this._pane.style.height = formatCssUnit(this._state.height);\n        }\n        if (this._state.minWidth || this._state.minWidth === 0) {\n            this._pane.style.minWidth = formatCssUnit(this._state.minWidth);\n        }\n        if (this._state.minHeight || this._state.minHeight === 0) {\n            this._pane.style.minHeight = formatCssUnit(this._state.minHeight);\n        }\n    };\n    /**\n     * Toggles the pointer events for the overlay pane element.\n     * @param {?} enablePointer\n     * @return {?}\n     */\n    OverlayRef.prototype._togglePointerEvents = function (enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? 'auto' : 'none';\n    };\n    /**\n     * Attaches a backdrop for this overlay.\n     * @return {?}\n     */\n    OverlayRef.prototype._attachBackdrop = function () {\n        var _this = this;\n        this._backdropElement = document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        this._backdropElement.classList.add(this._state.backdropClass);\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        this._pane.parentElement.insertBefore(this._backdropElement, this._pane);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', function () { return _this._backdropClick.next(null); });\n        // Add class to fade-in the backdrop after one frame.\n        requestAnimationFrame(function () {\n            if (_this._backdropElement) {\n                _this._backdropElement.classList.add('cdk-overlay-backdrop-showing');\n            }\n        });\n    };\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     * @return {?}\n     */\n    OverlayRef.prototype._updateStackingOrder = function () {\n        if (this._pane.nextSibling) {\n            this._pane.parentNode.appendChild(this._pane);\n        }\n    };\n    /**\n     * Detaches the backdrop (if any) associated with the overlay.\n     * @return {?}\n     */\n    OverlayRef.prototype.detachBackdrop = function () {\n        var _this = this;\n        var /** @type {?} */ backdropToDetach = this._backdropElement;\n        if (backdropToDetach) {\n            var /** @type {?} */ finishDetach_1 = function () {\n                // It may not be attached to anything in certain cases (e.g. unit tests).\n                if (backdropToDetach && backdropToDetach.parentNode) {\n                    backdropToDetach.parentNode.removeChild(backdropToDetach);\n                }\n                // It is possible that a new portal has been attached to this overlay since we started\n                // removing the backdrop. If that is the case, only clear the backdrop reference if it\n                // is still the same instance that we started to remove.\n                if (_this._backdropElement == backdropToDetach) {\n                    _this._backdropElement = null;\n                }\n            };\n            backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n            backdropToDetach.classList.remove(this._state.backdropClass);\n            backdropToDetach.addEventListener('transitionend', finishDetach_1);\n            // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n            // In this case we make it unclickable and we try to remove it after a delay.\n            backdropToDetach.style.pointerEvents = 'none';\n            // Run this outside the Angular zone because there's nothing that Angular cares about.\n            // If it were to run inside the Angular zone, every test that used Overlay would have to be\n            // either async or fakeAsync.\n            this._ngZone.runOutsideAngular(function () {\n                setTimeout(finishDetach_1, 500);\n            });\n        }\n    };\n    return OverlayRef;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction formatCssUnit(value) {\n    return typeof value === 'string' ? (value) : value + \"px\";\n}\n/** Horizontal dimension of a connection point on the perimeter of the origin or overlay element. */\n/**\n * The points of the origin element and the overlay element to connect.\n */\nvar ConnectionPositionPair = (function () {\n    /**\n     * @param {?} origin\n     * @param {?} overlay\n     */\n    function ConnectionPositionPair(origin, overlay) {\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n    return ConnectionPositionPair;\n}());\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n */\nvar ScrollableViewProperties = (function () {\n    function ScrollableViewProperties() {\n    }\n    return ScrollableViewProperties;\n}());\n/**\n * The change event emitted by the strategy when a fallback position is used.\n */\nvar ConnectedOverlayPositionChange = (function () {\n    /**\n     * @param {?} connectionPair\n     * @param {?} scrollableViewProperties\n     */\n    function ConnectedOverlayPositionChange(connectionPair, scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n    return ConnectedOverlayPositionChange;\n}());\n/**\n * @nocollapse\n */\nConnectedOverlayPositionChange.ctorParameters = function () { return [\n    { type: ConnectionPositionPair, },\n    { type: ScrollableViewProperties, decorators: [{ type: Optional },] },\n]; };\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nvar ConnectedPositionStrategy = (function () {\n    /**\n     * @param {?} _connectedTo\n     * @param {?} _originPos\n     * @param {?} _overlayPos\n     * @param {?} _viewportRuler\n     */\n    function ConnectedPositionStrategy(_connectedTo, _originPos, _overlayPos, _viewportRuler) {\n        this._connectedTo = _connectedTo;\n        this._originPos = _originPos;\n        this._overlayPos = _overlayPos;\n        this._viewportRuler = _viewportRuler;\n        this._dir = 'ltr';\n        this._offsetX = 0;\n        this._offsetY = 0;\n        this.scrollables = [];\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        this._onPositionChange = new Subject();\n        this._origin = this._connectedTo.nativeElement;\n        this.withFallbackPosition(_originPos, _overlayPos);\n    }\n    Object.defineProperty(ConnectedPositionStrategy.prototype, \"_isRtl\", {\n        /**\n         * Whether the we're dealing with an RTL context\n         * @return {?}\n         */\n        get: function () {\n            return this._dir === 'rtl';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectedPositionStrategy.prototype, \"onPositionChange\", {\n        /**\n         * Emits an event when the connection point changes.\n         * @return {?}\n         */\n        get: function () {\n            return this._onPositionChange.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectedPositionStrategy.prototype, \"positions\", {\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         * @return {?}\n         */\n        get: function () {\n            return this._preferredPositions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * To be used to for any cleanup after the element gets destroyed.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.dispose = function () { };\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * \\@docs-private\n     *\n     * @param {?} element Element to which to apply the CSS styles.\n     * @return {?} Resolves when the styles have been applied.\n     */\n    ConnectedPositionStrategy.prototype.apply = function (element) {\n        // Cache the overlay pane element in case re-calculating position is necessary\n        this._pane = element;\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        var /** @type {?} */ originRect = this._origin.getBoundingClientRect();\n        var /** @type {?} */ overlayRect = element.getBoundingClientRect();\n        // We use the viewport rect to determine whether a position would go off-screen.\n        var /** @type {?} */ viewportRect = this._viewportRuler.getViewportRect();\n        // Fallback point if none of the fallbacks fit into the viewport.\n        var /** @type {?} */ fallbackPoint = null;\n        // We want to place the overlay in the first of the preferred positions such that the\n        // overlay fits on-screen.\n        for (var _i = 0, _a = this._preferredPositions; _i < _a.length; _i++) {\n            var pos = _a[_i];\n            // Get the (x, y) point of connection on the origin, and then use that to get the\n            // (top, left) coordinate for the overlay at `pos`.\n            var /** @type {?} */ originPoint = this._getOriginConnectionPoint(originRect, pos);\n            var /** @type {?} */ overlayPoint = this._getOverlayPoint(originPoint, overlayRect, viewportRect, pos);\n            // If the overlay in the calculated position fits on-screen, put it there and we're done.\n            if (overlayPoint.fitsInViewport) {\n                this._setElementPosition(element, overlayPoint);\n                // Save the last connected position in case the position needs to be re-calculated.\n                this._lastConnectedPosition = pos;\n                // Notify that the position has been changed along with its change properties.\n                var /** @type {?} */ scrollableViewProperties = this.getScrollableViewProperties(element);\n                var /** @type {?} */ positionChange = new ConnectedOverlayPositionChange(pos, scrollableViewProperties);\n                this._onPositionChange.next(positionChange);\n                return Promise.resolve(null);\n            }\n            else if (!fallbackPoint || fallbackPoint.visibleArea < overlayPoint.visibleArea) {\n                fallbackPoint = overlayPoint;\n            }\n        }\n        // If none of the preferred positions were in the viewport, take the one\n        // with the largest visible area.\n        this._setElementPosition(element, fallbackPoint);\n        return Promise.resolve(null);\n    };\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.recalculateLastPosition = function () {\n        var /** @type {?} */ originRect = this._origin.getBoundingClientRect();\n        var /** @type {?} */ overlayRect = this._pane.getBoundingClientRect();\n        var /** @type {?} */ viewportRect = this._viewportRuler.getViewportRect();\n        var /** @type {?} */ lastPosition = this._lastConnectedPosition || this._preferredPositions[0];\n        var /** @type {?} */ originPoint = this._getOriginConnectionPoint(originRect, lastPosition);\n        var /** @type {?} */ overlayPoint = this._getOverlayPoint(originPoint, overlayRect, viewportRect, lastPosition);\n        this._setElementPosition(this._pane, overlayPoint);\n    };\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @param {?} scrollables\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withScrollableContainers = function (scrollables) {\n        this.scrollables = scrollables;\n    };\n    /**\n     * Adds a new preferred fallback position.\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withFallbackPosition = function (originPos, overlayPos) {\n        this._preferredPositions.push(new ConnectionPositionPair(originPos, overlayPos));\n        return this;\n    };\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @param {?} dir New layout direction.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withDirection = function (dir) {\n        this._dir = dir;\n        return this;\n    };\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @param {?} offset New offset in the X axis.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withOffsetX = function (offset) {\n        this._offsetX = offset;\n        return this;\n    };\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @param {?} offset New offset in the Y axis.\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.withOffsetY = function (offset) {\n        this._offsetY = offset;\n        return this;\n    };\n    /**\n     * Gets the horizontal (x) \"start\" dimension based on whether the overlay is in an RTL context.\n     * @param {?} rect\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype._getStartX = function (rect) {\n        return this._isRtl ? rect.right : rect.left;\n    };\n    /**\n     * Gets the horizontal (x) \"end\" dimension based on whether the overlay is in an RTL context.\n     * @param {?} rect\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype._getEndX = function (rect) {\n        return this._isRtl ? rect.left : rect.right;\n    };\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     * @param {?} originRect\n     * @param {?} pos\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype._getOriginConnectionPoint = function (originRect, pos) {\n        var /** @type {?} */ originStartX = this._getStartX(originRect);\n        var /** @type {?} */ originEndX = this._getEndX(originRect);\n        var /** @type {?} */ x;\n        if (pos.originX == 'center') {\n            x = originStartX + (originRect.width / 2);\n        }\n        else {\n            x = pos.originX == 'start' ? originStartX : originEndX;\n        }\n        var /** @type {?} */ y;\n        if (pos.originY == 'center') {\n            y = originRect.top + (originRect.height / 2);\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected, as well as how much of the element\n     * would be inside the viewport at that position.\n     * @param {?} originPoint\n     * @param {?} overlayRect\n     * @param {?} viewportRect\n     * @param {?} pos\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype._getOverlayPoint = function (originPoint, overlayRect, viewportRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the potential overlay position\n        // relative to the origin point.\n        var /** @type {?} */ overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl ? 0 : -overlayRect.width;\n        }\n        var /** @type {?} */ overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        var /** @type {?} */ x = originPoint.x + overlayStartX + this._offsetX;\n        var /** @type {?} */ y = originPoint.y + overlayStartY + this._offsetY;\n        // How much the overlay would overflow at this position, on each side.\n        var /** @type {?} */ leftOverflow = 0 - x;\n        var /** @type {?} */ rightOverflow = (x + overlayRect.width) - viewportRect.width;\n        var /** @type {?} */ topOverflow = 0 - y;\n        var /** @type {?} */ bottomOverflow = (y + overlayRect.height) - viewportRect.height;\n        // Visible parts of the element on each axis.\n        var /** @type {?} */ visibleWidth = this._subtractOverflows(overlayRect.width, leftOverflow, rightOverflow);\n        var /** @type {?} */ visibleHeight = this._subtractOverflows(overlayRect.height, topOverflow, bottomOverflow);\n        // The area of the element that's within the viewport.\n        var /** @type {?} */ visibleArea = visibleWidth * visibleHeight;\n        var /** @type {?} */ fitsInViewport = (overlayRect.width * overlayRect.height) === visibleArea;\n        return { x: x, y: y, fitsInViewport: fitsInViewport, visibleArea: visibleArea };\n    };\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     * @param {?} overlay\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.getScrollableViewProperties = function (overlay) {\n        var _this = this;\n        var /** @type {?} */ originBounds = this._getElementBounds(this._origin);\n        var /** @type {?} */ overlayBounds = this._getElementBounds(overlay);\n        var /** @type {?} */ scrollContainerBounds = this.scrollables.map(function (scrollable) {\n            return _this._getElementBounds(scrollable.getElementRef().nativeElement);\n        });\n        return {\n            isOriginClipped: this.isElementClipped(originBounds, scrollContainerBounds),\n            isOriginOutsideView: this.isElementOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: this.isElementClipped(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: this.isElementOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    };\n    /**\n     * Whether the element is completely out of the view of any of the containers.\n     * @param {?} elementBounds\n     * @param {?} containersBounds\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.isElementOutsideView = function (elementBounds, containersBounds) {\n        return containersBounds.some(function (containerBounds) {\n            var /** @type {?} */ outsideAbove = elementBounds.bottom < containerBounds.top;\n            var /** @type {?} */ outsideBelow = elementBounds.top > containerBounds.bottom;\n            var /** @type {?} */ outsideLeft = elementBounds.right < containerBounds.left;\n            var /** @type {?} */ outsideRight = elementBounds.left > containerBounds.right;\n            return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n        });\n    };\n    /**\n     * Whether the element is clipped by any of the containers.\n     * @param {?} elementBounds\n     * @param {?} containersBounds\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype.isElementClipped = function (elementBounds, containersBounds) {\n        return containersBounds.some(function (containerBounds) {\n            var /** @type {?} */ clippedAbove = elementBounds.top < containerBounds.top;\n            var /** @type {?} */ clippedBelow = elementBounds.bottom > containerBounds.bottom;\n            var /** @type {?} */ clippedLeft = elementBounds.left < containerBounds.left;\n            var /** @type {?} */ clippedRight = elementBounds.right > containerBounds.right;\n            return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n        });\n    };\n    /**\n     * Physically positions the overlay element to the given coordinate.\n     * @param {?} element\n     * @param {?} overlayPoint\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype._setElementPosition = function (element, overlayPoint) {\n        element.style.left = overlayPoint.x + 'px';\n        element.style.top = overlayPoint.y + 'px';\n    };\n    /**\n     * Returns the bounding positions of the provided element with respect to the viewport.\n     * @param {?} element\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype._getElementBounds = function (element) {\n        var /** @type {?} */ boundingClientRect = element.getBoundingClientRect();\n        return {\n            top: boundingClientRect.top,\n            right: boundingClientRect.left + boundingClientRect.width,\n            bottom: boundingClientRect.top + boundingClientRect.height,\n            left: boundingClientRect.left\n        };\n    };\n    /**\n     * Subtracts the amount that an element is overflowing on an axis from it's length.\n     * @param {?} length\n     * @param {...?} overflows\n     * @return {?}\n     */\n    ConnectedPositionStrategy.prototype._subtractOverflows = function (length) {\n        var overflows = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            overflows[_i - 1] = arguments[_i];\n        }\n        return overflows.reduce(function (currentValue, currentOverflow) {\n            return currentValue - Math.max(currentOverflow, 0);\n        }, length);\n    };\n    return ConnectedPositionStrategy;\n}());\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nvar GlobalPositionStrategy = (function () {\n    function GlobalPositionStrategy() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param {?} value New top offset.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.top = function (value) {\n        this._bottomOffset = '';\n        this._topOffset = value;\n        this._alignItems = 'flex-start';\n        return this;\n    };\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param {?} value New left offset.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.left = function (value) {\n        this._rightOffset = '';\n        this._leftOffset = value;\n        this._justifyContent = 'flex-start';\n        return this;\n    };\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param {?} value New bottom offset.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.bottom = function (value) {\n        this._topOffset = '';\n        this._bottomOffset = value;\n        this._alignItems = 'flex-end';\n        return this;\n    };\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param {?} value New right offset.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.right = function (value) {\n        this._leftOffset = '';\n        this._rightOffset = value;\n        this._justifyContent = 'flex-end';\n        return this;\n    };\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @param {?} value New width for the overlay\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.width = function (value) {\n        this._width = value;\n        // When the width is 100%, we should reset the `left` and the offset,\n        // in order to ensure that the element is flush against the viewport edge.\n        if (value === '100%') {\n            this.left('0px');\n        }\n        return this;\n    };\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @param {?} value New height for the overlay\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.height = function (value) {\n        this._height = value;\n        // When the height is 100%, we should reset the `top` and the offset,\n        // in order to ensure that the element is flush against the viewport edge.\n        if (value === '100%') {\n            this.top('0px');\n        }\n        return this;\n    };\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param {?=} offset Overlay offset from the horizontal center.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.centerHorizontally = function (offset) {\n        if (offset === void 0) { offset = ''; }\n        this.left(offset);\n        this._justifyContent = 'center';\n        return this;\n    };\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param {?=} offset Overlay offset from the vertical center.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.centerVertically = function (offset) {\n        if (offset === void 0) { offset = ''; }\n        this.top(offset);\n        this._alignItems = 'center';\n        return this;\n    };\n    /**\n     * Apply the position to the element.\n     * \\@docs-private\n     *\n     * @param {?} element Element to which to apply the CSS.\n     * @return {?} Resolved when the styles have been applied.\n     */\n    GlobalPositionStrategy.prototype.apply = function (element) {\n        if (!this._wrapper) {\n            this._wrapper = document.createElement('div');\n            this._wrapper.classList.add('cdk-global-overlay-wrapper');\n            element.parentNode.insertBefore(this._wrapper, element);\n            this._wrapper.appendChild(element);\n        }\n        var /** @type {?} */ styles = element.style;\n        var /** @type {?} */ parentStyles = ((element.parentNode)).style;\n        styles.position = this._cssPosition;\n        styles.marginTop = this._topOffset;\n        styles.marginLeft = this._leftOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = this._rightOffset;\n        styles.width = this._width;\n        styles.height = this._height;\n        parentStyles.justifyContent = this._justifyContent;\n        parentStyles.alignItems = this._alignItems;\n        return Promise.resolve(null);\n    };\n    /**\n     * Removes the wrapper element from the DOM.\n     * @return {?}\n     */\n    GlobalPositionStrategy.prototype.dispose = function () {\n        if (this._wrapper && this._wrapper.parentNode) {\n            this._wrapper.parentNode.removeChild(this._wrapper);\n            this._wrapper = null;\n        }\n    };\n    return GlobalPositionStrategy;\n}());\n/**\n * Builder for overlay position strategy.\n */\nvar OverlayPositionBuilder = (function () {\n    /**\n     * @param {?} _viewportRuler\n     */\n    function OverlayPositionBuilder(_viewportRuler) {\n        this._viewportRuler = _viewportRuler;\n    }\n    /**\n     * Creates a global position strategy.\n     * @return {?}\n     */\n    OverlayPositionBuilder.prototype.global = function () {\n        return new GlobalPositionStrategy();\n    };\n    /**\n     * Creates a relative position strategy.\n     * @param {?} elementRef\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @return {?}\n     */\n    OverlayPositionBuilder.prototype.connectedTo = function (elementRef, originPos, overlayPos) {\n        return new ConnectedPositionStrategy(elementRef, originPos, overlayPos, this._viewportRuler);\n    };\n    return OverlayPositionBuilder;\n}());\nOverlayPositionBuilder.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nOverlayPositionBuilder.ctorParameters = function () { return [\n    { type: ViewportRuler, },\n]; };\n/**\n * The OverlayContainer is the container in which all overlays will load.\n * It should be provided in the root component to ensure it is properly shared.\n */\nvar OverlayContainer = (function () {\n    function OverlayContainer() {\n    }\n    Object.defineProperty(OverlayContainer.prototype, \"themeClass\", {\n        /**\n         * Base theme to be applied to all overlay-based components.\n         * @return {?}\n         */\n        get: function () { return this._themeClass; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._containerElement) {\n                this._containerElement.classList.remove(this._themeClass);\n                if (value) {\n                    this._containerElement.classList.add(value);\n                }\n            }\n            this._themeClass = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * This method returns the overlay container element.  It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @return {?} the container element\n     */\n    OverlayContainer.prototype.getContainerElement = function () {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    };\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     * @return {?}\n     */\n    OverlayContainer.prototype._createContainer = function () {\n        var /** @type {?} */ container = document.createElement('div');\n        container.classList.add('cdk-overlay-container');\n        if (this._themeClass) {\n            container.classList.add(this._themeClass);\n        }\n        document.body.appendChild(container);\n        this._containerElement = container;\n    };\n    return OverlayContainer;\n}());\nOverlayContainer.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nOverlayContainer.ctorParameters = function () { return []; };\n/**\n * @param {?} parentContainer\n * @return {?}\n */\nfunction OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer) {\n    return parentContainer || new OverlayContainer();\n}\nvar OVERLAY_CONTAINER_PROVIDER = {\n    // If there is already an OverlayContainer available, use that. Otherwise, provide a new one.\n    provide: OverlayContainer,\n    deps: [[new Optional(), new SkipSelf(), OverlayContainer]],\n    useFactory: OVERLAY_CONTAINER_PROVIDER_FACTORY\n};\n/** Next overlay unique ID. */\nvar nextUniqueId = 0;\n/** The default state for newly created overlays. */\nvar defaultState = new OverlayState();\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\n */\nvar Overlay = (function () {\n    /**\n     * @param {?} _overlayContainer\n     * @param {?} _componentFactoryResolver\n     * @param {?} _positionBuilder\n     * @param {?} _appRef\n     * @param {?} _injector\n     * @param {?} _ngZone\n     */\n    function Overlay(_overlayContainer, _componentFactoryResolver, _positionBuilder, _appRef, _injector, _ngZone) {\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n    }\n    /**\n     * Creates an overlay.\n     * @param {?=} state State to apply to the overlay.\n     * @return {?} Reference to the created overlay.\n     */\n    Overlay.prototype.create = function (state$$1) {\n        if (state$$1 === void 0) { state$$1 = defaultState; }\n        return this._createOverlayRef(this._createPaneElement(), state$$1);\n    };\n    /**\n     * Returns a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @return {?}\n     */\n    Overlay.prototype.position = function () {\n        return this._positionBuilder;\n    };\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @return {?} Newly-created pane element\n     */\n    Overlay.prototype._createPaneElement = function () {\n        var /** @type {?} */ pane = document.createElement('div');\n        pane.id = \"cdk-overlay-\" + nextUniqueId++;\n        pane.classList.add('cdk-overlay-pane');\n        this._overlayContainer.getContainerElement().appendChild(pane);\n        return pane;\n    };\n    /**\n     * Create a DomPortalHost into which the overlay content can be loaded.\n     * @param {?} pane The DOM element to turn into a portal host.\n     * @return {?} A portal host for the given DOM element.\n     */\n    Overlay.prototype._createPortalHost = function (pane) {\n        return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef, this._injector);\n    };\n    /**\n     * Creates an OverlayRef for an overlay in the given DOM element.\n     * @param {?} pane DOM element for the overlay\n     * @param {?} state\n     * @return {?}\n     */\n    Overlay.prototype._createOverlayRef = function (pane, state$$1) {\n        return new OverlayRef(this._createPortalHost(pane), pane, state$$1, this._ngZone);\n    };\n    return Overlay;\n}());\nOverlay.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nOverlay.ctorParameters = function () { return [\n    { type: OverlayContainer, },\n    { type: ComponentFactoryResolver, },\n    { type: OverlayPositionBuilder, },\n    { type: ApplicationRef, },\n    { type: Injector, },\n    { type: NgZone, },\n]; };\n/** Providers for Overlay and its related injectables. */\nvar OVERLAY_PROVIDERS = [\n    Overlay,\n    OverlayPositionBuilder,\n    VIEWPORT_RULER_PROVIDER,\n    SCROLL_DISPATCHER_PROVIDER,\n    OVERLAY_CONTAINER_PROVIDER,\n];\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nvar Scrollable = (function () {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _scroll\n     * @param {?} _ngZone\n     * @param {?} _renderer\n     */\n    function Scrollable(_elementRef, _scroll, _ngZone, _renderer) {\n        this._elementRef = _elementRef;\n        this._scroll = _scroll;\n        this._ngZone = _ngZone;\n        this._renderer = _renderer;\n        this._elementScrolled = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    Scrollable.prototype.ngOnInit = function () {\n        var _this = this;\n        this._scrollListener = this._ngZone.runOutsideAngular(function () {\n            return _this._renderer.listen(_this.getElementRef().nativeElement, 'scroll', function (event) {\n                _this._elementScrolled.next(event);\n            });\n        });\n        this._scroll.register(this);\n    };\n    /**\n     * @return {?}\n     */\n    Scrollable.prototype.ngOnDestroy = function () {\n        this._scroll.deregister(this);\n        if (this._scrollListener) {\n            this._scrollListener();\n            this._scrollListener = null;\n        }\n    };\n    /**\n     * Returns observable that emits when a scroll event is fired on the host element.\n     * @return {?}\n     */\n    Scrollable.prototype.elementScrolled = function () {\n        return this._elementScrolled.asObservable();\n    };\n    /**\n     * @return {?}\n     */\n    Scrollable.prototype.getElementRef = function () {\n        return this._elementRef;\n    };\n    return Scrollable;\n}());\nScrollable.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdk-scrollable]'\n            },] },\n];\n/**\n * @nocollapse\n */\nScrollable.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: ScrollDispatcher, },\n    { type: NgZone, },\n    { type: Renderer, },\n]; };\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nvar defaultPositionList = [\n    new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\n    new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' }),\n];\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nvar OverlayOrigin = (function () {\n    /**\n     * @param {?} elementRef\n     */\n    function OverlayOrigin(elementRef) {\n        this.elementRef = elementRef;\n    }\n    return OverlayOrigin;\n}());\nOverlayOrigin.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdk-overlay-origin], [overlay-origin]',\n                exportAs: 'cdkOverlayOrigin',\n            },] },\n];\n/**\n * @nocollapse\n */\nOverlayOrigin.ctorParameters = function () { return [\n    { type: ElementRef, },\n]; };\n/**\n * Directive to facilitate declarative creation of an Overlay using a ConnectedPositionStrategy.\n */\nvar ConnectedOverlayDirective = (function () {\n    /**\n     * @param {?} _overlay\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     * @param {?} _dir\n     */\n    function ConnectedOverlayDirective(_overlay, templateRef, viewContainerRef, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._open = false;\n        this._hasBackdrop = false;\n        this._offsetX = 0;\n        this._offsetY = 0;\n        /** Event emitted when the backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Event emitted when the position has changed. */\n        this.positionChange = new EventEmitter();\n        /** Event emitted when the overlay has been attached. */\n        this.attach = new EventEmitter();\n        /** Event emitted when the overlay has been detached. */\n        this.detach = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n    }\n    Object.defineProperty(ConnectedOverlayDirective.prototype, \"offsetX\", {\n        /**\n         * The offset in pixels for the overlay connection point on the x-axis\n         * @return {?}\n         */\n        get: function () {\n            return this._offsetX;\n        },\n        /**\n         * @param {?} offsetX\n         * @return {?}\n         */\n        set: function (offsetX) {\n            this._offsetX = offsetX;\n            if (this._position) {\n                this._position.withOffsetX(offsetX);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectedOverlayDirective.prototype, \"offsetY\", {\n        /**\n         * The offset in pixels for the overlay connection point on the y-axis\n         * @return {?}\n         */\n        get: function () {\n            return this._offsetY;\n        },\n        /**\n         * @param {?} offsetY\n         * @return {?}\n         */\n        set: function (offsetY) {\n            this._offsetY = offsetY;\n            if (this._position) {\n                this._position.withOffsetY(offsetY);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectedOverlayDirective.prototype, \"hasBackdrop\", {\n        /**\n         * Whether or not the overlay should attach a backdrop.\n         * @return {?}\n         */\n        get: function () {\n            return this._hasBackdrop;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._hasBackdrop = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectedOverlayDirective.prototype, \"open\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._open;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            value ? this._attachOverlay() : this._detachOverlay();\n            this._open = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectedOverlayDirective.prototype, \"overlayRef\", {\n        /**\n         * The associated overlay reference.\n         * @return {?}\n         */\n        get: function () {\n            return this._overlayRef;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ConnectedOverlayDirective.prototype, \"dir\", {\n        /**\n         * The element's layout direction.\n         * @return {?}\n         */\n        get: function () {\n            return this._dir ? this._dir.value : 'ltr';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ConnectedOverlayDirective.prototype.ngOnDestroy = function () {\n        this._destroyOverlay();\n    };\n    /**\n     * Creates an overlay\n     * @return {?}\n     */\n    ConnectedOverlayDirective.prototype._createOverlay = function () {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        this._overlayRef = this._overlay.create(this._buildConfig());\n    };\n    /**\n     * Builds the overlay config based on the directive's inputs\n     * @return {?}\n     */\n    ConnectedOverlayDirective.prototype._buildConfig = function () {\n        var /** @type {?} */ overlayConfig = new OverlayState();\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        overlayConfig.hasBackdrop = this.hasBackdrop;\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        this._position = (this._createPositionStrategy());\n        overlayConfig.positionStrategy = this._position;\n        return overlayConfig;\n    };\n    /**\n     * Returns the position strategy of the overlay to be set on the overlay config\n     * @return {?}\n     */\n    ConnectedOverlayDirective.prototype._createPositionStrategy = function () {\n        var /** @type {?} */ pos = this.positions[0];\n        var /** @type {?} */ originPoint = { originX: pos.originX, originY: pos.originY };\n        var /** @type {?} */ overlayPoint = { overlayX: pos.overlayX, overlayY: pos.overlayY };\n        var /** @type {?} */ strategy = this._overlay.position()\n            .connectedTo(this.origin.elementRef, originPoint, overlayPoint)\n            .withOffsetX(this.offsetX)\n            .withOffsetY(this.offsetY);\n        this._handlePositionChanges(strategy);\n        return strategy;\n    };\n    /**\n     * @param {?} strategy\n     * @return {?}\n     */\n    ConnectedOverlayDirective.prototype._handlePositionChanges = function (strategy) {\n        var _this = this;\n        for (var /** @type {?} */ i = 1; i < this.positions.length; i++) {\n            strategy.withFallbackPosition({ originX: this.positions[i].originX, originY: this.positions[i].originY }, { overlayX: this.positions[i].overlayX, overlayY: this.positions[i].overlayY });\n        }\n        this._positionSubscription =\n            strategy.onPositionChange.subscribe(function (pos) { return _this.positionChange.emit(pos); });\n    };\n    /**\n     * Attaches the overlay and subscribes to backdrop clicks if backdrop exists\n     * @return {?}\n     */\n    ConnectedOverlayDirective.prototype._attachOverlay = function () {\n        var _this = this;\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        this._position.withDirection(this.dir);\n        this._overlayRef.getState().direction = this.dir;\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n            this.attach.emit();\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe(function () {\n                _this.backdropClick.emit();\n            });\n        }\n    };\n    /**\n     * Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists\n     * @return {?}\n     */\n    ConnectedOverlayDirective.prototype._detachOverlay = function () {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n            this.detach.emit();\n        }\n        if (this._backdropSubscription) {\n            this._backdropSubscription.unsubscribe();\n            this._backdropSubscription = null;\n        }\n    };\n    /**\n     * Destroys the overlay created by this directive.\n     * @return {?}\n     */\n    ConnectedOverlayDirective.prototype._destroyOverlay = function () {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        if (this._backdropSubscription) {\n            this._backdropSubscription.unsubscribe();\n        }\n        if (this._positionSubscription) {\n            this._positionSubscription.unsubscribe();\n        }\n    };\n    return ConnectedOverlayDirective;\n}());\nConnectedOverlayDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdk-connected-overlay], [connected-overlay]',\n                exportAs: 'cdkConnectedOverlay'\n            },] },\n];\n/**\n * @nocollapse\n */\nConnectedOverlayDirective.ctorParameters = function () { return [\n    { type: Overlay, },\n    { type: TemplateRef, },\n    { type: ViewContainerRef, },\n    { type: Dir, decorators: [{ type: Optional },] },\n]; };\nConnectedOverlayDirective.propDecorators = {\n    'origin': [{ type: Input },],\n    'positions': [{ type: Input },],\n    'offsetX': [{ type: Input },],\n    'offsetY': [{ type: Input },],\n    'width': [{ type: Input },],\n    'height': [{ type: Input },],\n    'minWidth': [{ type: Input },],\n    'minHeight': [{ type: Input },],\n    'backdropClass': [{ type: Input },],\n    'hasBackdrop': [{ type: Input },],\n    'open': [{ type: Input },],\n    'backdropClick': [{ type: Output },],\n    'positionChange': [{ type: Output },],\n    'attach': [{ type: Output },],\n    'detach': [{ type: Output },],\n};\nvar OverlayModule = (function () {\n    function OverlayModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    OverlayModule.forRoot = function () {\n        return {\n            ngModule: OverlayModule,\n            providers: [],\n        };\n    };\n    return OverlayModule;\n}());\nOverlayModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [PortalModule],\n                exports: [ConnectedOverlayDirective, OverlayOrigin, Scrollable],\n                declarations: [ConnectedOverlayDirective, OverlayOrigin, Scrollable],\n                providers: [OVERLAY_PROVIDERS],\n            },] },\n];\n/**\n * @nocollapse\n */\nOverlayModule.ctorParameters = function () { return []; };\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nvar hasV8BreakIterator = typeof (window) !== 'undefined' ?\n    (window.Intl && ((window.Intl)).v8BreakIterator) :\n    (typeof (Intl) !== 'undefined' && ((Intl)).v8BreakIterator);\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n * \\@docs-private\n */\nvar Platform = (function () {\n    function Platform() {\n        /** Layout Engines */\n        this.EDGE = /(edge)/i.test(navigator.userAgent);\n        this.TRIDENT = /(msie|trident)/i.test(navigator.userAgent);\n        // EdgeHTML and Trident mock Blink specific things and need to excluded from this check.\n        this.BLINK = !!(window.chrome || hasV8BreakIterator) && !!CSS && !this.EDGE && !this.TRIDENT;\n        // Webkit is part of the userAgent in EdgeHTML Blink and Trident, so we need to\n        // ensure that Webkit runs standalone and is not use as another engines base.\n        this.WEBKIT = /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n        /** Browsers and Platform Types */\n        this.IOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        this.FIREFOX = /(firefox|minefield)/i.test(navigator.userAgent);\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = /android/i.test(navigator.userAgent) && !this.TRIDENT;\n    }\n    return Platform;\n}());\nPlatform.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nPlatform.ctorParameters = function () { return []; };\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nvar InteractivityChecker = (function () {\n    /**\n     * @param {?} _platform\n     */\n    function InteractivityChecker(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is disabled.\n     */\n    InteractivityChecker.prototype.isDisabled = function (element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    };\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @param {?} element\n     * @return {?} Whether the element is visible.\n     */\n    InteractivityChecker.prototype.isVisible = function (element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    };\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is tabbable.\n     */\n    InteractivityChecker.prototype.isTabbable = function (element) {\n        var /** @type {?} */ frameElement = (getWindow(element).frameElement);\n        if (frameElement) {\n            var /** @type {?} */ frameType = frameElement && frameElement.nodeName.toLowerCase();\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Webkit and Blink consider anything inside of an <object> element as non-tabbable.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && frameType === 'object') {\n                return false;\n            }\n            // Webkit and Blink disable tabbing to an element inside of an invisible frame.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && !this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        var /** @type {?} */ nodeName = element.nodeName.toLowerCase();\n        var /** @type {?} */ tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe') {\n            // The frames may be tabbable depending on content, but it's not possibly to reliably\n            // investigate the content of the frames.\n            return false;\n        }\n        if (nodeName === 'audio') {\n            if (!element.hasAttribute('controls')) {\n                // By default an <audio> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK) {\n                // In Blink <audio controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'video') {\n            if (!element.hasAttribute('controls') && this._platform.TRIDENT) {\n                // In Trident a <video> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK || this._platform.FIREFOX) {\n                // In Chrome and Firefox <video controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'object' && (this._platform.BLINK || this._platform.WEBKIT)) {\n            // In all Blink and WebKit based browsers <object> elements are never tabbable.\n            return false;\n        }\n        // In iOS the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        return element.tabIndex >= 0;\n    };\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is focusable.\n     */\n    InteractivityChecker.prototype.isFocusable = function (element) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return isPotentiallyFocusable(element) && !this.isDisabled(element) && this.isVisible(element);\n    };\n    return InteractivityChecker;\n}());\nInteractivityChecker.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nInteractivityChecker.ctorParameters = function () { return [\n    { type: Platform, },\n]; };\n/**\n * Checks whether the specified element has any geometry / rectangles.\n * @param {?} element\n * @return {?}\n */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth || element.offsetHeight || element.getClientRects().length);\n}\n/**\n * Gets whether an element's\n * @param {?} element\n * @return {?}\n */\nfunction isNativeFormElement(element) {\n    var /** @type {?} */ nodeName = element.nodeName.toLowerCase();\n    return nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea';\n}\n/**\n * Gets whether an element is an <input type=\"hidden\">.\n * @param {?} element\n * @return {?}\n */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/**\n * Gets whether an element is an anchor that has an href attribute.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/**\n * Gets whether an element is an input element.\n * @param {?} element\n * @return {?}\n */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/**\n * Gets whether an element is an anchor element.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/**\n * Gets whether an element has a valid tabindex.\n * @param {?} element\n * @return {?}\n */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    var /** @type {?} */ tabIndex = element.getAttribute('tabindex');\n    // IE11 parses tabindex=\"\" as the value \"-32768\"\n    if (tabIndex == '-32768') {\n        return false;\n    }\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n * @param {?} element\n * @return {?}\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    var /** @type {?} */ tabIndex = parseInt(element.getAttribute('tabindex'), 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/**\n * Checks whether the specified element is potentially tabbable on iOS\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyTabbableIOS(element) {\n    var /** @type {?} */ nodeName = element.nodeName.toLowerCase();\n    var /** @type {?} */ inputType = nodeName === 'input' && ((element)).type;\n    return inputType === 'text'\n        || inputType === 'password'\n        || nodeName === 'select'\n        || nodeName === 'textarea';\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element);\n}\n/**\n * Gets the parent window of a DOM node with regards of being inside of an iframe.\n * @param {?} node\n * @return {?}\n */\nfunction getWindow(node) {\n    return node.ownerDocument.defaultView || window;\n}\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * NOTE: This class currently uses a very simple (naive) approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like tabIndex > 0, flex `order`, and shadow roots can cause to two to misalign.\n * This will be replaced with a more intelligent solution before the library is considered stable.\n */\nvar FocusTrap = (function () {\n    /**\n     * @param {?} _element\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?=} deferAnchors\n     */\n    function FocusTrap(_element, _checker, _ngZone, deferAnchors) {\n        if (deferAnchors === void 0) { deferAnchors = false; }\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    Object.defineProperty(FocusTrap.prototype, \"enabled\", {\n        /**\n         * Whether the focus trap is active.\n         * @return {?}\n         */\n        get: function () { return this._enabled; },\n        /**\n         * @param {?} val\n         * @return {?}\n         */\n        set: function (val) {\n            this._enabled = val;\n            if (this._startAnchor && this._endAnchor) {\n                this._startAnchor.tabIndex = this._endAnchor.tabIndex = this._enabled ? 0 : -1;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroys the focus trap by cleaning up the anchors.\n     * @return {?}\n     */\n    FocusTrap.prototype.destroy = function () {\n        if (this._startAnchor && this._startAnchor.parentNode) {\n            this._startAnchor.parentNode.removeChild(this._startAnchor);\n        }\n        if (this._endAnchor && this._endAnchor.parentNode) {\n            this._endAnchor.parentNode.removeChild(this._endAnchor);\n        }\n        this._startAnchor = this._endAnchor = null;\n    };\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @return {?}\n     */\n    FocusTrap.prototype.attachAnchors = function () {\n        var _this = this;\n        if (!this._startAnchor) {\n            this._startAnchor = this._createAnchor();\n        }\n        if (!this._endAnchor) {\n            this._endAnchor = this._createAnchor();\n        }\n        this._ngZone.runOutsideAngular(function () {\n            _this._startAnchor.addEventListener('focus', function () { return _this.focusLastTabbableElement(); });\n            _this._endAnchor.addEventListener('focus', function () { return _this.focusFirstTabbableElement(); });\n            _this._element.parentNode.insertBefore(_this._startAnchor, _this._element);\n            _this._element.parentNode.insertBefore(_this._endAnchor, _this._element.nextSibling);\n        });\n    };\n    /**\n     * Waits for microtask queue to empty, then focuses\n     * the first tabbable element within the focus trap region.\n     * @return {?}\n     */\n    FocusTrap.prototype.focusFirstTabbableElementWhenReady = function () {\n        var _this = this;\n        this._ngZone.onMicrotaskEmpty.first().subscribe(function () { return _this.focusFirstTabbableElement(); });\n    };\n    /**\n     * Waits for microtask queue to empty, then focuses\n     * the last tabbable element within the focus trap region.\n     * @return {?}\n     */\n    FocusTrap.prototype.focusLastTabbableElementWhenReady = function () {\n        var _this = this;\n        this._ngZone.onMicrotaskEmpty.first().subscribe(function () { return _this.focusLastTabbableElement(); });\n    };\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @return {?}\n     */\n    FocusTrap.prototype.focusFirstTabbableElement = function () {\n        var /** @type {?} */ redirectToElement = (this._element.querySelector('[cdk-focus-start]')) ||\n            this._getFirstTabbableElement(this._element);\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n    };\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @return {?}\n     */\n    FocusTrap.prototype.focusLastTabbableElement = function () {\n        var /** @type {?} */ focusTargets = this._element.querySelectorAll('[cdk-focus-end]');\n        var /** @type {?} */ redirectToElement = null;\n        if (focusTargets.length) {\n            redirectToElement = (focusTargets[focusTargets.length - 1]);\n        }\n        else {\n            redirectToElement = this._getLastTabbableElement(this._element);\n        }\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n    };\n    /**\n     * Get the first tabbable element from a DOM subtree (inclusive).\n     * @param {?} root\n     * @return {?}\n     */\n    FocusTrap.prototype._getFirstTabbableElement = function (root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\n        // back to `childNodes` which includes text nodes, comments etc.\n        var /** @type {?} */ children = root.children || root.childNodes;\n        for (var /** @type {?} */ i = 0; i < children.length; i++) {\n            var /** @type {?} */ tabbableChild = children[i].nodeType === Node.ELEMENT_NODE ?\n                this._getFirstTabbableElement(/** @type {?} */ (children[i])) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    };\n    /**\n     * Get the last tabbable element from a DOM subtree (inclusive).\n     * @param {?} root\n     * @return {?}\n     */\n    FocusTrap.prototype._getLastTabbableElement = function (root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        var /** @type {?} */ children = root.children || root.childNodes;\n        for (var /** @type {?} */ i = children.length - 1; i >= 0; i--) {\n            var /** @type {?} */ tabbableChild = children[i].nodeType === Node.ELEMENT_NODE ?\n                this._getLastTabbableElement(/** @type {?} */ (children[i])) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    };\n    /**\n     * Creates an anchor element.\n     * @return {?}\n     */\n    FocusTrap.prototype._createAnchor = function () {\n        var /** @type {?} */ anchor = document.createElement('div');\n        anchor.tabIndex = this._enabled ? 0 : -1;\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        return anchor;\n    };\n    return FocusTrap;\n}());\n/**\n * Factory that allows easy instantiation of focus traps.\n */\nvar FocusTrapFactory = (function () {\n    /**\n     * @param {?} _checker\n     * @param {?} _ngZone\n     */\n    function FocusTrapFactory(_checker, _ngZone) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n    }\n    /**\n     * @param {?} element\n     * @param {?=} deferAnchors\n     * @return {?}\n     */\n    FocusTrapFactory.prototype.create = function (element, deferAnchors) {\n        if (deferAnchors === void 0) { deferAnchors = false; }\n        return new FocusTrap(element, this._checker, this._ngZone, deferAnchors);\n    };\n    return FocusTrapFactory;\n}());\nFocusTrapFactory.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nFocusTrapFactory.ctorParameters = function () { return [\n    { type: InteractivityChecker, },\n    { type: NgZone, },\n]; };\n/**\n * Directive for trapping focus within a region.\n * @deprecated\n */\nvar FocusTrapDeprecatedDirective = (function () {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     */\n    function FocusTrapDeprecatedDirective(_elementRef, _focusTrapFactory) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    Object.defineProperty(FocusTrapDeprecatedDirective.prototype, \"disabled\", {\n        /**\n         * Whether the focus trap is active.\n         * @return {?}\n         */\n        get: function () { return !this.focusTrap.enabled; },\n        /**\n         * @param {?} val\n         * @return {?}\n         */\n        set: function (val) {\n            this.focusTrap.enabled = !coerceBooleanProperty(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    FocusTrapDeprecatedDirective.prototype.ngOnDestroy = function () {\n        this.focusTrap.destroy();\n    };\n    /**\n     * @return {?}\n     */\n    FocusTrapDeprecatedDirective.prototype.ngAfterContentInit = function () {\n        this.focusTrap.attachAnchors();\n    };\n    return FocusTrapDeprecatedDirective;\n}());\nFocusTrapDeprecatedDirective.decorators = [\n    { type: Directive, args: [{\n                selector: 'cdk-focus-trap',\n            },] },\n];\n/**\n * @nocollapse\n */\nFocusTrapDeprecatedDirective.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: FocusTrapFactory, },\n]; };\nFocusTrapDeprecatedDirective.propDecorators = {\n    'disabled': [{ type: Input },],\n};\n/**\n * Directive for trapping focus within a region.\n */\nvar FocusTrapDirective = (function () {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     */\n    function FocusTrapDirective(_elementRef, _focusTrapFactory) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    Object.defineProperty(FocusTrapDirective.prototype, \"enabled\", {\n        /**\n         * Whether the focus trap is active.\n         * @return {?}\n         */\n        get: function () { return this.focusTrap.enabled; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this.focusTrap.enabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    FocusTrapDirective.prototype.ngOnDestroy = function () {\n        this.focusTrap.destroy();\n    };\n    /**\n     * @return {?}\n     */\n    FocusTrapDirective.prototype.ngAfterContentInit = function () {\n        this.focusTrap.attachAnchors();\n    };\n    return FocusTrapDirective;\n}());\nFocusTrapDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkTrapFocus]',\n                exportAs: 'cdkTrapFocus',\n            },] },\n];\n/**\n * @nocollapse\n */\nFocusTrapDirective.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: FocusTrapFactory, },\n]; };\nFocusTrapDirective.propDecorators = {\n    'enabled': [{ type: Input, args: ['cdkTrapFocus',] },],\n};\nvar LIVE_ANNOUNCER_ELEMENT_TOKEN = new OpaqueToken('liveAnnouncerElement');\nvar LiveAnnouncer = (function () {\n    /**\n     * @param {?} elementToken\n     */\n    function LiveAnnouncer(elementToken) {\n        // We inject the live element as `any` because the constructor signature cannot reference\n        // browser globals (HTMLElement) on non-browser environments, since having a class decorator\n        // causes TypeScript to preserve the constructor signature types.\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    /**\n     * Announces a message to screenreaders.\n     * @param {?} message Message to be announced to the screenreader\n     * @param {?=} politeness The politeness of the announcer element\n     * @return {?}\n     */\n    LiveAnnouncer.prototype.announce = function (message, politeness) {\n        var _this = this;\n        if (politeness === void 0) { politeness = 'polite'; }\n        this._liveElement.textContent = '';\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        setTimeout(function () { return _this._liveElement.textContent = message; }, 100);\n    };\n    /**\n     * Removes the aria-live element from the DOM.\n     * @return {?}\n     */\n    LiveAnnouncer.prototype._removeLiveElement = function () {\n        if (this._liveElement && this._liveElement.parentNode) {\n            this._liveElement.parentNode.removeChild(this._liveElement);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    LiveAnnouncer.prototype._createLiveElement = function () {\n        var /** @type {?} */ liveEl = document.createElement('div');\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        document.body.appendChild(liveEl);\n        return liveEl;\n    };\n    return LiveAnnouncer;\n}());\nLiveAnnouncer.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nLiveAnnouncer.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_ELEMENT_TOKEN,] },] },\n]; };\n/**\n * @param {?} parentDispatcher\n * @param {?} liveElement\n * @return {?}\n */\nfunction LIVE_ANNOUNCER_PROVIDER_FACTORY(parentDispatcher, liveElement) {\n    return parentDispatcher || new LiveAnnouncer(liveElement);\n}\nvar LIVE_ANNOUNCER_PROVIDER = {\n    // If there is already a LiveAnnouncer available, use that. Otherwise, provide a new one.\n    provide: LiveAnnouncer,\n    deps: [\n        [new Optional(), new SkipSelf(), LiveAnnouncer],\n        [new Optional(), new Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN)]\n    ],\n    useFactory: LIVE_ANNOUNCER_PROVIDER_FACTORY\n};\nvar supportedInputTypes;\n/**\n * @return {?} The input types supported by this browser.\n */\nfunction getSupportedInputTypes() {\n    if (!supportedInputTypes) {\n        var /** @type {?} */ featureTestInput_1 = document.createElement('input');\n        supportedInputTypes = new Set([\n            // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n            // first changing it to something else:\n            // The specified value \"\" does not conform to the required format.\n            // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n            'color',\n            'button',\n            'checkbox',\n            'date',\n            'datetime-local',\n            'email',\n            'file',\n            'hidden',\n            'image',\n            'month',\n            'number',\n            'password',\n            'radio',\n            'range',\n            'reset',\n            'search',\n            'submit',\n            'tel',\n            'text',\n            'time',\n            'url',\n            'week',\n        ].filter(function (value) {\n            featureTestInput_1.setAttribute('type', value);\n            return featureTestInput_1.type === value;\n        }));\n    }\n    return supportedInputTypes;\n}\nvar PlatformModule = (function () {\n    function PlatformModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    PlatformModule.forRoot = function () {\n        return {\n            ngModule: PlatformModule,\n            providers: [],\n        };\n    };\n    return PlatformModule;\n}());\nPlatformModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [Platform]\n            },] },\n];\n/**\n * @nocollapse\n */\nPlatformModule.ctorParameters = function () { return []; };\nvar A11yModule = (function () {\n    function A11yModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    A11yModule.forRoot = function () {\n        return {\n            ngModule: A11yModule,\n            providers: [],\n        };\n    };\n    return A11yModule;\n}());\nA11yModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, PlatformModule],\n                declarations: [FocusTrapDirective, FocusTrapDeprecatedDirective],\n                exports: [FocusTrapDirective, FocusTrapDeprecatedDirective],\n                providers: [InteractivityChecker, FocusTrapFactory, LIVE_ANNOUNCER_PROVIDER]\n            },] },\n];\n/**\n * @nocollapse\n */\nA11yModule.ctorParameters = function () { return []; };\n/**\n * The FullscreenOverlayContainer is the alternative to OverlayContainer\n * that supports correct displaying of overlay elements in Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n * It should be provided in the root component that way:\n * providers: [\n *   {provide: OverlayContainer, useClass: FullscreenOverlayContainer}\n * ],\n */\nvar FullscreenOverlayContainer = (function (_super) {\n    __extends(FullscreenOverlayContainer, _super);\n    function FullscreenOverlayContainer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    FullscreenOverlayContainer.prototype._createContainer = function () {\n        var _this = this;\n        _super.prototype._createContainer.call(this);\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener(function () { return _this._adjustParentForFullscreenChange(); });\n    };\n    /**\n     * @return {?}\n     */\n    FullscreenOverlayContainer.prototype._adjustParentForFullscreenChange = function () {\n        if (!this._containerElement) {\n            return;\n        }\n        var /** @type {?} */ fullscreenElement = this.getFullscreenElement();\n        var /** @type {?} */ parent = fullscreenElement || document.body;\n        parent.appendChild(this._containerElement);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    FullscreenOverlayContainer.prototype._addFullscreenChangeListener = function (fn) {\n        if (document.fullscreenEnabled) {\n            document.addEventListener('fullscreenchange', fn);\n        }\n        else if (document.webkitFullscreenEnabled) {\n            document.addEventListener('webkitfullscreenchange', fn);\n        }\n        else if (((document)).mozFullScreenEnabled) {\n            document.addEventListener('mozfullscreenchange', fn);\n        }\n        else if (((document)).msFullscreenEnabled) {\n            document.addEventListener('MSFullscreenChange', fn);\n        }\n    };\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     * @return {?}\n     */\n    FullscreenOverlayContainer.prototype.getFullscreenElement = function () {\n        return document.fullscreenElement ||\n            document.webkitFullscreenElement ||\n            ((document)).mozFullScreenElement ||\n            ((document)).msFullscreenElement ||\n            null;\n    };\n    return FullscreenOverlayContainer;\n}(OverlayContainer));\nFullscreenOverlayContainer.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nFullscreenOverlayContainer.ctorParameters = function () { return []; };\nvar GestureConfig = (function (_super) {\n    __extends(GestureConfig, _super);\n    function GestureConfig() {\n        var _this = _super.call(this) || this;\n        _this._hammer = typeof window !== 'undefined' ? ((window)).Hammer : null;\n        /* List of new event names to add to the gesture support list */\n        _this.events = _this._hammer ? [\n            'longpress',\n            'slide',\n            'slidestart',\n            'slideend',\n            'slideright',\n            'slideleft'\n        ] : [];\n        if (!_this._hammer && isDevMode()) {\n            console.warn('Could not find HammerJS. Certain Angular Material ' +\n                'components may not work correctly.');\n        }\n        return _this;\n    }\n    /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param {?} element Element to which to assign the new HammerJS gestures.\n     * @return {?} Newly-created HammerJS instance.\n     */\n    GestureConfig.prototype.buildHammer = function (element) {\n        var /** @type {?} */ mc = new this._hammer(element);\n        // Default Hammer Recognizers.\n        var /** @type {?} */ pan = new this._hammer.Pan();\n        var /** @type {?} */ swipe = new this._hammer.Swipe();\n        var /** @type {?} */ press = new this._hammer.Press();\n        // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n        // Otherwise the previous `recognizeWith` will be dropped.\n        // TODO: Confirm threshold numbers with Material Design UX Team\n        var /** @type {?} */ slide = this._createRecognizer(pan, { event: 'slide', threshold: 0 }, swipe);\n        var /** @type {?} */ longpress = this._createRecognizer(press, { event: 'longpress', time: 500 });\n        // Overwrite the default `pan` event to use the swipe event.\n        pan.recognizeWith(swipe);\n        // Add customized gestures to Hammer manager\n        mc.add([swipe, press, pan, slide, longpress]);\n        return (mc);\n    };\n    /**\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\n     * @param {?} base\n     * @param {?} options\n     * @param {...?} inheritances\n     * @return {?}\n     */\n    GestureConfig.prototype._createRecognizer = function (base, options) {\n        var inheritances = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            inheritances[_i - 2] = arguments[_i];\n        }\n        var /** @type {?} */ recognizer = new ((base.constructor))(options);\n        inheritances.push(base);\n        inheritances.forEach(function (item) { return recognizer.recognizeWith(item); });\n        return recognizer;\n    };\n    return GestureConfig;\n}(HammerGestureConfig));\nGestureConfig.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nGestureConfig.ctorParameters = function () { return []; };\n/**\n * Class to be used to power selecting one or more options from a list.\n * \\@docs-private\n */\nvar SelectionModel = (function () {\n    /**\n     * @param {?=} _isMulti\n     * @param {?=} initiallySelectedValues\n     * @param {?=} _emitChanges\n     */\n    function SelectionModel(_isMulti, initiallySelectedValues, _emitChanges) {\n        if (_isMulti === void 0) { _isMulti = false; }\n        if (_emitChanges === void 0) { _emitChanges = true; }\n        var _this = this;\n        this._isMulti = _isMulti;\n        this._emitChanges = _emitChanges;\n        this._selection = new Set();\n        this._deselectedToEmit = [];\n        this._selectedToEmit = [];\n        /** Event emitted when the value has changed. */\n        this.onChange = this._emitChanges ? new Subject() : null;\n        if (initiallySelectedValues) {\n            if (_isMulti) {\n                initiallySelectedValues.forEach(function (value) { return _this._markSelected(value); });\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    Object.defineProperty(SelectionModel.prototype, \"selected\", {\n        /**\n         * Selected value(s).\n         * @return {?}\n         */\n        get: function () {\n            if (!this._selected) {\n                this._selected = Array.from(this._selection.values());\n            }\n            return this._selected;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Selects a value or an array of values.\n     * @param {?} value\n     * @return {?}\n     */\n    SelectionModel.prototype.select = function (value) {\n        this._markSelected(value);\n        this._emitChangeEvent();\n    };\n    /**\n     * Deselects a value or an array of values.\n     * @param {?} value\n     * @return {?}\n     */\n    SelectionModel.prototype.deselect = function (value) {\n        this._unmarkSelected(value);\n        this._emitChangeEvent();\n    };\n    /**\n     * Toggles a value between selected and deselected.\n     * @param {?} value\n     * @return {?}\n     */\n    SelectionModel.prototype.toggle = function (value) {\n        this.isSelected(value) ? this.deselect(value) : this.select(value);\n    };\n    /**\n     * Clears all of the selected values.\n     * @return {?}\n     */\n    SelectionModel.prototype.clear = function () {\n        this._unmarkAll();\n        this._emitChangeEvent();\n    };\n    /**\n     * Determines whether a value is selected.\n     * @param {?} value\n     * @return {?}\n     */\n    SelectionModel.prototype.isSelected = function (value) {\n        return this._selection.has(value);\n    };\n    /**\n     * Determines whether the model does not have a value.\n     * @return {?}\n     */\n    SelectionModel.prototype.isEmpty = function () {\n        return this._selection.size === 0;\n    };\n    /**\n     * Determines whether the model has a value.\n     * @return {?}\n     */\n    SelectionModel.prototype.hasValue = function () {\n        return !this.isEmpty();\n    };\n    /**\n     * Sorts the selected values based on a predicate function.\n     * @param {?=} predicate\n     * @return {?}\n     */\n    SelectionModel.prototype.sort = function (predicate) {\n        if (this._isMulti && this.selected) {\n            this._selected.sort(predicate);\n        }\n    };\n    /**\n     * Emits a change event and clears the records of selected and deselected values.\n     * @return {?}\n     */\n    SelectionModel.prototype._emitChangeEvent = function () {\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            var /** @type {?} */ eventData = new SelectionChange(this._selectedToEmit, this._deselectedToEmit);\n            this.onChange.next(eventData);\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n        this._selected = null;\n    };\n    /**\n     * Selects a value.\n     * @param {?} value\n     * @return {?}\n     */\n    SelectionModel.prototype._markSelected = function (value) {\n        if (!this.isSelected(value)) {\n            if (!this._isMulti) {\n                this._unmarkAll();\n            }\n            this._selection.add(value);\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    };\n    /**\n     * Deselects a value.\n     * @param {?} value\n     * @return {?}\n     */\n    SelectionModel.prototype._unmarkSelected = function (value) {\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    };\n    /**\n     * Clears out the selected values.\n     * @return {?}\n     */\n    SelectionModel.prototype._unmarkAll = function () {\n        var _this = this;\n        if (!this.isEmpty()) {\n            this._selection.forEach(function (value) { return _this._unmarkSelected(value); });\n        }\n    };\n    return SelectionModel;\n}());\n/**\n * Describes an event emitted when the value of a MdSelectionModel has changed.\n * \\@docs-private\n */\nvar SelectionChange = (function () {\n    /**\n     * @param {?=} added\n     * @param {?=} removed\n     */\n    function SelectionChange(added, removed) {\n        this.added = added;\n        this.removed = removed;\n    }\n    return SelectionChange;\n}());\n/**\n * Screenreaders will often fire fake mousedown events when a focusable element\n * is activated using the keyboard. We can typically distinguish between these faked\n * mousedown events and real mousedown events using the \"buttons\" property. While\n * real mousedowns will indicate the mouse button that was pressed (e.g. \"1\" for\n * the left mouse button), faked mousedowns will usually set the property value to 0.\n * @param {?} event\n * @return {?}\n */\nfunction isFakeMousedownFromScreenReader(event) {\n    return event.buttons === 0;\n}\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nvar UniqueSelectionDispatcher = (function () {\n    function UniqueSelectionDispatcher() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param {?} id ID of the item.\n     * @param {?} name Name of the item.\n     * @return {?}\n     */\n    UniqueSelectionDispatcher.prototype.notify = function (id, name) {\n        for (var _i = 0, _a = this._listeners; _i < _a.length; _i++) {\n            var listener = _a[_i];\n            listener(id, name);\n        }\n    };\n    /**\n     * Listen for future changes to item selection.\n     * @param {?} listener\n     * @return {?}\n     */\n    UniqueSelectionDispatcher.prototype.listen = function (listener) {\n        this._listeners.push(listener);\n    };\n    return UniqueSelectionDispatcher;\n}());\nUniqueSelectionDispatcher.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nUniqueSelectionDispatcher.ctorParameters = function () { return []; };\n/**\n * @param {?} parentDispatcher\n * @return {?}\n */\nfunction UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY(parentDispatcher) {\n    return parentDispatcher || new UniqueSelectionDispatcher();\n}\nvar UNIQUE_SELECTION_DISPATCHER_PROVIDER = {\n    // If there is already a dispatcher available, use that. Otherwise, provide a new one.\n    provide: UniqueSelectionDispatcher,\n    deps: [[new Optional(), new SkipSelf(), UniqueSelectionDispatcher]],\n    useFactory: UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY\n};\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n// that a value of around 650ms seems appropriate.\nvar TOUCH_BUFFER_MS = 650;\n/**\n * Monitors mouse and keyboard events to determine the cause of focus events.\n */\nvar FocusOriginMonitor = (function () {\n    /**\n     * @param {?} _ngZone\n     */\n    function FocusOriginMonitor(_ngZone) {\n        var _this = this;\n        this._ngZone = _ngZone;\n        this._origin = null;\n        this._windowFocused = false;\n        this._elementInfo = new WeakMap();\n        this._ngZone.runOutsideAngular(function () { return _this._registerDocumentEvents(); });\n    }\n    /**\n     * Monitors focus on an element and applies appropriate CSS classes.\n     * @param {?} element The element to monitor\n     * @param {?} renderer The renderer to use to apply CSS classes to the element.\n     * @param {?} checkChildren Whether to count the element as focused when its children are focused.\n     * @return {?} An observable that emits when the focus state of the element changes.\n     *     When the element is blurred, null will be emitted.\n     */\n    FocusOriginMonitor.prototype.monitor = function (element, renderer, checkChildren) {\n        var _this = this;\n        // Check if we're already monitoring this element.\n        if (this._elementInfo.has(element)) {\n            var /** @type {?} */ info_1 = this._elementInfo.get(element);\n            info_1.checkChildren = checkChildren;\n            return info_1.subject.asObservable();\n        }\n        // Create monitored element info.\n        var /** @type {?} */ info = {\n            unlisten: null,\n            checkChildren: checkChildren,\n            renderer: renderer,\n            subject: new Subject()\n        };\n        this._elementInfo.set(element, info);\n        // Start listening. We need to listen in capture phase since focus events don't bubble.\n        var /** @type {?} */ focusListener = function (event) { return _this._onFocus(event, element); };\n        var /** @type {?} */ blurListener = function (event) { return _this._onBlur(event, element); };\n        this._ngZone.runOutsideAngular(function () {\n            element.addEventListener('focus', focusListener, true);\n            element.addEventListener('blur', blurListener, true);\n        });\n        // Create an unlisten function for later.\n        info.unlisten = function () {\n            element.removeEventListener('focus', focusListener, true);\n            element.removeEventListener('blur', blurListener, true);\n        };\n        return info.subject.asObservable();\n    };\n    /**\n     * Stops monitoring an element and removes all focus classes.\n     * @param {?} element The element to stop monitoring.\n     * @return {?}\n     */\n    FocusOriginMonitor.prototype.stopMonitoring = function (element) {\n        var /** @type {?} */ elementInfo = this._elementInfo.get(element);\n        if (elementInfo) {\n            elementInfo.unlisten();\n            elementInfo.subject.complete();\n            this._setClasses(element, null);\n            this._elementInfo.delete(element);\n        }\n    };\n    /**\n     * Focuses the element via the specified focus origin.\n     * @param {?} element The element to focus.\n     * @param {?} renderer The renderer to use to invoke the focus method on the element.\n     * @param {?} origin The focus origin.\n     * @return {?}\n     */\n    FocusOriginMonitor.prototype.focusVia = function (element, renderer, origin) {\n        this._setOriginForCurrentEventQueue(origin);\n        renderer.invokeElementMethod(element, 'focus');\n    };\n    /**\n     * Register necessary event listeners on the document and window.\n     * @return {?}\n     */\n    FocusOriginMonitor.prototype._registerDocumentEvents = function () {\n        var _this = this;\n        // Note: we listen to events in the capture phase so we can detect them even if the user stops\n        // propagation.\n        // On keydown record the origin and clear any touch event that may be in progress.\n        document.addEventListener('keydown', function () {\n            _this._lastTouchTarget = null;\n            _this._setOriginForCurrentEventQueue('keyboard');\n        }, true);\n        // On mousedown record the origin only if there is not touch target, since a mousedown can\n        // happen as a result of a touch event.\n        document.addEventListener('mousedown', function () {\n            if (!_this._lastTouchTarget) {\n                _this._setOriginForCurrentEventQueue('mouse');\n            }\n        }, true);\n        // When the touchstart event fires the focus event is not yet in the event queue. This means\n        // we can't rely on the trick used above (setting timeout of 0ms). Instead we wait 650ms to\n        // see if a focus happens.\n        document.addEventListener('touchstart', function (event) {\n            if (_this._touchTimeout != null) {\n                clearTimeout(_this._touchTimeout);\n            }\n            _this._lastTouchTarget = event.target;\n            _this._touchTimeout = setTimeout(function () { return _this._lastTouchTarget = null; }, TOUCH_BUFFER_MS);\n        }, true);\n        // Make a note of when the window regains focus, so we can restore the origin info for the\n        // focused element.\n        window.addEventListener('focus', function () {\n            _this._windowFocused = true;\n            setTimeout(function () { return _this._windowFocused = false; }, 0);\n        });\n    };\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param {?} element The element to update the classes on.\n     * @param {?} origin The focus origin.\n     * @return {?}\n     */\n    FocusOriginMonitor.prototype._setClasses = function (element, origin) {\n        var /** @type {?} */ renderer = this._elementInfo.get(element).renderer;\n        renderer.setElementClass(element, 'cdk-focused', !!origin);\n        renderer.setElementClass(element, 'cdk-touch-focused', origin === 'touch');\n        renderer.setElementClass(element, 'cdk-keyboard-focused', origin === 'keyboard');\n        renderer.setElementClass(element, 'cdk-mouse-focused', origin === 'mouse');\n        renderer.setElementClass(element, 'cdk-program-focused', origin === 'program');\n    };\n    /**\n     * Sets the origin and schedules an async function to clear it at the end of the event queue.\n     * @param {?} origin The origin to set.\n     * @return {?}\n     */\n    FocusOriginMonitor.prototype._setOriginForCurrentEventQueue = function (origin) {\n        var _this = this;\n        this._origin = origin;\n        setTimeout(function () { return _this._origin = null; }, 0);\n    };\n    /**\n     * Checks whether the given focus event was caused by a touchstart event.\n     * @param {?} event The focus event to check.\n     * @return {?} Whether the event was caused by a touch.\n     */\n    FocusOriginMonitor.prototype._wasCausedByTouch = function (event) {\n        // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\n        // Consider the following dom structure:\n        //\n        // <div #parent tabindex=\"0\" cdkFocusClasses>\n        //   <div #child (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // If the user touches the #child element and the #parent is programmatically focused as a\n        // result, this code will still consider it to have been caused by the touch event and will\n        // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\n        // relatively small edge-case that can be worked around by using\n        // focusVia(parentEl, renderer,  'program') to focus the parent element.\n        //\n        // If we decide that we absolutely must handle this case correctly, we can do so by listening\n        // for the first focus event after the touchstart, and then the first blur event after that\n        // focus event. When that blur event fires we know that whatever follows is not a result of the\n        // touchstart.\n        var /** @type {?} */ focusTarget = event.target;\n        return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n            (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n    };\n    /**\n     * Handles focus events on a registered element.\n     * @param {?} event The focus event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    FocusOriginMonitor.prototype._onFocus = function (event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        if (!this._elementInfo.get(element).checkChildren && element !== event.target) {\n            return;\n        }\n        // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\n        // 1) The window has just regained focus, in which case we want to restore the focused state of\n        //    the element from before the window blurred.\n        // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\n        // 3) The element was programmatically focused, in which case we should mark the origin as\n        //    'program'.\n        if (!this._origin) {\n            if (this._windowFocused && this._lastFocusOrigin) {\n                this._origin = this._lastFocusOrigin;\n            }\n            else if (this._wasCausedByTouch(event)) {\n                this._origin = 'touch';\n            }\n            else {\n                this._origin = 'program';\n            }\n        }\n        this._setClasses(element, this._origin);\n        this._elementInfo.get(element).subject.next(this._origin);\n        this._lastFocusOrigin = this._origin;\n        this._origin = null;\n    };\n    /**\n     * Handles blur events on a registered element.\n     * @param {?} event The blur event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    FocusOriginMonitor.prototype._onBlur = function (event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        if (this._elementInfo.get(element).checkChildren && event.relatedTarget instanceof Node &&\n            element.contains(event.relatedTarget)) {\n            return;\n        }\n        this._setClasses(element, null);\n        this._elementInfo.get(element).subject.next(null);\n    };\n    return FocusOriginMonitor;\n}());\nFocusOriginMonitor.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nFocusOriginMonitor.ctorParameters = function () { return [\n    { type: NgZone, },\n]; };\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nvar CdkMonitorFocus = (function () {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusOriginMonitor\n     * @param {?} renderer\n     */\n    function CdkMonitorFocus(_elementRef, _focusOriginMonitor, renderer) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._focusOriginMonitor = _focusOriginMonitor;\n        this.cdkFocusChange = new EventEmitter();\n        this._focusOriginMonitor.monitor(this._elementRef.nativeElement, renderer, this._elementRef.nativeElement.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe(function (origin) { return _this.cdkFocusChange.emit(origin); });\n    }\n    /**\n     * @return {?}\n     */\n    CdkMonitorFocus.prototype.ngOnDestroy = function () {\n        this._focusOriginMonitor.stopMonitoring(this._elementRef.nativeElement);\n    };\n    return CdkMonitorFocus;\n}());\nCdkMonitorFocus.decorators = [\n    { type: Directive, args: [{\n                selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n            },] },\n];\n/**\n * @nocollapse\n */\nCdkMonitorFocus.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: FocusOriginMonitor, },\n    { type: Renderer, },\n]; };\nCdkMonitorFocus.propDecorators = {\n    'cdkFocusChange': [{ type: Output },],\n};\n/**\n * @param {?} parentDispatcher\n * @param {?} ngZone\n * @return {?}\n */\nfunction FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY(parentDispatcher, ngZone) {\n    return parentDispatcher || new FocusOriginMonitor(ngZone);\n}\nvar FOCUS_ORIGIN_MONITOR_PROVIDER = {\n    // If there is already a FocusOriginMonitor available, use that. Otherwise, provide a new one.\n    provide: FocusOriginMonitor,\n    deps: [[new Optional(), new SkipSelf(), FocusOriginMonitor], NgZone],\n    useFactory: FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY\n};\n/**\n * Applies a CSS transform to an element, including browser-prefixed properties.\n * @param {?} element\n * @param {?} transformValue\n * @return {?}\n */\nfunction applyCssTransform(element, transformValue) {\n    // It's important to trim the result, because the browser will ignore the set operation\n    // if the string contains only whitespace.\n    var /** @type {?} */ value = transformValue.trim();\n    element.style.transform = value;\n    element.style.webkitTransform = value;\n}\nvar StyleModule = (function () {\n    function StyleModule() {\n    }\n    return StyleModule;\n}());\nStyleModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [CdkMonitorFocus],\n                exports: [CdkMonitorFocus],\n                providers: [FOCUS_ORIGIN_MONITOR_PROVIDER],\n            },] },\n];\n/**\n * @nocollapse\n */\nStyleModule.ctorParameters = function () { return []; };\n/**\n * \\@docs-private\n */\nvar AnimationCurves = (function () {\n    function AnimationCurves() {\n    }\n    return AnimationCurves;\n}());\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/**\n * \\@docs-private\n */\nvar AnimationDurations = (function () {\n    function AnimationDurations() {\n    }\n    return AnimationDurations;\n}());\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n/**\n * Coerces a data-bound value (typically a string) to a number.\n * @param {?} value\n * @param {?=} fallbackValue\n * @return {?}\n */\nfunction coerceNumberProperty(value, fallbackValue) {\n    if (fallbackValue === void 0) { fallbackValue = 0; }\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return isNaN(parseFloat(/** @type {?} */ (value))) || isNaN(Number(value)) ? fallbackValue : Number(value);\n}\nvar MdCoreModule = (function () {\n    function MdCoreModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdCoreModule.forRoot = function () {\n        return {\n            ngModule: MdCoreModule,\n            providers: [],\n        };\n    };\n    return MdCoreModule;\n}());\nMdCoreModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    MdLineModule,\n                    RtlModule,\n                    MdRippleModule,\n                    ObserveContentModule,\n                    PortalModule,\n                    OverlayModule,\n                    A11yModule,\n                    MdOptionModule,\n                    MdSelectionModule,\n                ],\n                exports: [\n                    MdLineModule,\n                    RtlModule,\n                    MdRippleModule,\n                    ObserveContentModule,\n                    PortalModule,\n                    OverlayModule,\n                    A11yModule,\n                    MdOptionModule,\n                    MdSelectionModule,\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCoreModule.ctorParameters = function () { return []; };\n/**\n * Provider Expression that allows md-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * \\@docs-private\n */\nvar MD_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return MdButtonToggleGroup; }),\n    multi: true\n};\nvar _uniqueIdCounter$1 = 0;\n/**\n * Change event object emitted by MdButtonToggle.\n */\nvar MdButtonToggleChange = (function () {\n    function MdButtonToggleChange() {\n    }\n    return MdButtonToggleChange;\n}());\n/**\n * Exclusive selection button toggle group that behaves like a radio-button group.\n */\nvar MdButtonToggleGroup = (function () {\n    function MdButtonToggleGroup() {\n        this._value = null;\n        this._name = \"md-button-toggle-group-\" + _uniqueIdCounter$1++;\n        this._disabled = null;\n        this._vertical = false;\n        this._selected = null;\n        this._isInitialized = false;\n        this._controlValueAccessorChangeFn = function (value) { };\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this.onTouched = function () { };\n        /** Child button toggle buttons. */\n        this._buttonToggles = null;\n        this._change = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    MdButtonToggleGroup.prototype.ngAfterViewInit = function () {\n        this._isInitialized = true;\n    };\n    Object.defineProperty(MdButtonToggleGroup.prototype, \"name\", {\n        /**\n         * `name` attribute for the underlying `input` element.\n         * @return {?}\n         */\n        get: function () {\n            return this._name;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._name = value;\n            this._updateButtonToggleNames();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButtonToggleGroup.prototype, \"disabled\", {\n        /**\n         * Whether the toggle group is disabled.\n         * @return {?}\n         */\n        get: function () {\n            return this._disabled;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._disabled = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButtonToggleGroup.prototype, \"vertical\", {\n        /**\n         * Whether the toggle group is vertical.\n         * @return {?}\n         */\n        get: function () {\n            return this._vertical;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._vertical = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButtonToggleGroup.prototype, \"value\", {\n        /**\n         * Value of the toggle group.\n         * @return {?}\n         */\n        get: function () {\n            return this._value;\n        },\n        /**\n         * @param {?} newValue\n         * @return {?}\n         */\n        set: function (newValue) {\n            if (this._value != newValue) {\n                this._value = newValue;\n                this._updateSelectedButtonToggleFromValue();\n                // Only emit a change event if the view is completely initialized.\n                // We don't want to emit a change event for the initial values.\n                if (this._isInitialized) {\n                    this._emitChangeEvent();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButtonToggleGroup.prototype, \"selected\", {\n        /**\n         * Whether the toggle group is selected.\n         * @return {?}\n         */\n        get: function () {\n            return this._selected;\n        },\n        /**\n         * @param {?} selected\n         * @return {?}\n         */\n        set: function (selected) {\n            this._selected = selected;\n            this.value = selected ? selected.value : null;\n            if (selected && !selected.checked) {\n                selected.checked = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButtonToggleGroup.prototype, \"change\", {\n        /**\n         * Event emitted when the group's value changes.\n         * @return {?}\n         */\n        get: function () {\n            return this._change.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdButtonToggleGroup.prototype._updateButtonToggleNames = function () {\n        var _this = this;\n        if (this._buttonToggles) {\n            this._buttonToggles.forEach(function (toggle) {\n                toggle.name = _this._name;\n            });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdButtonToggleGroup.prototype._updateSelectedButtonToggleFromValue = function () {\n        var _this = this;\n        var /** @type {?} */ isAlreadySelected = this._selected != null && this._selected.value == this._value;\n        if (this._buttonToggles != null && !isAlreadySelected) {\n            var /** @type {?} */ matchingButtonToggle = this._buttonToggles.filter(function (buttonToggle) { return buttonToggle.value == _this._value; })[0];\n            if (matchingButtonToggle) {\n                this.selected = matchingButtonToggle;\n            }\n            else if (this.value == null) {\n                this.selected = null;\n                this._buttonToggles.forEach(function (buttonToggle) {\n                    buttonToggle.checked = false;\n                });\n            }\n        }\n    };\n    /**\n     * Dispatch change event with current selection and group value.\n     * @return {?}\n     */\n    MdButtonToggleGroup.prototype._emitChangeEvent = function () {\n        var /** @type {?} */ event = new MdButtonToggleChange();\n        event.source = this._selected;\n        event.value = this._value;\n        this._controlValueAccessorChangeFn(event.value);\n        this._change.emit(event);\n    };\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value Value to be set to the model.\n     * @return {?}\n     */\n    MdButtonToggleGroup.prototype.writeValue = function (value) {\n        this.value = value;\n    };\n    /**\n     * Registers a callback that will be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn On change callback function.\n     * @return {?}\n     */\n    MdButtonToggleGroup.prototype.registerOnChange = function (fn) {\n        this._controlValueAccessorChangeFn = fn;\n    };\n    /**\n     * Registers a callback that will be triggered when the control has been touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn On touch callback function.\n     * @return {?}\n     */\n    MdButtonToggleGroup.prototype.registerOnTouched = function (fn) {\n        this.onTouched = fn;\n    };\n    /**\n     * Toggles the disabled state of the component. Implemented as part of ControlValueAccessor.\n     * @param {?} isDisabled Whether the component should be disabled.\n     * @return {?}\n     */\n    MdButtonToggleGroup.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    return MdButtonToggleGroup;\n}());\nMdButtonToggleGroup.decorators = [\n    { type: Directive, args: [{\n                selector: 'md-button-toggle-group:not([multiple]), mat-button-toggle-group:not([multiple])',\n                providers: [MD_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR],\n                host: {\n                    '[class.mat-button-toggle-group]': 'true',\n                    'role': 'radiogroup',\n                    '[class.mat-button-toggle-vertical]': 'vertical'\n                },\n                exportAs: 'mdButtonToggleGroup',\n            },] },\n];\n/**\n * @nocollapse\n */\nMdButtonToggleGroup.ctorParameters = function () { return []; };\nMdButtonToggleGroup.propDecorators = {\n    '_buttonToggles': [{ type: ContentChildren, args: [forwardRef(function () { return MdButtonToggle; }),] },],\n    'name': [{ type: Input },],\n    'disabled': [{ type: Input },],\n    'vertical': [{ type: Input },],\n    'value': [{ type: Input },],\n    'selected': [{ type: Input },],\n    'change': [{ type: Output },],\n};\n/**\n * Multiple selection button-toggle group. `ngModel` is not supported in this mode.\n */\nvar MdButtonToggleGroupMultiple = (function () {\n    function MdButtonToggleGroupMultiple() {\n        this._disabled = null;\n        this._vertical = false;\n    }\n    Object.defineProperty(MdButtonToggleGroupMultiple.prototype, \"disabled\", {\n        /**\n         * Whether the toggle group is disabled.\n         * @return {?}\n         */\n        get: function () {\n            return this._disabled;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._disabled = (value != null && value !== false) ? true : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButtonToggleGroupMultiple.prototype, \"vertical\", {\n        /**\n         * Whether the toggle group is vertical.\n         * @return {?}\n         */\n        get: function () {\n            return this._vertical;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._vertical = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return MdButtonToggleGroupMultiple;\n}());\nMdButtonToggleGroupMultiple.decorators = [\n    { type: Directive, args: [{\n                selector: 'md-button-toggle-group[multiple], mat-button-toggle-group[multiple]',\n                exportAs: 'mdButtonToggleGroup',\n                host: {\n                    '[class.mat-button-toggle-group]': 'true',\n                    '[class.mat-button-toggle-vertical]': 'vertical'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdButtonToggleGroupMultiple.ctorParameters = function () { return []; };\nMdButtonToggleGroupMultiple.propDecorators = {\n    'disabled': [{ type: Input },],\n    'vertical': [{ type: Input },],\n};\n/**\n * Single button inside of a toggle group.\n */\nvar MdButtonToggle = (function () {\n    /**\n     * @param {?} toggleGroup\n     * @param {?} toggleGroupMultiple\n     * @param {?} _buttonToggleDispatcher\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _focusOriginMonitor\n     */\n    function MdButtonToggle(toggleGroup, toggleGroupMultiple, _buttonToggleDispatcher, _renderer, _elementRef, _focusOriginMonitor) {\n        var _this = this;\n        this._buttonToggleDispatcher = _buttonToggleDispatcher;\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._focusOriginMonitor = _focusOriginMonitor;\n        this._checked = false;\n        this._disabled = null;\n        this._value = null;\n        this._isSingleSelector = null;\n        this._change = new EventEmitter();\n        this.buttonToggleGroup = toggleGroup;\n        this.buttonToggleGroupMultiple = toggleGroupMultiple;\n        if (this.buttonToggleGroup) {\n            _buttonToggleDispatcher.listen(function (id, name) {\n                if (id != _this.id && name == _this.name) {\n                    _this.checked = false;\n                }\n            });\n            this._type = 'radio';\n            this.name = this.buttonToggleGroup.name;\n            this._isSingleSelector = true;\n        }\n        else {\n            // Even if there is no group at all, treat the button toggle as a checkbox so it can be\n            // toggled on or off.\n            this._type = 'checkbox';\n            this._isSingleSelector = false;\n        }\n    }\n    Object.defineProperty(MdButtonToggle.prototype, \"inputId\", {\n        /**\n         * Unique ID for the underlying `input` element.\n         * @return {?}\n         */\n        get: function () {\n            return this.id + \"-input\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButtonToggle.prototype, \"checked\", {\n        /**\n         * Whether the button is checked.\n         * @return {?}\n         */\n        get: function () {\n            return this._checked;\n        },\n        /**\n         * @param {?} newCheckedState\n         * @return {?}\n         */\n        set: function (newCheckedState) {\n            if (this._isSingleSelector) {\n                if (newCheckedState) {\n                    // Notify all button toggles with the same name (in the same group) to un-check.\n                    this._buttonToggleDispatcher.notify(this.id, this.name);\n                }\n            }\n            this._checked = newCheckedState;\n            if (newCheckedState && this._isSingleSelector && this.buttonToggleGroup.value != this.value) {\n                this.buttonToggleGroup.selected = this;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButtonToggle.prototype, \"value\", {\n        /**\n         * MdButtonToggleGroup reads this to assign its own value.\n         * @return {?}\n         */\n        get: function () {\n            return this._value;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._value != value) {\n                if (this.buttonToggleGroup != null && this.checked) {\n                    this.buttonToggleGroup.value = value;\n                }\n                this._value = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButtonToggle.prototype, \"disabled\", {\n        /**\n         * Whether the button is disabled.\n         * @return {?}\n         */\n        get: function () {\n            return this._disabled || (this.buttonToggleGroup != null && this.buttonToggleGroup.disabled) ||\n                (this.buttonToggleGroupMultiple != null && this.buttonToggleGroupMultiple.disabled);\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._disabled = (value != null && value !== false) ? true : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButtonToggle.prototype, \"change\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._change.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdButtonToggle.prototype.ngOnInit = function () {\n        if (this.id == null) {\n            this.id = \"md-button-toggle-\" + _uniqueIdCounter$1++;\n        }\n        if (this.buttonToggleGroup && this._value == this.buttonToggleGroup.value) {\n            this._checked = true;\n        }\n        this._focusOriginMonitor.monitor(this._elementRef.nativeElement, this._renderer, true);\n    };\n    /**\n     * Focuses the button.\n     * @return {?}\n     */\n    MdButtonToggle.prototype.focus = function () {\n        this._renderer.invokeElementMethod(this._inputElement.nativeElement, 'focus');\n    };\n    /**\n     * Toggle the state of the current button toggle.\n     * @return {?}\n     */\n    MdButtonToggle.prototype._toggle = function () {\n        this.checked = !this.checked;\n    };\n    /**\n     * Checks the button toggle due to an interaction with the underlying native input.\n     * @param {?} event\n     * @return {?}\n     */\n    MdButtonToggle.prototype._onInputChange = function (event) {\n        event.stopPropagation();\n        if (this._isSingleSelector) {\n            // Propagate the change one-way via the group, which will in turn mark this\n            // button toggle as checked.\n            this.checked = true;\n            this.buttonToggleGroup.selected = this;\n            this.buttonToggleGroup.onTouched();\n        }\n        else {\n            this._toggle();\n        }\n        // Emit a change event when the native input does.\n        this._emitChangeEvent();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdButtonToggle.prototype._onInputClick = function (event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    };\n    /**\n     * Dispatch change event with current value.\n     * @return {?}\n     */\n    MdButtonToggle.prototype._emitChangeEvent = function () {\n        var /** @type {?} */ event = new MdButtonToggleChange();\n        event.source = this;\n        event.value = this._value;\n        this._change.emit(event);\n    };\n    return MdButtonToggle;\n}());\nMdButtonToggle.decorators = [\n    { type: Component, args: [{ selector: 'md-button-toggle, mat-button-toggle',\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-button-toggle-label\\\"> <input #input class=\\\"mat-button-toggle-input cdk-visually-hidden\\\" [type]=\\\"_type\\\" [id]=\\\"inputId\\\" [checked]=\\\"checked\\\" [disabled]=\\\"disabled\\\" [name]=\\\"name\\\" (change)=\\\"_onInputChange($event)\\\" (click)=\\\"_onInputClick($event)\\\"> <div class=\\\"mat-button-toggle-label-content\\\"> <ng-content></ng-content> </div> </label> <!-- the touchstart handler prevents the overlay from capturing the initial tap on touch devices --> <div class=\\\"mat-button-toggle-focus-overlay\\\" (touchstart)=\\\"$event.preventDefault()\\\"></div> \",\n                styles: [\".mat-button-toggle-group{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);position:relative;display:inline-flex;flex-direction:row;border-radius:2px;cursor:pointer;white-space:nowrap}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle-disabled .mat-button-toggle-label-content{cursor:default}.mat-button-toggle{white-space:nowrap;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;position:relative}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.mat-button-toggle-label-content{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;cursor:pointer}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{border-radius:inherit;pointer-events:none;opacity:0;position:absolute;top:0;left:0;right:0;bottom:0} /*# sourceMappingURL=button-toggle.css.map */ \"],\n                encapsulation: ViewEncapsulation.None,\n                host: {\n                    '[class.mat-button-toggle]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdButtonToggle.ctorParameters = function () { return [\n    { type: MdButtonToggleGroup, decorators: [{ type: Optional },] },\n    { type: MdButtonToggleGroupMultiple, decorators: [{ type: Optional },] },\n    { type: UniqueSelectionDispatcher, },\n    { type: Renderer, },\n    { type: ElementRef, },\n    { type: FocusOriginMonitor, },\n]; };\nMdButtonToggle.propDecorators = {\n    '_inputElement': [{ type: ViewChild, args: ['input',] },],\n    'id': [{ type: HostBinding }, { type: Input },],\n    'name': [{ type: Input },],\n    'checked': [{ type: HostBinding, args: ['class.mat-button-toggle-checked',] }, { type: Input },],\n    'value': [{ type: Input },],\n    'disabled': [{ type: HostBinding, args: ['class.mat-button-toggle-disabled',] }, { type: Input },],\n    'change': [{ type: Output },],\n};\nvar MdButtonToggleModule = (function () {\n    function MdButtonToggleModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdButtonToggleModule.forRoot = function () {\n        return {\n            ngModule: MdButtonToggleModule,\n            providers: []\n        };\n    };\n    return MdButtonToggleModule;\n}());\nMdButtonToggleModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [FormsModule, CompatibilityModule],\n                exports: [\n                    MdButtonToggleGroup,\n                    MdButtonToggleGroupMultiple,\n                    MdButtonToggle,\n                    CompatibilityModule,\n                ],\n                declarations: [MdButtonToggleGroup, MdButtonToggleGroupMultiple, MdButtonToggle],\n                providers: [UNIQUE_SELECTION_DISPATCHER_PROVIDER, FocusOriginMonitor]\n            },] },\n];\n/**\n * @nocollapse\n */\nMdButtonToggleModule.ctorParameters = function () { return []; };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdButtonCssMatStyler = (function () {\n    function MdButtonCssMatStyler() {\n    }\n    return MdButtonCssMatStyler;\n}());\nMdButtonCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: 'button[md-button], button[mat-button], a[md-button], a[mat-button]',\n                host: {\n                    '[class.mat-button]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdButtonCssMatStyler.ctorParameters = function () { return []; };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdRaisedButtonCssMatStyler = (function () {\n    function MdRaisedButtonCssMatStyler() {\n    }\n    return MdRaisedButtonCssMatStyler;\n}());\nMdRaisedButtonCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: 'button[md-raised-button], button[mat-raised-button], ' +\n                    'a[md-raised-button], a[mat-raised-button]',\n                host: {\n                    '[class.mat-raised-button]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdRaisedButtonCssMatStyler.ctorParameters = function () { return []; };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdIconButtonCssMatStyler = (function () {\n    function MdIconButtonCssMatStyler() {\n    }\n    return MdIconButtonCssMatStyler;\n}());\nMdIconButtonCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: 'button[md-icon-button], button[mat-icon-button], a[md-icon-button], a[mat-icon-button]',\n                host: {\n                    '[class.mat-icon-button]': 'true',\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdIconButtonCssMatStyler.ctorParameters = function () { return []; };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdFabCssMatStyler = (function () {\n    function MdFabCssMatStyler() {\n    }\n    return MdFabCssMatStyler;\n}());\nMdFabCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: 'button[md-fab], button[mat-fab], a[md-fab], a[mat-fab]',\n                host: {\n                    '[class.mat-fab]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdFabCssMatStyler.ctorParameters = function () { return []; };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdMiniFabCssMatStyler = (function () {\n    function MdMiniFabCssMatStyler() {\n    }\n    return MdMiniFabCssMatStyler;\n}());\nMdMiniFabCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: 'button[md-mini-fab], button[mat-mini-fab], a[md-mini-fab], a[mat-mini-fab]',\n                host: {\n                    '[class.mat-mini-fab]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdMiniFabCssMatStyler.ctorParameters = function () { return []; };\n/**\n * Material design button.\n */\nvar MdButton = (function () {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _renderer\n     * @param {?} _focusOriginMonitor\n     */\n    function MdButton(_elementRef, _renderer, _focusOriginMonitor) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._focusOriginMonitor = _focusOriginMonitor;\n        /** Whether the button is round. */\n        this._isRoundButton = this._hasAttributeWithPrefix('fab', 'mini-fab');\n        /** Whether the button is icon button. */\n        this._isIconButton = this._hasAttributeWithPrefix('icon-button');\n        this._disableRipple = false;\n        this._disabled = null;\n        this._focusOriginMonitor.monitor(this._elementRef.nativeElement, this._renderer, true);\n    }\n    Object.defineProperty(MdButton.prototype, \"disableRipple\", {\n        /**\n         * Whether the ripple effect for this button is disabled.\n         * @return {?}\n         */\n        get: function () { return this._disableRipple; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this._disableRipple = coerceBooleanProperty(v); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdButton.prototype, \"disabled\", {\n        /**\n         * Whether the button is disabled.\n         * @return {?}\n         */\n        get: function () { return this._disabled; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._disabled = coerceBooleanProperty(value) ? true : null; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdButton.prototype.ngOnDestroy = function () {\n        this._focusOriginMonitor.stopMonitoring(this._elementRef.nativeElement);\n    };\n    Object.defineProperty(MdButton.prototype, \"color\", {\n        /**\n         * The color of the button. Can be `primary`, `accent`, or `warn`.\n         * @return {?}\n         */\n        get: function () { return this._color; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._updateColor(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} newColor\n     * @return {?}\n     */\n    MdButton.prototype._updateColor = function (newColor) {\n        this._setElementColor(this._color, false);\n        this._setElementColor(newColor, true);\n        this._color = newColor;\n    };\n    /**\n     * @param {?} color\n     * @param {?} isAdd\n     * @return {?}\n     */\n    MdButton.prototype._setElementColor = function (color, isAdd) {\n        if (color != null && color != '') {\n            this._renderer.setElementClass(this._getHostElement(), \"mat-\" + color, isAdd);\n        }\n    };\n    /**\n     * Focuses the button.\n     * @return {?}\n     */\n    MdButton.prototype.focus = function () {\n        this._renderer.invokeElementMethod(this._getHostElement(), 'focus');\n    };\n    /**\n     * @return {?}\n     */\n    MdButton.prototype._getHostElement = function () {\n        return this._elementRef.nativeElement;\n    };\n    /**\n     * @return {?}\n     */\n    MdButton.prototype._isRippleDisabled = function () {\n        return this.disableRipple || this.disabled;\n    };\n    /**\n     * Gets whether the button has one of the given attributes\n     * with either an 'md-' or 'mat-' prefix.\n     * @param {...?} unprefixedAttributeNames\n     * @return {?}\n     */\n    MdButton.prototype._hasAttributeWithPrefix = function () {\n        var _this = this;\n        var unprefixedAttributeNames = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            unprefixedAttributeNames[_i] = arguments[_i];\n        }\n        return unprefixedAttributeNames.some(function (suffix) {\n            var /** @type {?} */ el = _this._getHostElement();\n            return el.hasAttribute('md-' + suffix) || el.hasAttribute('mat-' + suffix);\n        });\n    };\n    return MdButton;\n}());\nMdButton.decorators = [\n    { type: Component, args: [{ selector: 'button[md-button], button[md-raised-button], button[md-icon-button],' +\n                    'button[md-fab], button[md-mini-fab],' +\n                    'button[mat-button], button[mat-raised-button], button[mat-icon-button],' +\n                    'button[mat-fab], button[mat-mini-fab]',\n                host: {\n                    '[disabled]': 'disabled',\n                },\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span> <div md-ripple *ngIf=\\\"!_isRippleDisabled()\\\" class=\\\"mat-button-ripple\\\" [class.mat-button-ripple-round]=\\\"_isRoundButton || _isIconButton\\\" [mdRippleCentered]=\\\"_isIconButton\\\" [mdRippleTrigger]=\\\"_getHostElement()\\\"></div> <!-- the touchstart handler prevents the overlay from capturing the initial tap on touch devices --> <div class=\\\"mat-button-focus-overlay\\\" (touchstart)=\\\"$event.preventDefault()\\\"></div> \",\n                styles: [\".mat-button,.mat-fab,.mat-icon-button,.mat-mini-fab,.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;font-size:14px;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-weight:500;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px}[disabled].mat-button,[disabled].mat-fab,[disabled].mat-icon-button,[disabled].mat-mini-fab,[disabled].mat-raised-button{cursor:default}.cdk-keyboard-focused.mat-button .mat-button-focus-overlay,.cdk-keyboard-focused.mat-fab .mat-button-focus-overlay,.cdk-keyboard-focused.mat-icon-button .mat-button-focus-overlay,.cdk-keyboard-focused.mat-mini-fab .mat-button-focus-overlay,.cdk-keyboard-focused.mat-raised-button .mat-button-focus-overlay{opacity:1}.mat-button::-moz-focus-inner,.mat-fab::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-mini-fab::-moz-focus-inner,.mat-raised-button::-moz-focus-inner{border:0}.mat-fab,.mat-mini-fab,.mat-raised-button{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-fab:not([disabled]):active,.mat-mini-fab:not([disabled]):active,.mat-raised-button:not([disabled]):active{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}[disabled].mat-fab,[disabled].mat-mini-fab,[disabled].mat-raised-button{box-shadow:none}.mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{transition:none;opacity:0}.mat-button:hover .mat-button-focus-overlay{opacity:1}.mat-fab{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab:not([disabled]):active{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-fab .mat-icon,.mat-fab i{padding:16px 0;line-height:24px}.mat-mini-fab{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab:not([disabled]):active{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-mini-fab .mat-icon,.mat-mini-fab i{padding:8px 0;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button,.mat-icon-button,.mat-raised-button{color:currentColor}.mat-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*{vertical-align:middle}.mat-button-focus-overlay,.mat-button-ripple{position:absolute;top:0;left:0;bottom:0;right:0}.mat-button-focus-overlay{background-color:rgba(0,0,0,.12);border-radius:inherit;pointer-events:none;opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}@media screen and (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:rgba(255,255,255,.5)}}.mat-button-ripple-round{border-radius:50%;z-index:1}@media screen and (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}} /*# sourceMappingURL=button.css.map */ \"],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/**\n * @nocollapse\n */\nMdButton.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: Renderer, },\n    { type: FocusOriginMonitor, },\n]; };\nMdButton.propDecorators = {\n    'disableRipple': [{ type: Input },],\n    'disabled': [{ type: Input },],\n    'color': [{ type: Input },],\n};\n/**\n * Raised Material design button.\n */\nvar MdAnchor = (function (_super) {\n    __extends(MdAnchor, _super);\n    /**\n     * @param {?} elementRef\n     * @param {?} renderer\n     * @param {?} focusOriginMonitor\n     */\n    function MdAnchor(elementRef, renderer, focusOriginMonitor) {\n        return _super.call(this, elementRef, renderer, focusOriginMonitor) || this;\n    }\n    Object.defineProperty(MdAnchor.prototype, \"tabIndex\", {\n        /**\n         * \\@docs-private\n         * @return {?}\n         */\n        get: function () {\n            return this.disabled ? -1 : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdAnchor.prototype, \"_isAriaDisabled\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.disabled ? 'true' : 'false';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdAnchor.prototype._haltDisabledEvents = function (event) {\n        // A disabled button shouldn't apply any actions\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    };\n    return MdAnchor;\n}(MdButton));\nMdAnchor.decorators = [\n    { type: Component, args: [{ selector: \"a[md-button], a[md-raised-button], a[md-icon-button], a[md-fab], a[md-mini-fab],\\n             a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab], a[mat-mini-fab]\",\n                host: {\n                    '[attr.disabled]': 'disabled',\n                    '[attr.aria-disabled]': '_isAriaDisabled',\n                    '(click)': '_haltDisabledEvents($event)',\n                },\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span> <div md-ripple *ngIf=\\\"!_isRippleDisabled()\\\" class=\\\"mat-button-ripple\\\" [class.mat-button-ripple-round]=\\\"_isRoundButton || _isIconButton\\\" [mdRippleCentered]=\\\"_isIconButton\\\" [mdRippleTrigger]=\\\"_getHostElement()\\\"></div> <!-- the touchstart handler prevents the overlay from capturing the initial tap on touch devices --> <div class=\\\"mat-button-focus-overlay\\\" (touchstart)=\\\"$event.preventDefault()\\\"></div> \",\n                styles: [\".mat-button,.mat-fab,.mat-icon-button,.mat-mini-fab,.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;font-size:14px;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-weight:500;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px}[disabled].mat-button,[disabled].mat-fab,[disabled].mat-icon-button,[disabled].mat-mini-fab,[disabled].mat-raised-button{cursor:default}.cdk-keyboard-focused.mat-button .mat-button-focus-overlay,.cdk-keyboard-focused.mat-fab .mat-button-focus-overlay,.cdk-keyboard-focused.mat-icon-button .mat-button-focus-overlay,.cdk-keyboard-focused.mat-mini-fab .mat-button-focus-overlay,.cdk-keyboard-focused.mat-raised-button .mat-button-focus-overlay{opacity:1}.mat-button::-moz-focus-inner,.mat-fab::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-mini-fab::-moz-focus-inner,.mat-raised-button::-moz-focus-inner{border:0}.mat-fab,.mat-mini-fab,.mat-raised-button{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-fab:not([disabled]):active,.mat-mini-fab:not([disabled]):active,.mat-raised-button:not([disabled]):active{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}[disabled].mat-fab,[disabled].mat-mini-fab,[disabled].mat-raised-button{box-shadow:none}.mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{transition:none;opacity:0}.mat-button:hover .mat-button-focus-overlay{opacity:1}.mat-fab{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab:not([disabled]):active{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-fab .mat-icon,.mat-fab i{padding:16px 0;line-height:24px}.mat-mini-fab{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab:not([disabled]):active{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-mini-fab .mat-icon,.mat-mini-fab i{padding:8px 0;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button,.mat-icon-button,.mat-raised-button{color:currentColor}.mat-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*{vertical-align:middle}.mat-button-focus-overlay,.mat-button-ripple{position:absolute;top:0;left:0;bottom:0;right:0}.mat-button-focus-overlay{background-color:rgba(0,0,0,.12);border-radius:inherit;pointer-events:none;opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}@media screen and (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:rgba(255,255,255,.5)}}.mat-button-ripple-round{border-radius:50%;z-index:1}@media screen and (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}} /*# sourceMappingURL=button.css.map */ \"],\n                encapsulation: ViewEncapsulation.None\n            },] },\n];\n/**\n * @nocollapse\n */\nMdAnchor.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: Renderer, },\n    { type: FocusOriginMonitor, },\n]; };\nMdAnchor.propDecorators = {\n    'tabIndex': [{ type: HostBinding, args: ['tabIndex',] },],\n};\nvar MdButtonModule = (function () {\n    function MdButtonModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdButtonModule.forRoot = function () {\n        return {\n            ngModule: MdButtonModule,\n            providers: []\n        };\n    };\n    return MdButtonModule;\n}());\nMdButtonModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    MdRippleModule,\n                    CompatibilityModule,\n                    StyleModule,\n                ],\n                exports: [\n                    MdButton,\n                    MdAnchor,\n                    CompatibilityModule,\n                    MdButtonCssMatStyler,\n                    MdRaisedButtonCssMatStyler,\n                    MdIconButtonCssMatStyler,\n                    MdFabCssMatStyler,\n                    MdMiniFabCssMatStyler,\n                ],\n                declarations: [\n                    MdButton,\n                    MdAnchor,\n                    MdButtonCssMatStyler,\n                    MdRaisedButtonCssMatStyler,\n                    MdIconButtonCssMatStyler,\n                    MdFabCssMatStyler,\n                    MdMiniFabCssMatStyler,\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdButtonModule.ctorParameters = function () { return []; };\n/** Monotonically increasing integer used to auto-generate unique ids for checkbox components. */\nvar nextId = 0;\n/**\n * Provider Expression that allows md-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * \\@docs-private\n */\nvar MD_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return MdCheckbox; }),\n    multi: true\n};\nvar TransitionCheckState = {};\nTransitionCheckState.Init = 0;\nTransitionCheckState.Checked = 1;\nTransitionCheckState.Unchecked = 2;\nTransitionCheckState.Indeterminate = 3;\nTransitionCheckState[TransitionCheckState.Init] = \"Init\";\nTransitionCheckState[TransitionCheckState.Checked] = \"Checked\";\nTransitionCheckState[TransitionCheckState.Unchecked] = \"Unchecked\";\nTransitionCheckState[TransitionCheckState.Indeterminate] = \"Indeterminate\";\n/**\n * Change event object emitted by MdCheckbox.\n */\nvar MdCheckboxChange = (function () {\n    function MdCheckboxChange() {\n    }\n    return MdCheckboxChange;\n}());\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MdCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://www.google.com/design/spec/components/selection-controls.html\n */\nvar MdCheckbox = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _focusOriginMonitor\n     */\n    function MdCheckbox(_renderer, _elementRef, _changeDetectorRef, _focusOriginMonitor) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusOriginMonitor = _focusOriginMonitor;\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        /** A unique id for the checkbox. If one is not supplied, it is auto-generated. */\n        this.id = \"md-checkbox-\" + ++nextId;\n        /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n        this.labelPosition = 'after';\n        this._disabled = false;\n        /** Tabindex value that is passed to the underlying input element. */\n        this.tabIndex = 0;\n        /** Name value will be applied to the input element if present */\n        this.name = null;\n        /** Event emitted when the checkbox's `checked` value changes. */\n        this.change = new EventEmitter();\n        /** Event emitted when the checkbox's `indeterminate` value changes. */\n        this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * \\@docs-private\n         */\n        this.onTouched = function () { };\n        this._currentAnimationClass = '';\n        this._currentCheckState = TransitionCheckState.Init;\n        this._checked = false;\n        this._indeterminate = false;\n        this._controlValueAccessorChangeFn = function (value) { };\n        this.color = 'accent';\n    }\n    Object.defineProperty(MdCheckbox.prototype, \"disableRipple\", {\n        /**\n         * Whether the ripple effect for this checkbox is disabled.\n         * @return {?}\n         */\n        get: function () { return this._disableRipple; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._disableRipple = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdCheckbox.prototype, \"inputId\", {\n        /**\n         * ID of the native input element inside `<md-checkbox>`\n         * @return {?}\n         */\n        get: function () {\n            return \"input-\" + this.id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdCheckbox.prototype, \"required\", {\n        /**\n         * Whether the checkbox is required.\n         * @return {?}\n         */\n        get: function () { return this._required; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._required = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdCheckbox.prototype, \"align\", {\n        /**\n         * Whether or not the checkbox should appear before or after the label.\n         * @deprecated\n         * @return {?}\n         */\n        get: function () {\n            // align refers to the checkbox relative to the label, while labelPosition refers to the\n            // label relative to the checkbox. As such, they are inverted.\n            return this.labelPosition == 'after' ? 'start' : 'end';\n        },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) {\n            this.labelPosition = (v == 'start') ? 'after' : 'before';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdCheckbox.prototype, \"disabled\", {\n        /**\n         * Whether the checkbox is disabled.\n         * @return {?}\n         */\n        get: function () { return this._disabled; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._disabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdCheckbox.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        this._focusedSubscription = this._focusOriginMonitor\n            .monitor(this._inputElement.nativeElement, this._renderer, false)\n            .subscribe(function (focusOrigin) {\n            if (!_this._focusedRipple && (focusOrigin === 'keyboard' || focusOrigin === 'program')) {\n                _this._focusedRipple = _this._ripple.launch(0, 0, { persistent: true, centered: true });\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MdCheckbox.prototype.ngOnDestroy = function () {\n        this._focusOriginMonitor.stopMonitoring(this._inputElement.nativeElement);\n    };\n    Object.defineProperty(MdCheckbox.prototype, \"checked\", {\n        /**\n         * Whether the checkbox is checked. Note that setting `checked` will immediately set\n         * `indeterminate` to false.\n         * @return {?}\n         */\n        get: function () {\n            return this._checked;\n        },\n        /**\n         * @param {?} checked\n         * @return {?}\n         */\n        set: function (checked) {\n            var _this = this;\n            if (checked != this.checked) {\n                if (this._indeterminate) {\n                    Promise.resolve().then(function () {\n                        _this._indeterminate = false;\n                        _this.indeterminateChange.emit(_this._indeterminate);\n                    });\n                }\n                this._checked = checked;\n                this._changeDetectorRef.markForCheck();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdCheckbox.prototype, \"indeterminate\", {\n        /**\n         * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n         * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n         * checkable items. Note that whenever `checked` is set, indeterminate is immediately set to\n         * false. This differs from the web platform in that indeterminate state on native\n         * checkboxes is only remove when the user manually checks the checkbox (rather than setting the\n         * `checked` property programmatically). However, we feel that this behavior is more accommodating\n         * to the way consumers would envision using this component.\n         * @return {?}\n         */\n        get: function () {\n            return this._indeterminate;\n        },\n        /**\n         * @param {?} indeterminate\n         * @return {?}\n         */\n        set: function (indeterminate) {\n            var /** @type {?} */ changed = indeterminate != this._indeterminate;\n            this._indeterminate = indeterminate;\n            if (changed) {\n                if (this._indeterminate) {\n                    this._transitionCheckState(TransitionCheckState.Indeterminate);\n                }\n                else {\n                    this._transitionCheckState(this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n                }\n                this.indeterminateChange.emit(this._indeterminate);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdCheckbox.prototype, \"color\", {\n        /**\n         * The color of the button. Can be `primary`, `accent`, or `warn`.\n         * @return {?}\n         */\n        get: function () { return this._color; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._updateColor(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} newColor\n     * @return {?}\n     */\n    MdCheckbox.prototype._updateColor = function (newColor) {\n        this._setElementColor(this._color, false);\n        this._setElementColor(newColor, true);\n        this._color = newColor;\n    };\n    /**\n     * @param {?} color\n     * @param {?} isAdd\n     * @return {?}\n     */\n    MdCheckbox.prototype._setElementColor = function (color, isAdd) {\n        if (color != null && color != '') {\n            this._renderer.setElementClass(this._elementRef.nativeElement, \"mat-\" + color, isAdd);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdCheckbox.prototype._isRippleDisabled = function () {\n        return this.disableRipple || this.disabled;\n    };\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value Value to be set to the model.\n     * @return {?}\n     */\n    MdCheckbox.prototype.writeValue = function (value) {\n        this.checked = !!value;\n    };\n    /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Function to be called on change.\n     * @return {?}\n     */\n    MdCheckbox.prototype.registerOnChange = function (fn) {\n        this._controlValueAccessorChangeFn = fn;\n    };\n    /**\n     * Registers a callback to be triggered when the control has been touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be triggered when the checkbox is touched.\n     * @return {?}\n     */\n    MdCheckbox.prototype.registerOnTouched = function (fn) {\n        this.onTouched = fn;\n    };\n    /**\n     * Sets the checkbox's disabled state. Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled Whether the checkbox should be disabled.\n     * @return {?}\n     */\n    MdCheckbox.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    /**\n     * @param {?} newState\n     * @return {?}\n     */\n    MdCheckbox.prototype._transitionCheckState = function (newState) {\n        var /** @type {?} */ oldState = this._currentCheckState;\n        var /** @type {?} */ renderer = this._renderer;\n        var /** @type {?} */ elementRef = this._elementRef;\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            renderer.setElementClass(elementRef.nativeElement, this._currentAnimationClass, false);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            renderer.setElementClass(elementRef.nativeElement, this._currentAnimationClass, true);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdCheckbox.prototype._emitChangeEvent = function () {\n        var /** @type {?} */ event = new MdCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    };\n    /**\n     * Informs the component when we lose focus in order to style accordingly\n     * @return {?}\n     */\n    MdCheckbox.prototype._onInputBlur = function () {\n        this._removeFocusedRipple();\n        this.onTouched();\n    };\n    /**\n     * Toggles the `checked` state of the checkbox.\n     * @return {?}\n     */\n    MdCheckbox.prototype.toggle = function () {\n        this.checked = !this.checked;\n    };\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param {?} event\n     * @return {?}\n     */\n    MdCheckbox.prototype._onInputClick = function (event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n        this._removeFocusedRipple();\n        if (!this.disabled) {\n            this.toggle();\n            this._transitionCheckState(this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n    };\n    /**\n     * Focuses the checkbox.\n     * @return {?}\n     */\n    MdCheckbox.prototype.focus = function () {\n        this._focusOriginMonitor.focusVia(this._inputElement.nativeElement, this._renderer, 'program');\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdCheckbox.prototype._onInteractionEvent = function (event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    };\n    /**\n     * @param {?} oldState\n     * @param {?} newState\n     * @return {?}\n     */\n    MdCheckbox.prototype._getAnimationClassForCheckStateTransition = function (oldState, newState) {\n        var /** @type {?} */ animSuffix;\n        switch (oldState) {\n            case TransitionCheckState.Init:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === TransitionCheckState.Checked) {\n                    animSuffix = 'unchecked-checked';\n                }\n                else if (newState == TransitionCheckState.Indeterminate) {\n                    animSuffix = 'unchecked-indeterminate';\n                }\n                else {\n                    return '';\n                }\n                break;\n            case TransitionCheckState.Unchecked:\n                animSuffix = newState === TransitionCheckState.Checked ?\n                    'unchecked-checked' : 'unchecked-indeterminate';\n                break;\n            case TransitionCheckState.Checked:\n                animSuffix = newState === TransitionCheckState.Unchecked ?\n                    'checked-unchecked' : 'checked-indeterminate';\n                break;\n            case TransitionCheckState.Indeterminate:\n                animSuffix = newState === TransitionCheckState.Checked ?\n                    'indeterminate-checked' : 'indeterminate-unchecked';\n        }\n        return \"mat-checkbox-anim-\" + animSuffix;\n    };\n    /**\n     * Fades out the focused state ripple.\n     * @return {?}\n     */\n    MdCheckbox.prototype._removeFocusedRipple = function () {\n        if (this._focusedRipple) {\n            this._focusedRipple.fadeOut();\n            this._focusedRipple = null;\n        }\n    };\n    return MdCheckbox;\n}());\nMdCheckbox.decorators = [\n    { type: Component, args: [{ selector: 'md-checkbox, mat-checkbox',\n                template: \"<label class=\\\"mat-checkbox-layout\\\" #label> <div class=\\\"mat-checkbox-inner-container\\\"> <input #input class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\" [id]=\\\"inputId\\\" [required]=\\\"required\\\" [checked]=\\\"checked\\\" [value]=\\\"value\\\" [disabled]=\\\"disabled\\\" [name]=\\\"name\\\" [tabIndex]=\\\"tabIndex\\\" [indeterminate]=\\\"indeterminate\\\" [attr.aria-label]=\\\"ariaLabel\\\" [attr.aria-labelledby]=\\\"ariaLabelledby\\\" (blur)=\\\"_onInputBlur()\\\" (change)=\\\"_onInteractionEvent($event)\\\" (click)=\\\"_onInputClick($event)\\\"> <div md-ripple *ngIf=\\\"!_isRippleDisabled()\\\" class=\\\"mat-checkbox-ripple\\\" [mdRippleTrigger]=\\\"label\\\" [mdRippleCentered]=\\\"true\\\"></div> <div class=\\\"mat-checkbox-frame\\\"></div> <div class=\\\"mat-checkbox-background\\\"> <svg version=\\\"1.1\\\" class=\\\"mat-checkbox-checkmark\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" xml:space=\\\"preserve\\\"> <path class=\\\"mat-checkbox-checkmark-path\\\" fill=\\\"none\\\" stroke=\\\"white\\\" d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/> </svg> <!-- Element for rendering the indeterminate state checkbox. --> <div class=\\\"mat-checkbox-mixedmark\\\"></div> </div> </div> <span class=\\\"mat-checkbox-label\\\"> <ng-content></ng-content> </span> </label> \",\n                styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.91026}50%{animation-timing-function:cubic-bezier(0,0,.2,.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0,0,0,1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(.4,0,1,1);stroke-dashoffset:0}to{stroke-dashoffset:-22.91026}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0,0,.2,.1);opacity:1;transform:rotate(0)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(.14,0,0,1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0,0,.2,.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(.14,0,0,1);opacity:1;transform:rotate(0)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}100%,32.8%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-checkmark,.mat-checkbox-frame{bottom:0;left:0;position:absolute;right:0;top:0}.mat-checkbox-checkmark,.mat-checkbox-mixedmark{width:calc(100% - 4px)}.mat-checkbox-background,.mat-checkbox-frame{border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-checkbox-label{cursor:pointer}.mat-checkbox-layout{cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex}.mat-checkbox-inner-container{display:inline-block;height:20px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:20px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-layout .mat-checkbox-label{line-height:24px}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0,0,.2,.1);border-width:2px;border-style:solid}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0,0,.2,.1),opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-checkbox-checkmark{width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.91026;stroke-dasharray:22.91026;stroke-width:2.66667px}.mat-checkbox-mixedmark{height:2px;opacity:0;transform:scaleX(0) rotate(0)}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0s mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0s mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0s mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0s mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0s mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0s mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0s mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0s mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:.5s linear 0s mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:.5s linear 0s mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0s mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:.3s linear 0s mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox-ripple{position:absolute;left:-15px;top:-15px;right:-15px;bottom:-15px;border-radius:50%;z-index:1;pointer-events:none} /*# sourceMappingURL=checkbox.css.map */ \"],\n                host: {\n                    '[class.mat-checkbox]': 'true',\n                    '[class.mat-checkbox-indeterminate]': 'indeterminate',\n                    '[class.mat-checkbox-checked]': 'checked',\n                    '[class.mat-checkbox-disabled]': 'disabled',\n                    '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n                },\n                providers: [MD_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCheckbox.ctorParameters = function () { return [\n    { type: Renderer, },\n    { type: ElementRef, },\n    { type: ChangeDetectorRef, },\n    { type: FocusOriginMonitor, },\n]; };\nMdCheckbox.propDecorators = {\n    'ariaLabel': [{ type: Input, args: ['aria-label',] },],\n    'ariaLabelledby': [{ type: Input, args: ['aria-labelledby',] },],\n    'id': [{ type: Input },],\n    'disableRipple': [{ type: Input },],\n    'required': [{ type: Input },],\n    'align': [{ type: Input },],\n    'labelPosition': [{ type: Input },],\n    'disabled': [{ type: Input },],\n    'tabIndex': [{ type: Input },],\n    'name': [{ type: Input },],\n    'change': [{ type: Output },],\n    'indeterminateChange': [{ type: Output },],\n    'value': [{ type: Input },],\n    '_inputElement': [{ type: ViewChild, args: ['input',] },],\n    '_ripple': [{ type: ViewChild, args: [MdRipple,] },],\n    'checked': [{ type: Input },],\n    'indeterminate': [{ type: Input },],\n    'color': [{ type: Input },],\n};\nvar MdCheckboxModule = (function () {\n    function MdCheckboxModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdCheckboxModule.forRoot = function () {\n        return {\n            ngModule: MdCheckboxModule,\n            providers: []\n        };\n    };\n    return MdCheckboxModule;\n}());\nMdCheckboxModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, MdRippleModule, CompatibilityModule],\n                exports: [MdCheckbox, CompatibilityModule],\n                declarations: [MdCheckbox],\n                providers: [FocusOriginMonitor]\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCheckboxModule.ctorParameters = function () { return []; };\n/**\n * Provider Expression that allows md-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * \\@docs-private\n */\nvar MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return MdRadioGroup; }),\n    multi: true\n};\nvar _uniqueIdCounter$2 = 0;\n/**\n * Change event object emitted by MdRadio and MdRadioGroup.\n */\nvar MdRadioChange = (function () {\n    function MdRadioChange() {\n    }\n    return MdRadioChange;\n}());\n/**\n * A group of radio buttons. May contain one or more `<md-radio-button>` elements.\n */\nvar MdRadioGroup = (function () {\n    function MdRadioGroup() {\n        this._value = null;\n        this._name = \"md-radio-group-\" + _uniqueIdCounter$2++;\n        this._disabled = false;\n        this._selected = null;\n        this._isInitialized = false;\n        /** The method to be called in order to update ngModel */\n        this._controlValueAccessorChangeFn = function (value) { };\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * \\@docs-private\n         */\n        this.onTouched = function () { };\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n        /** Child radio buttons. */\n        this._radios = null;\n        /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n        this.labelPosition = 'after';\n    }\n    Object.defineProperty(MdRadioGroup.prototype, \"name\", {\n        /**\n         * Name of the radio button group. All radio buttons inside this group will use this name.\n         * @return {?}\n         */\n        get: function () { return this._name; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._name = value;\n            this._updateRadioButtonNames();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdRadioGroup.prototype, \"align\", {\n        /**\n         * Alignment of the radio-buttons relative to their labels. Can be 'before' or 'after'.\n         * @deprecated\n         * @return {?}\n         */\n        get: function () {\n            // align refers to the checkbox relative to the label, while labelPosition refers to the\n            // label relative to the checkbox. As such, they are inverted.\n            return this.labelPosition == 'after' ? 'start' : 'end';\n        },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) {\n            this.labelPosition = (v == 'start') ? 'after' : 'before';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdRadioGroup.prototype, \"disabled\", {\n        /**\n         * Whether the radio button is disabled.\n         * @return {?}\n         */\n        get: function () { return this._disabled; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            // The presence of *any* disabled value makes the component disabled, *except* for false.\n            this._disabled = (value != null && value !== false) ? true : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdRadioGroup.prototype, \"value\", {\n        /**\n         * Value of the radio button.\n         * @return {?}\n         */\n        get: function () { return this._value; },\n        /**\n         * @param {?} newValue\n         * @return {?}\n         */\n        set: function (newValue) {\n            if (this._value != newValue) {\n                // Set this before proceeding to ensure no circular loop occurs with selection.\n                this._value = newValue;\n                this._updateSelectedRadioFromValue();\n                this._checkSelectedRadioButton();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdRadioGroup.prototype._checkSelectedRadioButton = function () {\n        if (this.selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    };\n    Object.defineProperty(MdRadioGroup.prototype, \"selected\", {\n        /**\n         * Whether the radio button is selected.\n         * @return {?}\n         */\n        get: function () { return this._selected; },\n        /**\n         * @param {?} selected\n         * @return {?}\n         */\n        set: function (selected) {\n            this._selected = selected;\n            this.value = selected ? selected.value : null;\n            this._checkSelectedRadioButton();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     * @return {?}\n     */\n    MdRadioGroup.prototype.ngAfterContentInit = function () {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MdRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MdRadioGroup.\n        this._isInitialized = true;\n    };\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     * @return {?}\n     */\n    MdRadioGroup.prototype._touch = function () {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdRadioGroup.prototype._updateRadioButtonNames = function () {\n        var _this = this;\n        if (this._radios) {\n            this._radios.forEach(function (radio) {\n                radio.name = _this.name;\n            });\n        }\n    };\n    /**\n     * Updates the `selected` radio button from the internal _value state.\n     * @return {?}\n     */\n    MdRadioGroup.prototype._updateSelectedRadioFromValue = function () {\n        var _this = this;\n        // If the value already matches the selected radio, do nothing.\n        var /** @type {?} */ isAlreadySelected = this._selected != null && this._selected.value == this._value;\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach(function (radio) {\n                radio.checked = _this.value == radio.value;\n                if (radio.checked) {\n                    _this._selected = radio;\n                }\n            });\n        }\n    };\n    /**\n     * Dispatch change event with current selection and group value.\n     * @return {?}\n     */\n    MdRadioGroup.prototype._emitChangeEvent = function () {\n        if (this._isInitialized) {\n            var /** @type {?} */ event = new MdRadioChange();\n            event.source = this._selected;\n            event.value = this._value;\n            this.change.emit(event);\n        }\n    };\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    MdRadioGroup.prototype.writeValue = function (value) {\n        this.value = value;\n    };\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    MdRadioGroup.prototype.registerOnChange = function (fn) {\n        this._controlValueAccessorChangeFn = fn;\n    };\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    MdRadioGroup.prototype.registerOnTouched = function (fn) {\n        this.onTouched = fn;\n    };\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled Whether the control should be disabled.\n     * @return {?}\n     */\n    MdRadioGroup.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    return MdRadioGroup;\n}());\nMdRadioGroup.decorators = [\n    { type: Directive, args: [{\n                selector: 'md-radio-group, mat-radio-group',\n                providers: [MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n                host: {\n                    'role': 'radiogroup',\n                    '[class.mat-radio-group]': 'true',\n                },\n            },] },\n];\n/**\n * @nocollapse\n */\nMdRadioGroup.ctorParameters = function () { return []; };\nMdRadioGroup.propDecorators = {\n    'change': [{ type: Output },],\n    '_radios': [{ type: ContentChildren, args: [forwardRef(function () { return MdRadioButton; }),] },],\n    'name': [{ type: Input },],\n    'align': [{ type: Input },],\n    'labelPosition': [{ type: Input },],\n    'disabled': [{ type: Input },],\n    'value': [{ type: Input },],\n    'selected': [{ type: Input },],\n};\n/**\n * A radio-button. May be inside of\n */\nvar MdRadioButton = (function () {\n    /**\n     * @param {?} radioGroup\n     * @param {?} _elementRef\n     * @param {?} _renderer\n     * @param {?} _focusOriginMonitor\n     * @param {?} _radioDispatcher\n     */\n    function MdRadioButton(radioGroup, _elementRef, _renderer, _focusOriginMonitor, _radioDispatcher) {\n        var _this = this;\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._focusOriginMonitor = _focusOriginMonitor;\n        this._radioDispatcher = _radioDispatcher;\n        /** The unique ID for the radio button. */\n        this.id = \"md-radio-\" + _uniqueIdCounter$2++;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n        this._checked = false;\n        this._value = null;\n        this.radioGroup = radioGroup;\n        _radioDispatcher.listen(function (id, name) {\n            if (id != _this.id && name == _this.name) {\n                _this.checked = false;\n            }\n        });\n    }\n    Object.defineProperty(MdRadioButton.prototype, \"disableRipple\", {\n        /**\n         * Whether the ripple effect for this radio button is disabled.\n         * @return {?}\n         */\n        get: function () { return this._disableRipple; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._disableRipple = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdRadioButton.prototype, \"checked\", {\n        /**\n         * Whether this radio button is checked.\n         * @return {?}\n         */\n        get: function () {\n            return this._checked;\n        },\n        /**\n         * @param {?} newCheckedState\n         * @return {?}\n         */\n        set: function (newCheckedState) {\n            if (this._checked != newCheckedState) {\n                this._checked = newCheckedState;\n                if (newCheckedState && this.radioGroup && this.radioGroup.value != this.value) {\n                    this.radioGroup.selected = this;\n                }\n                else if (!newCheckedState && this.radioGroup && this.radioGroup.value == this.value) {\n                    // When unchecking the selected radio button, update the selected radio\n                    // property on the group.\n                    this.radioGroup.selected = null;\n                }\n                if (newCheckedState) {\n                    // Notify all radio buttons with the same name to un-check.\n                    this._radioDispatcher.notify(this.id, this.name);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdRadioButton.prototype, \"value\", {\n        /**\n         * The value of this radio button.\n         * @return {?}\n         */\n        get: function () {\n            return this._value;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._value != value) {\n                this._value = value;\n                if (this.radioGroup != null) {\n                    if (!this.checked) {\n                        // Update checked when the value changed to match the radio group's value\n                        this.checked = this.radioGroup.value == value;\n                    }\n                    if (this.checked) {\n                        this.radioGroup.selected = this;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdRadioButton.prototype, \"align\", {\n        /**\n         * Whether or not the radio-button should appear before or after the label.\n         * @deprecated\n         * @return {?}\n         */\n        get: function () {\n            // align refers to the checkbox relative to the label, while labelPosition refers to the\n            // label relative to the checkbox. As such, they are inverted.\n            return this.labelPosition == 'after' ? 'start' : 'end';\n        },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) {\n            this.labelPosition = (v == 'start') ? 'after' : 'before';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdRadioButton.prototype, \"labelPosition\", {\n        /**\n         * Whether the label should appear after or before the radio button. Defaults to 'after'\n         * @return {?}\n         */\n        get: function () {\n            return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._labelPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdRadioButton.prototype, \"disabled\", {\n        /**\n         * Whether the radio button is disabled.\n         * @return {?}\n         */\n        get: function () {\n            return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            // The presence of *any* disabled value makes the component disabled, *except* for false.\n            this._disabled = (value != null && value !== false) ? true : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdRadioButton.prototype, \"inputId\", {\n        /**\n         * ID of the native input element inside `<md-radio-button>`\n         * @return {?}\n         */\n        get: function () {\n            return this.id + \"-input\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Focuses the radio button.\n     * @return {?}\n     */\n    MdRadioButton.prototype.focus = function () {\n        this._focusOriginMonitor.focusVia(this._inputElement.nativeElement, this._renderer, 'keyboard');\n    };\n    /**\n     * @return {?}\n     */\n    MdRadioButton.prototype.ngOnInit = function () {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdRadioButton.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        this._focusOriginMonitorSubscription = this._focusOriginMonitor\n            .monitor(this._inputElement.nativeElement, this._renderer, false)\n            .subscribe(function (focusOrigin) {\n            if (focusOrigin === 'keyboard' && !_this._focusedRippleRef) {\n                _this._focusedRippleRef = _this._ripple.launch(0, 0, { persistent: true, centered: true });\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MdRadioButton.prototype.ngOnDestroy = function () {\n        this._focusOriginMonitor.stopMonitoring(this._inputElement.nativeElement);\n    };\n    /**\n     * Dispatch change event with current value.\n     * @return {?}\n     */\n    MdRadioButton.prototype._emitChangeEvent = function () {\n        var /** @type {?} */ event = new MdRadioChange();\n        event.source = this;\n        event.value = this._value;\n        this.change.emit(event);\n    };\n    /**\n     * @return {?}\n     */\n    MdRadioButton.prototype._isRippleDisabled = function () {\n        return this.disableRipple || this.disabled;\n    };\n    /**\n     * @return {?}\n     */\n    MdRadioButton.prototype._onInputBlur = function () {\n        if (this._focusedRippleRef) {\n            this._focusedRippleRef.fadeOut();\n            this._focusedRippleRef = null;\n        }\n        if (this.radioGroup) {\n            this.radioGroup._touch();\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdRadioButton.prototype._onInputClick = function (event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    };\n    /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     * @param {?} event\n     * @return {?}\n     */\n    MdRadioButton.prototype._onInputChange = function (event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        var /** @type {?} */ groupValueChanged = this.radioGroup && this.value != this.radioGroup.value;\n        this.checked = true;\n        this._emitChangeEvent();\n        if (this.radioGroup) {\n            this.radioGroup._controlValueAccessorChangeFn(this.value);\n            this.radioGroup._touch();\n            if (groupValueChanged) {\n                this.radioGroup._emitChangeEvent();\n            }\n        }\n    };\n    return MdRadioButton;\n}());\nMdRadioButton.decorators = [\n    { type: Component, args: [{ selector: 'md-radio-button, mat-radio-button',\n                template: \"<!-- TODO(jelbourn): render the radio on either side of the content --> <!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. --> <label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label> <!-- The actual 'radio' part of the control. --> <div class=\\\"mat-radio-container\\\"> <div class=\\\"mat-radio-outer-circle\\\"></div> <div class=\\\"mat-radio-inner-circle\\\"></div> <div md-ripple *ngIf=\\\"!_isRippleDisabled()\\\" class=\\\"mat-radio-ripple\\\" [mdRippleTrigger]=\\\"label\\\" [mdRippleCentered]=\\\"true\\\"></div> </div> <input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\" [id]=\\\"inputId\\\" [checked]=\\\"checked\\\" [disabled]=\\\"disabled\\\" [name]=\\\"name\\\" [attr.aria-label]=\\\"ariaLabel\\\" [attr.aria-labelledby]=\\\"ariaLabelledby\\\" (change)=\\\"_onInputChange($event)\\\" (blur)=\\\"_onInputBlur()\\\" (click)=\\\"_onInputClick($event)\\\"> <!-- The label content for radio control. --> <div class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\"> <ng-content></ng-content> </div> </label> \",\n                styles: [\".mat-radio-button{display:inline-block;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}.mat-radio-label{cursor:pointer;display:inline-flex;align-items:baseline;white-space:nowrap}.mat-radio-container{box-sizing:border-box;display:inline-block;height:20px;position:relative;width:20px;top:2px}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;transform:scale(0);width:20px}.mat-radio-checked .mat-radio-inner-circle{transform:scale(.5)}.mat-radio-label-content{display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-ripple{position:absolute;left:-15px;top:-15px;right:-15px;bottom:-15px;border-radius:50%;z-index:1;pointer-events:none} /*# sourceMappingURL=radio.css.map */ \"],\n                encapsulation: ViewEncapsulation.None,\n                host: {\n                    '[class.mat-radio-button]': 'true',\n                    '[class.mat-radio-checked]': 'checked',\n                    '[class.mat-radio-disabled]': 'disabled',\n                    '[attr.id]': 'id',\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdRadioButton.ctorParameters = function () { return [\n    { type: MdRadioGroup, decorators: [{ type: Optional },] },\n    { type: ElementRef, },\n    { type: Renderer, },\n    { type: FocusOriginMonitor, },\n    { type: UniqueSelectionDispatcher, },\n]; };\nMdRadioButton.propDecorators = {\n    'id': [{ type: Input },],\n    'name': [{ type: Input },],\n    'ariaLabel': [{ type: Input, args: ['aria-label',] },],\n    'ariaLabelledby': [{ type: Input, args: ['aria-labelledby',] },],\n    'disableRipple': [{ type: Input },],\n    'checked': [{ type: Input },],\n    'value': [{ type: Input },],\n    'align': [{ type: Input },],\n    'labelPosition': [{ type: Input },],\n    'disabled': [{ type: Input },],\n    'change': [{ type: Output },],\n    '_ripple': [{ type: ViewChild, args: [MdRipple,] },],\n    '_inputElement': [{ type: ViewChild, args: ['input',] },],\n};\nvar MdRadioModule = (function () {\n    function MdRadioModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdRadioModule.forRoot = function () {\n        return {\n            ngModule: MdRadioModule,\n            providers: [],\n        };\n    };\n    return MdRadioModule;\n}());\nMdRadioModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, MdRippleModule, CompatibilityModule],\n                exports: [MdRadioGroup, MdRadioButton, CompatibilityModule],\n                providers: [UNIQUE_SELECTION_DISPATCHER_PROVIDER, VIEWPORT_RULER_PROVIDER, FocusOriginMonitor],\n                declarations: [MdRadioGroup, MdRadioButton],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdRadioModule.ctorParameters = function () { return []; };\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nvar ListKeyManager = (function () {\n    /**\n     * @param {?} _items\n     */\n    function ListKeyManager(_items) {\n        this._items = _items;\n        this._activeItemIndex = null;\n        this._tabOut = new Subject();\n        this._wrap = false;\n    }\n    /**\n     * Turns on wrapping mode, which ensures that the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     *\n     * @return {?} The ListKeyManager that the method was called on.\n     */\n    ListKeyManager.prototype.withWrap = function () {\n        this._wrap = true;\n        return this;\n    };\n    /**\n     * Sets the active item to the item at the index specified.\n     *\n     * @param {?} index The index of the item to be set as active.\n     * @return {?}\n     */\n    ListKeyManager.prototype.setActiveItem = function (index) {\n        this._activeItemIndex = index;\n        this._activeItem = this._items.toArray()[index];\n    };\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param {?} event Keyboard event to be used for determining which element should be active.\n     * @return {?}\n     */\n    ListKeyManager.prototype.onKeydown = function (event) {\n        switch (event.keyCode) {\n            case DOWN_ARROW:\n                this.setNextItemActive();\n                break;\n            case UP_ARROW:\n                this.setPreviousItemActive();\n                break;\n            case HOME:\n                this.setFirstItemActive();\n                break;\n            case END:\n                this.setLastItemActive();\n                break;\n            case TAB:\n                // Note that we shouldn't prevent the default action on tab.\n                this._tabOut.next(null);\n                return;\n            default:\n                return;\n        }\n        event.preventDefault();\n    };\n    Object.defineProperty(ListKeyManager.prototype, \"activeItemIndex\", {\n        /**\n         * Returns the index of the currently active item.\n         * @return {?}\n         */\n        get: function () {\n            return this._activeItemIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ListKeyManager.prototype, \"activeItem\", {\n        /**\n         * Returns the currently active item.\n         * @return {?}\n         */\n        get: function () {\n            return this._activeItem;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the active item to the first enabled item in the list.\n     * @return {?}\n     */\n    ListKeyManager.prototype.setFirstItemActive = function () {\n        this._setActiveItemByIndex(0, 1);\n    };\n    /**\n     * Sets the active item to the last enabled item in the list.\n     * @return {?}\n     */\n    ListKeyManager.prototype.setLastItemActive = function () {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    };\n    /**\n     * Sets the active item to the next enabled item in the list.\n     * @return {?}\n     */\n    ListKeyManager.prototype.setNextItemActive = function () {\n        this._activeItemIndex === null ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    };\n    /**\n     * Sets the active item to a previous enabled item in the list.\n     * @return {?}\n     */\n    ListKeyManager.prototype.setPreviousItemActive = function () {\n        this._activeItemIndex === null && this._wrap ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    };\n    /**\n     * Allows setting of the activeItemIndex without any other effects.\n     * @param {?} index The new activeItemIndex.\n     * @return {?}\n     */\n    ListKeyManager.prototype.updateActiveItemIndex = function (index) {\n        this._activeItemIndex = index;\n    };\n    Object.defineProperty(ListKeyManager.prototype, \"tabOut\", {\n        /**\n         * Observable that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         * @return {?}\n         */\n        get: function () {\n            return this._tabOut.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     * @param {?} delta\n     * @param {?=} items\n     * @return {?}\n     */\n    ListKeyManager.prototype._setActiveItemByDelta = function (delta, items) {\n        if (items === void 0) { items = this._items.toArray(); }\n        this._wrap ? this._setActiveInWrapMode(delta, items)\n            : this._setActiveInDefaultMode(delta, items);\n    };\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     * @param {?} delta\n     * @param {?} items\n     * @return {?}\n     */\n    ListKeyManager.prototype._setActiveInWrapMode = function (delta, items) {\n        // when active item would leave menu, wrap to beginning or end\n        this._activeItemIndex =\n            (this._activeItemIndex + delta + items.length) % items.length;\n        // skip all disabled menu items recursively until an enabled one is reached\n        if (items[this._activeItemIndex].disabled) {\n            this._setActiveInWrapMode(delta, items);\n        }\n        else {\n            this.setActiveItem(this._activeItemIndex);\n        }\n    };\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     * @param {?} delta\n     * @param {?} items\n     * @return {?}\n     */\n    ListKeyManager.prototype._setActiveInDefaultMode = function (delta, items) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta, items);\n    };\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     * @param {?} index\n     * @param {?} fallbackDelta\n     * @param {?=} items\n     * @return {?}\n     */\n    ListKeyManager.prototype._setActiveItemByIndex = function (index, fallbackDelta, items) {\n        if (items === void 0) { items = this._items.toArray(); }\n        if (!items[index]) {\n            return;\n        }\n        while (items[index].disabled) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    };\n    return ListKeyManager;\n}());\nvar FocusKeyManager = (function (_super) {\n    __extends(FocusKeyManager, _super);\n    /**\n     * @param {?} items\n     */\n    function FocusKeyManager(items) {\n        return _super.call(this, items) || this;\n    }\n    /**\n     * This method sets the active item to the item at the specified index.\n     * It also adds focuses the newly active item.\n     * @param {?} index\n     * @return {?}\n     */\n    FocusKeyManager.prototype.setActiveItem = function (index) {\n        _super.prototype.setActiveItem.call(this, index);\n        this.activeItem.focus();\n    };\n    return FocusKeyManager;\n}(ListKeyManager));\n/**\n * The following are all the animations for the md-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material md-select animation.\n */\n/**\n * This animation shrinks the placeholder text to 75% of its normal size and translates\n * it to either the top left corner (ltr) or top right corner (rtl) of the trigger,\n * depending on the text direction of the application.\n */\nvar transformPlaceholder = trigger('transformPlaceholder', [\n    state('floating-ltr', style({\n        top: '-22px',\n        left: '-2px',\n        transform: \"scale(0.75)\"\n    })),\n    state('floating-rtl', style({\n        top: '-22px',\n        left: '2px',\n        transform: \"scale(0.75)\"\n    })),\n    transition('* => *', animate(\"400ms cubic-bezier(0.25, 0.8, 0.25, 1)\"))\n]);\n/**\n * This animation transforms the select's overlay panel on and off the page.\n *\n * When the panel is attached to the DOM, it expands its width 32px, scales it up to\n * 100% on the Y axis, fades in its border, and translates slightly up and to the\n * side to ensure the option text correctly overlaps the trigger text.\n *\n * When the panel is removed from the DOM, it simply fades out linearly.\n */\nvar transformPanel = trigger('transformPanel', [\n    state('showing', style({\n        opacity: 1,\n        minWidth: 'calc(100% + 32px)',\n        transform: \"scaleY(1)\"\n    })),\n    transition('void => *', [\n        style({\n            opacity: 0,\n            minWidth: '100%',\n            transform: \"scaleY(0)\"\n        }),\n        animate(\"150ms cubic-bezier(0.25, 0.8, 0.25, 1)\")\n    ]),\n    transition('* => void', [\n        animate('250ms 100ms linear', style({ opacity: 0 }))\n    ])\n]);\n/**\n * This animation fades in the background color and text content of the\n * select's options. It is time delayed to occur 100ms after the overlay\n * panel has transformed in.\n */\nvar fadeInContent = trigger('fadeInContent', [\n    state('showing', style({ opacity: 1 })),\n    transition('void => showing', [\n        style({ opacity: 0 }),\n        animate(\"150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)\")\n    ])\n]);\n/**\n * Exception thrown when attempting to change a select's `multiple` option after initialization.\n * \\@docs-private\n */\nvar MdSelectDynamicMultipleError = (function (_super) {\n    __extends(MdSelectDynamicMultipleError, _super);\n    function MdSelectDynamicMultipleError() {\n        return _super.call(this, 'Cannot change `multiple` mode of select after initialization.') || this;\n    }\n    return MdSelectDynamicMultipleError;\n}(MdError));\n/**\n * Exception thrown when attempting to assign a non-array value to a select in `multiple` mode.\n * Note that `undefined` and `null` are still valid values to allow for resetting the value.\n * \\@docs-private\n */\nvar MdSelectNonArrayValueError = (function (_super) {\n    __extends(MdSelectNonArrayValueError, _super);\n    function MdSelectNonArrayValueError() {\n        return _super.call(this, 'Cannot assign truthy non-array value to select in `multiple` mode.') || this;\n    }\n    return MdSelectNonArrayValueError;\n}(MdError));\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n/** The fixed height of every option element. */\nvar SELECT_OPTION_HEIGHT = 48;\n/** The max height of the select's overlay panel */\nvar SELECT_PANEL_MAX_HEIGHT = 256;\n/** The max number of options visible at once in the select panel. */\nvar SELECT_MAX_OPTIONS_DISPLAYED = 5;\n/** The fixed height of the select's trigger element. */\nvar SELECT_TRIGGER_HEIGHT = 30;\n/**\n * Must adjust for the difference in height between the option and the trigger,\n * so the text will align on the y axis.\n * (SELECT_OPTION_HEIGHT (48) - SELECT_TRIGGER_HEIGHT (30)) / 2 = 9\n */\nvar SELECT_OPTION_HEIGHT_ADJUSTMENT = 9;\n/** The panel's padding on the x-axis */\nvar SELECT_PANEL_PADDING_X = 16;\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * (SELECT_PADDING * 1.75) + 20 = 48\n * The padding is multiplied by 1.75 because the checkbox's margin is half the padding, and\n * the browser adds ~4px, because we're using inline elements.\n * The checkbox width is 20px.\n */\nvar SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.75 + 20;\n/**\n * The panel's padding on the y-axis. This padding indicates there are more\n * options available if you scroll.\n */\nvar SELECT_PANEL_PADDING_Y = 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nvar SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Change event object that is emitted when the select value has changed.\n */\nvar MdSelectChange = (function () {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    function MdSelectChange(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n    return MdSelectChange;\n}());\nvar MdSelect = (function () {\n    /**\n     * @param {?} _element\n     * @param {?} _renderer\n     * @param {?} _viewportRuler\n     * @param {?} _changeDetectorRef\n     * @param {?} _dir\n     * @param {?} _control\n     * @param {?} tabIndex\n     */\n    function MdSelect(_element, _renderer, _viewportRuler, _changeDetectorRef, _dir, _control, tabIndex) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._control = _control;\n        this._panelOpen = false;\n        this._required = false;\n        this._disabled = false;\n        this._scrollTop = 0;\n        this._multiple = false;\n        this._placeholderState = '';\n        /** View -> model callback called when value changes */\n        this._onChange = function (value) { };\n        /** View -> model callback called when select has been touched */\n        this._onTouched = function () { };\n        /** The IDs of child options to be passed to the aria-owns attribute. */\n        this._optionIds = '';\n        /** The value of the select panel's transform-origin property. */\n        this._transformOrigin = 'top';\n        /** Whether the panel's animation is done. */\n        this._panelDoneAnimating = false;\n        /**\n         * The x-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text when\n         * the panel opens. Will change based on LTR or RTL text direction.\n         */\n        this._offsetX = 0;\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        this._floatPlaceholder = 'auto';\n        /** Aria label of the select. If not specified, the placeholder will be used as label. */\n        this.ariaLabel = '';\n        /** Input that can be used to specify the `aria-labelledby` attribute. */\n        this.ariaLabelledby = '';\n        /** Event emitted when the select has been opened. */\n        this.onOpen = new EventEmitter();\n        /** Event emitted when the select has been closed. */\n        this.onClose = new EventEmitter();\n        /** Event emitted when the selected value has been changed by the user. */\n        this.change = new EventEmitter();\n        if (this._control) {\n            this._control.valueAccessor = this;\n        }\n        this._tabIndex = parseInt(tabIndex) || 0;\n    }\n    Object.defineProperty(MdSelect.prototype, \"placeholder\", {\n        /**\n         * Placeholder to be shown if no value has been selected.\n         * @return {?}\n         */\n        get: function () { return this._placeholder; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            var _this = this;\n            this._placeholder = value;\n            // Must wait to record the trigger width to ensure placeholder width is included.\n            Promise.resolve(null).then(function () { return _this._triggerWidth = _this._getWidth(); });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSelect.prototype, \"disabled\", {\n        /**\n         * Whether the component is disabled.\n         * @return {?}\n         */\n        get: function () { return this._disabled; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._disabled = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSelect.prototype, \"required\", {\n        /**\n         * Whether the component is required.\n         * @return {?}\n         */\n        get: function () { return this._required; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._required = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSelect.prototype, \"multiple\", {\n        /**\n         * Whether the user should be allowed to select multiple options.\n         * @return {?}\n         */\n        get: function () { return this._multiple; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._selectionModel) {\n                throw new MdSelectDynamicMultipleError();\n            }\n            this._multiple = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSelect.prototype, \"floatPlaceholder\", {\n        /**\n         * Whether to float the placeholder text.\n         * @return {?}\n         */\n        get: function () { return this._floatPlaceholder; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._floatPlaceholder = value || 'auto';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSelect.prototype, \"tabIndex\", {\n        /**\n         * Tab index for the select element.\n         * @return {?}\n         */\n        get: function () { return this._disabled ? -1 : this._tabIndex; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (typeof value !== 'undefined') {\n                this._tabIndex = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSelect.prototype, \"optionSelectionChanges\", {\n        /**\n         * Combined stream of all of the child options' change events.\n         * @return {?}\n         */\n        get: function () {\n            return Observable.merge.apply(Observable, this.options.map(function (option) { return option.onSelectionChange; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdSelect.prototype.ngOnInit = function () {\n        this._selectionModel = new SelectionModel(this.multiple, null, false);\n    };\n    /**\n     * @return {?}\n     */\n    MdSelect.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this._initKeyManager();\n        this._changeSubscription = this.options.changes.startWith(null).subscribe(function () {\n            _this._resetOptions();\n            if (_this._control) {\n                // Defer setting the value in order to avoid the \"Expression\n                // has changed after it was checked\" errors from Angular.\n                Promise.resolve(null).then(function () { return _this._setSelectionByValue(_this._control.value); });\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MdSelect.prototype.ngOnDestroy = function () {\n        this._dropSubscriptions();\n        if (this._changeSubscription) {\n            this._changeSubscription.unsubscribe();\n        }\n        if (this._tabSubscription) {\n            this._tabSubscription.unsubscribe();\n        }\n    };\n    /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    MdSelect.prototype.toggle = function () {\n        this.panelOpen ? this.close() : this.open();\n    };\n    /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    MdSelect.prototype.open = function () {\n        if (this.disabled || !this.options.length) {\n            return;\n        }\n        this._calculateOverlayPosition();\n        this._placeholderState = this._floatPlaceholderState();\n        this._panelOpen = true;\n    };\n    /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    MdSelect.prototype.close = function () {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            if (this._selectionModel.isEmpty()) {\n                this._placeholderState = '';\n            }\n            this._focusHost();\n        }\n    };\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    MdSelect.prototype.writeValue = function (value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    };\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    MdSelect.prototype.registerOnChange = function (fn) {\n        this._onChange = fn;\n    };\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    MdSelect.prototype.registerOnTouched = function (fn) {\n        this._onTouched = fn;\n    };\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    MdSelect.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    Object.defineProperty(MdSelect.prototype, \"panelOpen\", {\n        /**\n         * Whether or not the overlay panel is open.\n         * @return {?}\n         */\n        get: function () {\n            return this._panelOpen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSelect.prototype, \"selected\", {\n        /**\n         * The currently selected option.\n         * @return {?}\n         */\n        get: function () {\n            return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSelect.prototype, \"triggerValue\", {\n        /**\n         * The value displayed in the trigger.\n         * @return {?}\n         */\n        get: function () {\n            if (this._multiple) {\n                var /** @type {?} */ selectedOptions = this._selectionModel.selected.map(function (option) { return option.viewValue; });\n                if (this._isRtl()) {\n                    selectedOptions.reverse();\n                }\n                // TODO(crisbeto): delimiter should be configurable for proper localization.\n                return selectedOptions.join(', ');\n            }\n            return this._selectionModel.selected[0].viewValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    MdSelect.prototype._isRtl = function () {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    };\n    /**\n     * The width of the trigger element. This is necessary to match\n     * the overlay width to the trigger width.\n     * @return {?}\n     */\n    MdSelect.prototype._getWidth = function () {\n        return this._getTriggerRect().width;\n    };\n    /**\n     * Ensures the panel opens if activated by the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    MdSelect.prototype._handleKeydown = function (event) {\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this.open();\n        }\n    };\n    /**\n     * When the panel element is finished transforming in (though not fading in), it\n     * emits an event and focuses an option if the panel is open.\n     * @return {?}\n     */\n    MdSelect.prototype._onPanelDone = function () {\n        if (this.panelOpen) {\n            this._focusCorrectOption();\n            this.onOpen.emit();\n        }\n        else {\n            this.onClose.emit();\n            this._panelDoneAnimating = false;\n        }\n    };\n    /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     * @return {?}\n     */\n    MdSelect.prototype._onFadeInDone = function () {\n        this._panelDoneAnimating = this.panelOpen;\n    };\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    MdSelect.prototype._onBlur = function () {\n        if (!this.panelOpen) {\n            this._onTouched();\n        }\n    };\n    /**\n     * Sets the scroll position of the scroll container. This must be called after\n     * the overlay pane is attached or the scroll container element will not yet be\n     * present in the DOM.\n     * @return {?}\n     */\n    MdSelect.prototype._setScrollTop = function () {\n        var /** @type {?} */ scrollContainer = this.overlayDir.overlayRef.overlayElement.querySelector('.mat-select-panel');\n        scrollContainer.scrollTop = this._scrollTop;\n    };\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @param {?} value\n     * @return {?}\n     */\n    MdSelect.prototype._setSelectionByValue = function (value) {\n        var _this = this;\n        var /** @type {?} */ isArray = Array.isArray(value);\n        if (this.multiple && value && !isArray) {\n            throw new MdSelectNonArrayValueError();\n        }\n        if (isArray) {\n            this._clearSelection();\n            value.forEach(function (currentValue) { return _this._selectValue(currentValue); });\n            this._sortValues();\n        }\n        else if (!this._selectValue(value)) {\n            this._clearSelection();\n        }\n        this._setValueWidth();\n        if (this._selectionModel.isEmpty()) {\n            this._placeholderState = '';\n        }\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * Finds and selects and option based on its value.\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    MdSelect.prototype._selectValue = function (value) {\n        var /** @type {?} */ correspondingOption = this.options.find(function (option) { return option.value === value; });\n        if (correspondingOption) {\n            correspondingOption.select();\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    };\n    /**\n     * Clears the select trigger and deselects every option in the list.\n     * @param {?=} skip Option that should not be deselected.\n     * @return {?}\n     */\n    MdSelect.prototype._clearSelection = function (skip) {\n        this._selectionModel.clear();\n        this.options.forEach(function (option) {\n            if (option !== skip) {\n                option.deselect();\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MdSelect.prototype._getTriggerRect = function () {\n        return this.trigger.nativeElement.getBoundingClientRect();\n    };\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @return {?}\n     */\n    MdSelect.prototype._initKeyManager = function () {\n        var _this = this;\n        this._keyManager = new FocusKeyManager(this.options);\n        this._tabSubscription = this._keyManager.tabOut.subscribe(function () { return _this.close(); });\n    };\n    /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @return {?}\n     */\n    MdSelect.prototype._resetOptions = function () {\n        this._dropSubscriptions();\n        this._listenToOptions();\n        this._setOptionIds();\n        this._setOptionMultiple();\n    };\n    /**\n     * Listens to user-generated selection events on each option.\n     * @return {?}\n     */\n    MdSelect.prototype._listenToOptions = function () {\n        var _this = this;\n        this._optionSubscription = this.optionSelectionChanges\n            .filter(function (event) { return event.isUserInput; })\n            .subscribe(function (event) {\n            _this._onSelect(event.source);\n            _this._setValueWidth();\n            if (!_this.multiple) {\n                _this.close();\n            }\n        });\n    };\n    /**\n     * Invoked when an option is clicked.\n     * @param {?} option\n     * @return {?}\n     */\n    MdSelect.prototype._onSelect = function (option) {\n        var /** @type {?} */ wasSelected = this._selectionModel.isSelected(option);\n        if (this.multiple) {\n            this._selectionModel.toggle(option);\n            wasSelected ? option.deselect() : option.select();\n            this._sortValues();\n        }\n        else {\n            this._clearSelection(option);\n            this._selectionModel.select(option);\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n    };\n    /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     * @return {?}\n     */\n    MdSelect.prototype._sortValues = function () {\n        var _this = this;\n        if (this._multiple) {\n            this._selectionModel.clear();\n            this.options.forEach(function (option) {\n                if (option.selected) {\n                    _this._selectionModel.select(option);\n                }\n            });\n        }\n    };\n    /**\n     * Unsubscribes from all option subscriptions.\n     * @return {?}\n     */\n    MdSelect.prototype._dropSubscriptions = function () {\n        if (this._optionSubscription) {\n            this._optionSubscription.unsubscribe();\n            this._optionSubscription = null;\n        }\n    };\n    /**\n     * Emits change event to set the model value.\n     * @return {?}\n     */\n    MdSelect.prototype._propagateChanges = function () {\n        var /** @type {?} */ valueToEmit = Array.isArray(this.selected) ?\n            this.selected.map(function (option) { return option.value; }) :\n            this.selected.value;\n        this._onChange(valueToEmit);\n        this.change.emit(new MdSelectChange(this, valueToEmit));\n    };\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @return {?}\n     */\n    MdSelect.prototype._setOptionIds = function () {\n        this._optionIds = this.options.map(function (option) { return option.id; }).join(' ');\n    };\n    /**\n     * Sets the `multiple` property on each option. The promise is necessary\n     * in order to avoid Angular errors when modifying the property after init.\n     * TODO: there should be a better way of doing this.\n     * @return {?}\n     */\n    MdSelect.prototype._setOptionMultiple = function () {\n        var _this = this;\n        if (this.multiple) {\n            Promise.resolve(null).then(function () {\n                _this.options.forEach(function (option) { return option.multiple = _this.multiple; });\n            });\n        }\n    };\n    /**\n     * Must set the width of the selected option's value programmatically\n     * because it is absolutely positioned and otherwise will not clip\n     * overflow. The selection arrow is 9px wide, add 4px of padding = 13\n     * @return {?}\n     */\n    MdSelect.prototype._setValueWidth = function () {\n        this._selectedValueWidth = this._triggerWidth - 13;\n    };\n    /**\n     * Focuses the selected item. If no option is selected, it will focus\n     * the first item instead.\n     * @return {?}\n     */\n    MdSelect.prototype._focusCorrectOption = function () {\n        if (this._selectionModel.isEmpty()) {\n            this._keyManager.setFirstItemActive();\n        }\n        else {\n            this._keyManager.setActiveItem(this._getOptionIndex(this._selectionModel.selected[0]));\n        }\n    };\n    /**\n     * Focuses the host element when the panel closes.\n     * @return {?}\n     */\n    MdSelect.prototype._focusHost = function () {\n        this._renderer.invokeElementMethod(this._element.nativeElement, 'focus');\n    };\n    /**\n     * Gets the index of the provided option in the option list.\n     * @param {?} option\n     * @return {?}\n     */\n    MdSelect.prototype._getOptionIndex = function (option) {\n        return this.options.reduce(function (result, current, index) {\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    };\n    /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @return {?}\n     */\n    MdSelect.prototype._calculateOverlayPosition = function () {\n        this._offsetX = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X : SELECT_PANEL_PADDING_X;\n        if (!this._isRtl()) {\n            this._offsetX *= -1;\n        }\n        var /** @type {?} */ panelHeight = Math.min(this.options.length * SELECT_OPTION_HEIGHT, SELECT_PANEL_MAX_HEIGHT);\n        var /** @type {?} */ scrollContainerHeight = this.options.length * SELECT_OPTION_HEIGHT;\n        // The farthest the panel can be scrolled before it hits the bottom\n        var /** @type {?} */ maxScroll = scrollContainerHeight - panelHeight;\n        if (this._selectionModel.hasValue()) {\n            var /** @type {?} */ selectedIndex = this._getOptionIndex(this._selectionModel.selected[0]);\n            // We must maintain a scroll buffer so the selected option will be scrolled to the\n            // center of the overlay panel rather than the top.\n            var /** @type {?} */ scrollBuffer = panelHeight / 2;\n            this._scrollTop = this._calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll);\n            this._offsetY = this._calculateOverlayOffset(selectedIndex, scrollBuffer, maxScroll);\n        }\n        else {\n            // If no option is selected, the panel centers on the first option. In this case,\n            // we must only adjust for the height difference between the option element\n            // and the trigger element, then multiply it by -1 to ensure the panel moves\n            // in the correct direction up the page.\n            this._offsetY = (SELECT_OPTION_HEIGHT - SELECT_TRIGGER_HEIGHT) / 2 * -1;\n        }\n        this._checkOverlayWithinViewport(maxScroll);\n    };\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    MdSelect.prototype._calculateOverlayScroll = function (selectedIndex, scrollBuffer, maxScroll) {\n        var /** @type {?} */ optionOffsetFromScrollTop = SELECT_OPTION_HEIGHT * selectedIndex;\n        var /** @type {?} */ halfOptionHeight = SELECT_OPTION_HEIGHT / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        var /** @type {?} */ optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return clampValue(0, optimalScrollPosition, maxScroll);\n    };\n    /**\n     * Figures out the appropriate animation state for the placeholder.\n     * @return {?}\n     */\n    MdSelect.prototype._getPlaceholderAnimationState = function () {\n        if (this.floatPlaceholder === 'never') {\n            return '';\n        }\n        if (this.floatPlaceholder === 'always') {\n            return this._floatPlaceholderState();\n        }\n        return this._placeholderState;\n    };\n    /**\n     * Determines the CSS `visibility` of the placeholder element.\n     * @return {?}\n     */\n    MdSelect.prototype._getPlaceholderVisibility = function () {\n        return (this.floatPlaceholder !== 'never' || this._selectionModel.isEmpty()) ?\n            'visible' : 'hidden';\n    };\n    Object.defineProperty(MdSelect.prototype, \"_ariaLabel\", {\n        /**\n         * Returns the aria-label of the select component.\n         * @return {?}\n         */\n        get: function () {\n            // If an ariaLabelledby value has been set, the select should not overwrite the\n            // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n            return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    MdSelect.prototype._calculateOverlayOffset = function (selectedIndex, scrollBuffer, maxScroll) {\n        var /** @type {?} */ optionOffsetFromPanelTop;\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * SELECT_OPTION_HEIGHT;\n        }\n        else if (this._scrollTop === maxScroll) {\n            var /** @type {?} */ firstDisplayedIndex = this.options.length - SELECT_MAX_OPTIONS_DISPLAYED;\n            var /** @type {?} */ selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop =\n                selectedDisplayIndex * SELECT_OPTION_HEIGHT + SELECT_PANEL_PADDING_Y;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - SELECT_OPTION_HEIGHT / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height\n        // difference, multiplied by -1 to ensure that the overlay moves in the correct\n        // direction up the page.\n        return optionOffsetFromPanelTop * -1 - SELECT_OPTION_HEIGHT_ADJUSTMENT;\n    };\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    MdSelect.prototype._checkOverlayWithinViewport = function (maxScroll) {\n        var /** @type {?} */ viewportRect = this._viewportRuler.getViewportRect();\n        var /** @type {?} */ triggerRect = this._getTriggerRect();\n        var /** @type {?} */ topSpaceAvailable = triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        var /** @type {?} */ bottomSpaceAvailable = viewportRect.height - triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        var /** @type {?} */ panelHeightTop = Math.abs(this._offsetY);\n        var /** @type {?} */ totalPanelHeight = Math.min(this.options.length * SELECT_OPTION_HEIGHT, SELECT_PANEL_MAX_HEIGHT);\n        var /** @type {?} */ panelHeightBottom = totalPanelHeight - panelHeightTop - triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    };\n    /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    MdSelect.prototype._adjustPanelUp = function (panelHeightBottom, bottomSpaceAvailable) {\n        var /** @type {?} */ distanceBelowViewport = panelHeightBottom - bottomSpaceAvailable;\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = \"50% bottom 0px\";\n        }\n    };\n    /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    MdSelect.prototype._adjustPanelDown = function (panelHeightTop, topSpaceAvailable, maxScroll) {\n        var /** @type {?} */ distanceAboveViewport = panelHeightTop - topSpaceAvailable;\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = \"50% top 0px\";\n            return;\n        }\n    };\n    /**\n     * Sets the transform origin point based on the selected option.\n     * @return {?}\n     */\n    MdSelect.prototype._getOriginBasedOnOption = function () {\n        var /** @type {?} */ originY = Math.abs(this._offsetY) - SELECT_OPTION_HEIGHT_ADJUSTMENT + SELECT_OPTION_HEIGHT / 2;\n        return \"50% \" + originY + \"px 0px\";\n    };\n    /**\n     * Figures out the floating placeholder state value.\n     * @return {?}\n     */\n    MdSelect.prototype._floatPlaceholderState = function () {\n        return this._isRtl() ? 'floating-rtl' : 'floating-ltr';\n    };\n    return MdSelect;\n}());\nMdSelect.decorators = [\n    { type: Component, args: [{ selector: 'md-select, mat-select',\n                template: \"<div class=\\\"mat-select-trigger\\\" cdk-overlay-origin (click)=\\\"toggle()\\\" #origin=\\\"cdkOverlayOrigin\\\" #trigger> <span class=\\\"mat-select-placeholder\\\" [class.mat-floating-placeholder]=\\\"_selectionModel.hasValue()\\\" [@transformPlaceholder]=\\\"_getPlaceholderAnimationState()\\\" [style.visibility]=\\\"_getPlaceholderVisibility()\\\" [style.width.px]=\\\"_selectedValueWidth\\\"> {{ placeholder }} </span> <span class=\\\"mat-select-value\\\" *ngIf=\\\"_selectionModel.hasValue()\\\"> <span class=\\\"mat-select-value-text\\\">{{ triggerValue }}</span> </span> <span class=\\\"mat-select-arrow\\\"></span> <span class=\\\"mat-select-underline\\\"></span> </div> <ng-template cdk-connected-overlay [origin]=\\\"origin\\\" [open]=\\\"panelOpen\\\" hasBackdrop (backdropClick)=\\\"close()\\\" backdropClass=\\\"cdk-overlay-transparent-backdrop\\\" [positions]=\\\"_positions\\\" [minWidth]=\\\"_triggerWidth\\\" [offsetY]=\\\"_offsetY\\\" [offsetX]=\\\"_offsetX\\\" (attach)=\\\"_setScrollTop()\\\"> <div class=\\\"mat-select-panel\\\" [@transformPanel]=\\\"'showing'\\\" (@transformPanel.done)=\\\"_onPanelDone()\\\" (keydown)=\\\"_keyManager.onKeydown($event)\\\" [style.transformOrigin]=\\\"_transformOrigin\\\" [class.mat-select-panel-done-animating]=\\\"_panelDoneAnimating\\\"> <div class=\\\"mat-select-content\\\" [@fadeInContent]=\\\"'showing'\\\" (@fadeInContent.done)=\\\"_onFadeInDone()\\\"> <ng-content></ng-content> </div> </div> </ng-template> \",\n                styles: [\".mat-select{display:inline-block;outline:0;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}.mat-select-trigger{display:flex;align-items:center;height:30px;min-width:112px;cursor:pointer;position:relative;box-sizing:border-box;font-size:16px}[aria-disabled=true] .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-underline{position:absolute;bottom:0;left:0;right:0;height:1px}[aria-disabled=true] .mat-select-underline{background-image:linear-gradient(to right,rgba(0,0,0,.26) 0,rgba(0,0,0,.26) 33%,transparent 0);background-size:4px 1px;background-repeat:repeat-x;background-color:transparent;background-position:0 bottom}.mat-select-placeholder{position:relative;padding:0 2px;transform-origin:left top;flex-grow:1}.mat-select-placeholder.mat-floating-placeholder{top:-22px;left:-2px;text-align:left;transform:scale(.75)}[dir=rtl] .mat-select-placeholder{transform-origin:right top}[dir=rtl] .mat-select-placeholder.mat-floating-placeholder{left:2px;text-align:right}[aria-required=true] .mat-select-placeholder::after{content:'*'}.mat-select-value{position:absolute;max-width:calc(100% - 18px);flex-grow:1;top:0;left:0;bottom:0;display:flex;align-items:center}[dir=rtl] .mat-select-value{left:auto;right:0}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;line-height:30px}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%}@media screen and (-ms-high-contrast:active){.mat-select-panel{outline:solid 1px}} /*# sourceMappingURL=select.css.map */ \"],\n                encapsulation: ViewEncapsulation.None,\n                host: {\n                    'role': 'listbox',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-label]': '_ariaLabel',\n                    '[attr.aria-labelledby]': 'ariaLabelledby',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': '_control?.invalid || \"false\"',\n                    '[attr.aria-owns]': '_optionIds',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select]': 'true',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    transformPlaceholder,\n                    transformPanel,\n                    fadeInContent\n                ],\n                exportAs: 'mdSelect',\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSelect.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: Renderer, },\n    { type: ViewportRuler, },\n    { type: ChangeDetectorRef, },\n    { type: Dir, decorators: [{ type: Optional },] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional },] },\n    { type: undefined, decorators: [{ type: Attribute, args: ['tabindex',] },] },\n]; };\nMdSelect.propDecorators = {\n    'trigger': [{ type: ViewChild, args: ['trigger',] },],\n    'overlayDir': [{ type: ViewChild, args: [ConnectedOverlayDirective,] },],\n    'options': [{ type: ContentChildren, args: [MdOption,] },],\n    'placeholder': [{ type: Input },],\n    'disabled': [{ type: Input },],\n    'required': [{ type: Input },],\n    'multiple': [{ type: Input },],\n    'floatPlaceholder': [{ type: Input },],\n    'tabIndex': [{ type: Input },],\n    'ariaLabel': [{ type: Input, args: ['aria-label',] },],\n    'ariaLabelledby': [{ type: Input, args: ['aria-labelledby',] },],\n    'onOpen': [{ type: Output },],\n    'onClose': [{ type: Output },],\n    'change': [{ type: Output },],\n};\n/**\n * Clamps a value n between min and max values.\n * @param {?} min\n * @param {?} n\n * @param {?} max\n * @return {?}\n */\nfunction clampValue(min, n, max) {\n    return Math.min(Math.max(min, n), max);\n}\nvar MdSelectModule = (function () {\n    function MdSelectModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdSelectModule.forRoot = function () {\n        return {\n            ngModule: MdSelectModule,\n            providers: []\n        };\n    };\n    return MdSelectModule;\n}());\nMdSelectModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MdOptionModule,\n                    CompatibilityModule,\n                ],\n                exports: [MdSelect, MdOptionModule, CompatibilityModule],\n                declarations: [MdSelect],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSelectModule.ctorParameters = function () { return []; };\nvar MD_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return MdSlideToggle; }),\n    multi: true\n};\nvar MdSlideToggleChange = (function () {\n    function MdSlideToggleChange() {\n    }\n    return MdSlideToggleChange;\n}());\n// Increasing integer for generating unique ids for slide-toggle components.\nvar nextId$1 = 0;\n/**\n * Two-state control, which can be also called `switch`.\n */\nvar MdSlideToggle = (function () {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _renderer\n     * @param {?} _focusOriginMonitor\n     */\n    function MdSlideToggle(_elementRef, _renderer, _focusOriginMonitor) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._focusOriginMonitor = _focusOriginMonitor;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        this._uniqueId = \"md-slide-toggle-\" + ++nextId$1;\n        this._checked = false;\n        this._isMousedown = false;\n        this._slideRenderer = null;\n        this._disabled = false;\n        this._required = false;\n        this._disableRipple = false;\n        /** Name value will be applied to the input element if present */\n        this.name = null;\n        /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Used to specify the tabIndex value for the underlying input element. */\n        this.tabIndex = 0;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after' */\n        this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        this.ariaLabelledby = null;\n        this._change = new EventEmitter();\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        this.change = this._change.asObservable();\n    }\n    Object.defineProperty(MdSlideToggle.prototype, \"disabled\", {\n        /**\n         * Whether the slide-toggle is disabled.\n         * @return {?}\n         */\n        get: function () { return this._disabled; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._disabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlideToggle.prototype, \"required\", {\n        /**\n         * Whether the slide-toggle is required.\n         * @return {?}\n         */\n        get: function () { return this._required; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._required = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlideToggle.prototype, \"disableRipple\", {\n        /**\n         * Whether the ripple effect for this slide-toggle is disabled.\n         * @return {?}\n         */\n        get: function () { return this._disableRipple; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._disableRipple = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlideToggle.prototype, \"inputId\", {\n        /**\n         * Returns the unique id for the visual hidden input.\n         * @return {?}\n         */\n        get: function () { return (this.id || this._uniqueId) + \"-input\"; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdSlideToggle.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this._slideRenderer = new SlideToggleRenderer(this._elementRef);\n        this._focusOriginMonitor\n            .monitor(this._inputElement.nativeElement, this._renderer, false)\n            .subscribe(function (focusOrigin) { return _this._onInputFocusChange(focusOrigin); });\n    };\n    /**\n     * @return {?}\n     */\n    MdSlideToggle.prototype.ngOnDestroy = function () {\n        this._focusOriginMonitor.stopMonitoring(this._inputElement.nativeElement);\n    };\n    /**\n     * The onChangeEvent method will be also called on click.\n     * This is because everything for the slide-toggle is wrapped inside of a label,\n     * which triggers a onChange event on click.\n     * @param {?} event\n     * @return {?}\n     */\n    MdSlideToggle.prototype._onChangeEvent = function (event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        // Once a drag is currently in progress, we do not want to toggle the slide-toggle on a click.\n        if (!this.disabled && !this._slideRenderer.dragging) {\n            this.toggle();\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdSlideToggle.prototype._onInputClick = function (event) {\n        this.onTouched();\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    };\n    /**\n     * @return {?}\n     */\n    MdSlideToggle.prototype._setMousedown = function () {\n        var _this = this;\n        // We only *show* the focus style when focus has come to the button via the keyboard.\n        // The Material Design spec is silent on this topic, and without doing this, the\n        // button continues to look :active after clicking.\n        // @see http://marcysutton.com/button-focus-hell/\n        this._isMousedown = true;\n        setTimeout(function () { return _this._isMousedown = false; }, 100);\n    };\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    MdSlideToggle.prototype.writeValue = function (value) {\n        this.checked = value;\n    };\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    MdSlideToggle.prototype.registerOnChange = function (fn) {\n        this.onChange = fn;\n    };\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    MdSlideToggle.prototype.registerOnTouched = function (fn) {\n        this.onTouched = fn;\n    };\n    /**\n     * Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    MdSlideToggle.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    /**\n     * Focuses the slide-toggle.\n     * @return {?}\n     */\n    MdSlideToggle.prototype.focus = function () {\n        this._focusOriginMonitor.focusVia(this._inputElement.nativeElement, this._renderer, 'program');\n    };\n    Object.defineProperty(MdSlideToggle.prototype, \"checked\", {\n        /**\n         * Whether the slide-toggle is checked.\n         * @return {?}\n         */\n        get: function () { return !!this._checked; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this.checked !== !!value) {\n                this._checked = value;\n                this.onChange(this._checked);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlideToggle.prototype, \"color\", {\n        /**\n         * The color of the slide-toggle. Can be primary, accent, or warn.\n         * @return {?}\n         */\n        get: function () { return this._color; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._updateColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Toggles the checked state of the slide-toggle.\n     * @return {?}\n     */\n    MdSlideToggle.prototype.toggle = function () {\n        this.checked = !this.checked;\n    };\n    /**\n     * Function is called whenever the focus changes for the input element.\n     * @param {?} focusOrigin\n     * @return {?}\n     */\n    MdSlideToggle.prototype._onInputFocusChange = function (focusOrigin) {\n        if (!this._focusRipple && focusOrigin === 'keyboard') {\n            // For keyboard focus show a persistent ripple as focus indicator.\n            this._focusRipple = this._ripple.launch(0, 0, { persistent: true, centered: true });\n        }\n        else if (!focusOrigin) {\n            this.onTouched();\n            // Fade out and clear the focus ripple if one is currently present.\n            if (this._focusRipple) {\n                this._focusRipple.fadeOut();\n                this._focusRipple = null;\n            }\n        }\n    };\n    /**\n     * @param {?} newColor\n     * @return {?}\n     */\n    MdSlideToggle.prototype._updateColor = function (newColor) {\n        this._setElementColor(this._color, false);\n        this._setElementColor(newColor, true);\n        this._color = newColor;\n    };\n    /**\n     * @param {?} color\n     * @param {?} isAdd\n     * @return {?}\n     */\n    MdSlideToggle.prototype._setElementColor = function (color, isAdd) {\n        if (color != null && color != '') {\n            this._renderer.setElementClass(this._elementRef.nativeElement, \"mat-\" + color, isAdd);\n        }\n    };\n    /**\n     * Emits the change event to the `change` output EventEmitter\n     * @return {?}\n     */\n    MdSlideToggle.prototype._emitChangeEvent = function () {\n        var /** @type {?} */ event = new MdSlideToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n        this._change.emit(event);\n    };\n    /**\n     * @return {?}\n     */\n    MdSlideToggle.prototype._onDragStart = function () {\n        if (!this.disabled) {\n            this._slideRenderer.startThumbDrag(this.checked);\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdSlideToggle.prototype._onDrag = function (event) {\n        if (this._slideRenderer.dragging) {\n            this._slideRenderer.updateThumbPosition(event.deltaX);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdSlideToggle.prototype._onDragEnd = function () {\n        var _this = this;\n        if (this._slideRenderer.dragging) {\n            var /** @type {?} */ _previousChecked = this.checked;\n            this.checked = this._slideRenderer.dragPercentage > 50;\n            if (_previousChecked !== this.checked) {\n                this._emitChangeEvent();\n            }\n            // The drag should be stopped outside of the current event handler, because otherwise the\n            // click event will be fired before and will revert the drag change.\n            setTimeout(function () { return _this._slideRenderer.stopThumbDrag(); });\n        }\n    };\n    return MdSlideToggle;\n}());\nMdSlideToggle.decorators = [\n    { type: Component, args: [{ selector: 'md-slide-toggle, mat-slide-toggle',\n                host: {\n                    '[class.mat-slide-toggle]': 'true',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '(mousedown)': '_setMousedown()'\n                },\n                template: \"<label class=\\\"mat-slide-toggle-label\\\" #label> <div class=\\\"mat-slide-toggle-bar\\\"> <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\" [id]=\\\"inputId\\\" [required]=\\\"required\\\" [tabIndex]=\\\"tabIndex\\\" [checked]=\\\"checked\\\" [disabled]=\\\"disabled\\\" [attr.name]=\\\"name\\\" [attr.aria-label]=\\\"ariaLabel\\\" [attr.aria-labelledby]=\\\"ariaLabelledby\\\" (change)=\\\"_onChangeEvent($event)\\\" (click)=\\\"_onInputClick($event)\\\"> <div class=\\\"mat-slide-toggle-thumb-container\\\" (slidestart)=\\\"_onDragStart()\\\" (slide)=\\\"_onDrag($event)\\\" (slideend)=\\\"_onDragEnd()\\\"> <div class=\\\"mat-slide-toggle-thumb\\\"></div> <div class=\\\"mat-slide-toggle-ripple\\\" md-ripple [mdRippleTrigger]=\\\"label\\\" [mdRippleCentered]=\\\"true\\\" [mdRippleDisabled]=\\\"disableRipple || disabled\\\"> </div> </div> </div> <span class=\\\"mat-slide-toggle-content\\\"> <ng-content></ng-content> </span> </label> \",\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;line-height:24px;white-space:nowrap;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;outline:0}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px,0,0)}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-content{font-size:14px;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-weight:500}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;cursor:pointer}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}.mat-slide-toggle-bar,[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-right:8px;margin-left:0}.mat-slide-toggle-label-before .mat-slide-toggle-bar,[dir=rtl] .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0,0,0);transition:all 80ms linear;transition-property:transform;cursor:-webkit-grab;cursor:grab}.mat-slide-toggle-thumb-container.mat-dragging{transition-duration:0s}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%;box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)}@media screen and (-ms-high-contrast:active){.mat-slide-toggle-thumb{background:#fff;border:solid 1px #000}}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;border-radius:8px}@media screen and (-ms-high-contrast:active){.mat-slide-toggle-bar{background:#fff}}.mat-slide-toggle-input{bottom:0;left:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}.mat-slide-toggle-ripple{position:absolute;top:-13px;left:-13px;height:46px;width:46px;border-radius:50%;z-index:1;pointer-events:none} /*# sourceMappingURL=slide-toggle.css.map */ \"],\n                providers: [MD_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSlideToggle.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: Renderer, },\n    { type: FocusOriginMonitor, },\n]; };\nMdSlideToggle.propDecorators = {\n    'name': [{ type: Input },],\n    'id': [{ type: Input },],\n    'tabIndex': [{ type: Input },],\n    'labelPosition': [{ type: Input },],\n    'ariaLabel': [{ type: Input, args: ['aria-label',] },],\n    'ariaLabelledby': [{ type: Input, args: ['aria-labelledby',] },],\n    'disabled': [{ type: Input },],\n    'required': [{ type: Input },],\n    'disableRipple': [{ type: Input },],\n    'change': [{ type: Output },],\n    '_inputElement': [{ type: ViewChild, args: ['input',] },],\n    '_ripple': [{ type: ViewChild, args: [MdRipple,] },],\n    'checked': [{ type: Input },],\n    'color': [{ type: Input },],\n};\n/**\n * Renderer for the Slide Toggle component, which separates DOM modification in its own class\n */\nvar SlideToggleRenderer = (function () {\n    /**\n     * @param {?} _elementRef\n     */\n    function SlideToggleRenderer(_elementRef) {\n        this._elementRef = _elementRef;\n        /** Whether the thumb is currently being dragged. */\n        this.dragging = false;\n        this._thumbEl = _elementRef.nativeElement.querySelector('.mat-slide-toggle-thumb-container');\n        this._thumbBarEl = _elementRef.nativeElement.querySelector('.mat-slide-toggle-bar');\n    }\n    /**\n     * Initializes the drag of the slide-toggle.\n     * @param {?} checked\n     * @return {?}\n     */\n    SlideToggleRenderer.prototype.startThumbDrag = function (checked) {\n        if (this.dragging) {\n            return;\n        }\n        this._thumbBarWidth = this._thumbBarEl.clientWidth - this._thumbEl.clientWidth;\n        this._thumbEl.classList.add('mat-dragging');\n        this._previousChecked = checked;\n        this.dragging = true;\n    };\n    /**\n     * Resets the current drag and returns the new checked value.\n     * @return {?}\n     */\n    SlideToggleRenderer.prototype.stopThumbDrag = function () {\n        if (!this.dragging) {\n            return;\n        }\n        this.dragging = false;\n        this._thumbEl.classList.remove('mat-dragging');\n        // Reset the transform because the component will take care of the thumb position after drag.\n        applyCssTransform(this._thumbEl, '');\n        return this.dragPercentage > 50;\n    };\n    /**\n     * Updates the thumb containers position from the specified distance.\n     * @param {?} distance\n     * @return {?}\n     */\n    SlideToggleRenderer.prototype.updateThumbPosition = function (distance) {\n        this.dragPercentage = this._getDragPercentage(distance);\n        // Calculate the moved distance based on the thumb bar width.\n        var /** @type {?} */ dragX = (this.dragPercentage / 100) * this._thumbBarWidth;\n        applyCssTransform(this._thumbEl, \"translate3d(\" + dragX + \"px, 0, 0)\");\n    };\n    /**\n     * Retrieves the percentage of thumb from the moved distance. Percentage as fraction of 100.\n     * @param {?} distance\n     * @return {?}\n     */\n    SlideToggleRenderer.prototype._getDragPercentage = function (distance) {\n        var /** @type {?} */ percentage = (distance / this._thumbBarWidth) * 100;\n        // When the toggle was initially checked, then we have to start the drag at the end.\n        if (this._previousChecked) {\n            percentage += 100;\n        }\n        return Math.max(0, Math.min(percentage, 100));\n    };\n    return SlideToggleRenderer;\n}());\nvar MdSlideToggleModule = (function () {\n    function MdSlideToggleModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdSlideToggleModule.forRoot = function () {\n        return {\n            ngModule: MdSlideToggleModule,\n            providers: []\n        };\n    };\n    return MdSlideToggleModule;\n}());\nMdSlideToggleModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [FormsModule, MdRippleModule, CompatibilityModule],\n                exports: [MdSlideToggle, CompatibilityModule],\n                declarations: [MdSlideToggle],\n                providers: [\n                    FOCUS_ORIGIN_MONITOR_PROVIDER,\n                    { provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig }\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSlideToggleModule.ctorParameters = function () { return []; };\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nvar MIN_AUTO_TICK_SEPARATION = 30;\n/** The thumb gap size for a disabled slider. */\nvar DISABLED_THUMB_GAP = 7;\n/** The thumb gap size for a non-active slider at its minimum value. */\nvar MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/** The thumb gap size for an active slider at its minimum value. */\nvar MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows md-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n */\nvar MD_SLIDER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return MdSlider; }),\n    multi: true\n};\n/**\n * A simple change event emitted by the MdSlider component.\n */\nvar MdSliderChange = (function () {\n    function MdSliderChange() {\n    }\n    return MdSliderChange;\n}());\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nvar MdSlider = (function () {\n    /**\n     * @param {?} renderer\n     * @param {?} _elementRef\n     * @param {?} _focusOriginMonitor\n     * @param {?} _dir\n     */\n    function MdSlider(renderer, _elementRef, _focusOriginMonitor, _dir) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._focusOriginMonitor = _focusOriginMonitor;\n        this._dir = _dir;\n        this._disabled = false;\n        this._invert = false;\n        this._max = 100;\n        this._min = 0;\n        this._step = 1;\n        this._thumbLabel = false;\n        this._tickInterval = 0;\n        this._value = null;\n        this._vertical = false;\n        this.color = 'accent';\n        /** Event emitted when the slider value has changed. */\n        this.change = new EventEmitter();\n        /** Event emitted when the slider thumb moves. */\n        this.input = new EventEmitter();\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this.onTouched = function () { };\n        this._percent = 0;\n        /**\n         * Whether or not the thumb is sliding.\n         * Used to determine if there should be a transition for the thumb and fill track.\n         */\n        this._isSliding = false;\n        /**\n         * Whether or not the slider is active (clicked or sliding).\n         * Used to shrink and grow the thumb as according to the Material Design spec.\n         */\n        this._isActive = false;\n        this._tickIntervalPercent = 0;\n        this._renderer = null;\n        this._sliderDimensions = null;\n        this._controlValueAccessorChangeFn = function () { };\n        this._lastChangeValue = null;\n        this._lastInputValue = null;\n        this._focusOriginMonitor.monitor(this._elementRef.nativeElement, renderer, true)\n            .subscribe(function (origin) { return _this._isActive = !!origin && origin !== 'keyboard'; });\n        this._renderer = new SliderRenderer(this._elementRef);\n    }\n    Object.defineProperty(MdSlider.prototype, \"disabled\", {\n        /**\n         * Whether or not the slider is disabled.\n         * @return {?}\n         */\n        get: function () { return this._disabled; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._disabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"invert\", {\n        /**\n         * Whether the slider is inverted.\n         * @return {?}\n         */\n        get: function () { return this._invert; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._invert = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"max\", {\n        /**\n         * The maximum value that the slider can have.\n         * @return {?}\n         */\n        get: function () {\n            return this._max;\n        },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) {\n            this._max = coerceNumberProperty(v, this._max);\n            this._percent = this._calculatePercentage(this._value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"min\", {\n        /**\n         * The minimum value that the slider can have.\n         * @return {?}\n         */\n        get: function () {\n            return this._min;\n        },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) {\n            this._min = coerceNumberProperty(v, this._min);\n            // If the value wasn't explicitly set by the user, set it to the min.\n            if (this._value === null) {\n                this.value = this._min;\n            }\n            this._percent = this._calculatePercentage(this._value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"step\", {\n        /**\n         * The values at which the thumb will snap.\n         * @return {?}\n         */\n        get: function () { return this._step; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) {\n            this._step = coerceNumberProperty(v, this._step);\n            if (this._step % 1 !== 0) {\n                this._roundLabelTo = this._step.toString().split('.').pop().length;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"thumbLabel\", {\n        /**\n         * Whether or not to show the thumb label.\n         * @return {?}\n         */\n        get: function () { return this._thumbLabel; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._thumbLabel = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"_thumbLabelDeprecated\", {\n        /**\n         * @deprecated\n         * @return {?}\n         */\n        get: function () { return this._thumbLabel; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._thumbLabel = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"tickInterval\", {\n        /**\n         * How often to show ticks. Relative to the step so that a tick always appears on a step.\n         * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n         * @return {?}\n         */\n        get: function () { return this._tickInterval; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (value === 'auto') {\n                this._tickInterval = 'auto';\n            }\n            else if (typeof value === 'number' || typeof value === 'string') {\n                this._tickInterval = coerceNumberProperty(value, /** @type {?} */ (this._tickInterval));\n            }\n            else {\n                this._tickInterval = 0;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"_tickIntervalDeprecated\", {\n        /**\n         * @deprecated\n         * @return {?}\n         */\n        get: function () { return this.tickInterval; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this.tickInterval = v; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"value\", {\n        /**\n         * Value of the slider.\n         * @return {?}\n         */\n        get: function () {\n            // If the value needs to be read and it is still uninitialized, initialize it to the min.\n            if (this._value === null) {\n                this.value = this._min;\n            }\n            return this._value;\n        },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) {\n            this._value = coerceNumberProperty(v, this._value);\n            this._percent = this._calculatePercentage(this._value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"vertical\", {\n        /**\n         * Whether the slider is vertical.\n         * @return {?}\n         */\n        get: function () { return this._vertical; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._vertical = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"displayValue\", {\n        /**\n         * The value to be used for display purposes.\n         * @return {?}\n         */\n        get: function () {\n            // Note that this could be improved further by rounding something like 0.999 to 1 or\n            // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n            // every change detection cycle.\n            if (this._roundLabelTo && this.value % 1 !== 0) {\n                return this.value.toFixed(this._roundLabelTo);\n            }\n            return this.value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"percent\", {\n        /**\n         * The percentage of the slider that coincides with the value.\n         * @return {?}\n         */\n        get: function () { return this._clamp(this._percent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"_invertAxis\", {\n        /**\n         * Whether the axis of the slider is inverted.\n         * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n         * @return {?}\n         */\n        get: function () {\n            // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n            // top. However from a y-axis standpoint this is inverted.\n            return this.vertical ? !this.invert : this.invert;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"_isMinValue\", {\n        /**\n         * Whether the slider is at its minimum value.\n         * @return {?}\n         */\n        get: function () {\n            return this.percent === 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"_thumbGap\", {\n        /**\n         * The amount of space to leave between the slider thumb and the track fill & track background\n         * elements.\n         * @return {?}\n         */\n        get: function () {\n            if (this.disabled) {\n                return DISABLED_THUMB_GAP;\n            }\n            if (this._isMinValue && !this.thumbLabel) {\n                return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n            }\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"_trackBackgroundStyles\", {\n        /**\n         * CSS styles for the track background element.\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n            var /** @type {?} */ sign = this._invertMouseCoords ? '-' : '';\n            return {\n                'transform': \"translate\" + axis + \"(\" + sign + this._thumbGap + \"px) scale\" + axis + \"(\" + (1 - this.percent) + \")\"\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"_trackFillStyles\", {\n        /**\n         * CSS styles for the track fill element.\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n            var /** @type {?} */ sign = this._invertMouseCoords ? '' : '-';\n            return {\n                'transform': \"translate\" + axis + \"(\" + sign + this._thumbGap + \"px) scale\" + axis + \"(\" + this.percent + \")\"\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"_ticksContainerStyles\", {\n        /**\n         * CSS styles for the ticks container element.\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n            // For a horizontal slider in RTL languages we push the ticks container off the left edge\n            // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n            var /** @type {?} */ sign = !this.vertical && this._direction == 'rtl' ? '' : '-';\n            var /** @type {?} */ offset = this._tickIntervalPercent / 2 * 100;\n            return {\n                'transform': \"translate\" + axis + \"(\" + sign + offset + \"%)\"\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"_ticksStyles\", {\n        /**\n         * CSS styles for the ticks element.\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ tickSize = this._tickIntervalPercent * 100;\n            var /** @type {?} */ backgroundSize = this.vertical ? \"2px \" + tickSize + \"%\" : tickSize + \"% 2px\";\n            var /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n            // Depending on the direction we pushed the ticks container, push the ticks the opposite\n            // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n            // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n            var /** @type {?} */ sign = !this.vertical && this._direction == 'rtl' ? '-' : '';\n            var /** @type {?} */ rotate = !this.vertical && this._direction == 'rtl' ? ' rotate(180deg)' : '';\n            var /** @type {?} */ styles = {\n                'backgroundSize': backgroundSize,\n                // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n                'transform': \"translateZ(0) translate\" + axis + \"(\" + sign + tickSize / 2 + \"%)\" + rotate\n            };\n            if (this._isMinValue && this._thumbGap) {\n                var /** @type {?} */ side = this.vertical ?\n                    (this._invertAxis ? 'Bottom' : 'Top') :\n                    (this._invertAxis ? 'Right' : 'Left');\n                styles[\"padding\" + side] = this._thumbGap + \"px\";\n            }\n            return styles;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"_thumbContainerStyles\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n            // For a horizontal slider in RTL languages we push the thumb container off the left edge\n            // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n            var /** @type {?} */ invertOffset = (this._direction == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n            var /** @type {?} */ offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n            return {\n                'transform': \"translate\" + axis + \"(-\" + offset + \"%)\"\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"_invertMouseCoords\", {\n        /**\n         * Whether mouse events should be converted to a slider position by calculating their distance\n         * from the right or bottom edge of the slider as opposed to the top or left.\n         * @return {?}\n         */\n        get: function () {\n            return (this._direction == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSlider.prototype, \"_direction\", {\n        /**\n         * The language direction for this slider element.\n         * @return {?}\n         */\n        get: function () {\n            return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdSlider.prototype.ngOnDestroy = function () {\n        this._focusOriginMonitor.stopMonitoring(this._elementRef.nativeElement);\n    };\n    /**\n     * @return {?}\n     */\n    MdSlider.prototype._onMouseenter = function () {\n        if (this.disabled) {\n            return;\n        }\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._renderer.getSliderDimensions();\n        this._updateTickIntervalPercent();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdSlider.prototype._onClick = function (event) {\n        if (this.disabled) {\n            return;\n        }\n        this._isSliding = false;\n        this._renderer.addFocus();\n        this._updateValueFromPosition({ x: event.clientX, y: event.clientY });\n        /* Emits a change and input event if the value changed. */\n        this._emitInputEvent();\n        this._emitValueIfChanged();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdSlider.prototype._onSlide = function (event) {\n        if (this.disabled) {\n            return;\n        }\n        // Prevent the slide from selecting anything else.\n        event.preventDefault();\n        this._updateValueFromPosition({ x: event.center.x, y: event.center.y });\n        // Native range elements always emit `input` events when the value changed while sliding.\n        this._emitInputEvent();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdSlider.prototype._onSlideStart = function (event) {\n        if (this.disabled) {\n            return;\n        }\n        // Simulate mouseenter in case this is a mobile device.\n        this._onMouseenter();\n        event.preventDefault();\n        this._isSliding = true;\n        this._renderer.addFocus();\n        this._updateValueFromPosition({ x: event.center.x, y: event.center.y });\n    };\n    /**\n     * @return {?}\n     */\n    MdSlider.prototype._onSlideEnd = function () {\n        this._isSliding = false;\n        this._emitValueIfChanged();\n    };\n    /**\n     * @return {?}\n     */\n    MdSlider.prototype._onFocus = function () {\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._renderer.getSliderDimensions();\n        this._updateTickIntervalPercent();\n    };\n    /**\n     * @return {?}\n     */\n    MdSlider.prototype._onBlur = function () {\n        this.onTouched();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdSlider.prototype._onKeydown = function (event) {\n        if (this.disabled) {\n            return;\n        }\n        switch (event.keyCode) {\n            case PAGE_UP:\n                this._increment(10);\n                break;\n            case PAGE_DOWN:\n                this._increment(-10);\n                break;\n            case END:\n                this.value = this.max;\n                break;\n            case HOME:\n                this.value = this.min;\n                break;\n            case LEFT_ARROW:\n                // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n                // inverted slider the thumb moves in that direction. However for a blind user, nothing\n                // about the slider indicates that it is inverted. They will expect left to be decrement,\n                // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n                // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n                // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n                // sighted users, therefore we do not swap the meaning.\n                this._increment(this._direction == 'rtl' ? 1 : -1);\n                break;\n            case UP_ARROW:\n                this._increment(1);\n                break;\n            case RIGHT_ARROW:\n                // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n                this._increment(this._direction == 'rtl' ? -1 : 1);\n                break;\n            case DOWN_ARROW:\n                this._increment(-1);\n                break;\n            default:\n                // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n                // it.\n                return;\n        }\n        this._isSliding = true;\n        event.preventDefault();\n    };\n    /**\n     * @return {?}\n     */\n    MdSlider.prototype._onKeyup = function () {\n        this._isSliding = false;\n    };\n    /**\n     * Increments the slider by the given number of steps (negative number decrements).\n     * @param {?} numSteps\n     * @return {?}\n     */\n    MdSlider.prototype._increment = function (numSteps) {\n        this.value = this._clamp(this.value + this.step * numSteps, this.min, this.max);\n        this._emitInputEvent();\n        this._emitValueIfChanged();\n    };\n    /**\n     * Calculate the new value from the new physical location. The value will always be snapped.\n     * @param {?} pos\n     * @return {?}\n     */\n    MdSlider.prototype._updateValueFromPosition = function (pos) {\n        if (!this._sliderDimensions) {\n            return;\n        }\n        var /** @type {?} */ offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n        var /** @type {?} */ size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n        var /** @type {?} */ posComponent = this.vertical ? pos.y : pos.x;\n        // The exact value is calculated from the event and used to find the closest snap value.\n        var /** @type {?} */ percent = this._clamp((posComponent - offset) / size);\n        if (this._invertMouseCoords) {\n            percent = 1 - percent;\n        }\n        var /** @type {?} */ exactValue = this._calculateValue(percent);\n        // This calculation finds the closest step by finding the closest whole number divisible by the\n        // step relative to the min.\n        var /** @type {?} */ closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n        // The value needs to snap to the min and max.\n        this.value = this._clamp(closestValue, this.min, this.max);\n    };\n    /**\n     * Emits a change event if the current value is different from the last emitted value.\n     * @return {?}\n     */\n    MdSlider.prototype._emitValueIfChanged = function () {\n        if (this.value != this._lastChangeValue) {\n            var /** @type {?} */ event = this._createChangeEvent();\n            this._lastChangeValue = this.value;\n            this._controlValueAccessorChangeFn(this.value);\n            this.change.emit(event);\n        }\n    };\n    /**\n     * Emits an input event when the current value is different from the last emitted value.\n     * @return {?}\n     */\n    MdSlider.prototype._emitInputEvent = function () {\n        if (this.value != this._lastInputValue) {\n            var /** @type {?} */ event = this._createChangeEvent();\n            this._lastInputValue = this.value;\n            this.input.emit(event);\n        }\n    };\n    /**\n     * Updates the amount of space between ticks as a percentage of the width of the slider.\n     * @return {?}\n     */\n    MdSlider.prototype._updateTickIntervalPercent = function () {\n        if (!this.tickInterval) {\n            return;\n        }\n        if (this.tickInterval == 'auto') {\n            var /** @type {?} */ trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n            var /** @type {?} */ pixelsPerStep = trackSize * this.step / (this.max - this.min);\n            var /** @type {?} */ stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n            var /** @type {?} */ pixelsPerTick = stepsPerTick * this.step;\n            this._tickIntervalPercent = pixelsPerTick / trackSize;\n        }\n        else {\n            this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n        }\n    };\n    /**\n     * Creates a slider change object from the specified value.\n     * @param {?=} value\n     * @return {?}\n     */\n    MdSlider.prototype._createChangeEvent = function (value) {\n        if (value === void 0) { value = this.value; }\n        var /** @type {?} */ event = new MdSliderChange();\n        event.source = this;\n        event.value = value;\n        return event;\n    };\n    /**\n     * Calculates the percentage of the slider that a value is.\n     * @param {?} value\n     * @return {?}\n     */\n    MdSlider.prototype._calculatePercentage = function (value) {\n        return (value - this.min) / (this.max - this.min);\n    };\n    /**\n     * Calculates the value a percentage of the slider corresponds to.\n     * @param {?} percentage\n     * @return {?}\n     */\n    MdSlider.prototype._calculateValue = function (percentage) {\n        return this.min + percentage * (this.max - this.min);\n    };\n    /**\n     * Return a number between two numbers.\n     * @param {?} value\n     * @param {?=} min\n     * @param {?=} max\n     * @return {?}\n     */\n    MdSlider.prototype._clamp = function (value, min, max) {\n        if (min === void 0) { min = 0; }\n        if (max === void 0) { max = 1; }\n        return Math.max(min, Math.min(value, max));\n    };\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    MdSlider.prototype.writeValue = function (value) {\n        this.value = value;\n    };\n    /**\n     * Registers a callback to eb triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    MdSlider.prototype.registerOnChange = function (fn) {\n        this._controlValueAccessorChangeFn = fn;\n    };\n    /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    MdSlider.prototype.registerOnTouched = function (fn) {\n        this.onTouched = fn;\n    };\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    MdSlider.prototype.setDisabledState = function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    return MdSlider;\n}());\nMdSlider.decorators = [\n    { type: Component, args: [{ selector: 'md-slider, mat-slider',\n                providers: [MD_SLIDER_VALUE_ACCESSOR],\n                host: {\n                    '[class.mat-slider]': 'true',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()',\n                    '(click)': '_onClick($event)',\n                    '(keydown)': '_onKeydown($event)',\n                    '(keyup)': '_onKeyup()',\n                    '(mouseenter)': '_onMouseenter()',\n                    '(slide)': '_onSlide($event)',\n                    '(slideend)': '_onSlideEnd()',\n                    '(slidestart)': '_onSlideStart($event)',\n                    'role': 'slider',\n                    'tabindex': '0',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.aria-valuemax]': 'max',\n                    '[attr.aria-valuemin]': 'min',\n                    '[attr.aria-valuenow]': 'value',\n                    '[class.mat-primary]': 'color == \"primary\"',\n                    '[class.mat-accent]': 'color != \"primary\" && color != \"warn\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.mat-slider-disabled]': 'disabled',\n                    '[class.mat-slider-has-ticks]': 'tickInterval',\n                    '[class.mat-slider-horizontal]': '!vertical',\n                    '[class.mat-slider-axis-inverted]': '_invertAxis',\n                    '[class.mat-slider-sliding]': '_isSliding',\n                    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n                    '[class.mat-slider-vertical]': 'vertical',\n                    '[class.mat-slider-min-value]': '_isMinValue',\n                    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\n                },\n                template: \"<div class=\\\"mat-slider-wrapper\\\"> <div class=\\\"mat-slider-track-wrapper\\\"> <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_trackBackgroundStyles\\\"></div> <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_trackFillStyles\\\"></div> </div> <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_ticksContainerStyles\\\"> <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_ticksStyles\\\"></div> </div> <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_thumbContainerStyles\\\"> <div class=\\\"mat-slider-focus-ring\\\"></div> <div class=\\\"mat-slider-thumb\\\"></div> <div class=\\\"mat-slider-thumb-label\\\"> <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span> </div> </div> </div> \",\n                styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:0;vertical-align:middle}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{box-sizing:border-box;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),opacity .4s cubic-bezier(.25,.8,.25,1)}.cdk-keyboard-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(.7);transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),border-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform .4s cubic-bezier(.25,.8,.25,1),border-radius .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-label-text{z-index:1;font-size:12px;font-weight:700;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-sliding .mat-slider-thumb-container,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-track-fill{transition-duration:0s}.mat-slider-has-ticks .mat-slider-wrapper::after{content:'';position:absolute;border:0 solid rgba(0,0,0,.6);opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.cdk-focused .mat-slider-thumb-label-text{opacity:1}.cdk-mouse-focused .mat-slider-thumb,.cdk-program-focused .mat-slider-thumb,.cdk-touch-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.mat-slider-horizontal .mat-slider-ticks{background:repeating-linear-gradient(to right,rgba(0,0,0,.6),rgba(0,0,0,.6) 2px,transparent 0,transparent) repeat;background:-moz-repeating-linear-gradient(.0001deg,rgba(0,0,0,.6),rgba(0,0,0,.6) 2px,transparent 0,transparent) repeat;background-clip:content-box;height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{background:repeating-linear-gradient(to bottom,rgba(0,0,0,.6),rgba(0,0,0,.6) 2px,transparent 0,transparent) repeat;background-clip:content-box;width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%} /*# sourceMappingURL=slider.css.map */ \"],\n                encapsulation: ViewEncapsulation.None,\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSlider.ctorParameters = function () { return [\n    { type: Renderer, },\n    { type: ElementRef, },\n    { type: FocusOriginMonitor, },\n    { type: Dir, decorators: [{ type: Optional },] },\n]; };\nMdSlider.propDecorators = {\n    'disabled': [{ type: Input },],\n    'invert': [{ type: Input },],\n    'max': [{ type: Input },],\n    'min': [{ type: Input },],\n    'step': [{ type: Input },],\n    'thumbLabel': [{ type: Input },],\n    '_thumbLabelDeprecated': [{ type: Input, args: ['thumb-label',] },],\n    'tickInterval': [{ type: Input },],\n    '_tickIntervalDeprecated': [{ type: Input, args: ['tick-interval',] },],\n    'value': [{ type: Input },],\n    'vertical': [{ type: Input },],\n    'color': [{ type: Input },],\n    'change': [{ type: Output },],\n    'input': [{ type: Output },],\n};\n/**\n * Renderer class in order to keep all dom manipulation in one place and outside of the main class.\n * \\@docs-private\n */\nvar SliderRenderer = (function () {\n    /**\n     * @param {?} elementRef\n     */\n    function SliderRenderer(elementRef) {\n        this._sliderElement = elementRef.nativeElement;\n    }\n    /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     * @return {?}\n     */\n    SliderRenderer.prototype.getSliderDimensions = function () {\n        var /** @type {?} */ wrapperElement = this._sliderElement.querySelector('.mat-slider-wrapper');\n        return wrapperElement.getBoundingClientRect();\n    };\n    /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     * @return {?}\n     */\n    SliderRenderer.prototype.addFocus = function () {\n        this._sliderElement.focus();\n    };\n    return SliderRenderer;\n}());\nvar MdSliderModule = (function () {\n    function MdSliderModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdSliderModule.forRoot = function () {\n        return {\n            ngModule: MdSliderModule,\n            providers: []\n        };\n    };\n    return MdSliderModule;\n}());\nMdSliderModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, FormsModule, CompatibilityModule, StyleModule, RtlModule],\n                exports: [MdSlider, CompatibilityModule],\n                declarations: [MdSlider],\n                providers: [{ provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig }]\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSliderModule.ctorParameters = function () { return []; };\n/**\n * Exception thrown when two MdSidenav are matching the same side.\n */\nvar MdDuplicatedSidenavError = (function (_super) {\n    __extends(MdDuplicatedSidenavError, _super);\n    /**\n     * @param {?} align\n     */\n    function MdDuplicatedSidenavError(align) {\n        return _super.call(this, \"A sidenav was already declared for 'align=\\\"\" + align + \"\\\"'\") || this;\n    }\n    return MdDuplicatedSidenavError;\n}(MdError));\n/**\n * Sidenav toggle promise result.\n */\nvar MdSidenavToggleResult = (function () {\n    /**\n     * @param {?} type\n     * @param {?} animationFinished\n     */\n    function MdSidenavToggleResult(type, animationFinished) {\n        this.type = type;\n        this.animationFinished = animationFinished;\n    }\n    return MdSidenavToggleResult;\n}());\n/**\n * <md-sidenav> component.\n *\n * This component corresponds to the drawer of the sidenav.\n *\n * Please refer to README.md for examples on how to use it.\n */\nvar MdSidenav = (function () {\n    /**\n     * @param {?} _elementRef The DOM element reference. Used for transition and width calculation.\n     *     If not available we do not hook on transitions.\n     * @param {?} _renderer\n     * @param {?} _focusTrapFactory\n     */\n    function MdSidenav(_elementRef, _renderer, _focusTrapFactory) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._align = 'start';\n        /** Mode of the sidenav; whether 'over' or 'side'. */\n        this.mode = 'over';\n        this._disableClose = false;\n        /** Whether the sidenav is opened. */\n        this._opened = false;\n        /** Event emitted when the sidenav is being opened. Use this to synchronize animations. */\n        this.onOpenStart = new EventEmitter();\n        /** Event emitted when the sidenav is fully opened. */\n        this.onOpen = new EventEmitter();\n        /** Event emitted when the sidenav is being closed. Use this to synchronize animations. */\n        this.onCloseStart = new EventEmitter();\n        /** Event emitted when the sidenav is fully closed. */\n        this.onClose = new EventEmitter();\n        /** Event emitted when the sidenav alignment changes. */\n        this.onAlignChanged = new EventEmitter();\n        this._toggleAnimationPromise = null;\n        this._resolveToggleAnimationPromise = null;\n        this._elementFocusedBeforeSidenavWasOpened = null;\n        this.onOpen.subscribe(function () {\n            _this._elementFocusedBeforeSidenavWasOpened = document.activeElement;\n            if (_this.isFocusTrapEnabled && _this._focusTrap) {\n                _this._focusTrap.focusFirstTabbableElementWhenReady();\n            }\n        });\n        this.onClose.subscribe(function () {\n            if (_this._elementFocusedBeforeSidenavWasOpened instanceof HTMLElement) {\n                _this._renderer.invokeElementMethod(_this._elementFocusedBeforeSidenavWasOpened, 'focus');\n            }\n            else {\n                _this._renderer.invokeElementMethod(_this._elementRef.nativeElement, 'blur');\n            }\n            _this._elementFocusedBeforeSidenavWasOpened = null;\n        });\n    }\n    Object.defineProperty(MdSidenav.prototype, \"align\", {\n        /**\n         * Direction which the sidenav is aligned in.\n         * @return {?}\n         */\n        get: function () { return this._align; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            // Make sure we have a valid value.\n            value = (value == 'end') ? 'end' : 'start';\n            if (value != this._align) {\n                this._align = value;\n                this.onAlignChanged.emit();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"disableClose\", {\n        /**\n         * Whether the sidenav can be closed with the escape key or not.\n         * @return {?}\n         */\n        get: function () { return this._disableClose; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._disableClose = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"isFocusTrapEnabled\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            // The focus trap is only enabled when the sidenav is open in any mode other than side.\n            return this.opened && this.mode !== 'side';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdSidenav.prototype.ngAfterContentInit = function () {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._focusTrap.enabled = this.isFocusTrapEnabled;\n        // This can happen when the sidenav is set to opened in\n        // the template and the transition hasn't ended.\n        if (this._toggleAnimationPromise) {\n            this._resolveToggleAnimationPromise(true);\n            this._toggleAnimationPromise = this._resolveToggleAnimationPromise = null;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdSidenav.prototype.ngOnDestroy = function () {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    };\n    Object.defineProperty(MdSidenav.prototype, \"opened\", {\n        /**\n         * Whether the sidenav is opened. We overload this because we trigger an event when it\n         * starts or end.\n         * @return {?}\n         */\n        get: function () { return this._opened; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) {\n            this.toggle(coerceBooleanProperty(v));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Open this sidenav, and return a Promise that will resolve when it's fully opened (or get\n     * rejected if it didn't).\n     * @return {?}\n     */\n    MdSidenav.prototype.open = function () {\n        return this.toggle(true);\n    };\n    /**\n     * Close this sidenav, and return a Promise that will resolve when it's fully closed (or get\n     * rejected if it didn't).\n     * @return {?}\n     */\n    MdSidenav.prototype.close = function () {\n        return this.toggle(false);\n    };\n    /**\n     * Toggle this sidenav. This is equivalent to calling open() when it's already opened, or\n     * close() when it's closed.\n     * @param {?=} isOpen Whether the sidenav should be open.\n     * @return {?} Resolves with the result of whether the sidenav was opened or closed.\n     */\n    MdSidenav.prototype.toggle = function (isOpen) {\n        var _this = this;\n        if (isOpen === void 0) { isOpen = !this.opened; }\n        // Shortcut it if we're already opened.\n        if (isOpen === this.opened) {\n            return this._toggleAnimationPromise ||\n                Promise.resolve(new MdSidenavToggleResult(isOpen ? 'open' : 'close', true));\n        }\n        this._opened = isOpen;\n        if (this._focusTrap) {\n            this._focusTrap.enabled = this.isFocusTrapEnabled;\n        }\n        if (isOpen) {\n            this.onOpenStart.emit();\n        }\n        else {\n            this.onCloseStart.emit();\n        }\n        if (this._toggleAnimationPromise) {\n            this._resolveToggleAnimationPromise(false);\n        }\n        this._toggleAnimationPromise = new Promise(function (resolve) {\n            _this._resolveToggleAnimationPromise = function (animationFinished) { return resolve(new MdSidenavToggleResult(isOpen ? 'open' : 'close', animationFinished)); };\n        });\n        return this._toggleAnimationPromise;\n    };\n    /**\n     * Handles the keyboard events.\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    MdSidenav.prototype.handleKeydown = function (event) {\n        if (event.keyCode === ESCAPE && !this.disableClose) {\n            this.close();\n            event.stopPropagation();\n        }\n    };\n    /**\n     * When transition has finished, set the internal state for classes and emit the proper event.\n     * The event passed is actually of type TransitionEvent, but that type is not available in\n     * Android so we use any.\n     * @param {?} transitionEvent\n     * @return {?}\n     */\n    MdSidenav.prototype._onTransitionEnd = function (transitionEvent) {\n        if (transitionEvent.target == this._elementRef.nativeElement\n            && transitionEvent.propertyName.endsWith('transform')) {\n            if (this._opened) {\n                this.onOpen.emit();\n            }\n            else {\n                this.onClose.emit();\n            }\n            if (this._toggleAnimationPromise) {\n                this._resolveToggleAnimationPromise(true);\n                this._toggleAnimationPromise = this._resolveToggleAnimationPromise = null;\n            }\n        }\n    };\n    Object.defineProperty(MdSidenav.prototype, \"_isClosing\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return !this._opened && !!this._toggleAnimationPromise;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"_isOpening\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._opened && !!this._toggleAnimationPromise;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"_isClosed\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return !this._opened && !this._toggleAnimationPromise;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"_isOpened\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._opened && !this._toggleAnimationPromise;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"_isEnd\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.align == 'end';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"_modeSide\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.mode == 'side';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"_modeOver\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.mode == 'over';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"_modePush\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.mode == 'push';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenav.prototype, \"_width\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            if (this._elementRef.nativeElement) {\n                return this._elementRef.nativeElement.offsetWidth;\n            }\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return MdSidenav;\n}());\nMdSidenav.decorators = [\n    { type: Component, args: [{ selector: 'md-sidenav, mat-sidenav',\n                // TODO(mmalerba): move template to separate file.\n                template: \"<ng-content></ng-content> \",\n                host: {\n                    '[class.mat-sidenav]': 'true',\n                    '(transitionend)': '_onTransitionEnd($event)',\n                    '(keydown)': 'handleKeydown($event)',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-sidenav-closed]': '_isClosed',\n                    '[class.mat-sidenav-closing]': '_isClosing',\n                    '[class.mat-sidenav-end]': '_isEnd',\n                    '[class.mat-sidenav-opened]': '_isOpened',\n                    '[class.mat-sidenav-opening]': '_isOpening',\n                    '[class.mat-sidenav-over]': '_modeOver',\n                    '[class.mat-sidenav-push]': '_modePush',\n                    '[class.mat-sidenav-side]': '_modeSide',\n                    'tabIndex': '-1'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSidenav.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: Renderer, },\n    { type: FocusTrapFactory, },\n]; };\nMdSidenav.propDecorators = {\n    'align': [{ type: Input },],\n    'mode': [{ type: Input },],\n    'disableClose': [{ type: Input },],\n    'onOpenStart': [{ type: Output, args: ['open-start',] },],\n    'onOpen': [{ type: Output, args: ['open',] },],\n    'onCloseStart': [{ type: Output, args: ['close-start',] },],\n    'onClose': [{ type: Output, args: ['close',] },],\n    'onAlignChanged': [{ type: Output, args: ['align-changed',] },],\n    'opened': [{ type: Input },],\n};\n/**\n * <md-sidenav-container> component.\n *\n * This is the parent component to one or two <md-sidenav>s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nvar MdSidenavContainer = (function () {\n    /**\n     * @param {?} _dir\n     * @param {?} _element\n     * @param {?} _renderer\n     * @param {?} _ngZone\n     */\n    function MdSidenavContainer(_dir, _element, _renderer, _ngZone) {\n        var _this = this;\n        this._dir = _dir;\n        this._element = _element;\n        this._renderer = _renderer;\n        this._ngZone = _ngZone;\n        /** Event emitted when the sidenav backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Whether to enable open/close trantions. */\n        this._enableTransitions = false;\n        // If a `Dir` directive exists up the tree, listen direction changes and update the left/right\n        // properties to point to the proper start/end.\n        if (_dir != null) {\n            _dir.dirChange.subscribe(function () { return _this._validateDrawers(); });\n        }\n    }\n    Object.defineProperty(MdSidenavContainer.prototype, \"start\", {\n        /**\n         * The sidenav child with the `start` alignment.\n         * @return {?}\n         */\n        get: function () { return this._start; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdSidenavContainer.prototype, \"end\", {\n        /**\n         * The sidenav child with the `end` alignment.\n         * @return {?}\n         */\n        get: function () { return this._end; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdSidenavContainer.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        // On changes, assert on consistency.\n        this._sidenavs.changes.subscribe(function () { return _this._validateDrawers(); });\n        this._sidenavs.forEach(function (sidenav) {\n            _this._watchSidenavToggle(sidenav);\n            _this._watchSidenavAlign(sidenav);\n        });\n        this._validateDrawers();\n        // Give the view a chance to render the initial state, then enable transitions.\n        this._ngZone.onMicrotaskEmpty.first().subscribe(function () { return _this._enableTransitions = true; });\n    };\n    /**\n     * Subscribes to sidenav events in order to set a class on the main container element when the\n     * sidenav is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     * @param {?} sidenav\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._watchSidenavToggle = function (sidenav) {\n        var _this = this;\n        if (!sidenav || sidenav.mode === 'side') {\n            return;\n        }\n        sidenav.onOpen.subscribe(function () { return _this._setContainerClass(sidenav, true); });\n        sidenav.onClose.subscribe(function () { return _this._setContainerClass(sidenav, false); });\n    };\n    /**\n     * Subscribes to sidenav onAlignChanged event in order to re-validate drawers when the align\n     * changes.\n     * @param {?} sidenav\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._watchSidenavAlign = function (sidenav) {\n        var _this = this;\n        if (!sidenav) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping sides at the same time.\n        sidenav.onAlignChanged.subscribe(function () { return _this._ngZone.onMicrotaskEmpty.first().subscribe(function () { return _this._validateDrawers(); }); });\n    };\n    /**\n     * Toggles the 'mat-sidenav-opened' class on the main 'md-sidenav-container' element.\n     * @param {?} sidenav\n     * @param {?} bool\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._setContainerClass = function (sidenav, bool) {\n        this._renderer.setElementClass(this._element.nativeElement, 'mat-sidenav-opened', bool);\n    };\n    /**\n     * Validate the state of the sidenav children components.\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._validateDrawers = function () {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end sidenav.\n        // NOTE: We must call toArray on _sidenavs even though it's iterable\n        // (see https://github.com/Microsoft/TypeScript/issues/3164).\n        for (var _i = 0, _a = this._sidenavs.toArray(); _i < _a.length; _i++) {\n            var sidenav = _a[_i];\n            if (sidenav.align == 'end') {\n                if (this._end != null) {\n                    throw new MdDuplicatedSidenavError('end');\n                }\n                this._end = sidenav;\n            }\n            else {\n                if (this._start != null) {\n                    throw new MdDuplicatedSidenavError('start');\n                }\n                this._start = sidenav;\n            }\n        }\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir == null || this._dir.value == 'ltr') {\n            this._left = this._start;\n            this._right = this._end;\n        }\n        else {\n            this._left = this._end;\n            this._right = this._start;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._onBackdropClicked = function () {\n        this.backdropClick.emit();\n        this._closeModalSidenav();\n    };\n    /**\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._closeModalSidenav = function () {\n        // Close all open sidenav's where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter(function (sidenav) { return sidenav && !sidenav.disableClose && sidenav.mode !== 'side'; })\n            .forEach(function (sidenav) { return sidenav.close(); });\n    };\n    /**\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._isShowingBackdrop = function () {\n        return (this._isSidenavOpen(this._start) && this._start.mode != 'side')\n            || (this._isSidenavOpen(this._end) && this._end.mode != 'side');\n    };\n    /**\n     * @param {?} side\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._isSidenavOpen = function (side) {\n        return side != null && side.opened;\n    };\n    /**\n     * Return the width of the sidenav, if it's in the proper mode and opened.\n     * This may relayout the view, so do not call this often.\n     * @param {?} sidenav\n     * @param {?} mode\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._getSidenavEffectiveWidth = function (sidenav, mode) {\n        return (this._isSidenavOpen(sidenav) && sidenav.mode == mode) ? sidenav._width : 0;\n    };\n    /**\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._getMarginLeft = function () {\n        return this._getSidenavEffectiveWidth(this._left, 'side');\n    };\n    /**\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._getMarginRight = function () {\n        return this._getSidenavEffectiveWidth(this._right, 'side');\n    };\n    /**\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._getPositionLeft = function () {\n        return this._getSidenavEffectiveWidth(this._left, 'push');\n    };\n    /**\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._getPositionRight = function () {\n        return this._getSidenavEffectiveWidth(this._right, 'push');\n    };\n    /**\n     * Returns the horizontal offset for the content area.  There should never be a value for both\n     * left and right, so by subtracting the right value from the left value, we should always get\n     * the appropriate offset.\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._getPositionOffset = function () {\n        return this._getPositionLeft() - this._getPositionRight();\n    };\n    /**\n     * This is using [ngStyle] rather than separate [style...] properties because [style.transform]\n     * doesn't seem to work right now.\n     * @return {?}\n     */\n    MdSidenavContainer.prototype._getStyles = function () {\n        return {\n            marginLeft: this._getMarginLeft() + \"px\",\n            marginRight: this._getMarginRight() + \"px\",\n            transform: \"translate3d(\" + this._getPositionOffset() + \"px, 0, 0)\"\n        };\n    };\n    return MdSidenavContainer;\n}());\nMdSidenavContainer.decorators = [\n    { type: Component, args: [{ selector: 'md-sidenav-container, mat-sidenav-container',\n                // Do not use ChangeDetectionStrategy.OnPush. It does not work for this component because\n                // technically it is a sibling of MdSidenav (on the content tree) and isn't updated when MdSidenav\n                // changes its state.\n                template: \"<div class=\\\"mat-sidenav-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" [class.mat-sidenav-shown]=\\\"_isShowingBackdrop()\\\"></div> <ng-content select=\\\"md-sidenav, mat-sidenav\\\"></ng-content> <div class=\\\"mat-sidenav-content\\\" [ngStyle]=\\\"_getStyles()\\\" cdk-scrollable> <ng-content></ng-content> </div> \",\n                styles: [\".mat-sidenav-container{position:relative;transform:translate3d(0,0,0);box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-sidenav-container[fullscreen]{position:absolute;top:0;left:0;right:0;bottom:0}.mat-sidenav-container[fullscreen].mat-sidenav-opened{overflow:hidden}.mat-sidenav-backdrop{position:absolute;top:0;left:0;right:0;bottom:0;display:block;z-index:2;visibility:hidden}.mat-sidenav-backdrop.mat-sidenav-shown{visibility:visible}@media screen and (-ms-high-contrast:active){.mat-sidenav-backdrop{opacity:.5}}.mat-sidenav-content{position:relative;transform:translate3d(0,0,0);display:block;height:100%;overflow:auto}.mat-sidenav{position:relative;transform:translate3d(0,0,0);display:block;position:absolute;top:0;bottom:0;z-index:3;min-width:5vw;outline:0;box-sizing:border-box;height:100%;overflow-y:auto;transform:translate3d(-100%,0,0)}.mat-sidenav.mat-sidenav-closed{visibility:hidden}.mat-sidenav.mat-sidenav-opened,.mat-sidenav.mat-sidenav-opening{transform:translate3d(0,0,0)}.mat-sidenav.mat-sidenav-side{z-index:1}.mat-sidenav.mat-sidenav-end{right:0;transform:translate3d(100%,0,0)}.mat-sidenav.mat-sidenav-end.mat-sidenav-closed{visibility:hidden}.mat-sidenav.mat-sidenav-end.mat-sidenav-opened,.mat-sidenav.mat-sidenav-end.mat-sidenav-opening{transform:translate3d(0,0,0)}[dir=rtl] .mat-sidenav{transform:translate3d(100%,0,0)}[dir=rtl] .mat-sidenav.mat-sidenav-closed{visibility:hidden}[dir=rtl] .mat-sidenav.mat-sidenav-opened,[dir=rtl] .mat-sidenav.mat-sidenav-opening{transform:translate3d(0,0,0)}[dir=rtl] .mat-sidenav.mat-sidenav-end{left:0;right:auto;transform:translate3d(-100%,0,0)}[dir=rtl] .mat-sidenav.mat-sidenav-end.mat-sidenav-closed{visibility:hidden}[dir=rtl] .mat-sidenav.mat-sidenav-end.mat-sidenav-opened,[dir=rtl] .mat-sidenav.mat-sidenav-end.mat-sidenav-opening{transform:translate3d(0,0,0)}.mat-sidenav.mat-sidenav-opened:not(.mat-sidenav-side),.mat-sidenav.mat-sidenav-opening:not(.mat-sidenav-side){box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)} /*# sourceMappingURL=sidenav.css.map */ \",\n                    \".mat-sidenav-transition .mat-sidenav{transition:transform .4s cubic-bezier(.25,.8,.25,1)}.mat-sidenav-transition .mat-sidenav-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-sidenav-transition .mat-sidenav-backdrop.mat-sidenav-shown{transition:background-color .4s cubic-bezier(.25,.8,.25,1)} /*# sourceMappingURL=sidenav-transitions.css.map */ \"],\n                host: {\n                    '[class.mat-sidenav-container]': 'true',\n                    '[class.mat-sidenav-transition]': '_enableTransitions',\n                },\n                encapsulation: ViewEncapsulation.None,\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSidenavContainer.ctorParameters = function () { return [\n    { type: Dir, decorators: [{ type: Optional },] },\n    { type: ElementRef, },\n    { type: Renderer, },\n    { type: NgZone, },\n]; };\nMdSidenavContainer.propDecorators = {\n    '_sidenavs': [{ type: ContentChildren, args: [MdSidenav,] },],\n    'backdropClick': [{ type: Output },],\n};\nvar MdSidenavModule = (function () {\n    function MdSidenavModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdSidenavModule.forRoot = function () {\n        return {\n            ngModule: MdSidenavModule,\n            providers: []\n        };\n    };\n    return MdSidenavModule;\n}());\nMdSidenavModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, CompatibilityModule, A11yModule, OverlayModule],\n                exports: [MdSidenavContainer, MdSidenav, CompatibilityModule],\n                declarations: [MdSidenavContainer, MdSidenav],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSidenavModule.ctorParameters = function () { return []; };\nvar MdListDivider = (function () {\n    function MdListDivider() {\n    }\n    return MdListDivider;\n}());\nMdListDivider.decorators = [\n    { type: Directive, args: [{\n                selector: 'md-divider, mat-divider'\n            },] },\n];\n/**\n * @nocollapse\n */\nMdListDivider.ctorParameters = function () { return []; };\n/**\n * Token used to inject the list type into child MdListItem components so they can know whether\n * they're in a nav list (and thus should use an MdRipple).\n */\nvar LIST_TYPE_TOKEN = new OpaqueToken('list_type');\nvar NORMAL_LIST_TYPE = 'normal_list_type';\nvar NAV_LIST_TYPE = 'nav_list_type';\nvar MdList = (function () {\n    function MdList() {\n    }\n    return MdList;\n}());\nMdList.decorators = [\n    { type: Component, args: [{ selector: 'md-list, mat-list, md-nav-list, mat-nav-list',\n                host: {\n                    'role': 'list'\n                },\n                template: '<ng-content></ng-content>',\n                styles: [\".mat-list,.mat-nav-list{padding-top:8px;display:block}.mat-list .mat-subheader,.mat-nav-list .mat-subheader{display:block;box-sizing:border-box;height:48px;padding:16px;margin:0;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:14px;font-weight:500}.mat-list .mat-subheader:first-child,.mat-nav-list .mat-subheader:first-child{margin-top:-8px}.mat-list .mat-list-item,.mat-nav-list .mat-list-item{display:block}.mat-list .mat-list-item .mat-list-item-content,.mat-nav-list .mat-list-item .mat-list-item-content{display:flex;flex-direction:row;align-items:center;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;box-sizing:border-box;font-size:16px;height:48px;padding:0 16px;position:relative}.mat-list .mat-list-item.mat-list-item-avatar .mat-list-item-content,.mat-nav-list .mat-list-item.mat-list-item-avatar .mat-list-item-content{height:56px}.mat-list .mat-list-item.mat-2-line .mat-list-item-content,.mat-nav-list .mat-list-item.mat-2-line .mat-list-item-content{height:72px}.mat-list .mat-list-item.mat-3-line .mat-list-item-content,.mat-nav-list .mat-list-item.mat-3-line .mat-list-item-content{height:88px}.mat-list .mat-list-item.mat-multi-line .mat-list-item-content,.mat-nav-list .mat-list-item.mat-multi-line .mat-list-item-content{height:100%;padding:8px 16px}.mat-list .mat-list-item .mat-list-text,.mat-nav-list .mat-list-item .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0 16px}.mat-list .mat-list-item .mat-list-text>*,.mat-nav-list .mat-list-item .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list .mat-list-item .mat-list-text:empty,.mat-nav-list .mat-list-item .mat-list-text:empty{display:none}.mat-list .mat-list-item .mat-list-text:first-child,.mat-nav-list .mat-list-item .mat-list-text:first-child{padding:0}.mat-list .mat-list-item .mat-list-avatar,.mat-nav-list .mat-list-item .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%}.mat-list .mat-list-item .mat-list-icon,.mat-nav-list .mat-list-item .mat-list-icon{width:24px;height:24px;border-radius:50%;padding:4px}.mat-list .mat-list-item .mat-line,.mat-nav-list .mat-list-item .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-list .mat-list-item .mat-line:nth-child(n+2),.mat-nav-list .mat-list-item .mat-line:nth-child(n+2){font-size:14px}.mat-list[dense],.mat-nav-list[dense]{padding-top:4px;display:block}.mat-list[dense] .mat-subheader,.mat-nav-list[dense] .mat-subheader{display:block;box-sizing:border-box;height:40px;padding:16px;margin:0;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:13px;font-weight:500}.mat-list[dense] .mat-subheader:first-child,.mat-nav-list[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list[dense] .mat-list-item,.mat-nav-list[dense] .mat-list-item{display:block}.mat-list[dense] .mat-list-item .mat-list-item-content,.mat-nav-list[dense] .mat-list-item .mat-list-item-content{display:flex;flex-direction:row;align-items:center;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;box-sizing:border-box;font-size:13px;height:40px;padding:0 16px;position:relative}.mat-list[dense] .mat-list-item.mat-list-item-avatar .mat-list-item-content,.mat-nav-list[dense] .mat-list-item.mat-list-item-avatar .mat-list-item-content{height:48px}.mat-list[dense] .mat-list-item.mat-2-line .mat-list-item-content,.mat-nav-list[dense] .mat-list-item.mat-2-line .mat-list-item-content{height:60px}.mat-list[dense] .mat-list-item.mat-3-line .mat-list-item-content,.mat-nav-list[dense] .mat-list-item.mat-3-line .mat-list-item-content{height:76px}.mat-list[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-nav-list[dense] .mat-list-item.mat-multi-line .mat-list-item-content{height:100%;padding:8px 16px}.mat-list[dense] .mat-list-item .mat-list-text,.mat-nav-list[dense] .mat-list-item .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0 16px}.mat-list[dense] .mat-list-item .mat-list-text>*,.mat-nav-list[dense] .mat-list-item .mat-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-list[dense] .mat-list-item .mat-list-text:empty,.mat-nav-list[dense] .mat-list-item .mat-list-text:empty{display:none}.mat-list[dense] .mat-list-item .mat-list-text:first-child,.mat-nav-list[dense] .mat-list-item .mat-list-text:first-child{padding:0}.mat-list[dense] .mat-list-item .mat-list-avatar,.mat-nav-list[dense] .mat-list-item .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%}.mat-list[dense] .mat-list-item .mat-list-icon,.mat-nav-list[dense] .mat-list-item .mat-list-icon{width:24px;height:24px;border-radius:50%;padding:4px}.mat-list[dense] .mat-list-item .mat-line,.mat-nav-list[dense] .mat-list-item .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-list[dense] .mat-list-item .mat-line:nth-child(n+2),.mat-nav-list[dense] .mat-list-item .mat-line:nth-child(n+2){font-size:13px}.mat-divider{display:block;border-top-style:solid;border-top-width:1px;margin:0}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item-content{cursor:pointer}.mat-nav-list .mat-list-item-content.mat-list-item-focus,.mat-nav-list .mat-list-item-content:hover{outline:0} /*# sourceMappingURL=list.css.map */ \"],\n                providers: [{ provide: LIST_TYPE_TOKEN, useValue: NORMAL_LIST_TYPE }],\n                encapsulation: ViewEncapsulation.None\n            },] },\n];\n/**\n * @nocollapse\n */\nMdList.ctorParameters = function () { return []; };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdListCssMatStyler = (function () {\n    function MdListCssMatStyler() {\n    }\n    return MdListCssMatStyler;\n}());\nMdListCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: 'md-list, mat-list',\n                host: {\n                    '[class.mat-list]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdListCssMatStyler.ctorParameters = function () { return []; };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdNavListCssMatStyler = (function () {\n    function MdNavListCssMatStyler() {\n    }\n    return MdNavListCssMatStyler;\n}());\nMdNavListCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: 'md-nav-list, mat-nav-list',\n                host: {\n                    '[class.mat-nav-list]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdNavListCssMatStyler.ctorParameters = function () { return []; };\n/**\n * Directive to set the ListType token to NAV_LIST_TYPE.\n */\nvar MdNavListTokenSetter = (function () {\n    function MdNavListTokenSetter() {\n    }\n    return MdNavListTokenSetter;\n}());\nMdNavListTokenSetter.decorators = [\n    { type: Directive, args: [{\n                selector: 'md-nav-list, mat-nav-list',\n                providers: [{ provide: LIST_TYPE_TOKEN, useValue: NAV_LIST_TYPE }],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdNavListTokenSetter.ctorParameters = function () { return []; };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdDividerCssMatStyler = (function () {\n    function MdDividerCssMatStyler() {\n    }\n    return MdDividerCssMatStyler;\n}());\nMdDividerCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: 'md-divider, mat-divider',\n                host: {\n                    '[class.mat-divider]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdDividerCssMatStyler.ctorParameters = function () { return []; };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdListAvatarCssMatStyler = (function () {\n    function MdListAvatarCssMatStyler() {\n    }\n    return MdListAvatarCssMatStyler;\n}());\nMdListAvatarCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: '[md-list-avatar], [mat-list-avatar]',\n                host: {\n                    '[class.mat-list-avatar]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdListAvatarCssMatStyler.ctorParameters = function () { return []; };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdListIconCssMatStyler = (function () {\n    function MdListIconCssMatStyler() {\n    }\n    return MdListIconCssMatStyler;\n}());\nMdListIconCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: '[md-list-icon], [mat-list-icon]',\n                host: {\n                    '[class.mat-list-icon]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdListIconCssMatStyler.ctorParameters = function () { return []; };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdListSubheaderCssMatStyler = (function () {\n    function MdListSubheaderCssMatStyler() {\n    }\n    return MdListSubheaderCssMatStyler;\n}());\nMdListSubheaderCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: '[md-subheader], [mat-subheader]',\n                host: {\n                    '[class.mat-subheader]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdListSubheaderCssMatStyler.ctorParameters = function () { return []; };\nvar MdListItem = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _element\n     * @param {?} _listType\n     */\n    function MdListItem(_renderer, _element, _listType) {\n        this._renderer = _renderer;\n        this._element = _element;\n        this._listType = _listType;\n        /**\n         * Whether the ripple effect on click should be disabled. This applies only to list items that\n         * are children of an md-nav-list; md-list items never have ripples.\n         */\n        this.disableRipple = false;\n        this._hasFocus = false;\n    }\n    Object.defineProperty(MdListItem.prototype, \"_hasAvatar\", {\n        /**\n         * @param {?} avatar\n         * @return {?}\n         */\n        set: function (avatar) {\n            this._renderer.setElementClass(this._element.nativeElement, 'mat-list-item-avatar', avatar != null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdListItem.prototype.ngAfterContentInit = function () {\n        this._lineSetter = new MdLineSetter(this._lines, this._renderer, this._element);\n    };\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    MdListItem.prototype.isRippleEnabled = function () {\n        return !this.disableRipple && (this._listType === NAV_LIST_TYPE);\n    };\n    /**\n     * @return {?}\n     */\n    MdListItem.prototype._handleFocus = function () {\n        this._hasFocus = true;\n    };\n    /**\n     * @return {?}\n     */\n    MdListItem.prototype._handleBlur = function () {\n        this._hasFocus = false;\n    };\n    return MdListItem;\n}());\nMdListItem.decorators = [\n    { type: Component, args: [{ selector: 'md-list-item, mat-list-item, a[md-list-item], a[mat-list-item]',\n                host: {\n                    'role': 'listitem',\n                    '(focus)': '_handleFocus()',\n                    '(blur)': '_handleBlur()',\n                    '[class.mat-list-item]': 'true',\n                },\n                template: \"<div class=\\\"mat-list-item-content\\\" [class.mat-list-item-focus]=\\\"_hasFocus\\\" md-ripple [mdRippleDisabled]=\\\"!isRippleEnabled()\\\"> <ng-content select=\\\"[md-list-avatar],[md-list-icon], [mat-list-avatar], [mat-list-icon]\\\"></ng-content> <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[md-line], [mat-line]\\\"></ng-content></div> <ng-content></ng-content> </div> \",\n                encapsulation: ViewEncapsulation.None\n            },] },\n];\n/**\n * @nocollapse\n */\nMdListItem.ctorParameters = function () { return [\n    { type: Renderer, },\n    { type: ElementRef, },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIST_TYPE_TOKEN,] },] },\n]; };\nMdListItem.propDecorators = {\n    'disableRipple': [{ type: Input },],\n    '_lines': [{ type: ContentChildren, args: [MdLine,] },],\n    '_hasAvatar': [{ type: ContentChild, args: [MdListAvatarCssMatStyler,] },],\n};\nvar MdListModule = (function () {\n    function MdListModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdListModule.forRoot = function () {\n        return {\n            ngModule: MdListModule,\n            providers: []\n        };\n    };\n    return MdListModule;\n}());\nMdListModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MdLineModule, MdRippleModule, CompatibilityModule],\n                exports: [\n                    MdList,\n                    MdListItem,\n                    MdListDivider,\n                    MdListAvatarCssMatStyler,\n                    MdLineModule,\n                    CompatibilityModule,\n                    MdListIconCssMatStyler,\n                    MdListCssMatStyler,\n                    MdNavListCssMatStyler,\n                    MdDividerCssMatStyler,\n                    MdListSubheaderCssMatStyler,\n                    MdNavListTokenSetter,\n                ],\n                declarations: [\n                    MdList,\n                    MdListItem,\n                    MdListDivider,\n                    MdListAvatarCssMatStyler,\n                    MdListIconCssMatStyler,\n                    MdListCssMatStyler,\n                    MdNavListCssMatStyler,\n                    MdDividerCssMatStyler,\n                    MdListSubheaderCssMatStyler,\n                    MdNavListTokenSetter,\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdListModule.ctorParameters = function () { return []; };\n/**\n * Converts values into strings. Falsy values become empty strings.\n * \\@docs-private\n * @param {?} value\n * @return {?}\n */\nfunction coerceToString(value) {\n    return \"\" + (value || '');\n}\n/**\n * Converts a value that might be a string into a number.\n * \\@docs-private\n * @param {?} value\n * @return {?}\n */\nfunction coerceToNumber(value) {\n    return typeof value === 'string' ? parseInt(value, 10) : value;\n}\nvar MdGridTile = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _element\n     */\n    function MdGridTile(_renderer, _element) {\n        this._renderer = _renderer;\n        this._element = _element;\n        this._rowspan = 1;\n        this._colspan = 1;\n    }\n    Object.defineProperty(MdGridTile.prototype, \"rowspan\", {\n        /**\n         * Amount of rows that the grid tile takes up.\n         * @return {?}\n         */\n        get: function () { return this._rowspan; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._rowspan = coerceToNumber(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdGridTile.prototype, \"colspan\", {\n        /**\n         * Amount of columns that the grid tile takes up.\n         * @return {?}\n         */\n        get: function () { return this._colspan; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._colspan = coerceToNumber(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n     * \"Changed after checked\" errors that would occur with HostBinding.\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    MdGridTile.prototype._setStyle = function (property, value) {\n        this._renderer.setElementStyle(this._element.nativeElement, property, value);\n    };\n    return MdGridTile;\n}());\nMdGridTile.decorators = [\n    { type: Component, args: [{ selector: 'md-grid-tile, mat-grid-tile',\n                host: {\n                    'role': 'listitem',\n                    '[class.mat-grid-tile]': 'true',\n                },\n                template: \"<!-- TODO(kara): Revisit why this is a figure.--> <figure class=\\\"mat-figure\\\"> <ng-content></ng-content> </figure>\",\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{display:flex;position:absolute;align-items:center;justify-content:center;height:100%;top:0;right:0;bottom:0;left:0;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-footer,.mat-grid-tile .mat-grid-tile-header{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;font-size:16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-footer .mat-line,.mat-grid-tile .mat-grid-tile-header .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile .mat-grid-tile-footer .mat-line:nth-child(n+2),.mat-grid-tile .mat-grid-tile-header .mat-line:nth-child(n+2){font-size:12px}.mat-grid-tile .mat-grid-tile-footer>*,.mat-grid-tile .mat-grid-tile-header>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-tile-footer.mat-2-line,.mat-grid-tile .mat-grid-tile-header.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none} /*# sourceMappingURL=grid-list.css.map */ \"],\n                encapsulation: ViewEncapsulation.None,\n            },] },\n];\n/**\n * @nocollapse\n */\nMdGridTile.ctorParameters = function () { return [\n    { type: Renderer, },\n    { type: ElementRef, },\n]; };\nMdGridTile.propDecorators = {\n    'rowspan': [{ type: Input },],\n    'colspan': [{ type: Input },],\n};\nvar MdGridTileText = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _element\n     */\n    function MdGridTileText(_renderer, _element) {\n        this._renderer = _renderer;\n        this._element = _element;\n    }\n    /**\n     * @return {?}\n     */\n    MdGridTileText.prototype.ngAfterContentInit = function () {\n        this._lineSetter = new MdLineSetter(this._lines, this._renderer, this._element);\n    };\n    return MdGridTileText;\n}());\nMdGridTileText.decorators = [\n    { type: Component, args: [{ selector: 'md-grid-tile-header, mat-grid-tile-header, md-grid-tile-footer, mat-grid-tile-footer',\n                template: \"<ng-content select=\\\"[md-grid-avatar], [mat-grid-avatar]\\\"></ng-content> <div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[md-line], [mat-line]\\\"></ng-content></div> <ng-content></ng-content> \"\n            },] },\n];\n/**\n * @nocollapse\n */\nMdGridTileText.ctorParameters = function () { return [\n    { type: Renderer, },\n    { type: ElementRef, },\n]; };\nMdGridTileText.propDecorators = {\n    '_lines': [{ type: ContentChildren, args: [MdLine,] },],\n};\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdGridAvatarCssMatStyler = (function () {\n    function MdGridAvatarCssMatStyler() {\n    }\n    return MdGridAvatarCssMatStyler;\n}());\nMdGridAvatarCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: '[md-grid-avatar], [mat-grid-avatar]',\n                host: {\n                    '[class.mat-grid-avatar]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdGridAvatarCssMatStyler.ctorParameters = function () { return []; };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdGridTileHeaderCssMatStyler = (function () {\n    function MdGridTileHeaderCssMatStyler() {\n    }\n    return MdGridTileHeaderCssMatStyler;\n}());\nMdGridTileHeaderCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: 'md-grid-tile-header, mat-grid-tile-header',\n                host: {\n                    '[class.mat-grid-tile-header]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdGridTileHeaderCssMatStyler.ctorParameters = function () { return []; };\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdGridTileFooterCssMatStyler = (function () {\n    function MdGridTileFooterCssMatStyler() {\n    }\n    return MdGridTileFooterCssMatStyler;\n}());\nMdGridTileFooterCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: 'md-grid-tile-footer, mat-grid-tile-footer',\n                host: {\n                    '[class.mat-grid-tile-footer]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdGridTileFooterCssMatStyler.ctorParameters = function () { return []; };\n/**\n * Exception thrown when cols property is missing from grid-list\n * \\@docs-private\n */\nvar MdGridListColsError = (function (_super) {\n    __extends(MdGridListColsError, _super);\n    function MdGridListColsError() {\n        return _super.call(this, \"md-grid-list: must pass in number of columns. Example: <md-grid-list cols=\\\"3\\\">\") || this;\n    }\n    return MdGridListColsError;\n}(MdError));\n/**\n * Exception thrown when a tile's colspan is longer than the number of cols in list\n * \\@docs-private\n */\nvar MdGridTileTooWideError = (function (_super) {\n    __extends(MdGridTileTooWideError, _super);\n    /**\n     * @param {?} cols\n     * @param {?} listLength\n     */\n    function MdGridTileTooWideError(cols, listLength) {\n        return _super.call(this, \"md-grid-list: tile with colspan \" + cols + \" is wider than grid with cols=\\\"\" + listLength + \"\\\".\") || this;\n    }\n    return MdGridTileTooWideError;\n}(MdError));\n/**\n * Exception thrown when an invalid ratio is passed in as a rowHeight\n * \\@docs-private\n */\nvar MdGridListBadRatioError = (function (_super) {\n    __extends(MdGridListBadRatioError, _super);\n    /**\n     * @param {?} value\n     */\n    function MdGridListBadRatioError(value) {\n        return _super.call(this, \"md-grid-list: invalid ratio given for row-height: \\\"\" + value + \"\\\"\") || this;\n    }\n    return MdGridListBadRatioError;\n}(MdError));\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n *\n * \\@docs-private\n */\nvar TileCoordinator = (function () {\n    /**\n     * @param {?} numColumns\n     * @param {?} tiles\n     */\n    function TileCoordinator(numColumns, tiles) {\n        var _this = this;\n        /** Index at which the search for the next gap will start. */\n        this.columnIndex = 0;\n        /** The current row index. */\n        this.rowIndex = 0;\n        this.tracker = new Array(numColumns);\n        this.tracker.fill(0, 0, this.tracker.length);\n        this.positions = tiles.map(function (tile) { return _this._trackTile(tile); });\n    }\n    Object.defineProperty(TileCoordinator.prototype, \"rowCount\", {\n        /**\n         * Gets the total number of rows occupied by tiles\n         * @return {?}\n         */\n        get: function () { return this.rowIndex + 1; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TileCoordinator.prototype, \"rowspan\", {\n        /**\n         * Gets the total span of rows occupied by tiles.\n         * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ lastRowMax = Math.max.apply(Math, this.tracker);\n            // if any of the tiles has a rowspan that pushes it beyond the total row count,\n            // add the difference to the rowcount\n            return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Calculates the row and col position of a tile.\n     * @param {?} tile\n     * @return {?}\n     */\n    TileCoordinator.prototype._trackTile = function (tile) {\n        // Find a gap large enough for this tile.\n        var /** @type {?} */ gapStartIndex = this._findMatchingGap(tile.colspan);\n        // Place tile in the resulting gap.\n        this._markTilePosition(gapStartIndex, tile);\n        // The next time we look for a gap, the search will start at columnIndex, which should be\n        // immediately after the tile that has just been placed.\n        this.columnIndex = gapStartIndex + tile.colspan;\n        return new TilePosition(this.rowIndex, gapStartIndex);\n    };\n    /**\n     * Finds the next available space large enough to fit the tile.\n     * @param {?} tileCols\n     * @return {?}\n     */\n    TileCoordinator.prototype._findMatchingGap = function (tileCols) {\n        if (tileCols > this.tracker.length) {\n            throw new MdGridTileTooWideError(tileCols, this.tracker.length);\n        }\n        // Start index is inclusive, end index is exclusive.\n        var /** @type {?} */ gapStartIndex = -1;\n        var /** @type {?} */ gapEndIndex = -1;\n        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n        do {\n            // If we've reached the end of the row, go to the next row.\n            if (this.columnIndex + tileCols > this.tracker.length) {\n                this._nextRow();\n                continue;\n            }\n            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n            // If there are no more empty spaces in this row at all, move on to the next row.\n            if (gapStartIndex == -1) {\n                this._nextRow();\n                continue;\n            }\n            gapEndIndex = this._findGapEndIndex(gapStartIndex);\n            // If a gap large enough isn't found, we want to start looking immediately after the current\n            // gap on the next iteration.\n            this.columnIndex = gapStartIndex + 1;\n        } while (gapEndIndex - gapStartIndex < tileCols);\n        return gapStartIndex;\n    };\n    /**\n     * Move \"down\" to the next row.\n     * @return {?}\n     */\n    TileCoordinator.prototype._nextRow = function () {\n        this.columnIndex = 0;\n        this.rowIndex++;\n        // Decrement all spaces by one to reflect moving down one row.\n        for (var /** @type {?} */ i = 0; i < this.tracker.length; i++) {\n            this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n        }\n    };\n    /**\n     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n     * The gap ends when a non-zero value is found.\n     * @param {?} gapStartIndex\n     * @return {?}\n     */\n    TileCoordinator.prototype._findGapEndIndex = function (gapStartIndex) {\n        for (var /** @type {?} */ i = gapStartIndex + 1; i < this.tracker.length; i++) {\n            if (this.tracker[i] != 0) {\n                return i;\n            }\n        }\n        // The gap ends with the end of the row.\n        return this.tracker.length;\n    };\n    /**\n     * Update the tile tracker to account for the given tile in the given space.\n     * @param {?} start\n     * @param {?} tile\n     * @return {?}\n     */\n    TileCoordinator.prototype._markTilePosition = function (start, tile) {\n        for (var /** @type {?} */ i = 0; i < tile.colspan; i++) {\n            this.tracker[start + i] = tile.rowspan;\n        }\n    };\n    return TileCoordinator;\n}());\n/**\n * Simple data structure for tile position (row, col).\n * \\@docs-private\n */\nvar TilePosition = (function () {\n    /**\n     * @param {?} row\n     * @param {?} col\n     */\n    function TilePosition(row, col) {\n        this.row = row;\n        this.col = col;\n    }\n    return TilePosition;\n}());\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * \\@docs-private\n */\nvar TileStyler = (function () {\n    function TileStyler() {\n        this._rows = 0;\n        this._rowspan = 0;\n    }\n    /**\n     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n     * because these properties haven't been calculated by that point.\n     *\n     * @param {?} gutterSize Size of the grid's gutter.\n     * @param {?} tracker Instance of the TileCoordinator.\n     * @param {?} cols Amount of columns in the grid.\n     * @param {?} direction Layout direction of the grid.\n     * @return {?}\n     */\n    TileStyler.prototype.init = function (gutterSize, tracker, cols, direction) {\n        this._gutterSize = normalizeUnits(gutterSize);\n        this._rows = tracker.rowCount;\n        this._rowspan = tracker.rowspan;\n        this._cols = cols;\n        this._direction = direction;\n    };\n    /**\n     * Computes the amount of space a single 1x1 tile would take up (width or height).\n     * Used as a basis for other calculations.\n     * @param {?} sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n     * @param {?} gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n     * @return {?} The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n     */\n    TileStyler.prototype.getBaseTileSize = function (sizePercent, gutterFraction) {\n        // Take the base size percent (as would be if evenly dividing the size between cells),\n        // and then subtracting the size of one gutter. However, since there are no gutters on the\n        // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n        // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n        // edge evenly among the cells).\n        return \"(\" + sizePercent + \"% - ( \" + this._gutterSize + \" * \" + gutterFraction + \" ))\";\n    };\n    /**\n     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} offset Number of tiles that have already been rendered in the row/column.\n     * @return {?} Position of the tile as a CSS calc() expression.\n     */\n    TileStyler.prototype.getTilePosition = function (baseSize, offset) {\n        // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n        // row/column (offset).\n        return calc(\"(\" + baseSize + \" + \" + this._gutterSize + \") * \" + offset);\n    };\n    /**\n     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} span The tile's rowspan or colspan.\n     * @return {?} Size of the tile as a CSS calc() expression.\n     */\n    TileStyler.prototype.getTileSize = function (baseSize, span) {\n        return \"(\" + baseSize + \" * \" + span + \") + (\" + (span - 1) + \" * \" + this._gutterSize + \")\";\n    };\n    /**\n     * Sets the style properties to be applied to a tile for the given row and column index.\n     * @param {?} tile Tile to which to apply the styling.\n     * @param {?} rowIndex Index of the tile's row.\n     * @param {?} colIndex Index of the tile's column.\n     * @return {?}\n     */\n    TileStyler.prototype.setStyle = function (tile, rowIndex, colIndex) {\n        // Percent of the available horizontal space that one column takes up.\n        var /** @type {?} */ percentWidthPerTile = 100 / this._cols;\n        // Fraction of the vertical gutter size that each column takes up.\n        // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n        var /** @type {?} */ gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n        this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n        this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    };\n    /**\n     * Sets the horizontal placement of the tile in the list.\n     * @param {?} tile\n     * @param {?} colIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    TileStyler.prototype.setColStyles = function (tile, colIndex, percentWidth, gutterWidth) {\n        // Base horizontal size of a column.\n        var /** @type {?} */ baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n        // The width and horizontal position of each tile is always calculated the same way, but the\n        // height and vertical position depends on the rowMode.\n        var /** @type {?} */ side = this._direction === 'ltr' ? 'left' : 'right';\n        tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n        tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n    };\n    /**\n     * Calculates the total size taken up by gutters across one axis of a list.\n     * @return {?}\n     */\n    TileStyler.prototype.getGutterSpan = function () {\n        return this._gutterSize + \" * (\" + this._rowspan + \" - 1)\";\n    };\n    /**\n     * Calculates the total size taken up by tiles across one axis of a list.\n     * @param {?} tileHeight Height of the tile.\n     * @return {?}\n     */\n    TileStyler.prototype.getTileSpan = function (tileHeight) {\n        return this._rowspan + \" * \" + this.getTileSize(tileHeight, 1);\n    };\n    /**\n     * Sets the vertical placement of the tile in the list.\n     * This method will be implemented by each type of TileStyler.\n     * \\@docs-private\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    TileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) { };\n    /**\n     * Calculates the computed height and returns the correct style property to set.\n     * This method will be implemented by each type of TileStyler.\n     * \\@docs-private\n     * @return {?}\n     */\n    TileStyler.prototype.getComputedHeight = function () { return null; };\n    return TileStyler;\n}());\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example <md-grid-list cols=\"3\" rowHeight=\"100px\">\n * \\@docs-private\n */\nvar FixedTileStyler = (function (_super) {\n    __extends(FixedTileStyler, _super);\n    /**\n     * @param {?} fixedRowHeight\n     */\n    function FixedTileStyler(fixedRowHeight) {\n        var _this = _super.call(this) || this;\n        _this.fixedRowHeight = fixedRowHeight;\n        return _this;\n    }\n    /**\n     * @param {?} gutterSize\n     * @param {?} tracker\n     * @param {?} cols\n     * @param {?} direction\n     * @return {?}\n     */\n    FixedTileStyler.prototype.init = function (gutterSize, tracker, cols, direction) {\n        _super.prototype.init.call(this, gutterSize, tracker, cols, direction);\n        this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n    };\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    FixedTileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) {\n        tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n    };\n    /**\n     * @return {?}\n     */\n    FixedTileStyler.prototype.getComputedHeight = function () {\n        return [\n            'height', calc(this.getTileSpan(this.fixedRowHeight) + \" + \" + this.getGutterSpan())\n        ];\n    };\n    return FixedTileStyler;\n}(TileStyler));\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example <md-grid-list cols=\"3\" rowHeight=\"3:1\">\n * \\@docs-private\n */\nvar RatioTileStyler = (function (_super) {\n    __extends(RatioTileStyler, _super);\n    /**\n     * @param {?} value\n     */\n    function RatioTileStyler(value) {\n        var _this = _super.call(this) || this;\n        _this._parseRatio(value);\n        return _this;\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    RatioTileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) {\n        var /** @type {?} */ percentHeightPerTile = percentWidth / this.rowHeightRatio;\n        this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n        // Use paddingTop and marginTop to maintain the given aspect ratio, as\n        // a percentage-based value for these properties is applied versus the *width* of the\n        // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n        tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n        tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n    };\n    /**\n     * @return {?}\n     */\n    RatioTileStyler.prototype.getComputedHeight = function () {\n        return [\n            'paddingBottom', calc(this.getTileSpan(this.baseTileHeight) + \" + \" + this.getGutterSpan())\n        ];\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RatioTileStyler.prototype._parseRatio = function (value) {\n        var /** @type {?} */ ratioParts = value.split(':');\n        if (ratioParts.length !== 2) {\n            throw new MdGridListBadRatioError(value);\n        }\n        this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n    };\n    return RatioTileStyler;\n}(TileStyler));\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example <md-grid-list cols=\"3\" rowHeight=\"fit\">\n *\n * \\@docs-private\n */\nvar FitTileStyler = (function (_super) {\n    __extends(FitTileStyler, _super);\n    function FitTileStyler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    FitTileStyler.prototype.setRowStyles = function (tile, rowIndex, percentWidth, gutterWidth) {\n        // Percent of the available vertical space that one row takes up.\n        var /** @type {?} */ percentHeightPerTile = 100 / this._rowspan;\n        // Fraction of the horizontal gutter size that each column takes up.\n        var /** @type {?} */ gutterHeightPerTile = (this._rows - 1) / this._rows;\n        // Base vertical size of a column.\n        var /** @type {?} */ baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n        tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n    };\n    return FitTileStyler;\n}(TileStyler));\n/**\n * Wraps a CSS string in a calc function\n * @param {?} exp\n * @return {?}\n */\nfunction calc(exp) { return \"calc(\" + exp + \")\"; }\n/**\n * Appends pixels to a CSS string if no units are given.\n * @param {?} value\n * @return {?}\n */\nfunction normalizeUnits(value) {\n    return (value.match(/px|em|rem/)) ? value : value + 'px';\n}\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\nvar MD_FIT_MODE = 'fit';\nvar MdGridList = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _element\n     * @param {?} _dir\n     */\n    function MdGridList(_renderer, _element, _dir) {\n        this._renderer = _renderer;\n        this._element = _element;\n        this._dir = _dir;\n        this._gutter = '1px';\n    }\n    Object.defineProperty(MdGridList.prototype, \"cols\", {\n        /**\n         * Amount of columns in the grid list.\n         * @return {?}\n         */\n        get: function () { return this._cols; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._cols = coerceToNumber(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdGridList.prototype, \"gutterSize\", {\n        /**\n         * Size of the grid list's gutter in pixels.\n         * @return {?}\n         */\n        get: function () { return this._gutter; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._gutter = coerceToString(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdGridList.prototype, \"rowHeight\", {\n        /**\n         * Set internal representation of row height from the user-provided value.\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._rowHeight = coerceToString(value);\n            this._setTileStyler();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdGridList.prototype.ngOnInit = function () {\n        this._checkCols();\n        this._checkRowHeight();\n    };\n    /**\n     * The layout calculation is fairly cheap if nothing changes, so there's little cost\n     * to run it frequently.\n     * @return {?}\n     */\n    MdGridList.prototype.ngAfterContentChecked = function () {\n        this._layoutTiles();\n    };\n    /**\n     * Throw a friendly error if cols property is missing\n     * @return {?}\n     */\n    MdGridList.prototype._checkCols = function () {\n        if (!this.cols) {\n            throw new MdGridListColsError();\n        }\n    };\n    /**\n     * Default to equal width:height if rowHeight property is missing\n     * @return {?}\n     */\n    MdGridList.prototype._checkRowHeight = function () {\n        if (!this._rowHeight) {\n            this._tileStyler = new RatioTileStyler('1:1');\n        }\n    };\n    /**\n     * Creates correct Tile Styler subtype based on rowHeight passed in by user\n     * @return {?}\n     */\n    MdGridList.prototype._setTileStyler = function () {\n        if (this._rowHeight === MD_FIT_MODE) {\n            this._tileStyler = new FitTileStyler();\n        }\n        else if (this._rowHeight && this._rowHeight.indexOf(':') > -1) {\n            this._tileStyler = new RatioTileStyler(this._rowHeight);\n        }\n        else {\n            this._tileStyler = new FixedTileStyler(this._rowHeight);\n        }\n    };\n    /**\n     * Computes and applies the size and position for all children grid tiles.\n     * @return {?}\n     */\n    MdGridList.prototype._layoutTiles = function () {\n        var _this = this;\n        var /** @type {?} */ tracker = new TileCoordinator(this.cols, this._tiles);\n        var /** @type {?} */ direction = this._dir ? this._dir.value : 'ltr';\n        this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n        this._tiles.forEach(function (tile, index) {\n            var /** @type {?} */ pos = tracker.positions[index];\n            _this._tileStyler.setStyle(tile, pos.row, pos.col);\n        });\n        this._setListStyle(this._tileStyler.getComputedHeight());\n    };\n    /**\n     * Sets style on the main grid-list element, given the style name and value.\n     * @param {?} style\n     * @return {?}\n     */\n    MdGridList.prototype._setListStyle = function (style$$1) {\n        if (style$$1) {\n            this._renderer.setElementStyle(this._element.nativeElement, style$$1[0], style$$1[1]);\n        }\n    };\n    return MdGridList;\n}());\nMdGridList.decorators = [\n    { type: Component, args: [{ selector: 'md-grid-list, mat-grid-list',\n                template: \"<div> <ng-content></ng-content> </div>\",\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{display:flex;position:absolute;align-items:center;justify-content:center;height:100%;top:0;right:0;bottom:0;left:0;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-footer,.mat-grid-tile .mat-grid-tile-header{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;font-size:16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-footer .mat-line,.mat-grid-tile .mat-grid-tile-header .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile .mat-grid-tile-footer .mat-line:nth-child(n+2),.mat-grid-tile .mat-grid-tile-header .mat-line:nth-child(n+2){font-size:12px}.mat-grid-tile .mat-grid-tile-footer>*,.mat-grid-tile .mat-grid-tile-header>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-tile-footer.mat-2-line,.mat-grid-tile .mat-grid-tile-header.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:400;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none} /*# sourceMappingURL=grid-list.css.map */ \"],\n                host: {\n                    'role': 'list',\n                    '[class.mat-grid-list]': 'true',\n                },\n                encapsulation: ViewEncapsulation.None,\n            },] },\n];\n/**\n * @nocollapse\n */\nMdGridList.ctorParameters = function () { return [\n    { type: Renderer, },\n    { type: ElementRef, },\n    { type: Dir, decorators: [{ type: Optional },] },\n]; };\nMdGridList.propDecorators = {\n    '_tiles': [{ type: ContentChildren, args: [MdGridTile,] },],\n    'cols': [{ type: Input },],\n    'gutterSize': [{ type: Input },],\n    'rowHeight': [{ type: Input },],\n};\nvar MdGridListModule = (function () {\n    function MdGridListModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdGridListModule.forRoot = function () {\n        return {\n            ngModule: MdGridListModule,\n            providers: []\n        };\n    };\n    return MdGridListModule;\n}());\nMdGridListModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MdLineModule, CompatibilityModule],\n                exports: [\n                    MdGridList,\n                    MdGridTile,\n                    MdGridTileText,\n                    MdLineModule,\n                    CompatibilityModule,\n                    MdGridTileHeaderCssMatStyler,\n                    MdGridTileFooterCssMatStyler,\n                    MdGridAvatarCssMatStyler\n                ],\n                declarations: [\n                    MdGridList,\n                    MdGridTile,\n                    MdGridTileText,\n                    MdGridTileHeaderCssMatStyler,\n                    MdGridTileFooterCssMatStyler,\n                    MdGridAvatarCssMatStyler\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdGridListModule.ctorParameters = function () { return []; };\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MdCardContent = (function () {\n    function MdCardContent() {\n    }\n    return MdCardContent;\n}());\nMdCardContent.decorators = [\n    { type: Directive, args: [{\n                selector: 'md-card-content, mat-card-content',\n                host: {\n                    '[class.mat-card-content]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardContent.ctorParameters = function () { return []; };\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MdCardTitle = (function () {\n    function MdCardTitle() {\n    }\n    return MdCardTitle;\n}());\nMdCardTitle.decorators = [\n    { type: Directive, args: [{\n                selector: 'md-card-title, mat-card-title',\n                host: {\n                    '[class.mat-card-title]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardTitle.ctorParameters = function () { return []; };\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MdCardSubtitle = (function () {\n    function MdCardSubtitle() {\n    }\n    return MdCardSubtitle;\n}());\nMdCardSubtitle.decorators = [\n    { type: Directive, args: [{\n                selector: 'md-card-subtitle, mat-card-subtitle',\n                host: {\n                    '[class.mat-card-subtitle]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardSubtitle.ctorParameters = function () { return []; };\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MdCardActions = (function () {\n    function MdCardActions() {\n    }\n    return MdCardActions;\n}());\nMdCardActions.decorators = [\n    { type: Directive, args: [{\n                selector: 'md-card-actions, mat-card-actions',\n                host: {\n                    '[class.mat-card-actions]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardActions.ctorParameters = function () { return []; };\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MdCardFooter = (function () {\n    function MdCardFooter() {\n    }\n    return MdCardFooter;\n}());\nMdCardFooter.decorators = [\n    { type: Directive, args: [{\n                selector: 'md-card-footer, mat-card-footer',\n                host: {\n                    '[class.mat-card-footer]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardFooter.ctorParameters = function () { return []; };\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MdCardSmImage = (function () {\n    function MdCardSmImage() {\n    }\n    return MdCardSmImage;\n}());\nMdCardSmImage.decorators = [\n    { type: Directive, args: [{\n                selector: '[md-card-sm-image], [mat-card-sm-image]',\n                host: {\n                    '[class.mat-card-sm-image]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardSmImage.ctorParameters = function () { return []; };\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MdCardMdImage = (function () {\n    function MdCardMdImage() {\n    }\n    return MdCardMdImage;\n}());\nMdCardMdImage.decorators = [\n    { type: Directive, args: [{\n                selector: '[md-card-md-image], [mat-card-md-image]',\n                host: {\n                    '[class.mat-card-md-image]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardMdImage.ctorParameters = function () { return []; };\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MdCardLgImage = (function () {\n    function MdCardLgImage() {\n    }\n    return MdCardLgImage;\n}());\nMdCardLgImage.decorators = [\n    { type: Directive, args: [{\n                selector: '[md-card-lg-image], [mat-card-lg-image]',\n                host: {\n                    'class.mat-card-lg-image': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardLgImage.ctorParameters = function () { return []; };\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MdCardImage = (function () {\n    function MdCardImage() {\n    }\n    return MdCardImage;\n}());\nMdCardImage.decorators = [\n    { type: Directive, args: [{\n                selector: '[md-card-image], [mat-card-image]',\n                host: {\n                    '[class.mat-card-image]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardImage.ctorParameters = function () { return []; };\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MdCardXlImage = (function () {\n    function MdCardXlImage() {\n    }\n    return MdCardXlImage;\n}());\nMdCardXlImage.decorators = [\n    { type: Directive, args: [{\n                selector: '[md-card-xl-image], [mat-card-xl-image]',\n                host: {\n                    '[class.mat-card-xl-image]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardXlImage.ctorParameters = function () { return []; };\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MdCardAvatar = (function () {\n    function MdCardAvatar() {\n    }\n    return MdCardAvatar;\n}());\nMdCardAvatar.decorators = [\n    { type: Directive, args: [{\n                selector: '[md-card-avatar], [mat-card-avatar]',\n                host: {\n                    '[class.mat-card-avatar]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardAvatar.ctorParameters = function () { return []; };\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - md-card-title\n * - md-card-subtitle\n * - md-card-content\n * - md-card-actions\n * - md-card-footer\n */\nvar MdCard = (function () {\n    function MdCard() {\n    }\n    return MdCard;\n}());\nMdCard.decorators = [\n    { type: Component, args: [{ selector: 'md-card, mat-card',\n                template: \"<ng-content></ng-content> \",\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(.4,0,.2,1);will-change:box-shadow;display:block;position:relative;padding:24px;border-radius:2px;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}.mat-card:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}@media screen and (-ms-high-contrast:active){.mat-card{outline:solid 1px}}.mat-card-flat{box-shadow:none}.mat-card-actions,.mat-card-content,.mat-card-subtitle,.mat-card-title{display:block;margin-bottom:16px}.mat-card-title{font-size:24px;font-weight:400}.mat-card-subtitle{font-size:14px}.mat-card-content{font-size:14px}.mat-card-actions{margin-left:-16px;margin-right:-16px;padding:8px 0}.mat-card-actions[align=end]{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 48px);margin:0 -24px 16px -24px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-footer{position:absolute;width:100%;min-height:5px;bottom:0;left:0}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button{margin:0 4px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header-text{margin:0 8px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0}.mat-card-header .mat-card-title{font-size:14px}.mat-card-lg-image,.mat-card-md-image,.mat-card-sm-image{margin:-8px 0}.mat-card-title-group{display:flex;justify-content:space-between;margin:0 -8px}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}@media (max-width:600px){.mat-card{padding:24px 16px}.mat-card-actions{margin-left:-8px;margin-right:-8px}.mat-card-image{width:calc(100% + 32px);margin:16px -16px}.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}.mat-card-header{margin:-8px 0 0 0}}.mat-card-content>:first-child,.mat-card>:first-child{margin-top:0}.mat-card-content>:last-child,.mat-card>:last-child{margin-bottom:0}.mat-card-image:first-child{margin-top:-24px}.mat-card>.mat-card-actions:last-child{margin-bottom:-16px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child{margin-left:0;margin-right:0}.mat-card-subtitle:not(:first-child),.mat-card-title:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px} /*# sourceMappingURL=card.css.map */ \"],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[class.mat-card]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCard.ctorParameters = function () { return []; };\n/**\n * Component intended to be used within the `<md-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * \\@docs-private\n */\nvar MdCardHeader = (function () {\n    function MdCardHeader() {\n    }\n    return MdCardHeader;\n}());\nMdCardHeader.decorators = [\n    { type: Component, args: [{ selector: 'md-card-header, mat-card-header',\n                template: \"<ng-content select=\\\"[md-card-avatar], [mat-card-avatar]\\\"></ng-content> <div class=\\\"mat-card-header-text\\\"> <ng-content select=\\\"md-card-title, mat-card-title, md-card-subtitle, mat-card-subtitle\\\"></ng-content> </div> <ng-content></ng-content> \",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[class.mat-card-header]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardHeader.ctorParameters = function () { return []; };\n/**\n * Component intended to be used within the <md-card> component. It adds styles for a preset\n * layout that groups an image with a title section.\n * \\@docs-private\n */\nvar MdCardTitleGroup = (function () {\n    function MdCardTitleGroup() {\n    }\n    return MdCardTitleGroup;\n}());\nMdCardTitleGroup.decorators = [\n    { type: Component, args: [{ selector: 'md-card-title-group, mat-card-title-group',\n                template: \"<div> <ng-content select=\\\"md-card-title, mat-card-title, md-card-subtitle, mat-card-subtitle\\\"></ng-content> </div> <ng-content select=\\\"img\\\"></ng-content> <ng-content></ng-content> \",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[class.mat-card-title-group]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardTitleGroup.ctorParameters = function () { return []; };\nvar MdCardModule = (function () {\n    function MdCardModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdCardModule.forRoot = function () {\n        return {\n            ngModule: MdCardModule,\n            providers: []\n        };\n    };\n    return MdCardModule;\n}());\nMdCardModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CompatibilityModule],\n                exports: [\n                    MdCard,\n                    MdCardHeader,\n                    MdCardTitleGroup,\n                    MdCardContent,\n                    MdCardTitle,\n                    MdCardSubtitle,\n                    MdCardActions,\n                    MdCardFooter,\n                    MdCardSmImage,\n                    MdCardMdImage,\n                    MdCardLgImage,\n                    MdCardImage,\n                    MdCardXlImage,\n                    MdCardAvatar,\n                    CompatibilityModule,\n                ],\n                declarations: [\n                    MdCard, MdCardHeader, MdCardTitleGroup, MdCardContent, MdCardTitle, MdCardSubtitle,\n                    MdCardActions, MdCardFooter, MdCardSmImage, MdCardMdImage, MdCardLgImage, MdCardImage,\n                    MdCardXlImage, MdCardAvatar,\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdCardModule.ctorParameters = function () { return []; };\n/**\n * Material design styled Chip component. Used inside the MdChipList component.\n */\nvar MdChip = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function MdChip(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /** Whether or not the chip is disabled. Disabled chips cannot be focused. */\n        this._disabled = null;\n        /** Whether or not the chip is selected. */\n        this._selected = false;\n        /** The palette color of selected chips. */\n        this._color = 'primary';\n        /** Emitted when the chip is focused. */\n        this.onFocus = new EventEmitter();\n        /** Emitted when the chip is selected. */\n        this.select = new EventEmitter();\n        /** Emitted when the chip is deselected. */\n        this.deselect = new EventEmitter();\n        /** Emitted when the chip is destroyed. */\n        this.destroy = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    MdChip.prototype.ngOnInit = function () {\n        this._addDefaultCSSClass();\n        this._updateColor(this._color);\n    };\n    /**\n     * @return {?}\n     */\n    MdChip.prototype.ngOnDestroy = function () {\n        this.destroy.emit({ chip: this });\n    };\n    Object.defineProperty(MdChip.prototype, \"disabled\", {\n        /**\n         * Whether or not the chip is disabled.\n         * @return {?}\n         */\n        get: function () {\n            return this._disabled;\n        },\n        /**\n         * Sets the disabled state of the chip.\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._disabled = coerceBooleanProperty(value) ? true : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdChip.prototype, \"_isAriaDisabled\", {\n        /**\n         * A String representation of the current disabled state.\n         * @return {?}\n         */\n        get: function () {\n            return String(coerceBooleanProperty(this.disabled));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdChip.prototype, \"selected\", {\n        /**\n         * Whether or not this chip is selected.\n         * @return {?}\n         */\n        get: function () {\n            return this._selected;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._selected = coerceBooleanProperty(value);\n            if (this._selected) {\n                this.select.emit({ chip: this });\n            }\n            else {\n                this.deselect.emit({ chip: this });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Toggles the current selected state of this chip.\n     * @return {?} Whether the chip is selected.\n     */\n    MdChip.prototype.toggleSelected = function () {\n        this.selected = !this.selected;\n        return this.selected;\n    };\n    Object.defineProperty(MdChip.prototype, \"color\", {\n        /**\n         * The color of the chip. Can be `primary`, `accent`, or `warn`.\n         * @return {?}\n         */\n        get: function () {\n            return this._color;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._updateColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows for programmatic focusing of the chip.\n     * @return {?}\n     */\n    MdChip.prototype.focus = function () {\n        this._renderer.invokeElementMethod(this._elementRef.nativeElement, 'focus');\n        this.onFocus.emit({ chip: this });\n    };\n    /**\n     * Ensures events fire properly upon click.\n     * @param {?} event\n     * @return {?}\n     */\n    MdChip.prototype._handleClick = function (event) {\n        // Check disabled\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        else {\n            this.focus();\n        }\n    };\n    /**\n     * Initializes the appropriate CSS classes based on the chip type (basic or standard).\n     * @return {?}\n     */\n    MdChip.prototype._addDefaultCSSClass = function () {\n        var /** @type {?} */ el = this._elementRef.nativeElement;\n        // Always add the `mat-chip` class\n        el.classList.add('mat-chip');\n        // If we are a basic chip, also add the `mat-basic-chip` class for :not() targeting\n        if (el.nodeName.toLowerCase() == 'mat-basic-chip' || el.hasAttribute('mat-basic-chip') ||\n            el.nodeName.toLowerCase() == 'md-basic-chip' || el.hasAttribute('md-basic-chip')) {\n            el.classList.add('mat-basic-chip');\n        }\n    };\n    /**\n     * Updates the private _color variable and the native element.\n     * @param {?} newColor\n     * @return {?}\n     */\n    MdChip.prototype._updateColor = function (newColor) {\n        this._setElementColor(this._color, false);\n        this._setElementColor(newColor, true);\n        this._color = newColor;\n    };\n    /**\n     * Sets the mat-color on the native element.\n     * @param {?} color\n     * @param {?} isAdd\n     * @return {?}\n     */\n    MdChip.prototype._setElementColor = function (color, isAdd) {\n        if (color != null && color != '') {\n            this._renderer.setElementClass(this._elementRef.nativeElement, \"mat-\" + color, isAdd);\n        }\n    };\n    return MdChip;\n}());\nMdChip.decorators = [\n    { type: Component, args: [{\n                selector: \"md-basic-chip, [md-basic-chip], md-chip, [md-chip],\\n             mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]\",\n                template: \"<ng-content></ng-content>\",\n                host: {\n                    '[class.mat-chip]': 'true',\n                    'tabindex': '-1',\n                    'role': 'option',\n                    '[class.mat-chip-selected]': 'selected',\n                    '[attr.disabled]': 'disabled',\n                    '[attr.aria-disabled]': '_isAriaDisabled',\n                    '(click)': '_handleClick($event)'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdChip.ctorParameters = function () { return [\n    { type: Renderer, },\n    { type: ElementRef, },\n]; };\nMdChip.propDecorators = {\n    'select': [{ type: Output },],\n    'deselect': [{ type: Output },],\n    'destroy': [{ type: Output },],\n    'disabled': [{ type: Input },],\n    'selected': [{ type: Input },],\n    'color': [{ type: Input },],\n};\n/**\n * A material design chips component (named ChipList for it's similarity to the List component).\n *\n * Example:\n *\n *     <md-chip-list>\n *       <md-chip>Chip 1<md-chip>\n *       <md-chip>Chip 2<md-chip>\n *     </md-chip-list>\n */\nvar MdChipList = (function () {\n    /**\n     * @param {?} _elementRef\n     */\n    function MdChipList(_elementRef) {\n        this._elementRef = _elementRef;\n        this._subscribed = new WeakMap();\n        /** Whether or not the chip is selectable. */\n        this._selectable = true;\n    }\n    /**\n     * @return {?}\n     */\n    MdChipList.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this._keyManager = new FocusKeyManager(this.chips).withWrap();\n        // Go ahead and subscribe all of the initial chips\n        this._subscribeChips(this.chips);\n        // When the list changes, re-subscribe\n        this.chips.changes.subscribe(function (chips) {\n            _this._subscribeChips(chips);\n        });\n    };\n    Object.defineProperty(MdChipList.prototype, \"selectable\", {\n        /**\n         * Whether or not this chip is selectable. When a chip is not selectable,\n         * it's selected state is always ignored.\n         * @return {?}\n         */\n        get: function () {\n            return this._selectable;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._selectable = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Programmatically focus the chip list. This in turn focuses the first\n     * non-disabled chip in this chip list.\n     * @return {?}\n     */\n    MdChipList.prototype.focus = function () {\n        // TODO: ARIA says this should focus the first `selected` chip.\n        this._keyManager.setFirstItemActive();\n    };\n    /**\n     * Passes relevant key presses to our key manager.\n     * @param {?} event\n     * @return {?}\n     */\n    MdChipList.prototype._keydown = function (event) {\n        var /** @type {?} */ target = (event.target);\n        // If they are on a chip, check for space/left/right, otherwise pass to our key manager\n        if (target && target.classList.contains('mat-chip')) {\n            switch (event.keyCode) {\n                case SPACE:\n                    // If we are selectable, toggle the focused chip\n                    if (this.selectable) {\n                        this._toggleSelectOnFocusedChip();\n                    }\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                    break;\n                case LEFT_ARROW:\n                    this._keyManager.setPreviousItemActive();\n                    event.preventDefault();\n                    break;\n                case RIGHT_ARROW:\n                    this._keyManager.setNextItemActive();\n                    event.preventDefault();\n                    break;\n                default:\n                    this._keyManager.onKeydown(event);\n            }\n        }\n    };\n    /**\n     * Toggles the selected state of the currently focused chip.\n     * @return {?}\n     */\n    MdChipList.prototype._toggleSelectOnFocusedChip = function () {\n        // Allow disabling of chip selection\n        if (!this.selectable) {\n            return;\n        }\n        var /** @type {?} */ focusedIndex = this._keyManager.activeItemIndex;\n        if (this._isValidIndex(focusedIndex)) {\n            var /** @type {?} */ focusedChip = this.chips.toArray()[focusedIndex];\n            if (focusedChip) {\n                focusedChip.toggleSelected();\n            }\n        }\n    };\n    /**\n     * Iterate through the list of chips and add them to our list of\n     * subscribed chips.\n     *\n     * @param {?} chips The list of chips to be subscribed.\n     * @return {?}\n     */\n    MdChipList.prototype._subscribeChips = function (chips) {\n        var _this = this;\n        chips.forEach(function (chip) { return _this._addChip(chip); });\n    };\n    /**\n     * Add a specific chip to our subscribed list. If the chip has\n     * already been subscribed, this ensures it is only subscribed\n     * once.\n     *\n     * @param {?} chip The chip to be subscribed (or checked for existing\n     * subscription).\n     * @return {?}\n     */\n    MdChipList.prototype._addChip = function (chip) {\n        var _this = this;\n        // If we've already been subscribed to a parent, do nothing\n        if (this._subscribed.has(chip)) {\n            return;\n        }\n        // Watch for focus events outside of the keyboard navigation\n        chip.onFocus.subscribe(function () {\n            var /** @type {?} */ chipIndex = _this.chips.toArray().indexOf(chip);\n            if (_this._isValidIndex(chipIndex)) {\n                _this._keyManager.updateActiveItemIndex(chipIndex);\n            }\n        });\n        // On destroy, remove the item from our list, and check focus\n        chip.destroy.subscribe(function () {\n            var /** @type {?} */ chipIndex = _this.chips.toArray().indexOf(chip);\n            if (_this._isValidIndex(chipIndex)) {\n                // Check whether the chip is the last item\n                if (chipIndex < _this.chips.length - 1) {\n                    _this._keyManager.setActiveItem(chipIndex);\n                }\n                else if (chipIndex - 1 >= 0) {\n                    _this._keyManager.setActiveItem(chipIndex - 1);\n                }\n            }\n            _this._subscribed.delete(chip);\n            chip.destroy.unsubscribe();\n        });\n        this._subscribed.set(chip, true);\n    };\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of chips.\n     */\n    MdChipList.prototype._isValidIndex = function (index) {\n        return index >= 0 && index < this.chips.length;\n    };\n    return MdChipList;\n}());\nMdChipList.decorators = [\n    { type: Component, args: [{ selector: 'md-chip-list, mat-chip-list',\n                template: \"<div class=\\\"mat-chip-list-wrapper\\\"><ng-content></ng-content></div>\",\n                host: {\n                    // Properties\n                    'tabindex': '0',\n                    'role': 'listbox',\n                    '[class.mat-chip-list]': 'true',\n                    // Events\n                    '(focus)': 'focus()',\n                    '(keydown)': '_keydown($event)'\n                },\n                queries: {\n                    chips: new ContentChildren(MdChip)\n                },\n                styles: [\".mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:flex-start}.mat-chip-list-wrapper .mat-chip:not(.mat-basic-chip){margin:0 3px 0 3px}.mat-chip-list-wrapper .mat-chip:not(.mat-basic-chip):first-child{margin-left:0;margin-right:3px}[dir=rtl] .mat-chip-list-wrapper .mat-chip:not(.mat-basic-chip):first-child{margin-left:3px;margin-right:0}.mat-chip-list-wrapper .mat-chip:not(.mat-basic-chip):last-child{margin-left:3px;margin-right:0}[dir=rtl] .mat-chip-list-wrapper .mat-chip:not(.mat-basic-chip):last-child{margin-left:0;margin-right:3px}.mat-chip:not(.mat-basic-chip){display:inline-block;padding:8px 12px 8px 12px;border-radius:24px;font-size:13px;line-height:16px}.mat-chip-list-stacked .mat-chip-list-wrapper{display:block}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-chip:not(.mat-basic-chip){display:block;margin:0;margin-bottom:8px}[dir=rtl] .mat-chip-list-stacked .mat-chip-list-wrapper .mat-chip:not(.mat-basic-chip){margin:0;margin-bottom:8px}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-chip:not(.mat-basic-chip):last-child,[dir=rtl] .mat-chip-list-stacked .mat-chip-list-wrapper .mat-chip:not(.mat-basic-chip):last-child{margin-bottom:0} /*# sourceMappingURL=chips.css.map */ \"],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            },] },\n];\n/**\n * @nocollapse\n */\nMdChipList.ctorParameters = function () { return [\n    { type: ElementRef, },\n]; };\nMdChipList.propDecorators = {\n    'selectable': [{ type: Input },],\n};\nvar MdChipsModule = (function () {\n    function MdChipsModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdChipsModule.forRoot = function () {\n        return {\n            ngModule: MdChipsModule,\n            providers: []\n        };\n    };\n    return MdChipsModule;\n}());\nMdChipsModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [],\n                exports: [MdChipList, MdChip],\n                declarations: [MdChipList, MdChip]\n            },] },\n];\n/**\n * @nocollapse\n */\nMdChipsModule.ctorParameters = function () { return []; };\n/**\n * Exception thrown when attempting to load an icon with a name that cannot be found.\n * \\@docs-private\n */\nvar MdIconNameNotFoundError = (function (_super) {\n    __extends(MdIconNameNotFoundError, _super);\n    /**\n     * @param {?} iconName\n     */\n    function MdIconNameNotFoundError(iconName) {\n        return _super.call(this, \"Unable to find icon with the name \\\"\" + iconName + \"\\\"\") || this;\n    }\n    return MdIconNameNotFoundError;\n}(MdError));\n/**\n * Exception thrown when attempting to load SVG content that does not contain the expected\n * <svg> tag.\n * \\@docs-private\n */\nvar MdIconSvgTagNotFoundError = (function (_super) {\n    __extends(MdIconSvgTagNotFoundError, _super);\n    function MdIconSvgTagNotFoundError() {\n        return _super.call(this, '<svg> tag not found') || this;\n    }\n    return MdIconSvgTagNotFoundError;\n}(MdError));\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * \\@docs-private\n */\nvar SvgIconConfig = (function () {\n    /**\n     * @param {?} url\n     */\n    function SvgIconConfig(url) {\n        this.url = url;\n        this.svgElement = null;\n    }\n    return SvgIconConfig;\n}());\n/** Returns the cache key to use for an icon namespace and name. */\nvar iconKey = function (namespace, name) { return namespace + ':' + name; };\n/**\n * Service to register and display icons used by the <md-icon> component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nvar MdIconRegistry = (function () {\n    /**\n     * @param {?} _http\n     * @param {?} _sanitizer\n     */\n    function MdIconRegistry(_http, _sanitizer) {\n        this._http = _http;\n        this._sanitizer = _sanitizer;\n        this._svgIconConfigs = new Map();\n        this._iconSetConfigs = new Map();\n        this._cachedIconsByUrl = new Map();\n        this._inProgressUrlFetches = new Map();\n        this._fontCssClassesByAlias = new Map();\n        this._defaultFontSetClass = 'material-icons';\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @return {?}\n     */\n    MdIconRegistry.prototype.addSvgIcon = function (iconName, url) {\n        return this.addSvgIconInNamespace('', iconName, url);\n    };\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @return {?}\n     */\n    MdIconRegistry.prototype.addSvgIconInNamespace = function (namespace, iconName, url) {\n        var /** @type {?} */ key = iconKey(namespace, iconName);\n        this._svgIconConfigs.set(key, new SvgIconConfig(url));\n        return this;\n    };\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @param {?} url\n     * @return {?}\n     */\n    MdIconRegistry.prototype.addSvgIconSet = function (url) {\n        return this.addSvgIconSetInNamespace('', url);\n    };\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} url\n     * @return {?}\n     */\n    MdIconRegistry.prototype.addSvgIconSetInNamespace = function (namespace, url) {\n        var /** @type {?} */ config = new SvgIconConfig(url);\n        if (this._iconSetConfigs.has(namespace)) {\n            this._iconSetConfigs.get(namespace).push(config);\n        }\n        else {\n            this._iconSetConfigs.set(namespace, [config]);\n        }\n        return this;\n    };\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an mdIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the <md-icon> element.\n     *\n     * @param {?} alias Alias for the font.\n     * @param {?=} className Class name override to be used instead of the alias.\n     * @return {?}\n     */\n    MdIconRegistry.prototype.registerFontClassAlias = function (alias, className) {\n        if (className === void 0) { className = alias; }\n        this._fontCssClassesByAlias.set(alias, className);\n        return this;\n    };\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     * @param {?} alias\n     * @return {?}\n     */\n    MdIconRegistry.prototype.classNameForFontAlias = function (alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    };\n    /**\n     * Sets the CSS class name to be used for icon fonts when an <md-icon> component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @param {?} className\n     * @return {?}\n     */\n    MdIconRegistry.prototype.setDefaultFontSetClass = function (className) {\n        this._defaultFontSetClass = className;\n        return this;\n    };\n    /**\n     * Returns the CSS class name to be used for icon fonts when an <md-icon> component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     * @return {?}\n     */\n    MdIconRegistry.prototype.getDefaultFontSetClass = function () {\n        return this._defaultFontSetClass;\n    };\n    /**\n     * Returns an Observable that produces the icon (as an <svg> DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param {?} safeUrl URL from which to fetch the SVG icon.\n     * @return {?}\n     */\n    MdIconRegistry.prototype.getSvgIconFromUrl = function (safeUrl) {\n        var _this = this;\n        var /** @type {?} */ url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (this._cachedIconsByUrl.has(url)) {\n            return Observable.of(cloneSvg(this._cachedIconsByUrl.get(url)));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(url))\n            .do(function (svg) { return _this._cachedIconsByUrl.set(url, svg); })\n            .map(function (svg) { return cloneSvg(svg); });\n    };\n    /**\n     * Returns an Observable that produces the icon (as an <svg> DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an MdIconNameNotFoundError.\n     *\n     * @param {?} name Name of the icon to be retrieved.\n     * @param {?=} namespace Namespace in which to look for the icon.\n     * @return {?}\n     */\n    MdIconRegistry.prototype.getNamedSvgIcon = function (name, namespace) {\n        if (namespace === void 0) { namespace = ''; }\n        // Return (copy of) cached icon if possible.\n        var /** @type {?} */ key = iconKey(namespace, name);\n        if (this._svgIconConfigs.has(key)) {\n            return this._getSvgFromConfig(this._svgIconConfigs.get(key));\n        }\n        // See if we have any icon sets registered for the namespace.\n        var /** @type {?} */ iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return Observable.throw(new MdIconNameNotFoundError(key));\n    };\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     * @param {?} config\n     * @return {?}\n     */\n    MdIconRegistry.prototype._getSvgFromConfig = function (config) {\n        if (config.svgElement) {\n            // We already have the SVG element for this icon, return a copy.\n            return Observable.of(cloneSvg(config.svgElement));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config)\n                .do(function (svg) { return config.svgElement = svg; })\n                .map(function (svg) { return cloneSvg(svg); });\n        }\n    };\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new <svg> element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * MdIconNameNotFoundError if no icon with the specified name can be found.\n     * @param {?} name\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    MdIconRegistry.prototype._getSvgFromIconSetConfigs = function (name, iconSetConfigs) {\n        var _this = this;\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        var /** @type {?} */ namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return Observable.of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        var /** @type {?} */ iconSetFetchRequests = iconSetConfigs\n            .filter(function (iconSetConfig) { return !iconSetConfig.svgElement; })\n            .map(function (iconSetConfig) { return _this._loadSvgIconSetFromConfig(iconSetConfig)\n            .catch(function (err, caught) {\n            var /** @type {?} */ url = _this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n            // Swallow errors fetching individual URLs so the combined Observable won't\n            // necessarily fail.\n            console.log(\"Loading icon set URL: \" + url + \" failed: \" + err);\n            return Observable.of(null);\n        })\n            .do(function (svg) {\n            // Cache SVG element.\n            if (svg) {\n                iconSetConfig.svgElement = svg;\n            }\n        }); });\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return Observable.forkJoin(iconSetFetchRequests)\n            .map(function (ignoredResults) {\n            var /** @type {?} */ foundIcon = _this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            if (!foundIcon) {\n                throw new MdIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        });\n    };\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @param {?} iconName\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    MdIconRegistry.prototype._extractIconWithNameFromAnySet = function (iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (var /** @type {?} */ i = iconSetConfigs.length - 1; i >= 0; i--) {\n            var /** @type {?} */ config = iconSetConfigs[i];\n            if (config.svgElement) {\n                var /** @type {?} */ foundIcon = this._extractSvgIconFromSet(config.svgElement, iconName);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    };\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @param {?} config\n     * @return {?}\n     */\n    MdIconRegistry.prototype._loadSvgIconFromConfig = function (config) {\n        var _this = this;\n        return this._fetchUrl(config.url)\n            .map(function (svgText) { return _this._createSvgElementForSingleIcon(svgText); });\n    };\n    /**\n     * Loads the content of the icon set URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @param {?} config\n     * @return {?}\n     */\n    MdIconRegistry.prototype._loadSvgIconSetFromConfig = function (config) {\n        var _this = this;\n        // TODO: Document that icons should only be loaded from trusted sources.\n        return this._fetchUrl(config.url)\n            .map(function (svgText) { return _this._svgElementFromString(svgText); });\n    };\n    /**\n     * Creates a DOM element from the given SVG string, and adds default attributes.\n     * @param {?} responseText\n     * @return {?}\n     */\n    MdIconRegistry.prototype._createSvgElementForSingleIcon = function (responseText) {\n        var /** @type {?} */ svg = this._svgElementFromString(responseText);\n        this._setSvgAttributes(svg);\n        return svg;\n    };\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @param {?} iconSet\n     * @param {?} iconName\n     * @return {?}\n     */\n    MdIconRegistry.prototype._extractSvgIconFromSet = function (iconSet, iconName) {\n        var /** @type {?} */ iconNode = iconSet.querySelector('#' + iconName);\n        if (!iconNode) {\n            return null;\n        }\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconNode.tagName.toLowerCase() == 'svg') {\n            return this._setSvgAttributes(/** @type {?} */ (iconNode.cloneNode(true)));\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        var /** @type {?} */ svg = this._svgElementFromString('<svg></svg>');\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconNode.cloneNode(true));\n        return this._setSvgAttributes(svg);\n    };\n    /**\n     * Creates a DOM element from the given SVG string.\n     * @param {?} str\n     * @return {?}\n     */\n    MdIconRegistry.prototype._svgElementFromString = function (str) {\n        // TODO: Is there a better way than innerHTML? Renderer doesn't appear to have a method for\n        // creating an element from an HTML string.\n        var /** @type {?} */ div = document.createElement('DIV');\n        div.innerHTML = str;\n        var /** @type {?} */ svg = (div.querySelector('svg'));\n        if (!svg) {\n            throw new MdIconSvgTagNotFoundError();\n        }\n        return svg;\n    };\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     * @param {?} svg\n     * @return {?}\n     */\n    MdIconRegistry.prototype._setSvgAttributes = function (svg) {\n        if (!svg.getAttribute('xmlns')) {\n            svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n        }\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        return svg;\n    };\n    /**\n     * Returns an Observable which produces the string contents of the given URL. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     * @param {?} safeUrl\n     * @return {?}\n     */\n    MdIconRegistry.prototype._fetchUrl = function (safeUrl) {\n        var _this = this;\n        var /** @type {?} */ url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        if (this._inProgressUrlFetches.has(url)) {\n            return this._inProgressUrlFetches.get(url);\n        }\n        // TODO(jelbourn): for some reason, the `finally` operator \"loses\" the generic type on the\n        // Observable. Figure out why and fix it.\n        var /** @type {?} */ req = (this._http.get(url)\n            .map(function (response) { return response.text(); })\n            .finally(function () {\n            _this._inProgressUrlFetches.delete(url);\n        })\n            .share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    };\n    return MdIconRegistry;\n}());\nMdIconRegistry.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nMdIconRegistry.ctorParameters = function () { return [\n    { type: Http, },\n    { type: DomSanitizer, },\n]; };\n/**\n * Clones an SVGElement while preserving type information.\n * @param {?} svg\n * @return {?}\n */\nfunction cloneSvg(svg) {\n    return (svg.cloneNode(true));\n}\n/**\n * Exception thrown when an invalid icon name is passed to an md-icon component.\n */\nvar MdIconInvalidNameError = (function (_super) {\n    __extends(MdIconInvalidNameError, _super);\n    /**\n     * @param {?} iconName\n     */\n    function MdIconInvalidNameError(iconName) {\n        return _super.call(this, \"Invalid icon name: \\\"\" + iconName + \"\\\"\") || this;\n    }\n    return MdIconInvalidNameError;\n}(MdError));\n/**\n * Component to display an icon. It can be used in the following ways:\n * - Specify the svgSrc input to load an SVG icon from a URL. The SVG content is directly inlined\n *   as a child of the <md-icon> component, so that CSS styles can easily be applied to it.\n *   The URL is loaded via an XMLHttpRequest, so it must be on the same domain as the page or its\n *   server must be configured to allow cross-domain requests.\n *   Example:\n *     <md-icon svgSrc=\"assets/arrow.svg\"></md-icon>\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MdIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     <md-icon svgIcon=\"left-arrow\"></md-icon>\n *     <md-icon svgIcon=\"animals:cat\"></md-icon>\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the <md-icon>\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MdIconRegistry.registerFontClassAlias.\n *   Examples:\n *     <md-icon>home</md-icon>\n *     <md-icon fontSet=\"myfont\">sun</md-icon>\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     <md-icon fontSet=\"fa\" fontIcon=\"alarm\"></md-icon>\n */\nvar MdIcon = (function () {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _renderer\n     * @param {?} _mdIconRegistry\n     */\n    function MdIcon(_elementRef, _renderer, _mdIconRegistry) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._mdIconRegistry = _mdIconRegistry;\n        /** Screenreader label for the icon. */\n        this.hostAriaLabel = '';\n    }\n    Object.defineProperty(MdIcon.prototype, \"color\", {\n        /**\n         * Color of the icon.\n         * @return {?}\n         */\n        get: function () { return this._color; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._updateColor(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} newColor\n     * @return {?}\n     */\n    MdIcon.prototype._updateColor = function (newColor) {\n        this._setElementColor(this._color, false);\n        this._setElementColor(newColor, true);\n        this._color = newColor;\n    };\n    /**\n     * @param {?} color\n     * @param {?} isAdd\n     * @return {?}\n     */\n    MdIcon.prototype._setElementColor = function (color, isAdd) {\n        if (color != null && color != '') {\n            this._renderer.setElementClass(this._elementRef.nativeElement, \"mat-\" + color, isAdd);\n        }\n    };\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws a MdIconInvalidNameError if the name contains two or more ':' separators.\n     * Examples:\n     *   'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws MdIconInvalidNameError)\n     * @param {?} iconName\n     * @return {?}\n     */\n    MdIcon.prototype._splitIconName = function (iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        var /** @type {?} */ parts = iconName.split(':');\n        switch (parts.length) {\n            case 1:\n                // Use default namespace.\n                return ['', parts[0]];\n            case 2:\n                return (parts);\n            default:\n                throw new MdIconInvalidNameError(iconName);\n        }\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MdIcon.prototype.ngOnChanges = function (changes) {\n        var _this = this;\n        var /** @type {?} */ changedInputs = Object.keys(changes);\n        // Only update the inline SVG icon if the inputs changed, to avoid unnecessary DOM operations.\n        if (changedInputs.indexOf('svgIcon') != -1 || changedInputs.indexOf('svgSrc') != -1) {\n            if (this.svgIcon) {\n                var _a = this._splitIconName(this.svgIcon), namespace = _a[0], iconName = _a[1];\n                this._mdIconRegistry.getNamedSvgIcon(iconName, namespace).first().subscribe(function (svg) { return _this._setSvgElement(svg); }, function (err) { return console.log(\"Error retrieving icon: \" + err.message); });\n            }\n        }\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n        this._updateAriaLabel();\n    };\n    /**\n     * @return {?}\n     */\n    MdIcon.prototype.ngOnInit = function () {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <md-icon>arrow</md-icon>. In this case we need to add a CSS class for the default font.\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdIcon.prototype.ngAfterViewChecked = function () {\n        // Update aria label here because it may depend on the projected text content.\n        // (e.g. <md-icon>home</md-icon> should use 'home').\n        this._updateAriaLabel();\n    };\n    /**\n     * @return {?}\n     */\n    MdIcon.prototype._updateAriaLabel = function () {\n        var /** @type {?} */ ariaLabel = this._getAriaLabel();\n        if (ariaLabel && ariaLabel !== this._previousAriaLabel) {\n            this._previousAriaLabel = ariaLabel;\n            this._renderer.setElementAttribute(this._elementRef.nativeElement, 'aria-label', ariaLabel);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdIcon.prototype._getAriaLabel = function () {\n        // If the parent provided an aria-label attribute value, use it as-is. Otherwise look for a\n        // reasonable value from the alt attribute, font icon name, SVG icon name, or (for ligatures)\n        // the text content of the directive.\n        var /** @type {?} */ label = this.hostAriaLabel ||\n            this.alt ||\n            this.fontIcon ||\n            this._splitIconName(this.svgIcon)[1];\n        if (label) {\n            return label;\n        }\n        // The \"content\" of an SVG icon is not a useful label.\n        if (this._usingFontIcon()) {\n            var /** @type {?} */ text = this._elementRef.nativeElement.textContent;\n            if (text) {\n                return text;\n            }\n        }\n        // TODO: Warn here in dev mode.\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    MdIcon.prototype._usingFontIcon = function () {\n        return !this.svgIcon;\n    };\n    /**\n     * @param {?} svg\n     * @return {?}\n     */\n    MdIcon.prototype._setSvgElement = function (svg) {\n        var /** @type {?} */ layoutElement = this._elementRef.nativeElement;\n        // Remove existing child nodes and add the new SVG element.\n        // We would use renderer.detachView(Array.from(layoutElement.childNodes)) here,\n        // but it fails in IE11: https://github.com/angular/angular/issues/6327\n        layoutElement.innerHTML = '';\n        this._renderer.projectNodes(layoutElement, [svg]);\n    };\n    /**\n     * @return {?}\n     */\n    MdIcon.prototype._updateFontIconClasses = function () {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        var /** @type {?} */ elem = this._elementRef.nativeElement;\n        var /** @type {?} */ fontSetClass = this.fontSet ?\n            this._mdIconRegistry.classNameForFontAlias(this.fontSet) :\n            this._mdIconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                this._renderer.setElementClass(elem, this._previousFontSetClass, false);\n            }\n            if (fontSetClass) {\n                this._renderer.setElementClass(elem, fontSetClass, true);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                this._renderer.setElementClass(elem, this._previousFontIconClass, false);\n            }\n            if (this.fontIcon) {\n                this._renderer.setElementClass(elem, this.fontIcon, true);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    };\n    return MdIcon;\n}());\nMdIcon.decorators = [\n    { type: Component, args: [{ template: '<ng-content></ng-content>',\n                selector: 'md-icon, mat-icon',\n                styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px} /*# sourceMappingURL=icon.css.map */ \"],\n                host: {\n                    'role': 'img',\n                    '[class.mat-icon]': 'true',\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/**\n * @nocollapse\n */\nMdIcon.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: Renderer, },\n    { type: MdIconRegistry, },\n]; };\nMdIcon.propDecorators = {\n    'svgIcon': [{ type: Input },],\n    'fontSet': [{ type: Input },],\n    'fontIcon': [{ type: Input },],\n    'alt': [{ type: Input },],\n    'hostAriaLabel': [{ type: Input, args: ['aria-label',] },],\n    'color': [{ type: Input },],\n};\n/**\n * @param {?} parentRegistry\n * @param {?} http\n * @param {?} sanitizer\n * @return {?}\n */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, http, sanitizer) {\n    return parentRegistry || new MdIconRegistry(http, sanitizer);\n}\nvar ICON_REGISTRY_PROVIDER = {\n    // If there is already an MdIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MdIconRegistry,\n    deps: [[new Optional(), new SkipSelf(), MdIconRegistry], Http, DomSanitizer],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\nvar MdIconModule = (function () {\n    function MdIconModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdIconModule.forRoot = function () {\n        return {\n            ngModule: MdIconModule,\n            providers: [],\n        };\n    };\n    return MdIconModule;\n}());\nMdIconModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [HttpModule, CompatibilityModule],\n                exports: [MdIcon, CompatibilityModule],\n                declarations: [MdIcon],\n                providers: [ICON_REGISTRY_PROVIDER],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdIconModule.ctorParameters = function () { return []; };\n// TODO(josephperrott): Benchpress tests.\n/** A single degree in radians. */\nvar DEGREE_IN_RADIANS = Math.PI / 180;\n/** Duration of the indeterminate animation. */\nvar DURATION_INDETERMINATE = 667;\n/** Duration of the indeterminate animation. */\nvar DURATION_DETERMINATE = 225;\n/** Start animation value of the indeterminate animation */\nvar startIndeterminate = 3;\n/** End animation value of the indeterminate animation */\nvar endIndeterminate = 80;\n/* Maximum angle for the arc. The angle can't be exactly 360, because the arc becomes hidden. */\nvar MAX_ANGLE = 359.99 / 100;\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MdProgressSpinnerCssMatStyler = (function () {\n    function MdProgressSpinnerCssMatStyler() {\n    }\n    return MdProgressSpinnerCssMatStyler;\n}());\nMdProgressSpinnerCssMatStyler.decorators = [\n    { type: Directive, args: [{\n                selector: 'md-progress-spinner, mat-progress-spinner',\n                host: {\n                    '[class.mat-progress-spinner]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdProgressSpinnerCssMatStyler.ctorParameters = function () { return []; };\n/**\n * <md-progress-spinner> component.\n */\nvar MdProgressSpinner = (function () {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _elementRef\n     * @param {?} _renderer\n     */\n    function MdProgressSpinner(_ngZone, _elementRef, _renderer) {\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._lastAnimationId = 0;\n        this._mode = 'determinate';\n        this._color = 'primary';\n    }\n    Object.defineProperty(MdProgressSpinner.prototype, \"_ariaValueMin\", {\n        /**\n         * Values for aria max and min are only defined as numbers when in a determinate mode.  We do this\n         * because voiceover does not report the progress indicator as indeterminate if the aria min\n         * and/or max value are number values.\n         * @return {?}\n         */\n        get: function () {\n            return this.mode == 'determinate' ? 0 : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdProgressSpinner.prototype, \"_ariaValueMax\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.mode == 'determinate' ? 100 : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdProgressSpinner.prototype, \"interdeterminateInterval\", {\n        /**\n         * \\@docs-private\n         * @return {?}\n         */\n        get: function () {\n            return this._interdeterminateInterval;\n        },\n        /**\n         * \\@docs-private\n         * @param {?} interval\n         * @return {?}\n         */\n        set: function (interval) {\n            clearInterval(this._interdeterminateInterval);\n            this._interdeterminateInterval = interval;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clean up any animations that were running.\n     * @return {?}\n     */\n    MdProgressSpinner.prototype.ngOnDestroy = function () {\n        this._cleanupIndeterminateAnimation();\n    };\n    Object.defineProperty(MdProgressSpinner.prototype, \"color\", {\n        /**\n         * The color of the progress-spinner. Can be primary, accent, or warn.\n         * @return {?}\n         */\n        get: function () { return this._color; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._updateColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdProgressSpinner.prototype, \"value\", {\n        /**\n         * Value of the progress circle. It is bound to the host as the attribute aria-valuenow.\n         * @return {?}\n         */\n        get: function () {\n            if (this.mode == 'determinate') {\n                return this._value;\n            }\n        },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) {\n            if (v != null && this.mode == 'determinate') {\n                var /** @type {?} */ newValue = clamp(v);\n                this._animateCircle(this.value || 0, newValue);\n                this._value = newValue;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdProgressSpinner.prototype, \"mode\", {\n        /**\n         * Mode of the progress circle\n         *\n         * Input must be one of the values from ProgressMode, defaults to 'determinate'.\n         * mode is bound to the host as the attribute host.\n         * @return {?}\n         */\n        get: function () {\n            return this._mode;\n        },\n        /**\n         * @param {?} mode\n         * @return {?}\n         */\n        set: function (mode) {\n            if (mode !== this._mode) {\n                if (mode === 'indeterminate') {\n                    this._startIndeterminateAnimation();\n                }\n                else {\n                    this._cleanupIndeterminateAnimation();\n                    this._animateCircle(0, this._value);\n                }\n                this._mode = mode;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Animates the circle from one percentage value to another.\n     *\n     * @param {?} animateFrom The percentage of the circle filled starting the animation.\n     * @param {?} animateTo The percentage of the circle filled ending the animation.\n     * @param {?=} ease The easing function to manage the pace of change in the animation.\n     * @param {?=} duration The length of time to show the animation, in milliseconds.\n     * @param {?=} rotation The starting angle of the circle fill, with 0° represented at the top center\n     *    of the circle.\n     * @return {?}\n     */\n    MdProgressSpinner.prototype._animateCircle = function (animateFrom, animateTo, ease, duration, rotation) {\n        var _this = this;\n        if (ease === void 0) { ease = linearEase; }\n        if (duration === void 0) { duration = DURATION_DETERMINATE; }\n        if (rotation === void 0) { rotation = 0; }\n        var /** @type {?} */ id = ++this._lastAnimationId;\n        var /** @type {?} */ startTime = Date.now();\n        var /** @type {?} */ changeInValue = animateTo - animateFrom;\n        // No need to animate it if the values are the same\n        if (animateTo === animateFrom) {\n            this._renderArc(animateTo, rotation);\n        }\n        else {\n            var /** @type {?} */ animation_1 = function () {\n                var /** @type {?} */ elapsedTime = Math.max(0, Math.min(Date.now() - startTime, duration));\n                _this._renderArc(ease(elapsedTime, animateFrom, changeInValue, duration), rotation);\n                // Prevent overlapping animations by checking if a new animation has been called for and\n                // if the animation has lasted longer than the animation duration.\n                if (id === _this._lastAnimationId && elapsedTime < duration) {\n                    requestAnimationFrame(animation_1);\n                }\n            };\n            // Run the animation outside of Angular's zone, in order to avoid\n            // hitting ZoneJS and change detection on each frame.\n            this._ngZone.runOutsideAngular(animation_1);\n        }\n    };\n    /**\n     * Starts the indeterminate animation interval, if it is not already running.\n     * @return {?}\n     */\n    MdProgressSpinner.prototype._startIndeterminateAnimation = function () {\n        var _this = this;\n        var /** @type {?} */ rotationStartPoint = 0;\n        var /** @type {?} */ start = startIndeterminate;\n        var /** @type {?} */ end = endIndeterminate;\n        var /** @type {?} */ duration = DURATION_INDETERMINATE;\n        var /** @type {?} */ animate$$1 = function () {\n            _this._animateCircle(start, end, materialEase, duration, rotationStartPoint);\n            // Prevent rotation from reaching Number.MAX_SAFE_INTEGER.\n            rotationStartPoint = (rotationStartPoint + end) % 100;\n            var /** @type {?} */ temp = start;\n            start = -end;\n            end = -temp;\n        };\n        if (!this.interdeterminateInterval) {\n            this._ngZone.runOutsideAngular(function () {\n                _this.interdeterminateInterval = setInterval(animate$$1, duration + 50, 0, false);\n                animate$$1();\n            });\n        }\n    };\n    /**\n     * Removes interval, ending the animation.\n     * @return {?}\n     */\n    MdProgressSpinner.prototype._cleanupIndeterminateAnimation = function () {\n        this.interdeterminateInterval = null;\n    };\n    /**\n     * Renders the arc onto the SVG element. Proxies `getArc` while setting the proper\n     * DOM attribute on the `<path>`.\n     * @param {?} currentValue\n     * @param {?=} rotation\n     * @return {?}\n     */\n    MdProgressSpinner.prototype._renderArc = function (currentValue, rotation) {\n        if (rotation === void 0) { rotation = 0; }\n        // Caches the path reference so it doesn't have to be looked up every time.\n        var /** @type {?} */ path = this._path = this._path || this._elementRef.nativeElement.querySelector('path');\n        // Ensure that the path was found. This may not be the case if the\n        // animation function fires too early.\n        if (path) {\n            path.setAttribute('d', getSvgArc(currentValue, rotation));\n        }\n    };\n    /**\n     * Updates the color of the progress-spinner by adding the new palette class to the element\n     * and removing the old one.\n     * @param {?} newColor\n     * @return {?}\n     */\n    MdProgressSpinner.prototype._updateColor = function (newColor) {\n        this._setElementColor(this._color, false);\n        this._setElementColor(newColor, true);\n        this._color = newColor;\n    };\n    /**\n     * Sets the given palette class on the component element.\n     * @param {?} color\n     * @param {?} isAdd\n     * @return {?}\n     */\n    MdProgressSpinner.prototype._setElementColor = function (color, isAdd) {\n        if (color != null && color != '') {\n            this._renderer.setElementClass(this._elementRef.nativeElement, \"mat-\" + color, isAdd);\n        }\n    };\n    return MdProgressSpinner;\n}());\nMdProgressSpinner.decorators = [\n    { type: Component, args: [{ selector: 'md-progress-spinner, mat-progress-spinner',\n                host: {\n                    'role': 'progressbar',\n                    '[attr.aria-valuemin]': '_ariaValueMin',\n                    '[attr.aria-valuemax]': '_ariaValueMax'\n                },\n                template: \"<!-- preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's center. The center of the circle will remain at the center of the md-progress-spinner element containing the SVG. --> <svg viewBox=\\\"0 0 100 100\\\" preserveAspectRatio=\\\"xMidYMid meet\\\"> <path></path> </svg> \",\n                styles: [\":host{display:block;height:100px;width:100px;overflow:hidden}:host svg{height:100%;width:100%;transform-origin:center}:host path{fill:transparent;stroke-width:10px;transition:stroke .3s cubic-bezier(.35,0,.25,1)}:host[mode=indeterminate] svg{animation-duration:5.25s,2.887s;animation-name:mat-progress-spinner-sporadic-rotate,mat-progress-spinner-linear-rotate;animation-timing-function:cubic-bezier(.35,0,.25,1),linear;animation-iteration-count:infinite;transition:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-sporadic-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}} /*# sourceMappingURL=progress-spinner.css.map */ \"],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/**\n * @nocollapse\n */\nMdProgressSpinner.ctorParameters = function () { return [\n    { type: NgZone, },\n    { type: ElementRef, },\n    { type: Renderer, },\n]; };\nMdProgressSpinner.propDecorators = {\n    'color': [{ type: Input },],\n    'value': [{ type: Input }, { type: HostBinding, args: ['attr.aria-valuenow',] },],\n    'mode': [{ type: HostBinding, args: ['attr.mode',] }, { type: Input },],\n};\n/**\n * <md-spinner> component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate <md-progress-spinner> instance.\n */\nvar MdSpinner = (function (_super) {\n    __extends(MdSpinner, _super);\n    /**\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} renderer\n     */\n    function MdSpinner(elementRef, ngZone, renderer) {\n        var _this = _super.call(this, ngZone, elementRef, renderer) || this;\n        _this.mode = 'indeterminate';\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    MdSpinner.prototype.ngOnDestroy = function () {\n        // The `ngOnDestroy` from `MdProgressSpinner` should be called explicitly, because\n        // in certain cases Angular won't call it (e.g. when using AoT and in unit tests).\n        _super.prototype.ngOnDestroy.call(this);\n    };\n    return MdSpinner;\n}(MdProgressSpinner));\nMdSpinner.decorators = [\n    { type: Component, args: [{ selector: 'md-spinner, mat-spinner',\n                host: {\n                    'role': 'progressbar',\n                    'mode': 'indeterminate',\n                    '[class.mat-spinner]': 'true',\n                },\n                template: \"<!-- preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's center. The center of the circle will remain at the center of the md-progress-spinner element containing the SVG. --> <svg viewBox=\\\"0 0 100 100\\\" preserveAspectRatio=\\\"xMidYMid meet\\\"> <path></path> </svg> \",\n                styles: [\":host{display:block;height:100px;width:100px;overflow:hidden}:host svg{height:100%;width:100%;transform-origin:center}:host path{fill:transparent;stroke-width:10px;transition:stroke .3s cubic-bezier(.35,0,.25,1)}:host[mode=indeterminate] svg{animation-duration:5.25s,2.887s;animation-name:mat-progress-spinner-sporadic-rotate,mat-progress-spinner-linear-rotate;animation-timing-function:cubic-bezier(.35,0,.25,1),linear;animation-iteration-count:infinite;transition:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-sporadic-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}} /*# sourceMappingURL=progress-spinner.css.map */ \"],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSpinner.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: NgZone, },\n    { type: Renderer, },\n]; };\n/**\n * Clamps a value to be between 0 and 100.\n * @param {?} v\n * @return {?}\n */\nfunction clamp(v) {\n    return Math.max(0, Math.min(100, v));\n}\n/**\n * Converts Polar coordinates to Cartesian.\n * @param {?} radius\n * @param {?} pathRadius\n * @param {?} angleInDegrees\n * @return {?}\n */\nfunction polarToCartesian(radius, pathRadius, angleInDegrees) {\n    var /** @type {?} */ angleInRadians = (angleInDegrees - 90) * DEGREE_IN_RADIANS;\n    return (radius + (pathRadius * Math.cos(angleInRadians))) +\n        ',' + (radius + (pathRadius * Math.sin(angleInRadians)));\n}\n/**\n * Easing function for linear animation.\n * @param {?} currentTime\n * @param {?} startValue\n * @param {?} changeInValue\n * @param {?} duration\n * @return {?}\n */\nfunction linearEase(currentTime, startValue, changeInValue, duration) {\n    return changeInValue * currentTime / duration + startValue;\n}\n/**\n * Easing function to match material design indeterminate animation.\n * @param {?} currentTime\n * @param {?} startValue\n * @param {?} changeInValue\n * @param {?} duration\n * @return {?}\n */\nfunction materialEase(currentTime, startValue, changeInValue, duration) {\n    var /** @type {?} */ time = currentTime / duration;\n    var /** @type {?} */ timeCubed = Math.pow(time, 3);\n    var /** @type {?} */ timeQuad = Math.pow(time, 4);\n    var /** @type {?} */ timeQuint = Math.pow(time, 5);\n    return startValue + changeInValue * ((6 * timeQuint) + (-15 * timeQuad) + (10 * timeCubed));\n}\n/**\n * Determines the path value to define the arc.  Converting percentage values to to polar\n * coordinates on the circle, and then to cartesian coordinates in the viewport.\n *\n * @param {?} currentValue The current percentage value of the progress circle, the percentage of the\n *    circle to fill.\n * @param {?} rotation The starting point of the circle with 0 being the 0 degree point.\n * @return {?} A string for an SVG path representing a circle filled from the starting point to the\n *    percentage value provided.\n */\nfunction getSvgArc(currentValue, rotation) {\n    var /** @type {?} */ startPoint = rotation || 0;\n    var /** @type {?} */ radius = 50;\n    var /** @type {?} */ pathRadius = 40;\n    var /** @type {?} */ startAngle = startPoint * MAX_ANGLE;\n    var /** @type {?} */ endAngle = currentValue * MAX_ANGLE;\n    var /** @type {?} */ start = polarToCartesian(radius, pathRadius, startAngle);\n    var /** @type {?} */ end = polarToCartesian(radius, pathRadius, endAngle + startAngle);\n    var /** @type {?} */ arcSweep = endAngle < 0 ? 0 : 1;\n    var /** @type {?} */ largeArcFlag;\n    if (endAngle < 0) {\n        largeArcFlag = endAngle >= -180 ? 0 : 1;\n    }\n    else {\n        largeArcFlag = endAngle <= 180 ? 0 : 1;\n    }\n    return \"M\" + start + \"A\" + pathRadius + \",\" + pathRadius + \" 0 \" + largeArcFlag + \",\" + arcSweep + \" \" + end;\n}\nvar MdProgressSpinnerModule = (function () {\n    function MdProgressSpinnerModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdProgressSpinnerModule.forRoot = function () {\n        return {\n            ngModule: MdProgressSpinnerModule,\n            providers: []\n        };\n    };\n    return MdProgressSpinnerModule;\n}());\nMdProgressSpinnerModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CompatibilityModule],\n                exports: [\n                    MdProgressSpinner,\n                    MdSpinner,\n                    CompatibilityModule,\n                    MdProgressSpinnerCssMatStyler\n                ],\n                declarations: [\n                    MdProgressSpinner,\n                    MdSpinner,\n                    MdProgressSpinnerCssMatStyler\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdProgressSpinnerModule.ctorParameters = function () { return []; };\n/**\n * <md-progress-bar> component.\n */\nvar MdProgressBar = (function () {\n    function MdProgressBar() {\n        /** Color of the progress bar. */\n        this.color = 'primary';\n        this._value = 0;\n        this._bufferValue = 0;\n        /**\n         * Mode of the progress bar.\n         *\n         * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n         * 'determinate'.\n         * Mirrored to mode attribute.\n         */\n        this.mode = 'determinate';\n    }\n    Object.defineProperty(MdProgressBar.prototype, \"value\", {\n        /**\n         * Value of the progressbar. Defaults to zero. Mirrored to aria-valuenow.\n         * @return {?}\n         */\n        get: function () { return this._value; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this._value = clamp$1(v || 0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdProgressBar.prototype, \"bufferValue\", {\n        /**\n         * Buffer value of the progress bar. Defaults to zero.\n         * @return {?}\n         */\n        get: function () { return this._bufferValue; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this._bufferValue = clamp$1(v || 0); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the current transform value for the progress bar's primary indicator.\n     * @return {?}\n     */\n    MdProgressBar.prototype._primaryTransform = function () {\n        var /** @type {?} */ scale = this.value / 100;\n        return { transform: \"scaleX(\" + scale + \")\" };\n    };\n    /**\n     * Gets the current transform value for the progress bar's buffer indicator.  Only used if the\n     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n     * @return {?}\n     */\n    MdProgressBar.prototype._bufferTransform = function () {\n        if (this.mode == 'buffer') {\n            var /** @type {?} */ scale = this.bufferValue / 100;\n            return { transform: \"scaleX(\" + scale + \")\" };\n        }\n    };\n    return MdProgressBar;\n}());\nMdProgressBar.decorators = [\n    { type: Component, args: [{ selector: 'md-progress-bar, mat-progress-bar',\n                host: {\n                    'role': 'progressbar',\n                    'aria-valuemin': '0',\n                    'aria-valuemax': '100',\n                    '[class.mat-primary]': 'color == \"primary\"',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.mat-progress-bar]': 'true',\n                },\n                template: \"<!-- The background div is named as such because it appears below the other divs and is not sized based on values. --> <div class=\\\"mat-progress-bar-background mat-progress-bar-element\\\"></div> <div class=\\\"mat-progress-bar-buffer mat-progress-bar-element\\\" [ngStyle]=\\\"_bufferTransform()\\\"></div> <div class=\\\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\\\" [ngStyle]=\\\"_primaryTransform()\\\"></div> <div class=\\\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\\\"></div> \",\n                styles: [\":host{display:block;height:5px;overflow:hidden;position:relative;transform:translateZ(0);transition:opacity 250ms linear;width:100%}:host .mat-progress-bar-element,:host .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}:host .mat-progress-bar-background{background-repeat:repeat-x;background-size:10px 4px;display:none}:host .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease,stroke .3s cubic-bezier(.35,0,.25,1)}:host .mat-progress-bar-secondary{display:none}:host .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease,stroke .3s cubic-bezier(.35,0,.25,1)}:host .mat-progress-bar-fill::after{animation:none;content:'';display:inline-block;left:0}:host[mode=query]{transform:rotateZ(180deg)}:host[mode=indeterminate] .mat-progress-bar-fill,:host[mode=query] .mat-progress-bar-fill{transition:none}:host[mode=indeterminate] .mat-progress-bar-primary,:host[mode=query] .mat-progress-bar-primary{animation:mat-progress-bar-primary-indeterminate-translate 2s infinite linear;left:-145.166611%}:host[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,:host[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{animation:mat-progress-bar-primary-indeterminate-scale 2s infinite linear}:host[mode=indeterminate] .mat-progress-bar-secondary,:host[mode=query] .mat-progress-bar-secondary{animation:mat-progress-bar-secondary-indeterminate-translate 2s infinite linear;left:-54.888891%;display:block}:host[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,:host[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{animation:mat-progress-bar-secondary-indeterminate-scale 2s infinite linear}:host[mode=buffer] .mat-progress-bar-background{animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}:host-context([dir=rtl]){transform:rotateY(180deg)}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(.5,0,.70173,.49582);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(.30244,.38135,.55,.95635);transform:translateX(83.67142%)}100%{transform:translateX(200.61106%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(.08)}36.65%{animation-timing-function:cubic-bezier(.33473,.12482,.78584,1);transform:scaleX(.08)}69.15%{animation-timing-function:cubic-bezier(.06,.11,.6,1);transform:scaleX(.66148)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:translateX(37.65191%)}48.35%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:translateX(84.38617%)}100%{transform:translateX(160.27778%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:scaleX(.08)}19.15%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:scaleX(.4571)}44.15%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:scaleX(.72796)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-10px)}} /*# sourceMappingURL=progress-bar.css.map */ \"],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/**\n * @nocollapse\n */\nMdProgressBar.ctorParameters = function () { return []; };\nMdProgressBar.propDecorators = {\n    'color': [{ type: Input },],\n    'value': [{ type: Input }, { type: HostBinding, args: ['attr.aria-valuenow',] },],\n    'bufferValue': [{ type: Input },],\n    'mode': [{ type: Input }, { type: HostBinding, args: ['attr.mode',] },],\n};\n/**\n * Clamps a value to be between two numbers, by default 0 and 100.\n * @param {?} v\n * @param {?=} min\n * @param {?=} max\n * @return {?}\n */\nfunction clamp$1(v, min, max) {\n    if (min === void 0) { min = 0; }\n    if (max === void 0) { max = 100; }\n    return Math.max(min, Math.min(max, v));\n}\nvar MdProgressBarModule = (function () {\n    function MdProgressBarModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdProgressBarModule.forRoot = function () {\n        return {\n            ngModule: MdProgressBarModule,\n            providers: []\n        };\n    };\n    return MdProgressBarModule;\n}());\nMdProgressBarModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, CompatibilityModule],\n                exports: [MdProgressBar, CompatibilityModule],\n                declarations: [MdProgressBar],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdProgressBarModule.ctorParameters = function () { return []; };\n/**\n * \\@docs-private\n */\nvar MdInputContainerPlaceholderConflictError = (function (_super) {\n    __extends(MdInputContainerPlaceholderConflictError, _super);\n    function MdInputContainerPlaceholderConflictError() {\n        return _super.call(this, 'Placeholder attribute and child element were both specified.') || this;\n    }\n    return MdInputContainerPlaceholderConflictError;\n}(MdError));\n/**\n * \\@docs-private\n */\nvar MdInputContainerUnsupportedTypeError = (function (_super) {\n    __extends(MdInputContainerUnsupportedTypeError, _super);\n    /**\n     * @param {?} type\n     */\n    function MdInputContainerUnsupportedTypeError(type) {\n        return _super.call(this, \"Input type \\\"\" + type + \"\\\" isn't supported by md-input-container.\") || this;\n    }\n    return MdInputContainerUnsupportedTypeError;\n}(MdError));\n/**\n * \\@docs-private\n */\nvar MdInputContainerDuplicatedHintError = (function (_super) {\n    __extends(MdInputContainerDuplicatedHintError, _super);\n    /**\n     * @param {?} align\n     */\n    function MdInputContainerDuplicatedHintError(align) {\n        return _super.call(this, \"A hint was already declared for 'align=\\\"\" + align + \"\\\"'.\") || this;\n    }\n    return MdInputContainerDuplicatedHintError;\n}(MdError));\n/**\n * \\@docs-private\n */\nvar MdInputContainerMissingMdInputError = (function (_super) {\n    __extends(MdInputContainerMissingMdInputError, _super);\n    function MdInputContainerMissingMdInputError() {\n        return _super.call(this, 'md-input-container must contain an mdInput directive. Did you forget to add mdInput ' +\n            'to the native input or textarea element?') || this;\n    }\n    return MdInputContainerMissingMdInputError;\n}(MdError));\n// Invalid input type. Using one of these will throw an MdInputContainerUnsupportedTypeError.\nvar MD_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'color',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\nvar nextUniqueId$1 = 0;\n/**\n * The placeholder directive. The content can declare this to implement more\n * complex placeholders.\n */\nvar MdPlaceholder = (function () {\n    function MdPlaceholder() {\n    }\n    return MdPlaceholder;\n}());\nMdPlaceholder.decorators = [\n    { type: Directive, args: [{\n                selector: 'md-placeholder, mat-placeholder'\n            },] },\n];\n/**\n * @nocollapse\n */\nMdPlaceholder.ctorParameters = function () { return []; };\n/**\n * The hint directive, used to tag content as hint labels (going under the input).\n */\nvar MdHint = (function () {\n    function MdHint() {\n        // Whether to align the hint label at the start or end of the line.\n        this.align = 'start';\n        // Unique ID for the hint. Used for the aria-describedby on the input.\n        this.id = \"md-input-hint-\" + nextUniqueId$1++;\n    }\n    return MdHint;\n}());\nMdHint.decorators = [\n    { type: Directive, args: [{\n                selector: 'md-hint, mat-hint',\n                host: {\n                    '[class.mat-hint]': 'true',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdHint.ctorParameters = function () { return []; };\nMdHint.propDecorators = {\n    'align': [{ type: Input },],\n    'id': [{ type: Input },],\n};\n/**\n * Directive, used to display a single error message under the input.\n */\nvar MdErrorDirective = (function () {\n    function MdErrorDirective() {\n    }\n    return MdErrorDirective;\n}());\nMdErrorDirective.decorators = [\n    { type: Directive, args: [{\n                selector: 'md-error, mat-error',\n                host: {\n                    '[class.mat-input-error]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdErrorDirective.ctorParameters = function () { return []; };\n/**\n * The input prefix.\n */\nvar MdPrefix = (function () {\n    function MdPrefix() {\n    }\n    return MdPrefix;\n}());\nMdPrefix.decorators = [\n    { type: Directive, args: [{\n                selector: '[mdPrefix], [matPrefix], [md-prefix]'\n            },] },\n];\n/**\n * @nocollapse\n */\nMdPrefix.ctorParameters = function () { return []; };\n/**\n * The input suffix.\n */\nvar MdSuffix = (function () {\n    function MdSuffix() {\n    }\n    return MdSuffix;\n}());\nMdSuffix.decorators = [\n    { type: Directive, args: [{\n                selector: '[mdSuffix], [matSuffix], [md-suffix]'\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSuffix.ctorParameters = function () { return []; };\n/**\n * The input directive, used to mark the input that `MdInputContainer` is wrapping.\n */\nvar MdInputDirective = (function () {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _renderer\n     * @param {?} _ngControl\n     */\n    function MdInputDirective(_elementRef, _renderer, _ngControl) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._ngControl = _ngControl;\n        this._type = 'text';\n        this._placeholder = '';\n        this._disabled = false;\n        this._required = false;\n        /** Whether the element is focused or not. */\n        this.focused = false;\n        /**\n         * Emits an event when the placeholder changes so that the `md-input-container` can re-validate.\n         */\n        this._placeholderChange = new EventEmitter();\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter(function (t) { return getSupportedInputTypes().has(t); });\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n    Object.defineProperty(MdInputDirective.prototype, \"disabled\", {\n        /**\n         * Whether the element is disabled.\n         * @return {?}\n         */\n        get: function () {\n            return this._ngControl ? this._ngControl.disabled : this._disabled;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._disabled = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInputDirective.prototype, \"id\", {\n        /**\n         * Unique id of the element.\n         * @return {?}\n         */\n        get: function () { return this._id; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._id = value || this._uid; },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    Object.defineProperty(MdInputDirective.prototype, \"placeholder\", {\n        /**\n         * Placeholder attribute of the element.\n         * @return {?}\n         */\n        get: function () { return this._placeholder; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._placeholder !== value) {\n                this._placeholder = value;\n                this._placeholderChange.emit(this._placeholder);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInputDirective.prototype, \"required\", {\n        /**\n         * Whether the element is required.\n         * @return {?}\n         */\n        get: function () { return this._required; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._required = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInputDirective.prototype, \"type\", {\n        /**\n         * Input type of the element.\n         * @return {?}\n         */\n        get: function () { return this._type; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._type = value || 'text';\n            this._validateType();\n            // When using Angular inputs, developers are no longer able to set the properties on the native\n            // input element. To ensure that bindings for `type` work, we need to sync the setter\n            // with the native property. Textarea elements don't support the type property or attribute.\n            if (!this._isTextarea() && getSupportedInputTypes().has(this._type)) {\n                this._renderer.setElementProperty(this._elementRef.nativeElement, 'type', this._type);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInputDirective.prototype, \"value\", {\n        /**\n         * The input element's value.\n         * @return {?}\n         */\n        get: function () { return this._elementRef.nativeElement.value; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._elementRef.nativeElement.value = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInputDirective.prototype, \"empty\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return !this._isNeverEmpty() &&\n                (this.value == null || this.value === '') &&\n                // Check if the input contains bad input. If so, we know that it only appears empty because\n                // the value failed to parse. From the user's perspective it is not empty.\n                // TODO(mmalerba): Add e2e test for bad input case.\n                !this._isBadInput();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInputDirective.prototype, \"_uid\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cachedUid = this._cachedUid || \"md-input-\" + nextUniqueId$1++; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Focuses the input element.\n     * @return {?}\n     */\n    MdInputDirective.prototype.focus = function () { this._renderer.invokeElementMethod(this._elementRef.nativeElement, 'focus'); };\n    /**\n     * @return {?}\n     */\n    MdInputDirective.prototype._onFocus = function () { this.focused = true; };\n    /**\n     * @return {?}\n     */\n    MdInputDirective.prototype._onBlur = function () { this.focused = false; };\n    /**\n     * @return {?}\n     */\n    MdInputDirective.prototype._onInput = function () {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    };\n    /**\n     * Make sure the input is a supported type.\n     * @return {?}\n     */\n    MdInputDirective.prototype._validateType = function () {\n        if (MD_INPUT_INVALID_TYPES.indexOf(this._type) !== -1) {\n            throw new MdInputContainerUnsupportedTypeError(this._type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdInputDirective.prototype._isNeverEmpty = function () { return this._neverEmptyInputTypes.indexOf(this._type) !== -1; };\n    /**\n     * @return {?}\n     */\n    MdInputDirective.prototype._isBadInput = function () {\n        return ((this._elementRef.nativeElement)).validity.badInput;\n    };\n    /**\n     * Determines if the component host is a textarea. If not recognizable it returns false.\n     * @return {?}\n     */\n    MdInputDirective.prototype._isTextarea = function () {\n        var /** @type {?} */ nativeElement = this._elementRef.nativeElement;\n        return nativeElement ? nativeElement.nodeName.toLowerCase() === 'textarea' : false;\n    };\n    return MdInputDirective;\n}());\nMdInputDirective.decorators = [\n    { type: Directive, args: [{\n                selector: \"input[mdInput], textarea[mdInput], input[matInput], textarea[matInput]\",\n                host: {\n                    '[class.mat-input-element]': 'true',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[id]': 'id',\n                    '[placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.aria-describedby]': 'ariaDescribedby || null',\n                    '(blur)': '_onBlur()',\n                    '(focus)': '_onFocus()',\n                    '(input)': '_onInput()',\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdInputDirective.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: Renderer, },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self },] },\n]; };\nMdInputDirective.propDecorators = {\n    'disabled': [{ type: Input },],\n    'id': [{ type: Input },],\n    'placeholder': [{ type: Input },],\n    'required': [{ type: Input },],\n    'type': [{ type: Input },],\n    '_placeholderChange': [{ type: Output },],\n};\n/**\n * Component that represents a text input. It encapsulates the <input> HTMLElement and\n * improve on its behaviour, along with styling it according to the Material Design.\n */\nvar MdInputContainer = (function () {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     */\n    function MdInputContainer(_changeDetectorRef, _parentForm, _parentFormGroup) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        /** Alignment of the input container's content. */\n        this.align = 'start';\n        /** Color of the input divider, based on the theme. */\n        this.color = 'primary';\n        /** State of the md-hint and md-error animations. */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = \"md-input-hint-\" + nextUniqueId$1++;\n        this._floatPlaceholder = 'auto';\n    }\n    Object.defineProperty(MdInputContainer.prototype, \"dividerColor\", {\n        /**\n         * @deprecated Use color instead.\n         * @return {?}\n         */\n        get: function () { return this.color; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this.color = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInputContainer.prototype, \"_shouldAlwaysFloat\", {\n        /**\n         * Whether the floating label should always float or not.\n         * @return {?}\n         */\n        get: function () { return this._floatPlaceholder === 'always'; },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    Object.defineProperty(MdInputContainer.prototype, \"_canPlaceholderFloat\", {\n        /**\n         * Whether the placeholder can float or not.\n         * @return {?}\n         */\n        get: function () { return this._floatPlaceholder !== 'never'; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInputContainer.prototype, \"hintLabel\", {\n        /**\n         * Text for the input hint.\n         * @return {?}\n         */\n        get: function () { return this._hintLabel; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._hintLabel = value;\n            this._processHints();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdInputContainer.prototype, \"floatPlaceholder\", {\n        /**\n         * Whether the placeholder should always float, never float or float as the user types.\n         * @return {?}\n         */\n        get: function () { return this._floatPlaceholder; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._floatPlaceholder = value || 'auto';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdInputContainer.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        if (!this._mdInputChild) {\n            throw new MdInputContainerMissingMdInputError();\n        }\n        this._processHints();\n        this._validatePlaceholders();\n        // Re-validate when things change.\n        this._hintChildren.changes.subscribe(function () { return _this._processHints(); });\n        this._mdInputChild._placeholderChange.subscribe(function () { return _this._validatePlaceholders(); });\n    };\n    /**\n     * @return {?}\n     */\n    MdInputContainer.prototype.ngAfterViewInit = function () {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    };\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    MdInputContainer.prototype._shouldForward = function (prop) {\n        var /** @type {?} */ control = this._mdInputChild ? this._mdInputChild._ngControl : null;\n        return control && ((control))[prop];\n    };\n    /**\n     * Whether the input has a placeholder.\n     * @return {?}\n     */\n    MdInputContainer.prototype._hasPlaceholder = function () { return !!(this._mdInputChild.placeholder || this._placeholderChild); };\n    /**\n     * Focuses the underlying input.\n     * @return {?}\n     */\n    MdInputContainer.prototype._focusInput = function () { this._mdInputChild.focus(); };\n    /**\n     * Whether the input container is in an error state.\n     * @return {?}\n     */\n    MdInputContainer.prototype._isErrorState = function () {\n        var /** @type {?} */ control = this._mdInputChild._ngControl;\n        var /** @type {?} */ isInvalid = control && control.invalid;\n        var /** @type {?} */ isTouched = control && control.touched;\n        var /** @type {?} */ isSubmitted = (this._parentFormGroup && this._parentFormGroup.submitted) ||\n            (this._parentForm && this._parentForm.submitted);\n        return !!(isInvalid && (isTouched || isSubmitted));\n    };\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    MdInputContainer.prototype._getDisplayedMessages = function () {\n        return (this._errorChildren.length > 0 && this._isErrorState()) ? 'error' : 'hint';\n    };\n    /**\n     * Ensure that there is only one placeholder (either `input` attribute or child element with the\n     * `md-placeholder` attribute.\n     * @return {?}\n     */\n    MdInputContainer.prototype._validatePlaceholders = function () {\n        if (this._mdInputChild.placeholder && this._placeholderChild) {\n            throw new MdInputContainerPlaceholderConflictError();\n        }\n    };\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @return {?}\n     */\n    MdInputContainer.prototype._processHints = function () {\n        this._validateHints();\n        this._syncAriaDescribedby();\n    };\n    /**\n     * Ensure that there is a maximum of one of each `<md-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @return {?}\n     */\n    MdInputContainer.prototype._validateHints = function () {\n        var _this = this;\n        if (this._hintChildren) {\n            var /** @type {?} */ startHint_1 = null;\n            var /** @type {?} */ endHint_1 = null;\n            this._hintChildren.forEach(function (hint) {\n                if (hint.align == 'start') {\n                    if (startHint_1 || _this.hintLabel) {\n                        throw new MdInputContainerDuplicatedHintError('start');\n                    }\n                    startHint_1 = hint;\n                }\n                else if (hint.align == 'end') {\n                    if (endHint_1) {\n                        throw new MdInputContainerDuplicatedHintError('end');\n                    }\n                    endHint_1 = hint;\n                }\n            });\n        }\n    };\n    /**\n     * Sets the child input's `aria-describedby` to a space-separated list of the ids\n     * of the currently-specified hints, as well as a generated id for the hint label.\n     * @return {?}\n     */\n    MdInputContainer.prototype._syncAriaDescribedby = function () {\n        var /** @type {?} */ ids = [];\n        var /** @type {?} */ startHint = this._hintChildren ?\n            this._hintChildren.find(function (hint) { return hint.align === 'start'; }) : null;\n        var /** @type {?} */ endHint = this._hintChildren ?\n            this._hintChildren.find(function (hint) { return hint.align === 'end'; }) : null;\n        if (startHint) {\n            ids.push(startHint.id);\n        }\n        else if (this._hintLabel) {\n            ids.push(this._hintLabelId);\n        }\n        if (endHint) {\n            ids.push(endHint.id);\n        }\n        this._mdInputChild.ariaDescribedby = ids.join(' ');\n    };\n    return MdInputContainer;\n}());\nMdInputContainer.decorators = [\n    { type: Component, args: [{ selector: 'md-input-container, mat-input-container',\n                template: \"<div class=\\\"mat-input-wrapper\\\"> <div class=\\\"mat-input-table\\\"> <div class=\\\"mat-input-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\"> <!-- TODO(andrewseguin): remove [md-prefix] --> <ng-content select=\\\"[mdPrefix], [matPrefix], [md-prefix]\\\"></ng-content> </div> <div class=\\\"mat-input-infix\\\" [class.mat-end]=\\\"align == 'end'\\\"> <ng-content selector=\\\"input, textarea\\\"></ng-content> <span class=\\\"mat-input-placeholder-wrapper\\\"> <label class=\\\"mat-input-placeholder\\\" [attr.for]=\\\"_mdInputChild.id\\\" [class.mat-empty]=\\\"_mdInputChild.empty && !_shouldAlwaysFloat\\\" [class.mat-float]=\\\"_canPlaceholderFloat\\\" [class.mat-accent]=\\\"color == 'accent'\\\" [class.mat-warn]=\\\"color == 'warn'\\\" *ngIf=\\\"_hasPlaceholder()\\\"> <ng-content select=\\\"md-placeholder, mat-placeholder\\\"></ng-content> {{_mdInputChild.placeholder}} <span class=\\\"mat-placeholder-required\\\" *ngIf=\\\"_mdInputChild.required\\\">*</span> </label> </span> </div> <div class=\\\"mat-input-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\"> <!-- TODO(andrewseguin): remove [md-suffix] --> <ng-content select=\\\"[mdSuffix], [matSuffix], [md-suffix]\\\"></ng-content> </div> </div> <div class=\\\"mat-input-underline\\\" [class.mat-disabled]=\\\"_mdInputChild.disabled\\\"> <span class=\\\"mat-input-ripple\\\" [class.mat-accent]=\\\"color == 'accent'\\\" [class.mat-warn]=\\\"color == 'warn'\\\"></span> </div> <div class=\\\"mat-input-subscript-wrapper\\\" [ngSwitch]=\\\"_getDisplayedMessages()\\\"> <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\"> <ng-content select=\\\"md-error, mat-error\\\"></ng-content> </div> <div class=\\\"mat-input-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\"> <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div> <ng-content select=\\\"md-hint, mat-hint\\\"></ng-content> </div> </div> </div> \",\n                styles: [\".mat-input-container{display:inline-block;position:relative;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;line-height:normal;text-align:left}[dir=rtl] .mat-input-container{text-align:right}.mat-input-container .mat-icon{width:auto;height:auto;font-size:100%;vertical-align:top}.mat-input-wrapper{margin:1em 0;padding-bottom:6px}.mat-input-table{display:inline-table;flex-flow:column;vertical-align:bottom;width:100%}.mat-input-table>*{display:table-cell}.mat-input-infix{position:relative}.mat-input-element{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;width:100%;vertical-align:bottom}.mat-end .mat-input-element{text-align:right}[dir=rtl] .mat-end .mat-input-element{text-align:left}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element:-webkit-autofill+.mat-input-placeholder-wrapper .mat-float{display:block;transform:translateY(-1.35em) scale(.75);width:133.33333%;transition:none}.mat-input-element::placeholder{color:transparent}.mat-input-element::-moz-placeholder{color:transparent}.mat-input-element::-webkit-input-placeholder{color:transparent}.mat-input-element:-ms-input-placeholder{color:transparent}.mat-input-placeholder{position:absolute;left:0;top:0;font-size:100%;pointer-events:none;z-index:1;padding-top:1em;width:100%;display:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform:translateY(0);transform-origin:bottom left;transition:transform .4s cubic-bezier(.25,.8,.25,1),color .4s cubic-bezier(.25,.8,.25,1),width .4s cubic-bezier(.25,.8,.25,1)}.mat-input-placeholder.mat-empty{display:block;cursor:text}.mat-focused .mat-input-placeholder.mat-float,.mat-input-placeholder.mat-float:not(.mat-empty){display:block;transform:translateY(-1.35em) scale(.75);width:133.33333%}[dir=rtl] .mat-input-placeholder{transform-origin:bottom right;left:auto;right:0}.mat-input-placeholder:not(.mat-empty){transition:none}.mat-input-placeholder-wrapper{position:absolute;left:0;top:-1em;width:100%;padding-top:1em;overflow:hidden;pointer-events:none;transform:translate3d(0,0,0)}.mat-input-placeholder-wrapper::after{content:'';display:inline-table}.mat-input-underline{position:absolute;height:1px;width:100%;margin-top:4px;border-top-width:1px;border-top-style:solid}.mat-input-underline.mat-disabled{background-image:linear-gradient(to right,rgba(0,0,0,.26) 0,rgba(0,0,0,.26) 33%,transparent 0);background-size:4px 1px;background-repeat:repeat-x;border-top:0;background-position:0}.mat-input-underline .mat-input-ripple{position:absolute;height:2px;z-index:1;top:-1px;width:100%;transform-origin:top;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-focused .mat-input-underline .mat-input-ripple{opacity:1}.mat-input-subscript-wrapper{position:absolute;font-size:75%;top:100%;width:100%;margin-top:-1em;overflow:hidden}.mat-input-hint-wrapper::after,.mat-input-hint-wrapper::before{content:' ';display:table}.mat-input-hint-wrapper::after{clear:both}.mat-hint{display:block;float:left}.mat-hint.mat-right{float:right}[dir=rtl] .mat-hint{float:right}[dir=rtl] .mat-hint.mat-right{float:left}.mat-input-error{display:block}.mat-input-prefix,.mat-input-suffix{width:.1px;white-space:nowrap} /*# sourceMappingURL=input-container.css.map */ \"],\n                animations: [\n                    trigger('transitionMessages', [\n                        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n                        transition('void => enter', [\n                            style({ opacity: 0, transform: 'translateY(-100%)' }),\n                            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n                        ])\n                    ])\n                ],\n                host: {\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null',\n                    '[class.mat-input-container]': 'true',\n                    '[class.mat-input-invalid]': '_isErrorState()',\n                    '[class.mat-focused]': '_mdInputChild.focused',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '(click)': '_focusInput()',\n                },\n                encapsulation: ViewEncapsulation.None,\n            },] },\n];\n/**\n * @nocollapse\n */\nMdInputContainer.ctorParameters = function () { return [\n    { type: ChangeDetectorRef, },\n    { type: NgForm, decorators: [{ type: Optional },] },\n    { type: FormGroupDirective, decorators: [{ type: Optional },] },\n]; };\nMdInputContainer.propDecorators = {\n    'align': [{ type: Input },],\n    'color': [{ type: Input },],\n    'dividerColor': [{ type: Input },],\n    'hintLabel': [{ type: Input },],\n    'floatPlaceholder': [{ type: Input },],\n    '_mdInputChild': [{ type: ContentChild, args: [MdInputDirective,] },],\n    '_placeholderChild': [{ type: ContentChild, args: [MdPlaceholder,] },],\n    '_errorChildren': [{ type: ContentChildren, args: [MdErrorDirective,] },],\n    '_hintChildren': [{ type: ContentChildren, args: [MdHint,] },],\n    '_prefixChildren': [{ type: ContentChildren, args: [MdPrefix,] },],\n    '_suffixChildren': [{ type: ContentChildren, args: [MdSuffix,] },],\n};\n/**\n * Directive to automatically resize a textarea to fit its content.\n */\nvar MdTextareaAutosize = (function () {\n    /**\n     * @param {?} _elementRef\n     */\n    function MdTextareaAutosize(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    Object.defineProperty(MdTextareaAutosize.prototype, \"mdAutosizeMinRows\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.minRows;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this.minRows = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTextareaAutosize.prototype, \"mdAutosizeMaxRows\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.maxRows;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this.maxRows = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTextareaAutosize.prototype, \"_minHeight\", {\n        /**\n         * The minimum height of the textarea as determined by minRows.\n         * @return {?}\n         */\n        get: function () {\n            return this.minRows ? this.minRows * this._cachedLineHeight + \"px\" : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTextareaAutosize.prototype, \"_maxHeight\", {\n        /**\n         * The maximum height of the textarea as determined by maxRows.\n         * @return {?}\n         */\n        get: function () {\n            return this.maxRows ? this.maxRows * this._cachedLineHeight + \"px\" : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdTextareaAutosize.prototype.ngOnInit = function () {\n        this._cacheTextareaLineHeight();\n        this.resizeToFitContent();\n    };\n    /**\n     * Cache the height of a single-row textarea.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     * @return {?}\n     */\n    MdTextareaAutosize.prototype._cacheTextareaLineHeight = function () {\n        var /** @type {?} */ textarea = (this._elementRef.nativeElement);\n        // Use a clone element because we have to override some styles.\n        var /** @type {?} */ textareaClone = (textarea.cloneNode(false));\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        textarea.parentNode.appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.offsetHeight;\n        textarea.parentNode.removeChild(textareaClone);\n    };\n    /**\n     * Resize the textarea to fit its content.\n     * @return {?}\n     */\n    MdTextareaAutosize.prototype.resizeToFitContent = function () {\n        var /** @type {?} */ textarea = (this._elementRef.nativeElement);\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        textarea.style.height = 'auto';\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = textarea.scrollHeight + \"px\";\n    };\n    return MdTextareaAutosize;\n}());\nMdTextareaAutosize.decorators = [\n    { type: Directive, args: [{\n                selector: 'textarea[md-autosize], textarea[mdTextareaAutosize],' +\n                    'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'mdTextareaAutosize',\n                host: {\n                    '(input)': 'resizeToFitContent()',\n                    '[style.min-height]': '_minHeight',\n                    '[style.max-height]': '_maxHeight',\n                },\n            },] },\n];\n/**\n * @nocollapse\n */\nMdTextareaAutosize.ctorParameters = function () { return [\n    { type: ElementRef, },\n]; };\nMdTextareaAutosize.propDecorators = {\n    'minRows': [{ type: Input },],\n    'mdAutosizeMinRows': [{ type: Input },],\n    'maxRows': [{ type: Input },],\n    'mdAutosizeMaxRows': [{ type: Input },],\n};\nvar MdInputModule = (function () {\n    function MdInputModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdInputModule.forRoot = function () {\n        return {\n            ngModule: MdInputModule,\n            providers: [],\n        };\n    };\n    return MdInputModule;\n}());\nMdInputModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    MdErrorDirective,\n                    MdHint,\n                    MdInputContainer,\n                    MdInputDirective,\n                    MdPlaceholder,\n                    MdPrefix,\n                    MdSuffix,\n                    MdTextareaAutosize,\n                ],\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    PlatformModule,\n                ],\n                exports: [\n                    MdErrorDirective,\n                    MdHint,\n                    MdInputContainer,\n                    MdInputDirective,\n                    MdPlaceholder,\n                    MdPrefix,\n                    MdSuffix,\n                    MdTextareaAutosize,\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdInputModule.ctorParameters = function () { return []; };\n/**\n * Configuration used when opening a snack-bar.\n */\nvar MdSnackBarConfig = (function () {\n    function MdSnackBarConfig() {\n        /** The politeness level for the MdAriaLiveAnnouncer announcement. */\n        this.politeness = 'assertive';\n        /** Message to be announced by the MdAriaLiveAnnouncer */\n        this.announcementMessage = '';\n        /** The view container to place the overlay for the snack bar into. */\n        this.viewContainerRef = null;\n        /** The length of time in milliseconds to wait before automatically dismissing the snack bar. */\n        this.duration = 0;\n    }\n    return MdSnackBarConfig;\n}());\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n */\nvar MdSnackBarRef = (function () {\n    /**\n     * @param {?} instance\n     * @param {?} containerInstance\n     * @param {?} _overlayRef\n     */\n    function MdSnackBarRef(instance, containerInstance, _overlayRef) {\n        var _this = this;\n        this._overlayRef = _overlayRef;\n        this._afterClosed = new Subject();\n        this._onAction = new Subject();\n        // Sets the readonly instance of the snack bar content component.\n        this._instance = instance;\n        this.containerInstance = containerInstance;\n        // Dismiss snackbar on action.\n        this.onAction().subscribe(function () { return _this.dismiss(); });\n        containerInstance._onExit().subscribe(function () { return _this._finishDismiss(); });\n    }\n    Object.defineProperty(MdSnackBarRef.prototype, \"instance\", {\n        /**\n         * The instance of the component making up the content of the snack bar.\n         * @return {?}\n         */\n        get: function () {\n            return this._instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Dismisses the snack bar.\n     * @return {?}\n     */\n    MdSnackBarRef.prototype.dismiss = function () {\n        if (!this._afterClosed.closed) {\n            this.containerInstance.exit();\n        }\n    };\n    /**\n     * Marks the snackbar action clicked.\n     * @return {?}\n     */\n    MdSnackBarRef.prototype._action = function () {\n        if (!this._onAction.closed) {\n            this._onAction.next();\n            this._onAction.complete();\n        }\n    };\n    /**\n     * Marks the snackbar as opened\n     * @return {?}\n     */\n    MdSnackBarRef.prototype._open = function () {\n        if (!this._afterOpened.closed) {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }\n    };\n    /**\n     * Cleans up the DOM after closing.\n     * @return {?}\n     */\n    MdSnackBarRef.prototype._finishDismiss = function () {\n        this._overlayRef.dispose();\n        this._afterClosed.next();\n        this._afterClosed.complete();\n    };\n    /**\n     * Gets an observable that is notified when the snack bar is finished closing.\n     * @return {?}\n     */\n    MdSnackBarRef.prototype.afterDismissed = function () {\n        return this._afterClosed.asObservable();\n    };\n    /**\n     * Gets an observable that is notified when the snack bar has opened and appeared.\n     * @return {?}\n     */\n    MdSnackBarRef.prototype.afterOpened = function () {\n        return this.containerInstance._onEnter();\n    };\n    /**\n     * Gets an observable that is notified when the snack bar action is called.\n     * @return {?}\n     */\n    MdSnackBarRef.prototype.onAction = function () {\n        return this._onAction.asObservable();\n    };\n    return MdSnackBarRef;\n}());\n/**\n * Error that is thrown when attempting to attach a snack bar that is already attached.\n * \\@docs-private\n */\nvar MdSnackBarContentAlreadyAttached = (function (_super) {\n    __extends(MdSnackBarContentAlreadyAttached, _super);\n    function MdSnackBarContentAlreadyAttached() {\n        return _super.call(this, 'Attempting to attach snack bar content after content is already attached') || this;\n    }\n    return MdSnackBarContentAlreadyAttached;\n}(MdError));\n// TODO(jelbourn): we can't use constants from animation.ts here because you can't use\n// a text interpolation in anything that is analyzed statically with ngc (for AoT compile).\nvar SHOW_ANIMATION = '225ms cubic-bezier(0.4,0.0,1,1)';\nvar HIDE_ANIMATION = '195ms cubic-bezier(0.0,0.0,0.2,1)';\n/**\n * Internal component that wraps user-provided snack bar content.\n * \\@docs-private\n */\nvar MdSnackBarContainer = (function (_super) {\n    __extends(MdSnackBarContainer, _super);\n    /**\n     * @param {?} _ngZone\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function MdSnackBarContainer(_ngZone, _renderer, _elementRef) {\n        var _this = _super.call(this) || this;\n        _this._ngZone = _ngZone;\n        _this._renderer = _renderer;\n        _this._elementRef = _elementRef;\n        _this.onExit = new Subject();\n        _this.onEnter = new Subject();\n        /** The state of the snack bar animations. */\n        _this.animationState = 'initial';\n        return _this;\n    }\n    /**\n     * Attach a component portal as content to this snack bar container.\n     * @template T\n     * @param {?} portal\n     * @return {?}\n     */\n    MdSnackBarContainer.prototype.attachComponentPortal = function (portal) {\n        if (this._portalHost.hasAttached()) {\n            throw new MdSnackBarContentAlreadyAttached();\n        }\n        if (this.snackBarConfig.extraClasses) {\n            // Not the most efficient way of adding classes, but the renderer doesn't allow us\n            // to pass in an array or a space-separated list.\n            for (var _i = 0, _a = this.snackBarConfig.extraClasses; _i < _a.length; _i++) {\n                var cssClass = _a[_i];\n                this._renderer.setElementClass(this._elementRef.nativeElement, cssClass, true);\n            }\n        }\n        return this._portalHost.attachComponentPortal(portal);\n    };\n    /**\n     * Attach a template portal as content to this snack bar container.\n     * @param {?} portal\n     * @return {?}\n     */\n    MdSnackBarContainer.prototype.attachTemplatePortal = function (portal) {\n        throw Error('Not yet implemented');\n    };\n    /**\n     * Handle end of animations, updating the state of the snackbar.\n     * @param {?} event\n     * @return {?}\n     */\n    MdSnackBarContainer.prototype.onAnimationEnd = function (event) {\n        var _this = this;\n        if (event.toState === 'void' || event.toState === 'complete') {\n            this._completeExit();\n        }\n        if (event.toState === 'visible') {\n            this._ngZone.run(function () {\n                _this.onEnter.next();\n                _this.onEnter.complete();\n            });\n        }\n    };\n    /**\n     * Begin animation of snack bar entrance into view.\n     * @return {?}\n     */\n    MdSnackBarContainer.prototype.enter = function () {\n        this.animationState = 'visible';\n    };\n    /**\n     * Returns an observable resolving when the enter animation completes.\n     * @return {?}\n     */\n    MdSnackBarContainer.prototype._onEnter = function () {\n        this.animationState = 'visible';\n        return this.onEnter.asObservable();\n    };\n    /**\n     * Begin animation of the snack bar exiting from view.\n     * @return {?}\n     */\n    MdSnackBarContainer.prototype.exit = function () {\n        this.animationState = 'complete';\n        return this._onExit();\n    };\n    /**\n     * Returns an observable that completes after the closing animation is done.\n     * @return {?}\n     */\n    MdSnackBarContainer.prototype._onExit = function () {\n        return this.onExit.asObservable();\n    };\n    /**\n     * Makes sure the exit callbacks have been invoked when the element is destroyed.\n     * @return {?}\n     */\n    MdSnackBarContainer.prototype.ngOnDestroy = function () {\n        this._completeExit();\n    };\n    /**\n     * Waits for the zone to settle before removing the element. Helps prevent\n     * errors where we end up removing an element which is in the middle of an animation.\n     * @return {?}\n     */\n    MdSnackBarContainer.prototype._completeExit = function () {\n        var _this = this;\n        this._ngZone.onMicrotaskEmpty.first().subscribe(function () {\n            _this.onExit.next();\n            _this.onExit.complete();\n        });\n    };\n    return MdSnackBarContainer;\n}(BasePortalHost));\nMdSnackBarContainer.decorators = [\n    { type: Component, args: [{ selector: 'snack-bar-container',\n                template: \"<ng-template cdkPortalHost></ng-template> \",\n                styles: [\":host{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12);background:#323232;border-radius:2px;box-sizing:content-box;display:block;height:20px;max-width:568px;min-width:288px;overflow:hidden;padding:14px 24px;transform:translateY(100%)}@media screen and (-ms-high-contrast:active){:host{border:solid 1px}} /*# sourceMappingURL=snack-bar-container.css.map */ \"],\n                host: {\n                    'role': 'alert',\n                    '[@state]': 'animationState',\n                    '(@state.done)': 'onAnimationEnd($event)'\n                },\n                animations: [\n                    trigger('state', [\n                        state('initial', style({ transform: 'translateY(100%)' })),\n                        state('visible', style({ transform: 'translateY(0%)' })),\n                        state('complete', style({ transform: 'translateY(100%)' })),\n                        transition('visible => complete', animate(HIDE_ANIMATION)),\n                        transition('initial => visible, void => visible', animate(SHOW_ANIMATION)),\n                    ])\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSnackBarContainer.ctorParameters = function () { return [\n    { type: NgZone, },\n    { type: Renderer, },\n    { type: ElementRef, },\n]; };\nMdSnackBarContainer.propDecorators = {\n    '_portalHost': [{ type: ViewChild, args: [PortalHostDirective,] },],\n};\n/**\n * A component used to open as the default snack bar, matching material spec.\n * This should only be used internally by the snack bar service.\n */\nvar SimpleSnackBar = (function () {\n    function SimpleSnackBar() {\n    }\n    /**\n     * Dismisses the snack bar.\n     * @return {?}\n     */\n    SimpleSnackBar.prototype.dismiss = function () {\n        this.snackBarRef._action();\n    };\n    Object.defineProperty(SimpleSnackBar.prototype, \"hasAction\", {\n        /**\n         * If the action button should be shown.\n         * @return {?}\n         */\n        get: function () { return !!this.action; },\n        enumerable: true,\n        configurable: true\n    });\n    return SimpleSnackBar;\n}());\nSimpleSnackBar.decorators = [\n    { type: Component, args: [{ selector: 'simple-snack-bar',\n                template: \"<span class=\\\"mat-simple-snackbar-message\\\">{{message}}</span> <button class=\\\"mat-simple-snackbar-action\\\" *ngIf=\\\"hasAction\\\" (click)=\\\"dismiss()\\\">{{action}}</button> \",\n                styles: [\":host{display:flex;justify-content:space-between;color:#fff;line-height:20px;font-size:14px;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}.mat-simple-snackbar-message{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-simple-snackbar-action{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;background:0 0;margin:-5px 0 0;padding:5px;text-transform:uppercase;color:inherit;line-height:inherit;flex-shrink:0;font-family:inherit;font-size:inherit;font-weight:600} /*# sourceMappingURL=simple-snack-bar.css.map */ \"],\n                host: {\n                    '[class.mat-simple-snackbar]': 'true',\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nSimpleSnackBar.ctorParameters = function () { return []; };\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param {?} dest The object which will have properties copied to it.\n * @param {...?} sources The source objects from which properties will be copied.\n * @return {?}\n */\nfunction extendObject(dest) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    if (dest == null) {\n        throw TypeError('Cannot convert undefined or null to object');\n    }\n    for (var _a = 0, sources_1 = sources; _a < sources_1.length; _a++) {\n        var source = sources_1[_a];\n        if (source != null) {\n            for (var /** @type {?} */ key in source) {\n                if (source.hasOwnProperty(key)) {\n                    dest[key] = source[key];\n                }\n            }\n        }\n    }\n    return dest;\n}\n/**\n * Service to dispatch Material Design snack bar messages.\n */\nvar MdSnackBar = (function () {\n    /**\n     * @param {?} _overlay\n     * @param {?} _live\n     * @param {?} _parentSnackBar\n     */\n    function MdSnackBar(_overlay, _live, _parentSnackBar) {\n        this._overlay = _overlay;\n        this._live = _live;\n        this._parentSnackBar = _parentSnackBar;\n    }\n    Object.defineProperty(MdSnackBar.prototype, \"_openedSnackBarRef\", {\n        /**\n         * Reference to the currently opened snackbar at *any* level.\n         * @return {?}\n         */\n        get: function () {\n            return this._parentSnackBar ?\n                this._parentSnackBar._openedSnackBarRef : this._snackBarRefAtThisLevel;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._parentSnackBar) {\n                this._parentSnackBar._openedSnackBarRef = value;\n            }\n            else {\n                this._snackBarRefAtThisLevel = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates and dispatches a snack bar with a custom component for the content, removing any\n     * currently opened snack bars.\n     *\n     * @template T\n     * @param {?} component Component to be instantiated.\n     * @param {?=} config Extra configuration for the snack bar.\n     * @return {?}\n     */\n    MdSnackBar.prototype.openFromComponent = function (component, config) {\n        var _this = this;\n        config = _applyConfigDefaults(config);\n        var /** @type {?} */ overlayRef = this._createOverlay();\n        var /** @type {?} */ snackBarContainer = this._attachSnackBarContainer(overlayRef, config);\n        var /** @type {?} */ snackBarRef = this._attachSnackbarContent(component, snackBarContainer, overlayRef);\n        // When the snackbar is dismissed, clear the reference to it.\n        snackBarRef.afterDismissed().subscribe(function () {\n            // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n            if (_this._openedSnackBarRef == snackBarRef) {\n                _this._openedSnackBarRef = null;\n            }\n        });\n        // If a snack bar is already in view, dismiss it and enter the new snack bar after exit\n        // animation is complete.\n        if (this._openedSnackBarRef) {\n            this._openedSnackBarRef.afterDismissed().subscribe(function () {\n                snackBarRef.containerInstance.enter();\n            });\n            this._openedSnackBarRef.dismiss();\n        }\n        else {\n            snackBarRef.containerInstance.enter();\n        }\n        // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\n        if (config.duration > 0) {\n            snackBarRef.afterOpened().subscribe(function () {\n                setTimeout(function () { return snackBarRef.dismiss(); }, config.duration);\n            });\n        }\n        this._live.announce(config.announcementMessage, config.politeness);\n        this._openedSnackBarRef = snackBarRef;\n        return this._openedSnackBarRef;\n    };\n    /**\n     * Opens a snackbar with a message and an optional action.\n     * @param {?} message The message to show in the snackbar.\n     * @param {?=} action The label for the snackbar action.\n     * @param {?=} config Additional configuration options for the snackbar.\n     * @return {?}\n     */\n    MdSnackBar.prototype.open = function (message, action, config) {\n        if (action === void 0) { action = ''; }\n        if (config === void 0) { config = {}; }\n        config.announcementMessage = message;\n        var /** @type {?} */ simpleSnackBarRef = this.openFromComponent(SimpleSnackBar, config);\n        simpleSnackBarRef.instance.snackBarRef = simpleSnackBarRef;\n        simpleSnackBarRef.instance.message = message;\n        simpleSnackBarRef.instance.action = action;\n        return simpleSnackBarRef;\n    };\n    /**\n     * Dismisses the currently-visible snack bar.\n     * @return {?}\n     */\n    MdSnackBar.prototype.dismiss = function () {\n        if (this._openedSnackBarRef) {\n            this._openedSnackBarRef.dismiss();\n        }\n    };\n    /**\n     * Attaches the snack bar container component to the overlay.\n     * @param {?} overlayRef\n     * @param {?} config\n     * @return {?}\n     */\n    MdSnackBar.prototype._attachSnackBarContainer = function (overlayRef, config) {\n        var /** @type {?} */ containerPortal = new ComponentPortal(MdSnackBarContainer, config.viewContainerRef);\n        var /** @type {?} */ containerRef = overlayRef.attach(containerPortal);\n        containerRef.instance.snackBarConfig = config;\n        return containerRef.instance;\n    };\n    /**\n     * Places a new component as the content of the snack bar container.\n     * @template T\n     * @param {?} component\n     * @param {?} container\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    MdSnackBar.prototype._attachSnackbarContent = function (component, container, overlayRef) {\n        var /** @type {?} */ portal = new ComponentPortal(component);\n        var /** @type {?} */ contentRef = container.attachComponentPortal(portal);\n        return new MdSnackBarRef(contentRef.instance, container, overlayRef);\n    };\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @return {?}\n     */\n    MdSnackBar.prototype._createOverlay = function () {\n        var /** @type {?} */ state$$1 = new OverlayState();\n        state$$1.positionStrategy = this._overlay.position().global()\n            .centerHorizontally()\n            .bottom('0');\n        return this._overlay.create(state$$1);\n    };\n    return MdSnackBar;\n}());\nMdSnackBar.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nMdSnackBar.ctorParameters = function () { return [\n    { type: Overlay, },\n    { type: LiveAnnouncer, },\n    { type: MdSnackBar, decorators: [{ type: Optional }, { type: SkipSelf },] },\n]; };\n/**\n * Applies default options to the snackbar config.\n * @param {?} config The configuration to which the defaults will be applied.\n * @return {?} The new configuration object with defaults applied.\n */\nfunction _applyConfigDefaults(config) {\n    return extendObject(new MdSnackBarConfig(), config);\n}\nvar MdSnackBarModule = (function () {\n    function MdSnackBarModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdSnackBarModule.forRoot = function () {\n        return {\n            ngModule: MdSnackBarModule,\n            providers: []\n        };\n    };\n    return MdSnackBarModule;\n}());\nMdSnackBarModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    OverlayModule,\n                    PortalModule,\n                    CommonModule,\n                    CompatibilityModule,\n                ],\n                exports: [MdSnackBarContainer, CompatibilityModule],\n                declarations: [MdSnackBarContainer, SimpleSnackBar],\n                entryComponents: [MdSnackBarContainer, SimpleSnackBar],\n                providers: [MdSnackBar, LIVE_ANNOUNCER_PROVIDER]\n            },] },\n];\n/**\n * @nocollapse\n */\nMdSnackBarModule.ctorParameters = function () { return []; };\n/**\n * Used to flag tab labels for use with the portal directive\n */\nvar MdTabLabel = (function (_super) {\n    __extends(MdTabLabel, _super);\n    /**\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     */\n    function MdTabLabel(templateRef, viewContainerRef) {\n        return _super.call(this, templateRef, viewContainerRef) || this;\n    }\n    return MdTabLabel;\n}(TemplatePortalDirective));\nMdTabLabel.decorators = [\n    { type: Directive, args: [{\n                selector: '[md-tab-label], [mat-tab-label]',\n            },] },\n];\n/**\n * @nocollapse\n */\nMdTabLabel.ctorParameters = function () { return [\n    { type: TemplateRef, },\n    { type: ViewContainerRef, },\n]; };\nvar MdTab = (function () {\n    /**\n     * @param {?} _viewContainerRef\n     */\n    function MdTab(_viewContainerRef) {\n        this._viewContainerRef = _viewContainerRef;\n        /** The plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        this._contentPortal = null;\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        this._disabled = false;\n    }\n    Object.defineProperty(MdTab.prototype, \"content\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._contentPortal; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTab.prototype, \"disabled\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._disabled; },\n        /**\n         * Whether the tab is disabled\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._disabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdTab.prototype.ngOnInit = function () {\n        this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\n    };\n    return MdTab;\n}());\nMdTab.decorators = [\n    { type: Component, args: [{ selector: 'md-tab, mat-tab',\n                template: \"<!-- Create a template for the content of the <md-tab> so that we can grab a reference to this TemplateRef and use it in a Portal to render the tab content in the appropriate place in the tab-group. --> <ng-template><ng-content></ng-content></ng-template> \",\n            },] },\n];\n/**\n * @nocollapse\n */\nMdTab.ctorParameters = function () { return [\n    { type: ViewContainerRef, },\n]; };\nMdTab.propDecorators = {\n    'templateLabel': [{ type: ContentChild, args: [MdTabLabel,] },],\n    '_content': [{ type: ViewChild, args: [TemplateRef,] },],\n    'textLabel': [{ type: Input, args: ['label',] },],\n    'disabled': [{ type: Input },],\n};\n/** Used to generate unique ID's for each tab component */\nvar nextId$2 = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nvar MdTabChangeEvent = (function () {\n    function MdTabChangeEvent() {\n    }\n    return MdTabChangeEvent;\n}());\n/**\n * Material design tab-group component.  Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://www.google.com/design/spec/components/tabs.html\n */\nvar MdTabGroup = (function () {\n    /**\n     * @param {?} _renderer\n     */\n    function MdTabGroup(_renderer) {\n        this._renderer = _renderer;\n        this._isInitialized = false;\n        this._indexToSelect = 0;\n        this._tabBodyWrapperHeight = null;\n        this._dynamicHeight = false;\n        this._selectedIndex = null;\n        /** Position of the tab header. */\n        this.headerPosition = 'above';\n        this._onFocusChange = new EventEmitter();\n        this._onSelectChange = new EventEmitter(true);\n        this._groupId = nextId$2++;\n    }\n    Object.defineProperty(MdTabGroup.prototype, \"dynamicHeight\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._dynamicHeight; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._dynamicHeight = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTabGroup.prototype, \"_dynamicHeightDeprecated\", {\n        /**\n         * @deprecated\n         * @return {?}\n         */\n        get: function () { return this._dynamicHeight; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._dynamicHeight = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTabGroup.prototype, \"selectedIndex\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._selectedIndex; },\n        /**\n         * The index of the active tab.\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._indexToSelect = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTabGroup.prototype, \"selectedIndexChange\", {\n        /**\n         * Output to enable support for two-way binding on ([selectedIndex])\n         * @return {?}\n         */\n        get: function () {\n            return this.selectChange.map(function (event) { return event.index; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTabGroup.prototype, \"focusChange\", {\n        /**\n         * Event emitted when focus has changed within a tab group.\n         * @return {?}\n         */\n        get: function () {\n            return this._onFocusChange.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTabGroup.prototype, \"selectChange\", {\n        /**\n         * Event emitted when the tab selection has changed.\n         * @return {?}\n         */\n        get: function () {\n            return this._onSelectChange.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    MdTabGroup.prototype.ngAfterContentChecked = function () {\n        var _this = this;\n        // Clamp the next selected index to the bounds of 0 and the tabs length. Note the `|| 0`, which\n        // ensures that values like NaN can't get through and which would otherwise throw the\n        // component into an infinite loop (since Math.max(NaN, 0) === NaN).\n        this._indexToSelect =\n            Math.min(this._tabs.length - 1, Math.max(this._indexToSelect || 0, 0));\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != this._indexToSelect && this._selectedIndex != null) {\n            this._onSelectChange.emit(this._createChangeEvent(this._indexToSelect));\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach(function (tab, index) {\n            tab.position = index - _this._indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (_this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = _this._indexToSelect - _this._selectedIndex;\n            }\n        });\n        this._selectedIndex = this._indexToSelect;\n    };\n    /**\n     * Waits one frame for the view to update, then updates the ink bar\n     * Note: This must be run outside of the zone or it will create an infinite change detection loop.\n     * @return {?}\n     */\n    MdTabGroup.prototype.ngAfterViewChecked = function () {\n        this._isInitialized = true;\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    MdTabGroup.prototype._focusChanged = function (index) {\n        this._onFocusChange.emit(this._createChangeEvent(index));\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    MdTabGroup.prototype._createChangeEvent = function (index) {\n        var /** @type {?} */ event = new MdTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    };\n    /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    MdTabGroup.prototype._getTabLabelId = function (i) {\n        return \"md-tab-label-\" + this._groupId + \"-\" + i;\n    };\n    /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    MdTabGroup.prototype._getTabContentId = function (i) {\n        return \"md-tab-content-\" + this._groupId + \"-\" + i;\n    };\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n    MdTabGroup.prototype._setTabBodyWrapperHeight = function (tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        this._renderer.setElementStyle(this._tabBodyWrapper.nativeElement, 'height', this._tabBodyWrapperHeight + 'px');\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            this._renderer.setElementStyle(this._tabBodyWrapper.nativeElement, 'height', tabHeight + 'px');\n        }\n    };\n    /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n    MdTabGroup.prototype._removeTabBodyWrapperHeight = function () {\n        this._tabBodyWrapperHeight = this._tabBodyWrapper.nativeElement.clientHeight;\n        this._renderer.setElementStyle(this._tabBodyWrapper.nativeElement, 'height', '');\n    };\n    return MdTabGroup;\n}());\nMdTabGroup.decorators = [\n    { type: Component, args: [{ selector: 'md-tab-group, mat-tab-group',\n                template: \"<md-tab-header [selectedIndex]=\\\"selectedIndex\\\" #tabHeader (indexFocused)=\\\"_focusChanged($event)\\\" (selectFocusedIndex)=\\\"selectedIndex = $event\\\"> <div class=\\\"mat-tab-label\\\" role=\\\"tab\\\" md-tab-label-wrapper md-ripple *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabLabelId(i)\\\" [tabIndex]=\\\"selectedIndex == i ? 0 : -1\\\" [attr.aria-controls]=\\\"_getTabContentId(i)\\\" [attr.aria-selected]=\\\"selectedIndex == i\\\" [class.mat-tab-label-active]=\\\"selectedIndex == i\\\" [disabled]=\\\"tab.disabled\\\" (click)=\\\"tabHeader.focusIndex = selectedIndex = i\\\"> <!-- If there is a label template, use it. --> <ng-template [ngIf]=\\\"tab.templateLabel\\\"> <ng-template [cdkPortalHost]=\\\"tab.templateLabel\\\"></ng-template> </ng-template> <!-- If there is not a label template, fall back to the text label. --> <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template> </div> </md-tab-header> <div class=\\\"mat-tab-body-wrapper\\\" #tabBodyWrapper> <md-tab-body role=\\\"tabpanel\\\" *ngFor=\\\"let tab of _tabs; let i = index\\\" [id]=\\\"_getTabContentId(i)\\\" [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\" [class.mat-tab-body-active]=\\\"selectedIndex == i\\\" [content]=\\\"tab.content\\\" [position]=\\\"tab.position\\\" [origin]=\\\"tab.origin\\\" (onCentered)=\\\"_removeTabBodyWrapperHeight()\\\" (onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\"> </md-tab-body> </div> \",\n                styles: [\":host{display:flex;flex-direction:column;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}:host.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{line-height:48px;height:48px;padding:0 12px;font-size:14px;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-weight:500;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;position:relative}.mat-tab-label:focus{outline:0;opacity:1}@media (max-width:600px){.mat-tab-label{min-width:72px}}:host[mat-stretch-tabs] .mat-tab-label,:host[md-stretch-tabs] .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}.mat-tab-body{position:absolute;top:0;left:0;right:0;bottom:0;display:block;overflow:hidden}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}:host.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}.mat-tab-disabled{cursor:default;pointer-events:none} /*# sourceMappingURL=tab-group.css.map */ \"],\n                host: {\n                    '[class.mat-tab-group]': 'true',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdTabGroup.ctorParameters = function () { return [\n    { type: Renderer, },\n]; };\nMdTabGroup.propDecorators = {\n    '_tabs': [{ type: ContentChildren, args: [MdTab,] },],\n    '_tabBodyWrapper': [{ type: ViewChild, args: ['tabBodyWrapper',] },],\n    'dynamicHeight': [{ type: Input },],\n    '_dynamicHeightDeprecated': [{ type: Input, args: ['md-dynamic-height',] },],\n    'selectedIndex': [{ type: Input },],\n    'headerPosition': [{ type: Input },],\n    'selectedIndexChange': [{ type: Output },],\n    'focusChange': [{ type: Output },],\n    'selectChange': [{ type: Output },],\n};\n/**\n * Used in the `md-tab-group` view to display tab labels.\n * \\@docs-private\n */\nvar MdTabLabelWrapper = (function () {\n    /**\n     * @param {?} elementRef\n     * @param {?} _renderer\n     */\n    function MdTabLabelWrapper(elementRef, _renderer) {\n        this.elementRef = elementRef;\n        this._renderer = _renderer;\n        this._disabled = false;\n    }\n    Object.defineProperty(MdTabLabelWrapper.prototype, \"disabled\", {\n        /**\n         * Whether the element is disabled.\n         * @return {?}\n         */\n        get: function () { return this._disabled; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._disabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets focus on the wrapper element\n     * @return {?}\n     */\n    MdTabLabelWrapper.prototype.focus = function () {\n        this._renderer.invokeElementMethod(this.elementRef.nativeElement, 'focus');\n    };\n    /**\n     * @return {?}\n     */\n    MdTabLabelWrapper.prototype.getOffsetLeft = function () {\n        return this.elementRef.nativeElement.offsetLeft;\n    };\n    /**\n     * @return {?}\n     */\n    MdTabLabelWrapper.prototype.getOffsetWidth = function () {\n        return this.elementRef.nativeElement.offsetWidth;\n    };\n    return MdTabLabelWrapper;\n}());\nMdTabLabelWrapper.decorators = [\n    { type: Directive, args: [{\n                selector: '[md-tab-label-wrapper], [mat-tab-label-wrapper]',\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdTabLabelWrapper.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: Renderer, },\n]; };\nMdTabLabelWrapper.propDecorators = {\n    'disabled': [{ type: Input },],\n};\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\nvar MdInkBar = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     */\n    function MdInkBar(_renderer, _elementRef, _ngZone) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param {?} element\n     * @return {?}\n     */\n    MdInkBar.prototype.alignToElement = function (element) {\n        var _this = this;\n        this.show();\n        this._ngZone.runOutsideAngular(function () {\n            requestAnimationFrame(function () {\n                _this._renderer.setElementStyle(_this._elementRef.nativeElement, 'left', _this._getLeftPosition(element));\n                _this._renderer.setElementStyle(_this._elementRef.nativeElement, 'width', _this._getElementWidth(element));\n            });\n        });\n    };\n    /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n    MdInkBar.prototype.show = function () {\n        this._renderer.setElementStyle(this._elementRef.nativeElement, 'visibility', 'visible');\n    };\n    /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n    MdInkBar.prototype.hide = function () {\n        this._renderer.setElementStyle(this._elementRef.nativeElement, 'visibility', 'hidden');\n    };\n    /**\n     * Generates the pixel distance from the left based on the provided element in string format.\n     * @param {?} element\n     * @return {?}\n     */\n    MdInkBar.prototype._getLeftPosition = function (element) {\n        return element ? element.offsetLeft + 'px' : '0';\n    };\n    /**\n     * Generates the pixel width from the provided element in string format.\n     * @param {?} element\n     * @return {?}\n     */\n    MdInkBar.prototype._getElementWidth = function (element) {\n        return element ? element.offsetWidth + 'px' : '0';\n    };\n    return MdInkBar;\n}());\nMdInkBar.decorators = [\n    { type: Directive, args: [{\n                selector: 'md-ink-bar, mat-ink-bar',\n                host: {\n                    '[class.mat-ink-bar]': 'true',\n                },\n            },] },\n];\n/**\n * @nocollapse\n */\nMdInkBar.ctorParameters = function () { return [\n    { type: Renderer, },\n    { type: ElementRef, },\n    { type: NgZone, },\n]; };\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nvar MdTabNavBar = (function () {\n    /**\n     * @param {?} _dir\n     */\n    function MdTabNavBar(_dir) {\n        var _this = this;\n        this._dir = _dir;\n        if (_dir) {\n            this._directionChange = _dir.dirChange.subscribe(function () { return _this._alignInkBar(); });\n        }\n    }\n    /**\n     * Notifies the component that the active link has been changed.\n     * @param {?} element\n     * @return {?}\n     */\n    MdTabNavBar.prototype.updateActiveLink = function (element) {\n        this._activeLinkChanged = this._activeLinkElement != element;\n        this._activeLinkElement = element;\n    };\n    /**\n     * Checks if the active link has been changed and, if so, will update the ink bar.\n     * @return {?}\n     */\n    MdTabNavBar.prototype.ngAfterContentChecked = function () {\n        if (this._activeLinkChanged) {\n            this._alignInkBar();\n            this._activeLinkChanged = false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdTabNavBar.prototype.ngOnDestroy = function () {\n        if (this._directionChange) {\n            this._directionChange.unsubscribe();\n            this._directionChange = null;\n        }\n    };\n    /**\n     * Aligns the ink bar to the active link.\n     * @return {?}\n     */\n    MdTabNavBar.prototype._alignInkBar = function () {\n        this._inkBar.alignToElement(this._activeLinkElement.nativeElement);\n    };\n    return MdTabNavBar;\n}());\nMdTabNavBar.decorators = [\n    { type: Component, args: [{ selector: '[md-tab-nav-bar], [mat-tab-nav-bar]',\n                template: \"<div class=\\\"mat-tab-links\\\"> <ng-content></ng-content> <md-ink-bar></md-ink-bar> </div> \",\n                styles: [\".mat-tab-nav-bar{overflow:hidden;position:relative;flex-shrink:0}.mat-tab-links{position:relative}.mat-tab-link{line-height:48px;height:48px;padding:0 12px;font-size:14px;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-weight:500;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-block;vertical-align:top;text-decoration:none;position:relative;overflow:hidden}.mat-tab-link:focus{outline:0;opacity:1}@media (max-width:600px){.mat-tab-link{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0} /*# sourceMappingURL=tab-nav-bar.css.map */ \"],\n                host: {\n                    '[class.mat-tab-nav-bar]': 'true',\n                },\n                encapsulation: ViewEncapsulation.None,\n            },] },\n];\n/**\n * @nocollapse\n */\nMdTabNavBar.ctorParameters = function () { return [\n    { type: Dir, decorators: [{ type: Optional },] },\n]; };\nMdTabNavBar.propDecorators = {\n    '_inkBar': [{ type: ViewChild, args: [MdInkBar,] },],\n};\n/**\n * Link inside of a `md-tab-nav-bar`.\n */\nvar MdTabLink = (function () {\n    /**\n     * @param {?} _mdTabNavBar\n     * @param {?} _elementRef\n     */\n    function MdTabLink(_mdTabNavBar, _elementRef) {\n        this._mdTabNavBar = _mdTabNavBar;\n        this._elementRef = _elementRef;\n        this._isActive = false;\n    }\n    Object.defineProperty(MdTabLink.prototype, \"active\", {\n        /**\n         * Whether the link is active.\n         * @return {?}\n         */\n        get: function () { return this._isActive; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._isActive = value;\n            if (value) {\n                this._mdTabNavBar.updateActiveLink(this._elementRef);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return MdTabLink;\n}());\nMdTabLink.decorators = [\n    { type: Directive, args: [{\n                selector: '[md-tab-link], [mat-tab-link]',\n                host: {\n                    '[class.mat-tab-link]': 'true',\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdTabLink.ctorParameters = function () { return [\n    { type: MdTabNavBar, },\n    { type: ElementRef, },\n]; };\nMdTabLink.propDecorators = {\n    'active': [{ type: Input },],\n};\n/**\n * Simple directive that extends the ripple and matches the selector of the MdTabLink. This\n * adds the ripple behavior to nav bar labels.\n */\nvar MdTabLinkRipple = (function (_super) {\n    __extends(MdTabLinkRipple, _super);\n    /**\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} ruler\n     * @param {?} globalOptions\n     */\n    function MdTabLinkRipple(elementRef, ngZone, ruler, globalOptions) {\n        return _super.call(this, elementRef, ngZone, ruler, globalOptions) || this;\n    }\n    return MdTabLinkRipple;\n}(MdRipple));\nMdTabLinkRipple.decorators = [\n    { type: Directive, args: [{\n                selector: '[md-tab-link], [mat-tab-link]',\n                host: {\n                    '[class.mat-tab-link]': 'true',\n                },\n            },] },\n];\n/**\n * @nocollapse\n */\nMdTabLinkRipple.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: NgZone, },\n    { type: ViewportRuler, },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MD_RIPPLE_GLOBAL_OPTIONS,] },] },\n]; };\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nvar MdTabBody = (function () {\n    /**\n     * @param {?} _dir\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     */\n    function MdTabBody(_dir, _elementRef, _changeDetectorRef) {\n        this._dir = _dir;\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this.onCentering = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this.onCentered = new EventEmitter(true);\n        /** Whether the element is allowed to be animated. */\n        this._canBeAnimated = false;\n    }\n    Object.defineProperty(MdTabBody.prototype, \"position\", {\n        /**\n         * @param {?} position\n         * @return {?}\n         */\n        set: function (position) {\n            if (position < 0) {\n                this._position = this._getLayoutDirection() == 'ltr' ? 'left' : 'right';\n            }\n            else if (position > 0) {\n                this._position = this._getLayoutDirection() == 'ltr' ? 'right' : 'left';\n            }\n            else {\n                this._position = 'center';\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTabBody.prototype, \"origin\", {\n        /**\n         * The origin position from which this tab should appear when it is centered into view.\n         * @param {?} origin\n         * @return {?}\n         */\n        set: function (origin) {\n            if (origin == null) {\n                return;\n            }\n            var /** @type {?} */ dir = this._getLayoutDirection();\n            if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n                this._origin = 'left';\n            }\n            else {\n                this._origin = 'right';\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    MdTabBody.prototype.ngOnInit = function () {\n        if (this._position == 'center' && this._origin) {\n            this._position = this._origin == 'left' ? 'left-origin-center' : 'right-origin-center';\n        }\n    };\n    /**\n     * After the view has been set, check if the tab content is set to the center and attach the\n     * content if it is not already attached.\n     * @return {?}\n     */\n    MdTabBody.prototype.ngAfterViewChecked = function () {\n        if (this._isCenterPosition(this._position) && !this._portalHost.hasAttached()) {\n            this._portalHost.attach(this._content);\n        }\n    };\n    /**\n     * After the content has been checked, determines whether the element should be allowed to\n     * animate. This has to be limited, because under a specific set of circumstances (see #2151),\n     * the animations can be triggered too early, which either crashes Chrome by putting it into an\n     * infinite loop (with Angular < 2.3.0) or throws an error because the element doesn't have a\n     * computed style (with Angular > 2.3.0). This can alternatively be determined by checking the\n     * transform: canBeAnimated = getComputedStyle(element) !== '', however document.contains should\n     * be faster since it doesn't cause a reflow.\n     *\n     * TODO: This can safely be removed after we stop supporting Angular < 2.4.2. The fix landed via\n     * https://github.com/angular/angular/commit/21030e9a1cf30e8101399d8535ed72d847a23ba6\n     * @return {?}\n     */\n    MdTabBody.prototype.ngAfterContentChecked = function () {\n        if (!this._canBeAnimated) {\n            this._canBeAnimated = document.body.contains(this._elementRef.nativeElement);\n            if (this._canBeAnimated) {\n                this._changeDetectorRef.markForCheck();\n            }\n        }\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    MdTabBody.prototype._onTranslateTabStarted = function (e) {\n        if (this._isCenterPosition(e.toState)) {\n            this.onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    MdTabBody.prototype._onTranslateTabComplete = function (e) {\n        // If the end state is that the tab is not centered, then detach the content.\n        if (!this._isCenterPosition(e.toState) && !this._isCenterPosition(this._position)) {\n            this._portalHost.detach();\n        }\n        // If the transition to the center is complete, emit an event.\n        if (this._isCenterPosition(e.toState) && this._isCenterPosition(this._position)) {\n            this.onCentered.emit();\n        }\n    };\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    MdTabBody.prototype._getLayoutDirection = function () {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    };\n    /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n    MdTabBody.prototype._isCenterPosition = function (position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    };\n    return MdTabBody;\n}());\nMdTabBody.decorators = [\n    { type: Component, args: [{ selector: 'md-tab-body, mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content [@translateTab]=\\\"_canBeAnimated ? _position : null\\\" (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\" (@translateTab.done)=\\\"_onTranslateTabComplete($event)\\\"> <ng-template cdkPortalHost></ng-template> </div> \",\n                styles: [\".mat-tab-body-content{height:100%} /*# sourceMappingURL=tab-body.css.map */ \"],\n                host: {\n                    '[class.mat-tab-body]': 'true',\n                },\n                animations: [\n                    trigger('translateTab', [\n                        state('left', style({ transform: 'translate3d(-100%, 0, 0)' })),\n                        state('left-origin-center', style({ transform: 'translate3d(0, 0, 0)' })),\n                        state('right-origin-center', style({ transform: 'translate3d(0, 0, 0)' })),\n                        state('center', style({ transform: 'translate3d(0, 0, 0)' })),\n                        state('right', style({ transform: 'translate3d(100%, 0, 0)' })),\n                        transition('* => left, * => right, left => center, right => center', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),\n                        transition('void => left-origin-center', [\n                            style({ transform: 'translate3d(-100%, 0, 0)' }),\n                            animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n                        ]),\n                        transition('void => right-origin-center', [\n                            style({ transform: 'translate3d(100%, 0, 0)' }),\n                            animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n                        ])\n                    ])\n                ]\n            },] },\n];\n/**\n * @nocollapse\n */\nMdTabBody.ctorParameters = function () { return [\n    { type: Dir, decorators: [{ type: Optional },] },\n    { type: ElementRef, },\n    { type: ChangeDetectorRef, },\n]; };\nMdTabBody.propDecorators = {\n    '_portalHost': [{ type: ViewChild, args: [PortalHostDirective,] },],\n    'onCentering': [{ type: Output },],\n    'onCentered': [{ type: Output },],\n    '_content': [{ type: Input, args: ['content',] },],\n    'position': [{ type: Input, args: ['position',] },],\n    'origin': [{ type: Input, args: ['origin',] },],\n};\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nvar EXAGGERATED_OVERSCROLL = 60;\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * \\@docs-private\n */\nvar MdTabHeader = (function () {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dir\n     */\n    function MdTabHeader(_elementRef, _dir) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._focusIndex = 0;\n        this._scrollDistance = 0;\n        this._selectedIndexChanged = false;\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n    }\n    Object.defineProperty(MdTabHeader.prototype, \"selectedIndex\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._selectedIndex; },\n        /**\n         * The index of the active tab.\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._selectedIndexChanged = this._selectedIndex != value;\n            this._selectedIndex = value;\n            this._focusIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdTabHeader.prototype.ngAfterContentChecked = function () {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._labelWrappers.length) {\n            this._updatePagination();\n            this._tabLabelCount = this._labelWrappers.length;\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdTabHeader.prototype._handleKeydown = function (event) {\n        switch (event.keyCode) {\n            case RIGHT_ARROW:\n                this._focusNextTab();\n                break;\n            case LEFT_ARROW:\n                this._focusPreviousTab();\n                break;\n            case ENTER:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                break;\n        }\n    };\n    /**\n     * Aligns the ink bar to the selected tab on load.\n     * @return {?}\n     */\n    MdTabHeader.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this._alignInkBarToSelectedTab();\n        if (this._dir) {\n            this._directionChange = this._dir.dirChange.subscribe(function () { return _this._alignInkBarToSelectedTab(); });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MdTabHeader.prototype.ngOnDestroy = function () {\n        if (this._directionChange) {\n            this._directionChange.unsubscribe();\n            this._directionChange = null;\n        }\n    };\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n    MdTabHeader.prototype._onContentChanges = function () {\n        this._updatePagination();\n        this._alignInkBarToSelectedTab();\n    };\n    /**\n     * Updating the view whether pagination should be enabled or not\n     * @return {?}\n     */\n    MdTabHeader.prototype._updatePagination = function () {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    };\n    Object.defineProperty(MdTabHeader.prototype, \"focusIndex\", {\n        /**\n         * Tracks which element has focus; used for keyboard navigation\n         * @return {?}\n         */\n        get: function () { return this._focusIndex; },\n        /**\n         * When the focus index is set, we must manually send focus to the correct label\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (!this._isValidIndex(value) || this._focusIndex == value) {\n                return;\n            }\n            this._focusIndex = value;\n            this.indexFocused.emit(value);\n            this._setTabFocus(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    MdTabHeader.prototype._isValidIndex = function (index) {\n        if (!this._labelWrappers) {\n            return true;\n        }\n        var /** @type {?} */ tab = this._labelWrappers ? this._labelWrappers.toArray()[index] : null;\n        return tab && !tab.disabled;\n    };\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n    MdTabHeader.prototype._setTabFocus = function (tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._labelWrappers && this._labelWrappers.length) {\n            this._labelWrappers.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            var /** @type {?} */ containerEl = this._tabListContainer.nativeElement;\n            var /** @type {?} */ dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    };\n    /**\n     * Moves the focus towards the beginning or the end of the list depending on the offset provided.\n     * Valid offsets are 1 and -1.\n     * @param {?} offset\n     * @return {?}\n     */\n    MdTabHeader.prototype._moveFocus = function (offset) {\n        if (this._labelWrappers) {\n            var /** @type {?} */ tabs = this._labelWrappers.toArray();\n            for (var /** @type {?} */ i = this.focusIndex + offset; i < tabs.length && i >= 0; i += offset) {\n                if (this._isValidIndex(i)) {\n                    this.focusIndex = i;\n                    return;\n                }\n            }\n        }\n    };\n    /**\n     * Increment the focus index by 1 until a valid tab is found.\n     * @return {?}\n     */\n    MdTabHeader.prototype._focusNextTab = function () {\n        this._moveFocus(this._getLayoutDirection() == 'ltr' ? 1 : -1);\n    };\n    /**\n     * Decrement the focus index by 1 until a valid tab is found.\n     * @return {?}\n     */\n    MdTabHeader.prototype._focusPreviousTab = function () {\n        this._moveFocus(this._getLayoutDirection() == 'ltr' ? -1 : 1);\n    };\n    /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n    MdTabHeader.prototype._getLayoutDirection = function () {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    };\n    /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n    MdTabHeader.prototype._updateTabScrollPosition = function () {\n        var /** @type {?} */ translateX = this.scrollDistance + 'px';\n        if (this._getLayoutDirection() == 'ltr') {\n            translateX = '-' + translateX;\n        }\n        applyCssTransform(this._tabList.nativeElement, \"translate3d(\" + translateX + \", 0, 0)\");\n    };\n    Object.defineProperty(MdTabHeader.prototype, \"scrollDistance\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._scrollDistance; },\n        /**\n         * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) {\n            this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), v));\n            // Mark that the scroll distance has changed so that after the view is checked, the CSS\n            // transformation can move the header.\n            this._scrollDistanceChanged = true;\n            this._checkScrollingControls();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} scrollDir\n     * @return {?}\n     */\n    MdTabHeader.prototype._scrollHeader = function (scrollDir) {\n        var /** @type {?} */ viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        this.scrollDistance += (scrollDir == 'before' ? -1 : 1) * viewLength / 3;\n    };\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    MdTabHeader.prototype._scrollToLabel = function (labelIndex) {\n        var /** @type {?} */ selectedLabel = this._labelWrappers\n            ? this._labelWrappers.toArray()[labelIndex]\n            : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        var /** @type {?} */ viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        var /** @type {?} */ labelBeforePos, /** @type {?} */ labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = selectedLabel.getOffsetLeft();\n            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - selectedLabel.getOffsetLeft();\n            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n        }\n        var /** @type {?} */ beforeVisiblePos = this.scrollDistance;\n        var /** @type {?} */ afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    };\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    MdTabHeader.prototype._checkPaginationEnabled = function () {\n        this._showPaginationControls =\n            this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n        if (!this._showPaginationControls) {\n            this.scrollDistance = 0;\n        }\n    };\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    MdTabHeader.prototype._checkScrollingControls = function () {\n        // Check if the pagination arrows should be activated.\n        this._disableScrollBefore = this.scrollDistance == 0;\n        this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n    };\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    MdTabHeader.prototype._getMaxScrollDistance = function () {\n        var /** @type {?} */ lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        var /** @type {?} */ viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return lengthOfTabList - viewLength;\n    };\n    /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n    MdTabHeader.prototype._alignInkBarToSelectedTab = function () {\n        var /** @type {?} */ selectedLabelWrapper = this._labelWrappers && this._labelWrappers.length\n            ? this._labelWrappers.toArray()[this.selectedIndex].elementRef.nativeElement\n            : null;\n        this._inkBar.alignToElement(selectedLabelWrapper);\n    };\n    return MdTabHeader;\n}());\nMdTabHeader.decorators = [\n    { type: Component, args: [{ selector: 'md-tab-header, mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\" aria-hidden=\\\"true\\\" md-ripple [mdRippleDisabled]=\\\"_disableScrollBefore\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\" (click)=\\\"_scrollHeader('before')\\\"> <div class=\\\"mat-tab-header-pagination-chevron\\\"></div> </div> <div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\"> <div class=\\\"mat-tab-list\\\" #tabList role=\\\"tablist\\\" (cdkObserveContent)=\\\"_onContentChanges()\\\"> <div class=\\\"mat-tab-labels\\\"> <ng-content></ng-content> </div> <md-ink-bar></md-ink-bar> </div> </div> <div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\" aria-hidden=\\\"true\\\" md-ripple [mdRippleDisabled]=\\\"_disableScrollAfter\\\" [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\" (click)=\\\"_scrollHeader('after')\\\"> <div class=\\\"mat-tab-header-pagination-chevron\\\"></div> </div> \",\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-label{line-height:48px;height:48px;padding:0 12px;font-size:14px;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-weight:500;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;position:relative}.mat-tab-label:focus{outline:0;opacity:1}@media (max-width:600px){.mat-tab-label{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.mat-tab-header-pagination{position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:#ccc}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-labels{display:flex} /*# sourceMappingURL=tab-header.css.map */ \"],\n                encapsulation: ViewEncapsulation.None,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdTabHeader.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: Dir, decorators: [{ type: Optional },] },\n]; };\nMdTabHeader.propDecorators = {\n    '_labelWrappers': [{ type: ContentChildren, args: [MdTabLabelWrapper,] },],\n    '_inkBar': [{ type: ViewChild, args: [MdInkBar,] },],\n    '_tabListContainer': [{ type: ViewChild, args: ['tabListContainer',] },],\n    '_tabList': [{ type: ViewChild, args: ['tabList',] },],\n    'selectedIndex': [{ type: Input },],\n    'selectFocusedIndex': [{ type: Output },],\n    'indexFocused': [{ type: Output },],\n};\nvar MdTabsModule = (function () {\n    function MdTabsModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdTabsModule.forRoot = function () {\n        return {\n            ngModule: MdTabsModule,\n            providers: []\n        };\n    };\n    return MdTabsModule;\n}());\nMdTabsModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    PortalModule,\n                    MdRippleModule,\n                    ObserveContentModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MdTabGroup,\n                    MdTabLabel,\n                    MdTab,\n                    MdTabNavBar,\n                    MdTabLink,\n                    MdTabLinkRipple\n                ],\n                declarations: [\n                    MdTabGroup,\n                    MdTabLabel,\n                    MdTab,\n                    MdInkBar,\n                    MdTabLabelWrapper,\n                    MdTabNavBar,\n                    MdTabLink,\n                    MdTabBody,\n                    MdTabLinkRipple,\n                    MdTabHeader\n                ],\n                providers: [VIEWPORT_RULER_PROVIDER, SCROLL_DISPATCHER_PROVIDER],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdTabsModule.ctorParameters = function () { return []; };\nvar MdToolbarRow = (function () {\n    function MdToolbarRow() {\n    }\n    return MdToolbarRow;\n}());\nMdToolbarRow.decorators = [\n    { type: Directive, args: [{\n                selector: 'md-toolbar-row, mat-toolbar-row',\n                host: {\n                    '[class.mat-toolbar-row]': 'true',\n                },\n            },] },\n];\n/**\n * @nocollapse\n */\nMdToolbarRow.ctorParameters = function () { return []; };\nvar MdToolbar = (function () {\n    /**\n     * @param {?} elementRef\n     * @param {?} renderer\n     */\n    function MdToolbar(elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n    }\n    Object.defineProperty(MdToolbar.prototype, \"color\", {\n        /**\n         * The color of the toolbar. Can be primary, accent, or warn.\n         * @return {?}\n         */\n        get: function () {\n            return this._color;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._updateColor(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} newColor\n     * @return {?}\n     */\n    MdToolbar.prototype._updateColor = function (newColor) {\n        this._setElementColor(this._color, false);\n        this._setElementColor(newColor, true);\n        this._color = newColor;\n    };\n    /**\n     * @param {?} color\n     * @param {?} isAdd\n     * @return {?}\n     */\n    MdToolbar.prototype._setElementColor = function (color, isAdd) {\n        if (color != null && color != '') {\n            this.renderer.setElementClass(this.elementRef.nativeElement, \"mat-\" + color, isAdd);\n        }\n    };\n    return MdToolbar;\n}());\nMdToolbar.decorators = [\n    { type: Component, args: [{ selector: 'md-toolbar, mat-toolbar',\n                template: \"<div class=\\\"mat-toolbar-layout\\\"> <md-toolbar-row> <ng-content></ng-content> </md-toolbar-row> <ng-content select=\\\"md-toolbar-row, mat-toolbar-row\\\"></ng-content> </div> \",\n                styles: [\".mat-toolbar{display:flex;box-sizing:border-box;width:100%;font-size:20px;font-weight:500;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;padding:0 16px;flex-direction:column}.mat-toolbar .mat-toolbar-row{display:flex;box-sizing:border-box;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar{min-height:64px}.mat-toolbar-row{height:64px}@media (max-width:600px){.mat-toolbar{min-height:56px}.mat-toolbar-row{height:56px}} /*# sourceMappingURL=toolbar.css.map */ \"],\n                host: {\n                    '[class.mat-toolbar]': 'true',\n                    'role': 'toolbar'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            },] },\n];\n/**\n * @nocollapse\n */\nMdToolbar.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: Renderer, },\n]; };\nMdToolbar.propDecorators = {\n    'color': [{ type: Input },],\n};\nvar MdToolbarModule = (function () {\n    function MdToolbarModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdToolbarModule.forRoot = function () {\n        return {\n            ngModule: MdToolbarModule,\n            providers: []\n        };\n    };\n    return MdToolbarModule;\n}());\nMdToolbarModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CompatibilityModule],\n                exports: [MdToolbar, MdToolbarRow, CompatibilityModule],\n                declarations: [MdToolbar, MdToolbarRow],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdToolbarModule.ctorParameters = function () { return []; };\n/**\n * Exception thrown when a tooltip has an invalid position.\n * \\@docs-private\n */\nvar MdTooltipInvalidPositionError = (function (_super) {\n    __extends(MdTooltipInvalidPositionError, _super);\n    /**\n     * @param {?} position\n     */\n    function MdTooltipInvalidPositionError(position) {\n        return _super.call(this, \"Tooltip position \\\"\" + position + \"\\\" is invalid.\") || this;\n    }\n    return MdTooltipInvalidPositionError;\n}(MdError));\n/** Time in ms to delay before changing the tooltip visibility to hidden */\nvar TOUCHEND_HIDE_DELAY = 1500;\n/** Time in ms to throttle repositioning after scroll events. */\nvar SCROLL_THROTTLE_MS = 20;\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.google.com/components/tooltips.html\n */\nvar MdTooltip = (function () {\n    /**\n     * @param {?} _overlay\n     * @param {?} _elementRef\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewContainerRef\n     * @param {?} _ngZone\n     * @param {?} _renderer\n     * @param {?} _platform\n     * @param {?} _dir\n     */\n    function MdTooltip(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _renderer, _platform, _dir) {\n        var _this = this;\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._renderer = _renderer;\n        this._platform = _platform;\n        this._dir = _dir;\n        this._position = 'below';\n        this._disabled = false;\n        /** The default delay in ms before showing the tooltip after show is called */\n        this.showDelay = 0;\n        /** The default delay in ms before hiding the tooltip after hide is called */\n        this.hideDelay = 0;\n        // The mouse events shouldn't be bound on iOS devices, because\n        // they can prevent the first tap from firing it's click event.\n        if (!_platform.IOS) {\n            _renderer.listen(_elementRef.nativeElement, 'mouseenter', function () { return _this.show(); });\n            _renderer.listen(_elementRef.nativeElement, 'mouseleave', function () { return _this.hide(); });\n        }\n    }\n    Object.defineProperty(MdTooltip.prototype, \"position\", {\n        /**\n         * Allows the user to define the position of the tooltip relative to the parent element\n         * @return {?}\n         */\n        get: function () { return this._position; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (value !== this._position) {\n                this._position = value;\n                // TODO(andrewjs): When the overlay's position can be dynamically changed, do not destroy\n                // the tooltip.\n                if (this._tooltipInstance) {\n                    this._disposeTooltip();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTooltip.prototype, \"disabled\", {\n        /**\n         * Disables the display of the tooltip.\n         * @return {?}\n         */\n        get: function () { return this._disabled; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._disabled = coerceBooleanProperty(value);\n            // If tooltip is disabled, hide immediately.\n            if (this._disabled) {\n                this.hide(0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTooltip.prototype, \"_positionDeprecated\", {\n        /**\n         * @deprecated\n         * @return {?}\n         */\n        get: function () { return this._position; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) { this._position = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTooltip.prototype, \"message\", {\n        /**\n         * The message to be displayed in the tooltip\n         * @return {?}\n         */\n        get: function () { return this._message; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._message = value;\n            if (this._tooltipInstance) {\n                this._setTooltipMessage(this._message);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTooltip.prototype, \"_deprecatedMessage\", {\n        /**\n         * @deprecated\n         * @return {?}\n         */\n        get: function () { return this.message; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this.message = v; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTooltip.prototype, \"_matMessage\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.message; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this.message = v; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTooltip.prototype, \"_matPosition\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.position; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this.position = v; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTooltip.prototype, \"_matDisabled\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.disabled; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this.disabled = v; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTooltip.prototype, \"_matHideDelay\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.hideDelay; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this.hideDelay = v; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdTooltip.prototype, \"_matShowDelay\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.showDelay; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this.showDelay = v; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdTooltip.prototype.ngOnInit = function () {\n        var _this = this;\n        // When a scroll on the page occurs, update the position in case this tooltip needs\n        // to be repositioned.\n        this.scrollSubscription = this._scrollDispatcher.scrolled(SCROLL_THROTTLE_MS, function () {\n            if (_this._overlayRef) {\n                _this._overlayRef.updatePosition();\n            }\n        });\n    };\n    /**\n     * Dispose the tooltip when destroyed.\n     * @return {?}\n     */\n    MdTooltip.prototype.ngOnDestroy = function () {\n        if (this._tooltipInstance) {\n            this._disposeTooltip();\n        }\n        if (this.scrollSubscription) {\n            this.scrollSubscription.unsubscribe();\n        }\n    };\n    /**\n     * Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    MdTooltip.prototype.show = function (delay) {\n        if (delay === void 0) { delay = this.showDelay; }\n        if (this.disabled || !this._message || !this._message.trim()) {\n            return;\n        }\n        if (!this._tooltipInstance) {\n            this._createTooltip();\n        }\n        this._setTooltipMessage(this._message);\n        this._tooltipInstance.show(this._position, delay);\n    };\n    /**\n     * Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    MdTooltip.prototype.hide = function (delay) {\n        if (delay === void 0) { delay = this.hideDelay; }\n        if (this._tooltipInstance) {\n            this._tooltipInstance.hide(delay);\n        }\n    };\n    /**\n     * Shows/hides the tooltip\n     * @return {?}\n     */\n    MdTooltip.prototype.toggle = function () {\n        this._isTooltipVisible() ? this.hide() : this.show();\n    };\n    /**\n     * Returns true if the tooltip is currently visible to the user\n     * @return {?}\n     */\n    MdTooltip.prototype._isTooltipVisible = function () {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    };\n    /**\n     * Create the tooltip to display\n     * @return {?}\n     */\n    MdTooltip.prototype._createTooltip = function () {\n        var _this = this;\n        this._createOverlay();\n        var /** @type {?} */ portal = new ComponentPortal(TooltipComponent, this._viewContainerRef);\n        this._tooltipInstance = this._overlayRef.attach(portal).instance;\n        // Dispose the overlay when finished the shown tooltip.\n        this._tooltipInstance.afterHidden().subscribe(function () {\n            // Check first if the tooltip has already been removed through this components destroy.\n            if (_this._tooltipInstance) {\n                _this._disposeTooltip();\n            }\n        });\n    };\n    /**\n     * Create the overlay config and position strategy\n     * @return {?}\n     */\n    MdTooltip.prototype._createOverlay = function () {\n        var _this = this;\n        var /** @type {?} */ origin = this._getOrigin();\n        var /** @type {?} */ position = this._getOverlayPosition();\n        // Create connected position strategy that listens for scroll events to reposition.\n        // After position changes occur and the overlay is clipped by a parent scrollable then\n        // close the tooltip.\n        var /** @type {?} */ strategy = this._overlay.position().connectedTo(this._elementRef, origin, position);\n        strategy.withScrollableContainers(this._scrollDispatcher.getScrollContainers(this._elementRef));\n        strategy.onPositionChange.subscribe(function (change) {\n            if (change.scrollableViewProperties.isOverlayClipped &&\n                _this._tooltipInstance && _this._tooltipInstance.isVisible()) {\n                _this.hide(0);\n            }\n        });\n        var /** @type {?} */ config = new OverlayState();\n        config.positionStrategy = strategy;\n        this._overlayRef = this._overlay.create(config);\n    };\n    /**\n     * Disposes the current tooltip and the overlay it is attached to\n     * @return {?}\n     */\n    MdTooltip.prototype._disposeTooltip = function () {\n        this._overlayRef.dispose();\n        this._overlayRef = null;\n        this._tooltipInstance = null;\n    };\n    /**\n     * Returns the origin position based on the user's position preference\n     * @return {?}\n     */\n    MdTooltip.prototype._getOrigin = function () {\n        if (this.position == 'above' || this.position == 'below') {\n            return { originX: 'center', originY: this.position == 'above' ? 'top' : 'bottom' };\n        }\n        var /** @type {?} */ isDirectionLtr = !this._dir || this._dir.value == 'ltr';\n        if (this.position == 'left' ||\n            this.position == 'before' && isDirectionLtr ||\n            this.position == 'after' && !isDirectionLtr) {\n            return { originX: 'start', originY: 'center' };\n        }\n        if (this.position == 'right' ||\n            this.position == 'after' && isDirectionLtr ||\n            this.position == 'before' && !isDirectionLtr) {\n            return { originX: 'end', originY: 'center' };\n        }\n        throw new MdTooltipInvalidPositionError(this.position);\n    };\n    /**\n     * Returns the overlay position based on the user's preference\n     * @return {?}\n     */\n    MdTooltip.prototype._getOverlayPosition = function () {\n        if (this.position == 'above') {\n            return { overlayX: 'center', overlayY: 'bottom' };\n        }\n        if (this.position == 'below') {\n            return { overlayX: 'center', overlayY: 'top' };\n        }\n        var /** @type {?} */ isLtr = !this._dir || this._dir.value == 'ltr';\n        if (this.position == 'left' ||\n            this.position == 'before' && isLtr ||\n            this.position == 'after' && !isLtr) {\n            return { overlayX: 'end', overlayY: 'center' };\n        }\n        if (this.position == 'right' ||\n            this.position == 'after' && isLtr ||\n            this.position == 'before' && !isLtr) {\n            return { overlayX: 'start', overlayY: 'center' };\n        }\n        throw new MdTooltipInvalidPositionError(this.position);\n    };\n    /**\n     * Updates the tooltip message and repositions the overlay according to the new message length\n     * @param {?} message\n     * @return {?}\n     */\n    MdTooltip.prototype._setTooltipMessage = function (message) {\n        var _this = this;\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        this._tooltipInstance.message = message;\n        this._ngZone.onMicrotaskEmpty.first().subscribe(function () {\n            if (_this._tooltipInstance) {\n                _this._overlayRef.updatePosition();\n            }\n        });\n    };\n    return MdTooltip;\n}());\nMdTooltip.decorators = [\n    { type: Directive, args: [{\n                selector: '[md-tooltip], [mdTooltip], [mat-tooltip], [matTooltip]',\n                host: {\n                    '(longpress)': 'show()',\n                    '(touchend)': 'hide(' + TOUCHEND_HIDE_DELAY + ')',\n                },\n                exportAs: 'mdTooltip',\n            },] },\n];\n/**\n * @nocollapse\n */\nMdTooltip.ctorParameters = function () { return [\n    { type: Overlay, },\n    { type: ElementRef, },\n    { type: ScrollDispatcher, },\n    { type: ViewContainerRef, },\n    { type: NgZone, },\n    { type: Renderer, },\n    { type: Platform, },\n    { type: Dir, decorators: [{ type: Optional },] },\n]; };\nMdTooltip.propDecorators = {\n    'position': [{ type: Input, args: ['mdTooltipPosition',] },],\n    'disabled': [{ type: Input, args: ['mdTooltipDisabled',] },],\n    '_positionDeprecated': [{ type: Input, args: ['tooltip-position',] },],\n    'showDelay': [{ type: Input, args: ['mdTooltipShowDelay',] },],\n    'hideDelay': [{ type: Input, args: ['mdTooltipHideDelay',] },],\n    'message': [{ type: Input, args: ['mdTooltip',] },],\n    '_deprecatedMessage': [{ type: Input, args: ['md-tooltip',] },],\n    '_matMessage': [{ type: Input, args: ['matTooltip',] },],\n    '_matPosition': [{ type: Input, args: ['matTooltipPosition',] },],\n    '_matDisabled': [{ type: Input, args: ['matTooltipDisabled',] },],\n    '_matHideDelay': [{ type: Input, args: ['matTooltipHideDelay',] },],\n    '_matShowDelay': [{ type: Input, args: ['matTooltipShowDelay',] },],\n};\n/**\n * Internal component that wraps the tooltip's content.\n * \\@docs-private\n */\nvar TooltipComponent = (function () {\n    /**\n     * @param {?} _dir\n     * @param {?} _changeDetectorRef\n     */\n    function TooltipComponent(_dir, _changeDetectorRef) {\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Property watched by the animation framework to show or hide the tooltip */\n        this._visibility = 'initial';\n        /** Whether interactions on the page should close the tooltip */\n        this._closeOnInteraction = false;\n        /** The transform origin used in the animation for showing and hiding the tooltip */\n        this._transformOrigin = 'bottom';\n        this._onHide = new Subject();\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param {?} position Position of the tooltip.\n     * @param {?} delay Amount of milliseconds to the delay showing the tooltip.\n     * @return {?}\n     */\n    TooltipComponent.prototype.show = function (position, delay) {\n        var _this = this;\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        // Body interactions should cancel the tooltip if there is a delay in showing.\n        this._closeOnInteraction = true;\n        this._setTransformOrigin(position);\n        this._showTimeoutId = setTimeout(function () {\n            _this._visibility = 'visible';\n            // If this was set to true immediately, then a body click that triggers show() would\n            // trigger interaction and close the tooltip right after it was displayed.\n            _this._closeOnInteraction = false;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            _this._changeDetectorRef.markForCheck();\n            setTimeout(function () { _this._closeOnInteraction = true; }, 0);\n        }, delay);\n    };\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param {?} delay Amount of milliseconds to delay showing the tooltip.\n     * @return {?}\n     */\n    TooltipComponent.prototype.hide = function (delay) {\n        var _this = this;\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId) {\n            clearTimeout(this._showTimeoutId);\n        }\n        this._hideTimeoutId = setTimeout(function () {\n            _this._visibility = 'hidden';\n            _this._closeOnInteraction = false;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            _this._changeDetectorRef.markForCheck();\n        }, delay);\n    };\n    /**\n     * Returns an observable that notifies when the tooltip has been hidden from view\n     * @return {?}\n     */\n    TooltipComponent.prototype.afterHidden = function () {\n        return this._onHide.asObservable();\n    };\n    /**\n     * Whether the tooltip is being displayed\n     * @return {?}\n     */\n    TooltipComponent.prototype.isVisible = function () {\n        return this._visibility === 'visible';\n    };\n    /**\n     * Sets the tooltip transform origin according to the tooltip position\n     * @param {?} value\n     * @return {?}\n     */\n    TooltipComponent.prototype._setTransformOrigin = function (value) {\n        var /** @type {?} */ isLtr = !this._dir || this._dir.value == 'ltr';\n        switch (value) {\n            case 'before':\n                this._transformOrigin = isLtr ? 'right' : 'left';\n                break;\n            case 'after':\n                this._transformOrigin = isLtr ? 'left' : 'right';\n                break;\n            case 'left':\n                this._transformOrigin = 'right';\n                break;\n            case 'right':\n                this._transformOrigin = 'left';\n                break;\n            case 'above':\n                this._transformOrigin = 'bottom';\n                break;\n            case 'below':\n                this._transformOrigin = 'top';\n                break;\n            default: throw new MdTooltipInvalidPositionError(value);\n        }\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    TooltipComponent.prototype._afterVisibilityAnimation = function (e) {\n        if (e.toState === 'hidden' && !this.isVisible()) {\n            this._onHide.next();\n        }\n    };\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.google.com/components/tooltips.html#tooltips-interaction\n     * @return {?}\n     */\n    TooltipComponent.prototype._handleBodyInteraction = function () {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    };\n    return TooltipComponent;\n}());\nTooltipComponent.decorators = [\n    { type: Component, args: [{ selector: 'md-tooltip-component, mat-tooltip-component',\n                template: \"<div class=\\\"mat-tooltip\\\" [style.transform-origin]=\\\"_transformOrigin\\\" [@state]=\\\"_visibility\\\" (@state.done)=\\\"_afterVisibilityAnimation($event)\\\"> {{message}} </div>\",\n                styles: [\":host{pointer-events:none}.mat-tooltip{color:#fff;padding:6px 8px;border-radius:2px;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-size:10px;margin:14px;max-width:250px}@media screen and (-ms-high-contrast:active){.mat-tooltip{outline:solid 1px}} /*# sourceMappingURL=tooltip.css.map */ \"],\n                animations: [\n                    trigger('state', [\n                        state('void', style({ transform: 'scale(0)' })),\n                        state('initial', style({ transform: 'scale(0)' })),\n                        state('visible', style({ transform: 'scale(1)' })),\n                        state('hidden', style({ transform: 'scale(0)' })),\n                        transition('* => visible', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n                        transition('* => hidden', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n                    ])\n                ],\n                host: {\n                    '(body:click)': 'this._handleBodyInteraction()'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nTooltipComponent.ctorParameters = function () { return [\n    { type: Dir, decorators: [{ type: Optional },] },\n    { type: ChangeDetectorRef, },\n]; };\nvar MdTooltipModule = (function () {\n    function MdTooltipModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdTooltipModule.forRoot = function () {\n        return {\n            ngModule: MdTooltipModule,\n            providers: []\n        };\n    };\n    return MdTooltipModule;\n}());\nMdTooltipModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [OverlayModule, CompatibilityModule, PlatformModule],\n                exports: [MdTooltip, TooltipComponent, CompatibilityModule],\n                declarations: [MdTooltip, TooltipComponent],\n                entryComponents: [TooltipComponent],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdTooltipModule.ctorParameters = function () { return []; };\n/**\n * Exception thrown when menu trigger doesn't have a valid md-menu instance\n * \\@docs-private\n */\nvar MdMenuMissingError = (function (_super) {\n    __extends(MdMenuMissingError, _super);\n    function MdMenuMissingError() {\n        return _super.call(this, \"md-menu-trigger: must pass in an md-menu instance.\\n\\n    Example:\\n      <md-menu #menu=\\\"mdMenu\\\"></md-menu>\\n      <button [mdMenuTriggerFor]=\\\"menu\\\"></button>\\n    \") || this;\n    }\n    return MdMenuMissingError;\n}(MdError));\n/**\n * Exception thrown when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * \\@docs-private\n */\nvar MdMenuInvalidPositionX = (function (_super) {\n    __extends(MdMenuInvalidPositionX, _super);\n    function MdMenuInvalidPositionX() {\n        return _super.call(this, \"x-position value must be either 'before' or after'.\\n      Example: <md-menu x-position=\\\"before\\\" #menu=\\\"mdMenu\\\"></md-menu>\\n    \") || this;\n    }\n    return MdMenuInvalidPositionX;\n}(MdError));\n/**\n * Exception thrown when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * \\@docs-private\n */\nvar MdMenuInvalidPositionY = (function (_super) {\n    __extends(MdMenuInvalidPositionY, _super);\n    function MdMenuInvalidPositionY() {\n        return _super.call(this, \"y-position value must be either 'above' or below'.\\n      Example: <md-menu y-position=\\\"above\\\" #menu=\\\"mdMenu\\\"></md-menu>\\n    \") || this;\n    }\n    return MdMenuInvalidPositionY;\n}(MdError));\n/**\n * This directive is intended to be used inside an md-menu tag.\n * It exists mostly to set the role attribute.\n */\nvar MdMenuItem = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function MdMenuItem(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._disabled = false;\n    }\n    /**\n     * Focuses the menu item.\n     * @return {?}\n     */\n    MdMenuItem.prototype.focus = function () {\n        this._renderer.invokeElementMethod(this._getHostElement(), 'focus');\n    };\n    Object.defineProperty(MdMenuItem.prototype, \"disabled\", {\n        /**\n         * Whether the menu item is disabled.\n         * @return {?}\n         */\n        get: function () { return this._disabled; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._disabled = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Used to set the `tabindex`.\n     * @return {?}\n     */\n    MdMenuItem.prototype._getTabIndex = function () {\n        return this._disabled ? '-1' : '0';\n    };\n    /**\n     * Used to set the HTML `disabled` attribute. Necessary for links to be disabled properly.\n     * @return {?}\n     */\n    MdMenuItem.prototype._getDisabledAttr = function () {\n        return this._disabled ? true : null;\n    };\n    /**\n     * Returns the host DOM element.\n     * @return {?}\n     */\n    MdMenuItem.prototype._getHostElement = function () {\n        return this._elementRef.nativeElement;\n    };\n    /**\n     * Prevents the default element actions if it is disabled.\n     * @param {?} event\n     * @return {?}\n     */\n    MdMenuItem.prototype._checkDisabled = function (event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n    return MdMenuItem;\n}());\nMdMenuItem.decorators = [\n    { type: Component, args: [{ selector: '[md-menu-item], [mat-menu-item]',\n                host: {\n                    'role': 'menuitem',\n                    '[class.mat-menu-item]': 'true',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.disabled]': '_getDisabledAttr()',\n                    '(click)': '_checkDisabled($event)',\n                },\n                template: \"<ng-content></ng-content> <div class=\\\"mat-menu-ripple\\\" *ngIf=\\\"!disabled\\\" md-ripple [mdRippleTrigger]=\\\"_getHostElement()\\\"> </div> \",\n                exportAs: 'mdMenuItem'\n            },] },\n];\n/**\n * @nocollapse\n */\nMdMenuItem.ctorParameters = function () { return [\n    { type: Renderer, },\n    { type: ElementRef, },\n]; };\nMdMenuItem.propDecorators = {\n    'disabled': [{ type: Input },],\n};\n/**\n * Below are all the animations for the md-menu component.\n * Animation duration and timing values are based on AngularJS Material.\n */\n/**\n * This animation controls the menu panel's entry and exit from the page.\n *\n * When the menu panel is added to the DOM, it scales in and fades in its border.\n *\n * When the menu panel is removed from the DOM, it simply fades out after a brief\n * delay to display the ripple.\n */\n// TODO(kara): switch to :enter and :leave once Mobile Safari is sorted out.\nvar transformMenu = trigger('transformMenu', [\n    state('showing', style({\n        opacity: 1,\n        transform: \"scale(1)\"\n    })),\n    transition('void => *', [\n        style({\n            opacity: 0,\n            transform: \"scale(0)\"\n        }),\n        animate(\"200ms cubic-bezier(0.25, 0.8, 0.25, 1)\")\n    ]),\n    transition('* => void', [\n        animate('50ms 100ms linear', style({ opacity: 0 }))\n    ])\n]);\n/**\n * This animation fades in the background color and content of the menu panel\n * after its containing element is scaled in.\n */\nvar fadeInItems = trigger('fadeInItems', [\n    state('showing', style({ opacity: 1 })),\n    transition('void => *', [\n        style({ opacity: 0 }),\n        animate(\"200ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)\")\n    ])\n]);\n// TODO(kara): prevent-close functionality\nvar MdMenu = (function () {\n    /**\n     * @param {?} posX\n     * @param {?} posY\n     * @param {?} deprecatedPosX\n     * @param {?} deprecatedPosY\n     */\n    function MdMenu(posX, posY, deprecatedPosX, deprecatedPosY) {\n        /** Config object to be passed into the menu's ngClass */\n        this._classList = {};\n        /** Position of the menu in the X axis. */\n        this.positionX = 'after';\n        /** Position of the menu in the Y axis. */\n        this.positionY = 'below';\n        this.overlapTrigger = true;\n        /** Event emitted when the menu is closed. */\n        this.close = new EventEmitter();\n        // TODO(kara): Remove kebab-case attributes after next release\n        if (deprecatedPosX) {\n            this._setPositionX(deprecatedPosX);\n        }\n        if (deprecatedPosY) {\n            this._setPositionY(deprecatedPosY);\n        }\n        if (posX) {\n            this._setPositionX(posX);\n        }\n        if (posY) {\n            this._setPositionY(posY);\n        }\n        this.setPositionClasses(this.positionX, this.positionY);\n    }\n    /**\n     * @return {?}\n     */\n    MdMenu.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this._keyManager = new FocusKeyManager(this.items).withWrap();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(function () {\n            _this._emitCloseEvent();\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MdMenu.prototype.ngOnDestroy = function () {\n        if (this._tabSubscription) {\n            this._tabSubscription.unsubscribe();\n        }\n    };\n    Object.defineProperty(MdMenu.prototype, \"classList\", {\n        /**\n         * This method takes classes set on the host md-menu element and applies them on the\n         * menu template that displays in the overlay container.  Otherwise, it's difficult\n         * to style the containing menu from outside the component.\n         * @param {?} classes list of class names\n         * @return {?}\n         */\n        set: function (classes) {\n            this._classList = classes.split(' ').reduce(function (obj, className) {\n                obj[className] = true;\n                return obj;\n            }, {});\n            this.setPositionClasses(this.positionX, this.positionY);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Focus the first item in the menu. This method is used by the menu trigger\n     * to focus the first item when the menu is opened by the ENTER key.\n     * @return {?}\n     */\n    MdMenu.prototype.focusFirstItem = function () {\n        this._keyManager.setFirstItemActive();\n    };\n    /**\n     * This emits a close event to which the trigger is subscribed. When emitted, the\n     * trigger will close the menu.\n     * @return {?}\n     */\n    MdMenu.prototype._emitCloseEvent = function () {\n        this.close.emit();\n    };\n    /**\n     * @param {?} pos\n     * @return {?}\n     */\n    MdMenu.prototype._setPositionX = function (pos) {\n        if (pos !== 'before' && pos !== 'after') {\n            throw new MdMenuInvalidPositionX();\n        }\n        this.positionX = pos;\n    };\n    /**\n     * @param {?} pos\n     * @return {?}\n     */\n    MdMenu.prototype._setPositionY = function (pos) {\n        if (pos !== 'above' && pos !== 'below') {\n            throw new MdMenuInvalidPositionY();\n        }\n        this.positionY = pos;\n    };\n    /**\n     * It's necessary to set position-based classes to ensure the menu panel animation\n     * folds out from the correct direction.\n     * @param {?} posX\n     * @param {?} posY\n     * @return {?}\n     */\n    MdMenu.prototype.setPositionClasses = function (posX, posY) {\n        this._classList['mat-menu-before'] = posX == 'before';\n        this._classList['mat-menu-after'] = posX == 'after';\n        this._classList['mat-menu-above'] = posY == 'above';\n        this._classList['mat-menu-below'] = posY == 'below';\n    };\n    return MdMenu;\n}());\nMdMenu.decorators = [\n    { type: Component, args: [{ selector: 'md-menu, mat-menu',\n                host: { 'role': 'menu' },\n                template: \"<ng-template> <div class=\\\"mat-menu-panel\\\" [ngClass]=\\\"_classList\\\" (keydown)=\\\"_keyManager.onKeydown($event)\\\" (click)=\\\"_emitCloseEvent()\\\" [@transformMenu]=\\\"'showing'\\\"> <div class=\\\"mat-menu-content\\\" [@fadeInItems]=\\\"'showing'\\\"> <ng-content></ng-content> </div> </div> </ng-template> \",\n                styles: [\".mat-menu-panel{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh + 48px)}.mat-menu-panel.mat-menu-after.mat-menu-below{transform-origin:left top}.mat-menu-panel.mat-menu-after.mat-menu-above{transform-origin:left bottom}.mat-menu-panel.mat-menu-before.mat-menu-below{transform-origin:right top}.mat-menu-panel.mat-menu-before.mat-menu-above{transform-origin:right bottom}[dir=rtl] .mat-menu-panel.mat-menu-after.mat-menu-below{transform-origin:right top}[dir=rtl] .mat-menu-panel.mat-menu-after.mat-menu-above{transform-origin:right bottom}[dir=rtl] .mat-menu-panel.mat-menu-before.mat-menu-below{transform-origin:left top}[dir=rtl] .mat-menu-panel.mat-menu-before.mat-menu-above{transform-origin:left bottom}@media screen and (-ms-high-contrast:active){.mat-menu-panel{outline:solid 1px}}.mat-menu-content{padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;font-size:16px;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;text-align:left;text-decoration:none;position:relative}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px}button.mat-menu-item{width:100%}.mat-menu-ripple{position:absolute;top:0;left:0;bottom:0;right:0} /*# sourceMappingURL=menu.css.map */ \"],\n                encapsulation: ViewEncapsulation.None,\n                animations: [\n                    transformMenu,\n                    fadeInItems\n                ],\n                exportAs: 'mdMenu'\n            },] },\n];\n/**\n * @nocollapse\n */\nMdMenu.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Attribute, args: ['xPosition',] },] },\n    { type: undefined, decorators: [{ type: Attribute, args: ['yPosition',] },] },\n    { type: undefined, decorators: [{ type: Attribute, args: ['x-position',] },] },\n    { type: undefined, decorators: [{ type: Attribute, args: ['y-position',] },] },\n]; };\nMdMenu.propDecorators = {\n    'templateRef': [{ type: ViewChild, args: [TemplateRef,] },],\n    'items': [{ type: ContentChildren, args: [MdMenuItem,] },],\n    'overlapTrigger': [{ type: Input },],\n    'classList': [{ type: Input, args: ['class',] },],\n    'close': [{ type: Output },],\n};\n/**\n * This directive is intended to be used in conjunction with an md-menu tag.  It is\n * responsible for toggling the display of the provided menu instance.\n */\nvar MdMenuTrigger = (function () {\n    /**\n     * @param {?} _overlay\n     * @param {?} _element\n     * @param {?} _viewContainerRef\n     * @param {?} _renderer\n     * @param {?} _dir\n     */\n    function MdMenuTrigger(_overlay, _element, _viewContainerRef, _renderer, _dir) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._renderer = _renderer;\n        this._dir = _dir;\n        this._menuOpen = false;\n        this._openedByMouse = false;\n        /** Event emitted when the associated menu is opened. */\n        this.onMenuOpen = new EventEmitter();\n        /** Event emitted when the associated menu is closed. */\n        this.onMenuClose = new EventEmitter();\n    }\n    Object.defineProperty(MdMenuTrigger.prototype, \"_deprecatedMdMenuTriggerFor\", {\n        /**\n         * @deprecated\n         * @return {?}\n         */\n        get: function () { return this.menu; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this.menu = v; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdMenuTrigger.prototype, \"_deprecatedMatMenuTriggerFor\", {\n        /**\n         * @deprecated\n         * @return {?}\n         */\n        get: function () { return this.menu; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this.menu = v; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdMenuTrigger.prototype, \"_matMenuTriggerFor\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.menu; },\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set: function (v) { this.menu = v; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdMenuTrigger.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        this._checkMenu();\n        this.menu.close.subscribe(function () { return _this.closeMenu(); });\n    };\n    /**\n     * @return {?}\n     */\n    MdMenuTrigger.prototype.ngOnDestroy = function () { this.destroyMenu(); };\n    Object.defineProperty(MdMenuTrigger.prototype, \"menuOpen\", {\n        /**\n         * Whether the menu is open.\n         * @return {?}\n         */\n        get: function () { return this._menuOpen; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Toggles the menu between the open and closed states.\n     * @return {?}\n     */\n    MdMenuTrigger.prototype.toggleMenu = function () {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    };\n    /**\n     * Opens the menu.\n     * @return {?}\n     */\n    MdMenuTrigger.prototype.openMenu = function () {\n        if (!this._menuOpen) {\n            this._createOverlay();\n            this._overlayRef.attach(this._portal);\n            this._subscribeToBackdrop();\n            this._initMenu();\n        }\n    };\n    /**\n     * Closes the menu.\n     * @return {?}\n     */\n    MdMenuTrigger.prototype.closeMenu = function () {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n            this._backdropSubscription.unsubscribe();\n            this._resetMenu();\n        }\n    };\n    /**\n     * Removes the menu from the DOM.\n     * @return {?}\n     */\n    MdMenuTrigger.prototype.destroyMenu = function () {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n            this._cleanUpSubscriptions();\n        }\n    };\n    /**\n     * Focuses the menu trigger.\n     * @return {?}\n     */\n    MdMenuTrigger.prototype.focus = function () {\n        this._renderer.invokeElementMethod(this._element.nativeElement, 'focus');\n    };\n    Object.defineProperty(MdMenuTrigger.prototype, \"dir\", {\n        /**\n         * The text direction of the containing app.\n         * @return {?}\n         */\n        get: function () {\n            return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * This method ensures that the menu closes when the overlay backdrop is clicked.\n     * We do not use first() here because doing so would not catch clicks from within\n     * the menu, and it would fail to unsubscribe properly. Instead, we unsubscribe\n     * explicitly when the menu is closed or destroyed.\n     * @return {?}\n     */\n    MdMenuTrigger.prototype._subscribeToBackdrop = function () {\n        var _this = this;\n        this._backdropSubscription = this._overlayRef.backdropClick().subscribe(function () {\n            _this.menu._emitCloseEvent();\n        });\n    };\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     * @return {?}\n     */\n    MdMenuTrigger.prototype._initMenu = function () {\n        this._setIsMenuOpen(true);\n        // Should only set focus if opened via the keyboard, so keyboard users can\n        // can easily navigate menu items. According to spec, mouse users should not\n        // see the focus style.\n        if (!this._openedByMouse) {\n            this.menu.focusFirstItem();\n        }\n    };\n    ;\n    /**\n     * This method resets the menu when it's closed, most importantly restoring\n     * focus to the menu trigger if the menu was opened via the keyboard.\n     * @return {?}\n     */\n    MdMenuTrigger.prototype._resetMenu = function () {\n        this._setIsMenuOpen(false);\n        // Focus only needs to be reset to the host element if the menu was opened\n        // by the keyboard and manually shifted to the first menu item.\n        if (!this._openedByMouse) {\n            this.focus();\n        }\n        this._openedByMouse = false;\n    };\n    /**\n     * @param {?} isOpen\n     * @return {?}\n     */\n    MdMenuTrigger.prototype._setIsMenuOpen = function (isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.onMenuOpen.emit() : this.onMenuClose.emit();\n    };\n    /**\n     *  This method checks that a valid instance of MdMenu has been passed into\n     *  mdMenuTriggerFor. If not, an exception is thrown.\n     * @return {?}\n     */\n    MdMenuTrigger.prototype._checkMenu = function () {\n        if (!this.menu) {\n            throw new MdMenuMissingError();\n        }\n    };\n    /**\n     *  This method creates the overlay from the provided menu's template and saves its\n     *  OverlayRef so that it can be attached to the DOM when openMenu is called.\n     * @return {?}\n     */\n    MdMenuTrigger.prototype._createOverlay = function () {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n            var /** @type {?} */ config = this._getOverlayConfig();\n            this._subscribeToPositions(/** @type {?} */ (config.positionStrategy));\n            this._overlayRef = this._overlay.create(config);\n        }\n    };\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @return {?} OverlayState\n     */\n    MdMenuTrigger.prototype._getOverlayConfig = function () {\n        var /** @type {?} */ overlayState = new OverlayState();\n        overlayState.positionStrategy = this._getPosition()\n            .withDirection(this.dir);\n        overlayState.hasBackdrop = true;\n        overlayState.backdropClass = 'cdk-overlay-transparent-backdrop';\n        overlayState.direction = this.dir;\n        return overlayState;\n    };\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     * @param {?} position\n     * @return {?}\n     */\n    MdMenuTrigger.prototype._subscribeToPositions = function (position) {\n        var _this = this;\n        this._positionSubscription = position.onPositionChange.subscribe(function (change) {\n            var /** @type {?} */ posX = change.connectionPair.originX === 'start' ? 'after' : 'before';\n            var /** @type {?} */ posY = change.connectionPair.originY === 'top' ? 'below' : 'above';\n            if (!_this.menu.overlapTrigger) {\n                posY = posY === 'below' ? 'above' : 'below';\n            }\n            _this.menu.setPositionClasses(posX, posY);\n        });\n    };\n    /**\n     * This method builds the position strategy for the overlay, so the menu is properly connected\n     * to the trigger.\n     * @return {?} ConnectedPositionStrategy\n     */\n    MdMenuTrigger.prototype._getPosition = function () {\n        var _a = this.menu.positionX === 'before' ? ['end', 'start'] : ['start', 'end'], posX = _a[0], fallbackX = _a[1];\n        var _b = this.menu.positionY === 'above' ? ['bottom', 'top'] : ['top', 'bottom'], overlayY = _b[0], fallbackOverlayY = _b[1];\n        var /** @type {?} */ originY = overlayY;\n        var /** @type {?} */ fallbackOriginY = fallbackOverlayY;\n        if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            fallbackOriginY = fallbackOverlayY === 'top' ? 'bottom' : 'top';\n        }\n        return this._overlay.position()\n            .connectedTo(this._element, { originX: posX, originY: originY }, { overlayX: posX, overlayY: overlayY })\n            .withFallbackPosition({ originX: fallbackX, originY: originY }, { overlayX: fallbackX, overlayY: overlayY })\n            .withFallbackPosition({ originX: posX, originY: fallbackOriginY }, { overlayX: posX, overlayY: fallbackOverlayY })\n            .withFallbackPosition({ originX: fallbackX, originY: fallbackOriginY }, { overlayX: fallbackX, overlayY: fallbackOverlayY });\n    };\n    /**\n     * @return {?}\n     */\n    MdMenuTrigger.prototype._cleanUpSubscriptions = function () {\n        if (this._backdropSubscription) {\n            this._backdropSubscription.unsubscribe();\n        }\n        if (this._positionSubscription) {\n            this._positionSubscription.unsubscribe();\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdMenuTrigger.prototype._handleMousedown = function (event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            this._openedByMouse = true;\n        }\n    };\n    return MdMenuTrigger;\n}());\nMdMenuTrigger.decorators = [\n    { type: Directive, args: [{\n                selector: \"[md-menu-trigger-for], [mat-menu-trigger-for],\\n             [mdMenuTriggerFor], [matMenuTriggerFor]\",\n                host: {\n                    'aria-haspopup': 'true',\n                    '(mousedown)': '_handleMousedown($event)',\n                    '(click)': 'toggleMenu()',\n                },\n                exportAs: 'mdMenuTrigger'\n            },] },\n];\n/**\n * @nocollapse\n */\nMdMenuTrigger.ctorParameters = function () { return [\n    { type: Overlay, },\n    { type: ElementRef, },\n    { type: ViewContainerRef, },\n    { type: Renderer, },\n    { type: Dir, decorators: [{ type: Optional },] },\n]; };\nMdMenuTrigger.propDecorators = {\n    '_deprecatedMdMenuTriggerFor': [{ type: Input, args: ['md-menu-trigger-for',] },],\n    '_deprecatedMatMenuTriggerFor': [{ type: Input, args: ['mat-menu-trigger-for',] },],\n    '_matMenuTriggerFor': [{ type: Input, args: ['matMenuTriggerFor',] },],\n    'menu': [{ type: Input, args: ['mdMenuTriggerFor',] },],\n    'onMenuOpen': [{ type: Output },],\n    'onMenuClose': [{ type: Output },],\n};\nvar MdMenuModule = (function () {\n    function MdMenuModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdMenuModule.forRoot = function () {\n        return {\n            ngModule: MdMenuModule,\n            providers: [],\n        };\n    };\n    return MdMenuModule;\n}());\nMdMenuModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    OverlayModule,\n                    CommonModule,\n                    MdRippleModule,\n                    CompatibilityModule,\n                ],\n                exports: [MdMenu, MdMenuItem, MdMenuTrigger, CompatibilityModule],\n                declarations: [MdMenu, MdMenuItem, MdMenuTrigger],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdMenuModule.ctorParameters = function () { return []; };\n/**\n * Reference to a dialog opened via the MdDialog service.\n */\nvar MdDialogRef = (function () {\n    /**\n     * @param {?} _overlayRef\n     * @param {?} _containerInstance\n     */\n    function MdDialogRef(_overlayRef, _containerInstance) {\n        var _this = this;\n        this._overlayRef = _overlayRef;\n        this._containerInstance = _containerInstance;\n        this._afterClosed = new Subject();\n        _containerInstance._onAnimationStateChange.subscribe(function (state$$1) {\n            if (state$$1 === 'exit-start') {\n                // Transition the backdrop in parallel with the dialog.\n                _this._overlayRef.detachBackdrop();\n            }\n            else if (state$$1 === 'exit') {\n                _this._overlayRef.dispose();\n                _this._afterClosed.next(_this._result);\n                _this._afterClosed.complete();\n                _this.componentInstance = null;\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param {?=} dialogResult Optional result to return to the dialog opener.\n     * @return {?}\n     */\n    MdDialogRef.prototype.close = function (dialogResult) {\n        this._result = dialogResult;\n        this._containerInstance._exit();\n    };\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     * @return {?}\n     */\n    MdDialogRef.prototype.afterClosed = function () {\n        return this._afterClosed.asObservable();\n    };\n    /**\n     * Updates the dialog's position.\n     * @param {?=} position New dialog position.\n     * @return {?}\n     */\n    MdDialogRef.prototype.updatePosition = function (position) {\n        var /** @type {?} */ strategy = this._getPositionStrategy();\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        this._overlayRef.updatePosition();\n        return this;\n    };\n    /**\n     * Updates the dialog's width and height.\n     * @param {?=} width New width of the dialog.\n     * @param {?=} height New height of the dialog.\n     * @return {?}\n     */\n    MdDialogRef.prototype.updateSize = function (width, height) {\n        if (width === void 0) { width = 'auto'; }\n        if (height === void 0) { height = 'auto'; }\n        this._getPositionStrategy().width(width).height(height);\n        this._overlayRef.updatePosition();\n        return this;\n    };\n    /**\n     * Fetches the position strategy object from the overlay ref.\n     * @return {?}\n     */\n    MdDialogRef.prototype._getPositionStrategy = function () {\n        return (this._overlayRef.getState().positionStrategy);\n    };\n    return MdDialogRef;\n}());\nvar MD_DIALOG_DATA = new OpaqueToken('MdDialogData');\n/**\n * Custom injector type specifically for instantiating components with a dialog.\n */\nvar DialogInjector = (function () {\n    /**\n     * @param {?} _parentInjector\n     * @param {?} _dialogRef\n     * @param {?} _data\n     */\n    function DialogInjector(_parentInjector, _dialogRef, _data) {\n        this._parentInjector = _parentInjector;\n        this._dialogRef = _dialogRef;\n        this._data = _data;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    DialogInjector.prototype.get = function (token, notFoundValue) {\n        if (token === MdDialogRef) {\n            return this._dialogRef;\n        }\n        if (token === MD_DIALOG_DATA && this._data) {\n            return this._data;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    };\n    return DialogInjector;\n}());\n/**\n * Configuration for opening a modal dialog with the MdDialog service.\n */\nvar MdDialogConfig = (function () {\n    function MdDialogConfig() {\n        /** The ARIA role of the dialog element. */\n        this.role = 'dialog';\n        /** Whether the user can use escape or clicking outside to close a modal. */\n        this.disableClose = false;\n        /** Width of the dialog. */\n        this.width = '';\n        /** Height of the dialog. */\n        this.height = '';\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n    return MdDialogConfig;\n}());\n/**\n * Exception thrown when a ComponentPortal is attached to a DomPortalHost without an origin.\n * \\@docs-private\n */\nvar MdDialogContentAlreadyAttachedError = (function (_super) {\n    __extends(MdDialogContentAlreadyAttachedError, _super);\n    function MdDialogContentAlreadyAttachedError() {\n        return _super.call(this, 'Attempting to attach dialog content after content is already attached') || this;\n    }\n    return MdDialogContentAlreadyAttachedError;\n}(MdError));\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * \\@docs-private\n */\nvar MdDialogContainer = (function (_super) {\n    __extends(MdDialogContainer, _super);\n    /**\n     * @param {?} _ngZone\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     */\n    function MdDialogContainer(_ngZone, _renderer, _elementRef, _focusTrapFactory) {\n        var _this = _super.call(this) || this;\n        _this._ngZone = _ngZone;\n        _this._renderer = _renderer;\n        _this._elementRef = _elementRef;\n        _this._focusTrapFactory = _focusTrapFactory;\n        _this._elementFocusedBeforeDialogWasOpened = null;\n        /** State of the dialog animation. */\n        _this._state = 'enter';\n        /** Emits the current animation state whenever it changes. */\n        _this._onAnimationStateChange = new EventEmitter();\n        return _this;\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @template T\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    MdDialogContainer.prototype.attachComponentPortal = function (portal) {\n        if (this._portalHost.hasAttached()) {\n            throw new MdDialogContentAlreadyAttachedError();\n        }\n        return this._portalHost.attachComponentPortal(portal);\n    };\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    MdDialogContainer.prototype.attachTemplatePortal = function (portal) {\n        if (this._portalHost.hasAttached()) {\n            throw new MdDialogContentAlreadyAttachedError();\n        }\n        return this._portalHost.attachTemplatePortal(portal);\n    };\n    /**\n     * Moves the focus inside the focus trap.\n     * @return {?}\n     */\n    MdDialogContainer.prototype._trapFocus = function () {\n        if (!this._focusTrap) {\n            this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        }\n        // If were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty.\n        this._elementFocusedBeforeDialogWasOpened = (document.activeElement);\n        this._focusTrap.focusFirstTabbableElementWhenReady();\n    };\n    /**\n     * Kicks off the leave animation.\n     * \\@docs-private\n     * @return {?}\n     */\n    MdDialogContainer.prototype._exit = function () {\n        this._state = 'exit';\n        this._onAnimationStateChange.emit('exit-start');\n    };\n    /**\n     * Callback, invoked whenever an animation on the host completes.\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    MdDialogContainer.prototype._onAnimationDone = function (event) {\n        if (event.toState === 'enter') {\n            this._trapFocus();\n        }\n        this._onAnimationStateChange.emit(/** @type {?} */ (event.toState));\n    };\n    /**\n     * @return {?}\n     */\n    MdDialogContainer.prototype.ngOnDestroy = function () {\n        // When the dialog is destroyed, return focus to the element that originally had it before\n        // the dialog was opened. Wait for the DOM to finish settling before changing the focus so\n        // that it doesn't end up back on the <body>. Also note that we need the extra check, because\n        // IE can set the `activeElement` to null in some cases.\n        var /** @type {?} */ toFocus = (this._elementFocusedBeforeDialogWasOpened);\n        // We shouldn't use `this` inside of the NgZone subscription, because it causes a memory leak.\n        var /** @type {?} */ animationStream = this._onAnimationStateChange;\n        this._ngZone.onMicrotaskEmpty.first().subscribe(function () {\n            if (toFocus && 'focus' in toFocus) {\n                toFocus.focus();\n            }\n            animationStream.complete();\n        });\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    };\n    return MdDialogContainer;\n}(BasePortalHost));\nMdDialogContainer.decorators = [\n    { type: Component, args: [{ selector: 'md-dialog-container, mat-dialog-container',\n                template: \"<ng-template cdkPortalHost></ng-template> \",\n                styles: [\".mat-dialog-container{box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12);display:block;padding:24px;border-radius:2px;box-sizing:border-box;overflow:auto;max-width:80vw;width:100%;height:100%}@media screen and (-ms-high-contrast:active){.mat-dialog-container{outline:solid 1px}}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto}.mat-dialog-title{font-size:20px;font-weight:700;margin:0 0 20px;display:block}.mat-dialog-actions{padding:12px 0;display:flex}.mat-dialog-actions:last-child{margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center} /*# sourceMappingURL=dialog.css.map */ \"],\n                encapsulation: ViewEncapsulation.None,\n                animations: [\n                    trigger('slideDialog', [\n                        state('void', style({ transform: 'translateY(25%) scale(0.9)', opacity: 0 })),\n                        state('enter', style({ transform: 'translateY(0%) scale(1)', opacity: 1 })),\n                        state('exit', style({ transform: 'translateY(25%)', opacity: 0 })),\n                        transition('* => *', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\n                    ])\n                ],\n                host: {\n                    '[class.mat-dialog-container]': 'true',\n                    '[attr.role]': 'dialogConfig?.role',\n                    '[@slideDialog]': '_state',\n                    '(@slideDialog.done)': '_onAnimationDone($event)',\n                },\n            },] },\n];\n/**\n * @nocollapse\n */\nMdDialogContainer.ctorParameters = function () { return [\n    { type: NgZone, },\n    { type: Renderer, },\n    { type: ElementRef, },\n    { type: FocusTrapFactory, },\n]; };\nMdDialogContainer.propDecorators = {\n    '_portalHost': [{ type: ViewChild, args: [PortalHostDirective,] },],\n};\n/**\n * Service to open Material Design modal dialogs.\n */\nvar MdDialog = (function () {\n    /**\n     * @param {?} _overlay\n     * @param {?} _injector\n     * @param {?} _parentDialog\n     */\n    function MdDialog(_overlay, _injector, _parentDialog) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._parentDialog = _parentDialog;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenAtThisLevel = new Subject();\n        this._boundKeydown = this._handleKeydown.bind(this);\n        /** Gets an observable that is notified when a dialog has been opened. */\n        this.afterOpen = this._afterOpen.asObservable();\n        /** Gets an observable that is notified when all open dialog have finished closing. */\n        this.afterAllClosed = this._afterAllClosed.asObservable();\n    }\n    Object.defineProperty(MdDialog.prototype, \"_openDialogs\", {\n        /**\n         * Keeps track of the currently-open dialogs.\n         * @return {?}\n         */\n        get: function () {\n            return this._parentDialog ? this._parentDialog._openDialogs : this._openDialogsAtThisLevel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdDialog.prototype, \"_afterOpen\", {\n        /**\n         * Subject for notifying the user that a dialog has opened.\n         * @return {?}\n         */\n        get: function () {\n            return this._parentDialog ? this._parentDialog._afterOpen : this._afterOpenAtThisLevel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdDialog.prototype, \"_afterAllClosed\", {\n        /**\n         * Subject for notifying the user that all open dialogs have finished closing.\n         * @return {?}\n         */\n        get: function () {\n            return this._parentDialog ?\n                this._parentDialog._afterAllClosed : this._afterAllClosedAtThisLevel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Opens a modal dialog containing the given component.\n     * @template T\n     * @param {?} componentOrTemplateRef Type of the component to load into the dialog,\n     *     or a TemplateRef to instantiate as the dialog content.\n     * @param {?=} config Extra configuration options.\n     * @return {?} Reference to the newly-opened dialog.\n     */\n    MdDialog.prototype.open = function (componentOrTemplateRef, config) {\n        var _this = this;\n        config = _applyConfigDefaults$1(config);\n        var /** @type {?} */ overlayRef = this._createOverlay(config);\n        var /** @type {?} */ dialogContainer = this._attachDialogContainer(overlayRef, config);\n        var /** @type {?} */ dialogRef = this._attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config);\n        if (!this._openDialogs.length && !this._parentDialog) {\n            document.addEventListener('keydown', this._boundKeydown);\n        }\n        this._openDialogs.push(dialogRef);\n        dialogRef.afterClosed().subscribe(function () { return _this._removeOpenDialog(dialogRef); });\n        this._afterOpen.next(dialogRef);\n        return dialogRef;\n    };\n    /**\n     * Closes all of the currently-open dialogs.\n     * @return {?}\n     */\n    MdDialog.prototype.closeAll = function () {\n        var /** @type {?} */ i = this._openDialogs.length;\n        while (i--) {\n            // The `_openDialogs` property isn't updated after close until the rxjs subscription\n            // runs on the next microtask, in addition to modifying the array as we're going\n            // through it. We loop through all of them and call close without assuming that\n            // they'll be removed from the list instantaneously.\n            this._openDialogs[i].close();\n        }\n    };\n    /**\n     * Creates the overlay into which the dialog will be loaded.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the OverlayRef for the created overlay.\n     */\n    MdDialog.prototype._createOverlay = function (config) {\n        var /** @type {?} */ overlayState = this._getOverlayState(config);\n        return this._overlay.create(overlayState);\n    };\n    /**\n     * Creates an overlay state from a dialog config.\n     * @param {?} dialogConfig The dialog configuration.\n     * @return {?} The overlay configuration.\n     */\n    MdDialog.prototype._getOverlayState = function (dialogConfig) {\n        var /** @type {?} */ overlayState = new OverlayState();\n        overlayState.hasBackdrop = true;\n        overlayState.positionStrategy = this._overlay.position().global();\n        return overlayState;\n    };\n    /**\n     * Attaches an MdDialogContainer to a dialog's already-created overlay.\n     * @param {?} overlay Reference to the dialog's underlying overlay.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to a ComponentRef for the attached container.\n     */\n    MdDialog.prototype._attachDialogContainer = function (overlay, config) {\n        var /** @type {?} */ viewContainer = config ? config.viewContainerRef : null;\n        var /** @type {?} */ containerPortal = new ComponentPortal(MdDialogContainer, viewContainer);\n        var /** @type {?} */ containerRef = overlay.attach(containerPortal);\n        containerRef.instance.dialogConfig = config;\n        return containerRef.instance;\n    };\n    /**\n     * Attaches the user-provided component to the already-created MdDialogContainer.\n     * @template T\n     * @param {?} componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param {?} dialogContainer Reference to the wrapping MdDialogContainer.\n     * @param {?} overlayRef Reference to the overlay in which the dialog resides.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the MdDialogRef that should be returned to the user.\n     */\n    MdDialog.prototype._attachDialogContent = function (componentOrTemplateRef, dialogContainer, overlayRef, config) {\n        // Create a reference to the dialog we're creating in order to give the user a handle\n        // to modify and close it.\n        var /** @type {?} */ dialogRef = new MdDialogRef(overlayRef, dialogContainer);\n        if (!config.disableClose) {\n            // When the dialog backdrop is clicked, we want to close it.\n            overlayRef.backdropClick().first().subscribe(function () { return dialogRef.close(); });\n        }\n        // We create an injector specifically for the component we're instantiating so that it can\n        // inject the MdDialogRef. This allows a component loaded inside of a dialog to close itself\n        // and, optionally, to return a value.\n        var /** @type {?} */ userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        var /** @type {?} */ dialogInjector = new DialogInjector(userInjector || this._injector, dialogRef, config.data);\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null));\n        }\n        else {\n            var /** @type {?} */ contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, null, dialogInjector));\n            dialogRef.componentInstance = contentRef.instance;\n        }\n        dialogRef\n            .updateSize(config.width, config.height)\n            .updatePosition(config.position);\n        return dialogRef;\n    };\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @param {?} dialogRef Dialog to be removed.\n     * @return {?}\n     */\n    MdDialog.prototype._removeOpenDialog = function (dialogRef) {\n        var /** @type {?} */ index = this._openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this._openDialogs.splice(index, 1);\n            // no open dialogs are left, call next on afterAllClosed Subject\n            if (!this._openDialogs.length) {\n                this._afterAllClosed.next();\n                document.removeEventListener('keydown', this._boundKeydown);\n            }\n        }\n    };\n    /**\n     * Handles global key presses while there are open dialogs. Closes the\n     * top dialog when the user presses escape.\n     * @param {?} event\n     * @return {?}\n     */\n    MdDialog.prototype._handleKeydown = function (event) {\n        var /** @type {?} */ topDialog = this._openDialogs[this._openDialogs.length - 1];\n        if (event.keyCode === ESCAPE && topDialog &&\n            !topDialog._containerInstance.dialogConfig.disableClose) {\n            topDialog.close();\n        }\n    };\n    return MdDialog;\n}());\nMdDialog.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nMdDialog.ctorParameters = function () { return [\n    { type: Overlay, },\n    { type: Injector, },\n    { type: MdDialog, decorators: [{ type: Optional }, { type: SkipSelf },] },\n]; };\n/**\n * Applies default options to the dialog config.\n * @param {?} config Config to be modified.\n * @return {?} The new configuration object.\n */\nfunction _applyConfigDefaults$1(config) {\n    return extendObject(new MdDialogConfig(), config);\n}\n/**\n * Button that will close the current dialog.\n */\nvar MdDialogClose = (function () {\n    /**\n     * @param {?} dialogRef\n     */\n    function MdDialogClose(dialogRef) {\n        this.dialogRef = dialogRef;\n        /** Screenreader label for the button. */\n        this.ariaLabel = 'Close dialog';\n    }\n    return MdDialogClose;\n}());\nMdDialogClose.decorators = [\n    { type: Directive, args: [{\n                selector: 'button[md-dialog-close], button[mat-dialog-close]',\n                host: {\n                    '(click)': 'dialogRef.close()',\n                    '[attr.aria-label]': 'ariaLabel',\n                    'type': 'button',\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdDialogClose.ctorParameters = function () { return [\n    { type: MdDialogRef, },\n]; };\nMdDialogClose.propDecorators = {\n    'ariaLabel': [{ type: Input, args: ['aria-label',] },],\n};\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nvar MdDialogTitle = (function () {\n    function MdDialogTitle() {\n    }\n    return MdDialogTitle;\n}());\nMdDialogTitle.decorators = [\n    { type: Directive, args: [{\n                selector: '[md-dialog-title], [mat-dialog-title]',\n                host: {\n                    '[class.mat-dialog-title]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdDialogTitle.ctorParameters = function () { return []; };\n/**\n * Scrollable content container of a dialog.\n */\nvar MdDialogContent = (function () {\n    function MdDialogContent() {\n    }\n    return MdDialogContent;\n}());\nMdDialogContent.decorators = [\n    { type: Directive, args: [{\n                selector: '[md-dialog-content], md-dialog-content, [mat-dialog-content], mat-dialog-content',\n                host: {\n                    '[class.mat-dialog-content]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdDialogContent.ctorParameters = function () { return []; };\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nvar MdDialogActions = (function () {\n    function MdDialogActions() {\n    }\n    return MdDialogActions;\n}());\nMdDialogActions.decorators = [\n    { type: Directive, args: [{\n                selector: '[md-dialog-actions], md-dialog-actions, [mat-dialog-actions], mat-dialog-actions',\n                host: {\n                    '[class.mat-dialog-actions]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdDialogActions.ctorParameters = function () { return []; };\nvar MdDialogModule = (function () {\n    function MdDialogModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdDialogModule.forRoot = function () {\n        return {\n            ngModule: MdDialogModule,\n            providers: [],\n        };\n    };\n    return MdDialogModule;\n}());\nMdDialogModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    OverlayModule,\n                    PortalModule,\n                    A11yModule,\n                    CompatibilityModule,\n                ],\n                exports: [\n                    MdDialogContainer,\n                    MdDialogClose,\n                    MdDialogTitle,\n                    MdDialogContent,\n                    MdDialogActions,\n                    CompatibilityModule,\n                ],\n                declarations: [\n                    MdDialogContainer,\n                    MdDialogClose,\n                    MdDialogTitle,\n                    MdDialogActions,\n                    MdDialogContent,\n                ],\n                providers: [\n                    MdDialog,\n                ],\n                entryComponents: [MdDialogContainer],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdDialogModule.ctorParameters = function () { return []; };\nvar ActiveDescendantKeyManager = (function (_super) {\n    __extends(ActiveDescendantKeyManager, _super);\n    /**\n     * @param {?} items\n     */\n    function ActiveDescendantKeyManager(items) {\n        return _super.call(this, items) || this;\n    }\n    /**\n     * This method sets the active item to the item at the specified index.\n     * It also adds active styles to the newly active item and removes active\n     * styles from the previously active item.\n     * @param {?} index\n     * @return {?}\n     */\n    ActiveDescendantKeyManager.prototype.setActiveItem = function (index) {\n        var _this = this;\n        Promise.resolve().then(function () {\n            if (_this.activeItem) {\n                _this.activeItem.setInactiveStyles();\n            }\n            _super.prototype.setActiveItem.call(_this, index);\n            if (_this.activeItem) {\n                _this.activeItem.setActiveStyles();\n            }\n        });\n    };\n    return ActiveDescendantKeyManager;\n}(ListKeyManager));\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nvar _uniqueAutocompleteIdCounter = 0;\nvar MdAutocomplete = (function () {\n    function MdAutocomplete() {\n        /** Whether the autocomplete panel displays above or below its trigger. */\n        this.positionY = 'below';\n        /** Whether the autocomplete panel should be visible, depending on option length. */\n        this.showPanel = false;\n        /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n        this.id = \"md-autocomplete-\" + _uniqueAutocompleteIdCounter++;\n    }\n    /**\n     * @return {?}\n     */\n    MdAutocomplete.prototype.ngAfterContentInit = function () {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n    };\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display\n     * options below the fold, as they are not actually being focused when active.\n     * @param {?} scrollTop\n     * @return {?}\n     */\n    MdAutocomplete.prototype._setScrollTop = function (scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    };\n    /**\n     * Panel should hide itself when the option list is empty.\n     * @return {?}\n     */\n    MdAutocomplete.prototype._setVisibility = function () {\n        var _this = this;\n        Promise.resolve().then(function () { return _this.showPanel = !!_this.options.length; });\n    };\n    /**\n     * Sets a class on the panel based on its position (used to set y-offset).\n     * @return {?}\n     */\n    MdAutocomplete.prototype._getClassList = function () {\n        return {\n            'mat-autocomplete-panel-below': this.positionY === 'below',\n            'mat-autocomplete-panel-above': this.positionY === 'above',\n            'mat-autocomplete-visible': this.showPanel,\n            'mat-autocomplete-hidden': !this.showPanel\n        };\n    };\n    return MdAutocomplete;\n}());\nMdAutocomplete.decorators = [\n    { type: Component, args: [{ selector: 'md-autocomplete, mat-autocomplete',\n                template: \"<ng-template> <div class=\\\"mat-autocomplete-panel\\\" role=\\\"listbox\\\" [id]=\\\"id\\\" [ngClass]=\\\"_getClassList()\\\" #panel> <ng-content></ng-content> </div> </ng-template> \",\n                styles: [\".mat-autocomplete-panel{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative}.mat-autocomplete-panel.mat-autocomplete-panel-below{top:6px}.mat-autocomplete-panel.mat-autocomplete-panel-above{top:-24px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden} /*# sourceMappingURL=autocomplete.css.map */ \"],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'mdAutocomplete',\n                host: {\n                    '[class.mat-autocomplete]': 'true'\n                }\n            },] },\n];\n/**\n * @nocollapse\n */\nMdAutocomplete.ctorParameters = function () { return []; };\nMdAutocomplete.propDecorators = {\n    'template': [{ type: ViewChild, args: [TemplateRef,] },],\n    'panel': [{ type: ViewChild, args: ['panel',] },],\n    'options': [{ type: ContentChildren, args: [MdOption,] },],\n    'displayWith': [{ type: Input },],\n};\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the scrollTop of the panel. Because we are not\n * actually focusing the active item, scroll must be handled manually.\n */\n/** The height of each autocomplete option. */\nvar AUTOCOMPLETE_OPTION_HEIGHT = 48;\n/** The total height of the autocomplete panel. */\nvar AUTOCOMPLETE_PANEL_HEIGHT = 256;\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * \\@docs-private\n */\nvar MD_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return MdAutocompleteTrigger; }),\n    multi: true\n};\nvar MdAutocompleteTrigger = (function () {\n    /**\n     * @param {?} _element\n     * @param {?} _overlay\n     * @param {?} _viewContainerRef\n     * @param {?} _dir\n     * @param {?} _zone\n     * @param {?} _inputContainer\n     */\n    function MdAutocompleteTrigger(_element, _overlay, _viewContainerRef, _dir, _zone, _inputContainer) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._zone = _zone;\n        this._inputContainer = _inputContainer;\n        this._panelOpen = false;\n        this._blurStream = new Subject();\n        this._manuallyFloatingPlaceholder = false;\n        /** View -> model callback called when value changes */\n        this._onChange = function (value) { };\n        /** View -> model callback called when autocomplete has been touched */\n        this._onTouched = function () { };\n    }\n    Object.defineProperty(MdAutocompleteTrigger.prototype, \"_matAutocomplete\", {\n        /**\n         * Property with mat- prefix for no-conflict mode.\n         * @return {?}\n         */\n        get: function () {\n            return this.autocomplete;\n        },\n        /**\n         * @param {?} autocomplete\n         * @return {?}\n         */\n        set: function (autocomplete) {\n            this.autocomplete = autocomplete;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype.ngOnDestroy = function () {\n        if (this._panelPositionSubscription) {\n            this._panelPositionSubscription.unsubscribe();\n        }\n        this._destroyPanel();\n    };\n    Object.defineProperty(MdAutocompleteTrigger.prototype, \"panelOpen\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._panelOpen && this.autocomplete.showPanel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Opens the autocomplete suggestion panel.\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype.openPanel = function () {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            /** Update the panel width, in case the host width has changed */\n            this._overlayRef.getState().width = this._getHostWidth();\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._portal);\n            this._subscribeToClosingActions();\n        }\n        this.autocomplete._setVisibility();\n        this._floatPlaceholder();\n        this._panelOpen = true;\n    };\n    /**\n     * Closes the autocomplete suggestion panel.\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype.closePanel = function () {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._panelOpen = false;\n        this._resetPlaceholder();\n    };\n    Object.defineProperty(MdAutocompleteTrigger.prototype, \"panelClosingActions\", {\n        /**\n         * A stream of actions that should close the autocomplete panel, including\n         * when an option is selected, on blur, and when TAB is pressed.\n         * @return {?}\n         */\n        get: function () {\n            return Observable.merge(this.optionSelections, this._blurStream.asObservable(), this.autocomplete._keyManager.tabOut);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdAutocompleteTrigger.prototype, \"optionSelections\", {\n        /**\n         * Stream of autocomplete option selections.\n         * @return {?}\n         */\n        get: function () {\n            return Observable.merge.apply(Observable, this.autocomplete.options.map(function (option) { return option.onSelectionChange; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MdAutocompleteTrigger.prototype, \"activeOption\", {\n        /**\n         * The currently active option, coerced to MdOption type.\n         * @return {?}\n         */\n        get: function () {\n            if (this.autocomplete._keyManager) {\n                return (this.autocomplete._keyManager.activeItem);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the autocomplete's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype.writeValue = function (value) {\n        var _this = this;\n        Promise.resolve(null).then(function () { return _this._setTriggerValue(value); });\n    };\n    /**\n     * Saves a callback function to be invoked when the autocomplete's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype.registerOnChange = function (fn) {\n        this._onChange = fn;\n    };\n    /**\n     * Saves a callback function to be invoked when the autocomplete is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype.registerOnTouched = function (fn) {\n        this._onTouched = fn;\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._handleKeydown = function (event) {\n        var _this = this;\n        if (this.activeOption && event.keyCode === ENTER) {\n            this.activeOption._selectViaInteraction();\n            event.preventDefault();\n        }\n        else {\n            this.autocomplete._keyManager.onKeydown(event);\n            if (event.keyCode === UP_ARROW || event.keyCode === DOWN_ARROW) {\n                this.openPanel();\n                Promise.resolve().then(function () { return _this._scrollToOption(); });\n            }\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._handleInput = function (event) {\n        // We need to ensure that the input is focused, because IE will fire the `input`\n        // event on focus/blur/load if the input has a placeholder. See:\n        // https://connect.microsoft.com/IE/feedback/details/885747/\n        if (document.activeElement === event.target) {\n            this._onChange(((event.target)).value);\n            this.openPanel();\n        }\n    };\n    /**\n     * @param {?} newlyFocusedTag\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._handleBlur = function (newlyFocusedTag) {\n        this._onTouched();\n        // Only emit blur event if the new focus is *not* on an option.\n        if (newlyFocusedTag !== 'MD-OPTION') {\n            this._blurStream.next(null);\n        }\n    };\n    /**\n     * In \"auto\" mode, the placeholder will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the placeholder until the panel can be closed.\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._floatPlaceholder = function () {\n        if (this._inputContainer && this._inputContainer.floatPlaceholder === 'auto') {\n            this._inputContainer.floatPlaceholder = 'always';\n            this._manuallyFloatingPlaceholder = true;\n        }\n    };\n    /**\n     * If the placeholder has been manually elevated, return it to its normal state.\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._resetPlaceholder = function () {\n        if (this._manuallyFloatingPlaceholder) {\n            this._inputContainer.floatPlaceholder = 'auto';\n            this._manuallyFloatingPlaceholder = false;\n        }\n    };\n    /**\n     * Given that we are not actually focusing active options, we must manually adjust scroll\n     * to reveal options below the fold. First, we find the offset of the option from the top\n     * of the panel. The new scrollTop will be that offset - the panel height + the option\n     * height, so the active option will be just visible at the bottom of the panel.\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._scrollToOption = function () {\n        var /** @type {?} */ optionOffset = this.autocomplete._keyManager.activeItemIndex * AUTOCOMPLETE_OPTION_HEIGHT;\n        var /** @type {?} */ newScrollTop = Math.max(0, optionOffset - AUTOCOMPLETE_PANEL_HEIGHT + AUTOCOMPLETE_OPTION_HEIGHT);\n        this.autocomplete._setScrollTop(newScrollTop);\n    };\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._subscribeToClosingActions = function () {\n        var _this = this;\n        // When the zone is stable initially, and when the option list changes...\n        Observable.merge(this._zone.onStable.first(), this.autocomplete.options.changes)\n            .switchMap(function () {\n            _this._resetPanel();\n            return _this.panelClosingActions;\n        })\n            .first()\n            .subscribe(function (event) { return _this._setValueAndClose(event); });\n    };\n    /**\n     * Destroys the autocomplete suggestion panel.\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._destroyPanel = function () {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._setTriggerValue = function (value) {\n        var /** @type {?} */ toDisplay = this.autocomplete.displayWith ? this.autocomplete.displayWith(value) : value;\n        this._element.nativeElement.value = toDisplay || '';\n    };\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     * @param {?} event\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._setValueAndClose = function (event) {\n        if (event) {\n            this._clearPreviousSelectedOption(event.source);\n            this._setTriggerValue(event.source.value);\n            this._onChange(event.source.value);\n        }\n        this.closePanel();\n    };\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     * @param {?} skip\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._clearPreviousSelectedOption = function (skip) {\n        this.autocomplete.options.forEach(function (option) {\n            if (option != skip && option.selected) {\n                option.deselect();\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._createOverlay = function () {\n        this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n        this._overlayRef = this._overlay.create(this._getOverlayConfig());\n    };\n    /**\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._getOverlayConfig = function () {\n        var /** @type {?} */ overlayState = new OverlayState();\n        overlayState.positionStrategy = this._getOverlayPosition();\n        overlayState.width = this._getHostWidth();\n        overlayState.direction = this._dir ? this._dir.value : 'ltr';\n        return overlayState;\n    };\n    /**\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._getOverlayPosition = function () {\n        this._positionStrategy = this._overlay.position().connectedTo(this._element, { originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' })\n            .withFallbackPosition({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' });\n        this._subscribeToPositionChanges(this._positionStrategy);\n        return this._positionStrategy;\n    };\n    /**\n     * This method subscribes to position changes in the autocomplete panel, so the panel's\n     * y-offset can be adjusted to match the new position.\n     * @param {?} strategy\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._subscribeToPositionChanges = function (strategy) {\n        var _this = this;\n        this._panelPositionSubscription = strategy.onPositionChange.subscribe(function (change) {\n            _this.autocomplete.positionY = change.connectionPair.originY === 'top' ? 'above' : 'below';\n        });\n    };\n    /**\n     * Returns the width of the input element, so the panel width can match it.\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._getHostWidth = function () {\n        return this._element.nativeElement.getBoundingClientRect().width;\n    };\n    /**\n     * Reset active item to null so arrow events will activate the correct options.\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._resetActiveItem = function () {\n        this.autocomplete._keyManager.setActiveItem(null);\n    };\n    /**\n     * Resets the active item and re-calculates alignment of the panel in case its size\n     * has changed due to fewer or greater number of options.\n     * @return {?}\n     */\n    MdAutocompleteTrigger.prototype._resetPanel = function () {\n        this._resetActiveItem();\n        this._positionStrategy.recalculateLastPosition();\n        this.autocomplete._setVisibility();\n    };\n    return MdAutocompleteTrigger;\n}());\nMdAutocompleteTrigger.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[mdAutocomplete], input[matAutocomplete]',\n                host: {\n                    'role': 'combobox',\n                    'autocomplete': 'off',\n                    'aria-autocomplete': 'list',\n                    'aria-multiline': 'false',\n                    '[attr.aria-activedescendant]': 'activeOption?.id',\n                    '[attr.aria-expanded]': 'panelOpen.toString()',\n                    '[attr.aria-owns]': 'autocomplete?.id',\n                    '(focus)': 'openPanel()',\n                    '(blur)': '_handleBlur($event.relatedTarget?.tagName)',\n                    '(input)': '_handleInput($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                },\n                providers: [MD_AUTOCOMPLETE_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nMdAutocompleteTrigger.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: Overlay, },\n    { type: ViewContainerRef, },\n    { type: Dir, decorators: [{ type: Optional },] },\n    { type: NgZone, },\n    { type: MdInputContainer, decorators: [{ type: Optional }, { type: Host },] },\n]; };\nMdAutocompleteTrigger.propDecorators = {\n    'autocomplete': [{ type: Input, args: ['mdAutocomplete',] },],\n    '_matAutocomplete': [{ type: Input, args: ['matAutocomplete',] },],\n};\nvar MdAutocompleteModule = (function () {\n    function MdAutocompleteModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MdAutocompleteModule.forRoot = function () {\n        return {\n            ngModule: MdAutocompleteModule,\n            providers: [OVERLAY_PROVIDERS]\n        };\n    };\n    return MdAutocompleteModule;\n}());\nMdAutocompleteModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [MdOptionModule, OverlayModule, CompatibilityModule, CommonModule],\n                exports: [MdAutocomplete, MdOptionModule, MdAutocompleteTrigger, CompatibilityModule],\n                declarations: [MdAutocomplete, MdAutocompleteTrigger],\n            },] },\n];\n/**\n * @nocollapse\n */\nMdAutocompleteModule.ctorParameters = function () { return []; };\nvar MATERIAL_MODULES = [\n    MdAutocompleteModule,\n    MdButtonModule,\n    MdButtonToggleModule,\n    MdCardModule,\n    MdChipsModule,\n    MdCheckboxModule,\n    MdDialogModule,\n    MdGridListModule,\n    MdIconModule,\n    MdInputModule,\n    MdListModule,\n    MdMenuModule,\n    MdProgressBarModule,\n    MdProgressSpinnerModule,\n    MdRadioModule,\n    MdRippleModule,\n    MdSelectModule,\n    MdSidenavModule,\n    MdSliderModule,\n    MdSlideToggleModule,\n    MdSnackBarModule,\n    MdTabsModule,\n    MdToolbarModule,\n    MdTooltipModule,\n    OverlayModule,\n    PortalModule,\n    RtlModule,\n    StyleModule,\n    A11yModule,\n    PlatformModule,\n    CompatibilityModule,\n    ObserveContentModule\n];\n/**\n * @deprecated\n */\nvar MaterialRootModule = (function () {\n    function MaterialRootModule() {\n    }\n    return MaterialRootModule;\n}());\nMaterialRootModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    MdAutocompleteModule.forRoot(),\n                    MdButtonModule.forRoot(),\n                    MdCardModule.forRoot(),\n                    MdChipsModule.forRoot(),\n                    MdCheckboxModule.forRoot(),\n                    MdGridListModule.forRoot(),\n                    MdInputModule.forRoot(),\n                    MdListModule.forRoot(),\n                    MdProgressBarModule.forRoot(),\n                    MdProgressSpinnerModule.forRoot(),\n                    MdRippleModule.forRoot(),\n                    MdSelectModule.forRoot(),\n                    MdSidenavModule.forRoot(),\n                    MdTabsModule.forRoot(),\n                    MdToolbarModule.forRoot(),\n                    PortalModule.forRoot(),\n                    RtlModule.forRoot(),\n                    ObserveContentModule.forRoot(),\n                    // These modules include providers.\n                    A11yModule.forRoot(),\n                    MdButtonToggleModule.forRoot(),\n                    MdDialogModule.forRoot(),\n                    MdIconModule.forRoot(),\n                    MdMenuModule.forRoot(),\n                    MdRadioModule.forRoot(),\n                    MdSliderModule.forRoot(),\n                    MdSlideToggleModule.forRoot(),\n                    MdSnackBarModule.forRoot(),\n                    MdTooltipModule.forRoot(),\n                    PlatformModule.forRoot(),\n                    OverlayModule.forRoot(),\n                    CompatibilityModule.forRoot(),\n                ],\n                exports: MATERIAL_MODULES,\n            },] },\n];\n/**\n * @nocollapse\n */\nMaterialRootModule.ctorParameters = function () { return []; };\n/**\n * @deprecated\n */\nvar MaterialModule = (function () {\n    function MaterialModule() {\n    }\n    /**\n     * @deprecated\n     * @return {?}\n     */\n    MaterialModule.forRoot = function () {\n        return { ngModule: MaterialRootModule };\n    };\n    return MaterialModule;\n}());\nMaterialModule.decorators = [\n    { type: NgModule, args: [{\n                imports: MATERIAL_MODULES,\n                exports: MATERIAL_MODULES,\n            },] },\n];\n/**\n * @nocollapse\n */\nMaterialModule.ctorParameters = function () { return []; };\n/**\n * @module\n * @description\n * Entry point for all public APIs of Angular Material.\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { Dir, RtlModule, ObserveContentModule, ObserveContent, MdOptionModule, MdOption, Portal, BasePortalHost, ComponentPortal, TemplatePortal, PortalHostDirective, TemplatePortalDirective, PortalModule, DomPortalHost, Overlay, OVERLAY_PROVIDERS, OverlayContainer, FullscreenOverlayContainer, OverlayRef, OverlayState, ConnectedOverlayDirective, OverlayOrigin, OverlayModule, ScrollDispatcher, GestureConfig, LiveAnnouncer, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_PROVIDER, InteractivityChecker, isFakeMousedownFromScreenReader, A11yModule, UniqueSelectionDispatcher, UNIQUE_SELECTION_DISPATCHER_PROVIDER, MdLineModule, MdLine, MdLineSetter, MdError, coerceBooleanProperty, coerceNumberProperty, CompatibilityModule, NoConflictStyleCompatibilityMode, MdCoreModule, PlatformModule, Platform, getSupportedInputTypes, GlobalPositionStrategy, ConnectedPositionStrategy, ConnectionPositionPair, ScrollableViewProperties, ConnectedOverlayPositionChange, MdRipple, MD_RIPPLE_GLOBAL_OPTIONS, RippleRef, RippleState, RIPPLE_FADE_IN_DURATION, RIPPLE_FADE_OUT_DURATION, MdRippleModule, SelectionModel, SelectionChange, FocusTrap, FocusTrapFactory, FocusTrapDeprecatedDirective, FocusTrapDirective, StyleModule, TOUCH_BUFFER_MS, FocusOriginMonitor, CdkMonitorFocus, FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY, FOCUS_ORIGIN_MONITOR_PROVIDER, applyCssTransform, UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, PAGE_UP, PAGE_DOWN, HOME, END, ENTER, SPACE, TAB, ESCAPE, BACKSPACE, DELETE, MATERIAL_COMPATIBILITY_MODE, MAT_ELEMENTS_SELECTOR, MD_ELEMENTS_SELECTOR, MatPrefixRejector, MdPrefixRejector, AnimationCurves, AnimationDurations, MdSelectionModule, MdPseudoCheckbox, MaterialRootModule, MaterialModule, MdAutocompleteModule, MdAutocomplete, AUTOCOMPLETE_OPTION_HEIGHT, AUTOCOMPLETE_PANEL_HEIGHT, MD_AUTOCOMPLETE_VALUE_ACCESSOR, MdAutocompleteTrigger, MdButtonModule, MdButtonCssMatStyler, MdRaisedButtonCssMatStyler, MdIconButtonCssMatStyler, MdFabCssMatStyler, MdMiniFabCssMatStyler, MdButton, MdAnchor, MdButtonToggleModule, MD_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, MdButtonToggleChange, MdButtonToggleGroup, MdButtonToggleGroupMultiple, MdButtonToggle, MdCardModule, MdCardContent, MdCardTitle, MdCardSubtitle, MdCardActions, MdCardFooter, MdCardSmImage, MdCardMdImage, MdCardLgImage, MdCardImage, MdCardXlImage, MdCardAvatar, MdCard, MdCardHeader, MdCardTitleGroup, MdChipsModule, MdChipList, MdChip, MdCheckboxModule, MD_CHECKBOX_CONTROL_VALUE_ACCESSOR, TransitionCheckState, MdCheckboxChange, MdCheckbox, MdDialogModule, MD_DIALOG_DATA, MdDialog, MdDialogContainer, MdDialogClose, MdDialogTitle, MdDialogContent, MdDialogActions, MdDialogConfig, MdDialogRef, MdGridListModule, MdGridList, MdIconModule, MdIconRegistry, MdIconInvalidNameError, MdIcon, ICON_REGISTRY_PROVIDER_FACTORY, ICON_REGISTRY_PROVIDER, MdInputModule, MdTextareaAutosize, MdPlaceholder, MdHint, MdErrorDirective, MdPrefix, MdSuffix, MdInputDirective, MdInputContainer, MdInputContainerPlaceholderConflictError, MdInputContainerUnsupportedTypeError, MdInputContainerDuplicatedHintError, MdInputContainerMissingMdInputError, MdListModule, MdListDivider, LIST_TYPE_TOKEN, MdList, MdListCssMatStyler, MdNavListCssMatStyler, MdNavListTokenSetter, MdDividerCssMatStyler, MdListAvatarCssMatStyler, MdListIconCssMatStyler, MdListSubheaderCssMatStyler, MdListItem, MdMenuModule, fadeInItems, transformMenu, MdMenu, MdMenuItem, MdMenuTrigger, MdProgressBarModule, MdProgressBar, MdProgressSpinnerModule, MdProgressSpinnerCssMatStyler, MdProgressSpinner, MdSpinner, MdRadioModule, MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MdRadioChange, MdRadioGroup, MdRadioButton, MdSelectModule, fadeInContent, transformPanel, transformPlaceholder, SELECT_OPTION_HEIGHT, SELECT_PANEL_MAX_HEIGHT, SELECT_MAX_OPTIONS_DISPLAYED, SELECT_TRIGGER_HEIGHT, SELECT_OPTION_HEIGHT_ADJUSTMENT, SELECT_PANEL_PADDING_X, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_PADDING_Y, SELECT_PANEL_VIEWPORT_PADDING, MdSelectChange, MdSelect, MdSidenavModule, MdDuplicatedSidenavError, MdSidenavToggleResult, MdSidenav, MdSidenavContainer, MdSliderModule, MD_SLIDER_VALUE_ACCESSOR, MdSliderChange, MdSlider, SliderRenderer, MdSlideToggleModule, MD_SLIDE_TOGGLE_VALUE_ACCESSOR, MdSlideToggleChange, MdSlideToggle, MdSnackBarModule, MdSnackBar, SHOW_ANIMATION, HIDE_ANIMATION, MdSnackBarContainer, MdSnackBarConfig, MdSnackBarRef, SimpleSnackBar, MdTabsModule, MdInkBar, MdTabBody, MdTabHeader, MdTabLabelWrapper, MdTab, MdTabLabel, MdTabChangeEvent, MdTabGroup, MdTabNavBar, MdTabLink, MdTabLinkRipple, MdToolbarModule, MdToolbarRow, MdToolbar, MdTooltipModule, TOUCHEND_HIDE_DELAY, SCROLL_THROTTLE_MS, MdTooltip, TooltipComponent, LIVE_ANNOUNCER_PROVIDER_FACTORY as ɵf, UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY as ɵg, OVERLAY_CONTAINER_PROVIDER as ɵb, OVERLAY_CONTAINER_PROVIDER_FACTORY as ɵa, OverlayPositionBuilder as ɵk, VIEWPORT_RULER_PROVIDER as ɵj, VIEWPORT_RULER_PROVIDER_FACTORY as ɵi, ViewportRuler as ɵh, SCROLL_DISPATCHER_PROVIDER as ɵd, SCROLL_DISPATCHER_PROVIDER_FACTORY as ɵc, Scrollable as ɵl, RippleRenderer as ɵe, MdGridAvatarCssMatStyler as ɵo, MdGridTile as ɵm, MdGridTileFooterCssMatStyler as ɵq, MdGridTileHeaderCssMatStyler as ɵp, MdGridTileText as ɵn };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/material/@angular/material.es5.js\n// module id = 235\n// module chunks = 0","import * as tslib_1 from \"tslib\";\n/**\n * @license Angular v4.2.3\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { Injectable, NgModule, NgZone, RendererFactory2, ViewEncapsulation } from '@angular/core';\nimport { BrowserModule, ɵDomRendererFactory2 } from '@angular/platform-browser';\nimport { AnimationBuilder, AnimationFactory, sequence } from '@angular/animations';\nimport { AnimationDriver, ɵAnimationEngine, ɵAnimationStyleNormalizer, ɵNoopAnimationDriver, ɵWebAnimationsDriver, ɵWebAnimationsStyleNormalizer, ɵsupportsWebAnimations } from '@angular/animations/browser';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BrowserAnimationBuilder = (function (_super) {\n    tslib_1.__extends(BrowserAnimationBuilder, _super);\n    /**\n     * @param {?} rootRenderer\n     */\n    function BrowserAnimationBuilder(rootRenderer) {\n        var _this = _super.call(this) || this;\n        _this._nextAnimationId = 0;\n        var typeData = {\n            id: '0',\n            encapsulation: ViewEncapsulation.None,\n            styles: [],\n            data: { animation: [] }\n        };\n        _this._renderer = rootRenderer.createRenderer(document.body, typeData);\n        return _this;\n    }\n    /**\n     * @param {?} animation\n     * @return {?}\n     */\n    BrowserAnimationBuilder.prototype.build = function (animation) {\n        var /** @type {?} */ id = this._nextAnimationId.toString();\n        this._nextAnimationId++;\n        var /** @type {?} */ entry = Array.isArray(animation) ? sequence(animation) : animation;\n        issueAnimationCommand(this._renderer, null, id, 'register', [entry]);\n        return new BrowserAnimationFactory(id, this._renderer);\n    };\n    return BrowserAnimationBuilder;\n}(AnimationBuilder));\nBrowserAnimationBuilder.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nBrowserAnimationBuilder.ctorParameters = function () { return [\n    { type: RendererFactory2, },\n]; };\nvar BrowserAnimationFactory = (function (_super) {\n    tslib_1.__extends(BrowserAnimationFactory, _super);\n    /**\n     * @param {?} _id\n     * @param {?} _renderer\n     */\n    function BrowserAnimationFactory(_id, _renderer) {\n        var _this = _super.call(this) || this;\n        _this._id = _id;\n        _this._renderer = _renderer;\n        return _this;\n    }\n    /**\n     * @param {?} element\n     * @param {?=} options\n     * @return {?}\n     */\n    BrowserAnimationFactory.prototype.create = function (element, options) {\n        return new RendererAnimationPlayer(this._id, element, options || {}, this._renderer);\n    };\n    return BrowserAnimationFactory;\n}(AnimationFactory));\nvar RendererAnimationPlayer = (function () {\n    /**\n     * @param {?} id\n     * @param {?} element\n     * @param {?} options\n     * @param {?} _renderer\n     */\n    function RendererAnimationPlayer(id, element, options, _renderer) {\n        this.id = id;\n        this.element = element;\n        this._renderer = _renderer;\n        this.parentPlayer = null;\n        this._started = false;\n        this.totalTime = 0;\n        this._command('create', options);\n    }\n    /**\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype._listen = function (eventName, callback) {\n        return this._renderer.listen(this.element, \"@@\" + this.id + \":\" + eventName, callback);\n    };\n    /**\n     * @param {?} command\n     * @param {...?} args\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype._command = function (command) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        return issueAnimationCommand(this._renderer, this.element, this.id, command, args);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.onDone = function (fn) { this._listen('done', fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.onStart = function (fn) { this._listen('start', fn); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.onDestroy = function (fn) { this._listen('destroy', fn); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.init = function () { this._command('init'); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.hasStarted = function () { return this._started; };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.play = function () {\n        this._command('play');\n        this._started = true;\n    };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.pause = function () { this._command('pause'); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.restart = function () { this._command('restart'); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.finish = function () { this._command('finish'); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.destroy = function () { this._command('destroy'); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.reset = function () { this._command('reset'); };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.setPosition = function (p) { this._command('setPosition', p); };\n    /**\n     * @return {?}\n     */\n    RendererAnimationPlayer.prototype.getPosition = function () { return 0; };\n    return RendererAnimationPlayer;\n}());\n/**\n * @param {?} renderer\n * @param {?} element\n * @param {?} id\n * @param {?} command\n * @param {?} args\n * @return {?}\n */\nfunction issueAnimationCommand(renderer, element, id, command, args) {\n    return renderer.setProperty(element, \"@@\" + id + \":\" + command, args);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AnimationRendererFactory = (function () {\n    /**\n     * @param {?} delegate\n     * @param {?} engine\n     * @param {?} _zone\n     */\n    function AnimationRendererFactory(delegate, engine, _zone) {\n        this.delegate = delegate;\n        this.engine = engine;\n        this._zone = _zone;\n        this._currentId = 0;\n        this._microtaskId = 1;\n        this._animationCallbacksBuffer = [];\n        this._rendererCache = new Map();\n        engine.onRemovalComplete = function (element, delegate) {\n            // Note: if an component element has a leave animation, and the component\n            // a host leave animation, the view engine will call `removeChild` for the parent\n            // component renderer as well as for the child component renderer.\n            // Therefore, we need to check if we already removed the element.\n            if (delegate && delegate.parentNode(element)) {\n                delegate.removeChild(element.parentNode, element);\n            }\n        };\n    }\n    /**\n     * @param {?} hostElement\n     * @param {?} type\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype.createRenderer = function (hostElement, type) {\n        var _this = this;\n        var /** @type {?} */ EMPTY_NAMESPACE_ID = '';\n        // cache the delegates to find out which cached delegate can\n        // be used by which cached renderer\n        var /** @type {?} */ delegate = this.delegate.createRenderer(hostElement, type);\n        if (!hostElement || !type || !type.data || !type.data['animation']) {\n            var /** @type {?} */ renderer = this._rendererCache.get(delegate);\n            if (!renderer) {\n                renderer = new BaseAnimationRenderer(EMPTY_NAMESPACE_ID, delegate, this.engine);\n                // only cache this result when the base renderer is used\n                this._rendererCache.set(delegate, renderer);\n            }\n            return renderer;\n        }\n        var /** @type {?} */ componentId = type.id;\n        var /** @type {?} */ namespaceId = type.id + '-' + this._currentId;\n        this._currentId++;\n        this.engine.register(namespaceId, hostElement);\n        var /** @type {?} */ animationTriggers = (type.data['animation']);\n        animationTriggers.forEach(function (trigger) { return _this.engine.registerTrigger(componentId, namespaceId, hostElement, trigger.name, trigger); });\n        return new AnimationRenderer(this, namespaceId, delegate, this.engine);\n    };\n    /**\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype.begin = function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype._scheduleCountTask = function () {\n        var _this = this;\n        Zone.current.scheduleMicroTask('incremenet the animation microtask', function () { return _this._microtaskId++; });\n    };\n    /**\n     * @param {?} count\n     * @param {?} fn\n     * @param {?} data\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype.scheduleListenerCallback = function (count, fn, data) {\n        var _this = this;\n        if (count >= 0 && count < this._microtaskId) {\n            this._zone.run(function () { return fn(data); });\n            return;\n        }\n        if (this._animationCallbacksBuffer.length == 0) {\n            Promise.resolve(null).then(function () {\n                _this._zone.run(function () {\n                    _this._animationCallbacksBuffer.forEach(function (tuple) {\n                        var fn = tuple[0], data = tuple[1];\n                        fn(data);\n                    });\n                    _this._animationCallbacksBuffer = [];\n                });\n            });\n        }\n        this._animationCallbacksBuffer.push([fn, data]);\n    };\n    /**\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype.end = function () {\n        var _this = this;\n        this._zone.runOutsideAngular(function () {\n            _this._scheduleCountTask();\n            _this.engine.flush(_this._microtaskId);\n        });\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AnimationRendererFactory.prototype.whenRenderingDone = function () { return this.engine.whenRenderingDone(); };\n    return AnimationRendererFactory;\n}());\nAnimationRendererFactory.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nAnimationRendererFactory.ctorParameters = function () { return [\n    { type: RendererFactory2, },\n    { type: ɵAnimationEngine, },\n    { type: NgZone, },\n]; };\nvar BaseAnimationRenderer = (function () {\n    /**\n     * @param {?} namespaceId\n     * @param {?} delegate\n     * @param {?} engine\n     */\n    function BaseAnimationRenderer(namespaceId, delegate, engine) {\n        this.namespaceId = namespaceId;\n        this.delegate = delegate;\n        this.engine = engine;\n        this.destroyNode = this.delegate.destroyNode ? function (n) { return delegate.destroyNode(n); } : null;\n    }\n    Object.defineProperty(BaseAnimationRenderer.prototype, \"data\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.delegate.data; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.destroy = function () {\n        this.engine.destroy(this.namespaceId, this.delegate);\n        this.delegate.destroy();\n    };\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.createElement = function (name, namespace) {\n        return this.delegate.createElement(name, namespace);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.createComment = function (value) { return this.delegate.createComment(value); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.createText = function (value) { return this.delegate.createText(value); };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.appendChild = function (parent, newChild) {\n        this.delegate.appendChild(parent, newChild);\n        this.engine.onInsert(this.namespaceId, newChild, parent, false);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.insertBefore = function (parent, newChild, refChild) {\n        this.delegate.insertBefore(parent, newChild, refChild);\n        this.engine.onInsert(this.namespaceId, newChild, parent, true);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.removeChild = function (parent, oldChild) {\n        this.engine.onRemove(this.namespaceId, oldChild, this.delegate);\n    };\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.selectRootElement = function (selectorOrNode) { return this.delegate.selectRootElement(selectorOrNode); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.setAttribute = function (el, name, value, namespace) {\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.removeAttribute = function (el, name, namespace) {\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.addClass = function (el, name) { this.delegate.addClass(el, name); };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.removeClass = function (el, name) { this.delegate.removeClass(el, name); };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?=} flags\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.setStyle = function (el, style, value, flags) {\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?=} flags\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.removeStyle = function (el, style, flags) {\n        this.delegate.removeStyle(el, style, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.setProperty = function (el, name, value) {\n        this.delegate.setProperty(el, name, value);\n    };\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.setValue = function (node, value) { this.delegate.setValue(node, value); };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    BaseAnimationRenderer.prototype.listen = function (target, eventName, callback) {\n        return this.delegate.listen(target, eventName, callback);\n    };\n    return BaseAnimationRenderer;\n}());\nvar AnimationRenderer = (function (_super) {\n    tslib_1.__extends(AnimationRenderer, _super);\n    /**\n     * @param {?} factory\n     * @param {?} namespaceId\n     * @param {?} delegate\n     * @param {?} engine\n     */\n    function AnimationRenderer(factory, namespaceId, delegate, engine) {\n        var _this = _super.call(this, namespaceId, delegate, engine) || this;\n        _this.factory = factory;\n        _this.namespaceId = namespaceId;\n        return _this;\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    AnimationRenderer.prototype.setProperty = function (el, name, value) {\n        if (name.charAt(0) == '@') {\n            name = name.substr(1);\n            this.engine.setProperty(this.namespaceId, el, name, value);\n        }\n        else {\n            this.delegate.setProperty(el, name, value);\n        }\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    AnimationRenderer.prototype.listen = function (target, eventName, callback) {\n        var _this = this;\n        if (eventName.charAt(0) == '@') {\n            var /** @type {?} */ element = resolveElementFromTarget(target);\n            var /** @type {?} */ name = eventName.substr(1);\n            var /** @type {?} */ phase = '';\n            if (name.charAt(0) != '@') {\n                _a = parseTriggerCallbackName(name), name = _a[0], phase = _a[1];\n            }\n            return this.engine.listen(this.namespaceId, element, name, phase, function (event) {\n                var /** @type {?} */ countId = ((event))['_data'] || -1;\n                _this.factory.scheduleListenerCallback(countId, callback, event);\n            });\n        }\n        return this.delegate.listen(target, eventName, callback);\n        var _a;\n    };\n    return AnimationRenderer;\n}(BaseAnimationRenderer));\n/**\n * @param {?} target\n * @return {?}\n */\nfunction resolveElementFromTarget(target) {\n    switch (target) {\n        case 'body':\n            return document.body;\n        case 'document':\n            return document;\n        case 'window':\n            return window;\n        default:\n            return target;\n    }\n}\n/**\n * @param {?} triggerName\n * @return {?}\n */\nfunction parseTriggerCallbackName(triggerName) {\n    var /** @type {?} */ dotIndex = triggerName.indexOf('.');\n    var /** @type {?} */ trigger = triggerName.substring(0, dotIndex);\n    var /** @type {?} */ phase = triggerName.substr(dotIndex + 1);\n    return [trigger, phase];\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InjectableAnimationEngine = (function (_super) {\n    tslib_1.__extends(InjectableAnimationEngine, _super);\n    /**\n     * @param {?} driver\n     * @param {?} normalizer\n     */\n    function InjectableAnimationEngine(driver, normalizer) {\n        return _super.call(this, driver, normalizer) || this;\n    }\n    return InjectableAnimationEngine;\n}(ɵAnimationEngine));\nInjectableAnimationEngine.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nInjectableAnimationEngine.ctorParameters = function () { return [\n    { type: AnimationDriver, },\n    { type: ɵAnimationStyleNormalizer, },\n]; };\n/**\n * @return {?}\n */\nfunction instantiateSupportedAnimationDriver() {\n    if (ɵsupportsWebAnimations()) {\n        return new ɵWebAnimationsDriver();\n    }\n    return new ɵNoopAnimationDriver();\n}\n/**\n * @return {?}\n */\nfunction instantiateDefaultStyleNormalizer() {\n    return new ɵWebAnimationsStyleNormalizer();\n}\n/**\n * @param {?} renderer\n * @param {?} engine\n * @param {?} zone\n * @return {?}\n */\nfunction instantiateRendererFactory(renderer, engine, zone) {\n    return new AnimationRendererFactory(renderer, engine, zone);\n}\nvar SHARED_ANIMATION_PROVIDERS = [\n    { provide: AnimationBuilder, useClass: BrowserAnimationBuilder },\n    { provide: ɵAnimationStyleNormalizer, useFactory: instantiateDefaultStyleNormalizer },\n    { provide: ɵAnimationEngine, useClass: InjectableAnimationEngine }, {\n        provide: RendererFactory2,\n        useFactory: instantiateRendererFactory,\n        deps: [ɵDomRendererFactory2, ɵAnimationEngine, NgZone]\n    }\n];\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserModule.\n */\nvar BROWSER_ANIMATIONS_PROVIDERS = [\n    { provide: AnimationDriver, useFactory: instantiateSupportedAnimationDriver }\n].concat(SHARED_ANIMATION_PROVIDERS);\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserTestingModule.\n */\nvar BROWSER_NOOP_ANIMATIONS_PROVIDERS = [{ provide: AnimationDriver, useClass: ɵNoopAnimationDriver }].concat(SHARED_ANIMATION_PROVIDERS);\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental Animation support is experimental.\n */\nvar BrowserAnimationsModule = (function () {\n    function BrowserAnimationsModule() {\n    }\n    return BrowserAnimationsModule;\n}());\nBrowserAnimationsModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [BrowserModule],\n                providers: BROWSER_ANIMATIONS_PROVIDERS,\n            },] },\n];\n/**\n * @nocollapse\n */\nBrowserAnimationsModule.ctorParameters = function () { return []; };\n/**\n * \\@experimental Animation support is experimental.\n */\nvar NoopAnimationsModule = (function () {\n    function NoopAnimationsModule() {\n    }\n    return NoopAnimationsModule;\n}());\nNoopAnimationsModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [BrowserModule],\n                providers: BROWSER_NOOP_ANIMATIONS_PROVIDERS,\n            },] },\n];\n/**\n * @nocollapse\n */\nNoopAnimationsModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation browser package.\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the animation package.\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { BrowserAnimationsModule, NoopAnimationsModule, BrowserAnimationBuilder as ɵBrowserAnimationBuilder, BrowserAnimationFactory as ɵBrowserAnimationFactory, AnimationRenderer as ɵAnimationRenderer, AnimationRendererFactory as ɵAnimationRendererFactory, BaseAnimationRenderer as ɵa, BROWSER_ANIMATIONS_PROVIDERS as ɵf, BROWSER_NOOP_ANIMATIONS_PROVIDERS as ɵg, InjectableAnimationEngine as ɵb, instantiateDefaultStyleNormalizer as ɵd, instantiateRendererFactory as ɵe, instantiateSupportedAnimationDriver as ɵc };\n//# sourceMappingURL=animations.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/platform-browser/@angular/platform-browser/animations.es5.js\n// module id = 236\n// module chunks = 0","import { Component, ViewEncapsulation } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Cache } from './cache/cache';\nimport { Dictionary } from './dictionary/dictionary.service';\nimport { FetcherService } from './services/fetcher.service';\nimport { PagesService } from './services/pages.service';\nimport { PagesDataService } from './services/pages.data.service';\nimport { EventEmiterService } from './services/event.emiter.service';\nimport { ErrorHandlerService } from './services/error.handler.service';\n\n@Component({\n    selector: 'app',\n    template: require('./app.component.html'),\n    styles: [require('./app.component.css'), require('./theme.css'), require('./grid.css')],\n    encapsulation: ViewEncapsulation.None \n})\n\nexport class AppComponent {\n\n    private pages: Array<Object> = [];\n    private pagesData: Array<Object>;\n\n    constructor(\n        private cache: Cache,\n        private router: Router,\n        private fetcher: FetcherService,\n        private dictionary: Dictionary,\n        private pagesService: PagesService,\n        private pagesDataService: PagesDataService,\n        private eventEmiterService: EventEmiterService,\n        private errorHandlerService: ErrorHandlerService\n    ) {\n        this.setData(cache.getPages());\n        fetcher.getPages().subscribe(\n            data => this.setData(data),\n            err => this.errorHandlerService.handleError(err)\n        );\n    };\n\n    private setData(result) {\n        var response = {\n            pages: [],\n            pagesData: []\n        };\n        // if it comes from the back-end translate it, else it is cached version\n        if(result.json) {\n            response = result.json();\n        } else {\n            response = result;\n        }\n        \n        this.setPages(response.pages);\n        this.setPagesData(response.pagesData);\n        this.eventEmiterService.emitFetchedData(response);\n    }\n\n    private setPages(pages) {\n        this.pages = pages;\n        this.pagesService.setPages(this.pages);\n    }\n\n    private setPagesData(pagesData) {\n        this.pagesData = pagesData;\n        this.pagesDataService.setPagesData(this.pagesData);\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/app.component.ts","// Angular 2 Modules\nimport { ModuleWithProviders } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Standard Views\nimport { HomeComponent } from './components/home/home.component';\nimport { PageComponent } from './components/page/page.component';\nimport { DetailsComponent } from './components/details/details.component';\nimport { ContactsComponent } from './components/contacts/contacts.component';\nimport { PageNotFoundComponent } from './components/page_not_found/page_not_found.component';\n\nconst appRoutes: Routes = [\n  { \n    path: '', \n    component: HomeComponent,\n    data: {\n      meta: {\n        title: 'Компютърни компоненти Жиланов: евтини РАМ(RAM) памети, видеонаблюдение, твърд диск и видеокарти',\n        description: 'Изберете от десетките видове RAM памети, хард дискове и компютърни части на промоционалните ни цени!'\n      }\n    }\n  }, { \n    path: 'insurance/:insurance', \n    component: PageComponent,\n    data: {\n      meta: {\n        description: 'Изберете от десетките видове RAM памети, хард дискове и компютърни части на промоционалните ни цени!'\n      }\n    }\n  }, { \n    path: 'blog/:blogLink', \n    component: DetailsComponent,\n    data: {\n      meta: {\n        description: 'Изберете от десетките видове RAM памети, хард дискове и компютърни части на промоционалните ни цени!'\n      }\n    }\n  }, { \n    path: 'contacts', \n    component: ContactsComponent,\n    data: {\n      meta: {\n        title: 'Връзка с Жиланов ЕООД',\n        description: 'Можете да се свържете с нас на телефон 0878466180 или чрез контактната форма'\n      }\n    }\n  }, { \n    path: '**', \n    component: PageNotFoundComponent\n  }\n];\n\nexport const appRoutingProviders: any[] = [\n\n];\n\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/app.routing.ts","import { Component, Input, Output, OnInit, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { PagesService } from '../../services/pages.service';\nimport { Dictionary } from '../../dictionary/dictionary.service';\nimport { EventEmiterService } from '../../services/event.emiter.service';\n\n// import { DateComponent } from '../date/date.component';\n\n@Component({\n    selector: 'custom-header',\n    styles: [require('./header.component.css')],\n    template: require('./header.component.html')\n})\n\nexport class HeaderComponent {\n\n    private valueCtrl: string;\n\n    private pages:Array<Object>;\n\n    private navigationItems:Array<Object>;\n\n    constructor(\n        private router: Router,\n        private dictionary: Dictionary,\n        private pagesService: PagesService,\n        private eventEmiterService: EventEmiterService\n    ) {\n      this.pages = pagesService.getPages();\n      this.updatePagesIndex();\n      // on categories update we update the local array\n      this.eventEmiterService.dataFetched.subscribe(data => this.onFetchedData(data));\n    };\n\n    private onFetchedData(data) {\n      this.pages = data.pages;\n      this.updatePagesIndex();\n    }\n\n    private changeLanguage() {\n      this.dictionary.changeLanguage();\n    }\n\n    private updatePagesIndex(){\n      let array = [];\n      for(let pagesCounter = 0; pagesCounter < this.pages.length; pagesCounter++) {\n        if(this.pages[pagesCounter]['type'] == 'single') {\n          array[+this.pages[pagesCounter]['zIndex']] = this.pages[pagesCounter];\n        } else if(this.pages[pagesCounter]['type'] == 'multiple') {\n          this.pages[pagesCounter]['sub'] = this.getSubCategories(this.pages[pagesCounter]['subCategories']);\n        }\n      }\n  }\n  \n  private getSubCategories(subCategoriesArray) {\n    let subs = [];\n    for(let categoriesCounter = 0; categoriesCounter < subCategoriesArray.length; categoriesCounter++) {\n      for(let pagesCounter = 0; pagesCounter < this.pages.length; pagesCounter++) {\n        if(this.pages[pagesCounter]['link'] == subCategoriesArray[categoriesCounter]) {\n          subs.push(this.pages[pagesCounter]);\n        }\n      }\n    }\n    return subs;\n  }\n\n  private getPageByLink(link) {\n    for(let pagesCounter = 0; pagesCounter < this.pages.length; pagesCounter++) {\n      if(this.pages[pagesCounter]['link'] == link) {\n        return this.pages[pagesCounter];\n      }\n    }\n  }\n\n  private onLinkSelect(event) {\n    this.router.navigate(['/insurance/', this.valueCtrl]);\n    // TODO: FIX IT WHEN IT IS FIXED IN THE MATERIAL. There is still issue with the second select...\n    let timeoutEvent = event;\n    setTimeout((function() {\n        let span = timeoutEvent.source.trigger.nativeElement.getElementsByClassName('mat-select-value')[0];\n        if(span) {\n          span.innerHTML=\"\";\n        }\n        let title = timeoutEvent.source.trigger.nativeElement.getElementsByClassName('mat-select-placeholder')[0];\n        if(title) {\n          title.style = [];\n          title.className = \"mat-select-placeholder\";\n        }\n        this.valueCtrl = '';\n    }),300);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/basic_components/header/header.component.ts","import { Component, Input, Output, OnInit, EventEmitter } from '@angular/core';\n\n// import { DateComponent } from '../date/date.component';\n\n@Component({\n    selector: 'image',\n    styles: [require('./image.component.css')],\n    template: require('./image.component.html')\n})\n\nexport class ImageComponent implements OnInit {\n    \n    @Input()\n    src: Object;\n\n    @Input()\n    alt: Object;\n\n    private blankImage: string = '/img/3bf7019.png';\n    /**\n     * @ngOnInit on init\n     */\n    public ngOnInit() {\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/basic_components/image/image.component.ts","import { Component, Input, Output, OnInit, EventEmitter } from '@angular/core';\n\n// import { DateComponent } from '../date/date.component';\n\n@Component({\n    selector: 'notification',\n    styles: [require('./notification.component.css')],\n    template: require('./notification.component.html')\n})\n\nexport class NotificationComponent implements OnInit {\n    @Input()\n    postOptions: Object;\n\n    @Output()\n    cPayChanged = new EventEmitter();\n\n    private showOverlay = false;\n\n    /**\n     * @ngOnInit on init\n     */\n    public ngOnInit() {\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/basic_components/notification/notification.component.ts","import { Component, Input, Output, OnInit, EventEmitter } from '@angular/core';\nimport { Dictionary } from '../../dictionary/dictionary.service';\n\n@Component({\n    selector: 'price',\n    styles: [require('./price.component.css')],\n    template: require('./price.component.html')\n})\n\nexport class PriceComponent {\n    \n    @Input()\n    priceOptions: Object;\n    \n    constructor(\n        private dictionary: Dictionary\n    ) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/basic_components/price/price.component.ts","import { Component, Input, Output } from '@angular/core';\nimport { Dictionary } from '../../dictionary/dictionary.service';\nimport { PagesService } from '../../services/pages.service';\nimport { PagesDataService } from '../../services/pages.data.service';\nimport { EventEmiterService } from '../../services/event.emiter.service';\n\n@Component({\n    selector: 'search',\n    styles: [require('./search.component.css')],\n    template: require('./search.component.html')\n})\n\nexport class SearchComponent {\n    // options of the inner carousel\n    // todo: Fill it with the real images and items\n    public slides: Array<Object>;\n\n    private pages =  Array<Object>();\n\n    private pagesData = Array<Object>();\n\n    constructor(\n        private dictionary: Dictionary,\n        private pagesService: PagesService,\n        private pagesDataService: PagesDataService,\n        private eventEmiterService: EventEmiterService\n    ) {\n      this.pages = pagesService.getPages();\n      this.pagesData = pagesDataService.getPagesData();\n      // on categories update we update the local array\n      this.eventEmiterService.dataFetched.subscribe(data => this.onFetchedData(data));\n    };\n\n    private onFetchedData(data) {\n      this.pages = data.products;\n      this.pagesData = data.categories;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/components/search/search.component.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".no-paddings,custom-header{padding:0!important}.center{text-align:center}custom-header{z-index:5}.home{background:#d6d7d9;min-height:100vh!important}md-select .mat-select-placeholder{color:#000!important;font-size:12px!important}@media screen and (max-width:992px){.mat-menu-panel{max-width:100%!important}}.star-icon:before{color:#f2761c!important}.star-icon{font-size:12px!important}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?url=false!./src/app/app.component.css\n// module id = 387\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".logo{display:block}.logo img{height:50px}.fill-remaining-space,.nav-item{flex:1 1 auto}[role=img]{cursor:pointer}md-toolbar{background-color:hsla(0,0%,100%,.6)!important;padding:20px}md-toolbar button{color:#000;font-size:12px;font-weight:400}md-select{padding:0 6px;margin:6px 8px;min-width:88px;border-radius:3px;text-align:center;text-transform:uppercase;text-decoration:none;border:none;outline:none}md-toolbar button.categories-button{font-size:20px;margin-left:30px}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?url=false!./src/app/basic_components/header/header.component.css\n// module id = 388\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"img{max-width:100%}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?url=false!./src/app/basic_components/image/image.component.css\n// module id = 389\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?url=false!./src/app/basic_components/notification/notification.component.css\n// module id = 390\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".line-through{text-decoration:line-through}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?url=false!./src/app/basic_components/price/price.component.css\n// module id = 391\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".map-section,.phone-section{padding-left:100px}.sebm-google-map-container{height:500px}.info-window-container img{height:30px}.company{text-align:center}.red{color:red}.yellow{color:#ff0}h2{text-align:left}.phone-section img{max-width:50px}.phone-section bold{font-weight:900}.phone-section .contact{margin-top:14px}.phone-section .contact.duo{margin-top:8px}.rating{color:#f2761c}a:link{text-decoration:none}a:link,a:visited{color:#2f4f4f}a:hover{color:#dc143c}a:active{color:blue}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?url=false!./src/app/components/contacts/contacts.component.css\n// module id = 392\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".center{text-align:center}.details{margin-top:40px}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?url=false!./src/app/components/details/details.component.css\n// module id = 393\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".carousel{height:400px;margin-top:-108px;background:#fff url(\\\"./src/img/background.png\\\") no-repeat 50%;background-size:100% auto}.info{padding:20px}@media screen and (max-width:992px){.carousel{margin-top:0}}@media screen and (max-width:500px){.carousel{height:200px}}.icons{padding:60px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between}.icons.hidden-md img{height:150px;width:180px}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?url=false!./src/app/components/home/home.component.css\n// module id = 394\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"img{float:left;margin:0 20px 20px 0;max-width:100%}p{text-align:justify;text-indent:2em}.sub-page{overflow:auto}.container{color:#2f4f4f}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?url=false!./src/app/components/page/page.component.css\n// module id = 395\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?url=false!./src/app/components/page_not_found/page_not_found.component.css\n// module id = 396\n// module chunks = 0","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"md-input-container{margin:0 20px}md-grid-tile div,md-option{overflow:hidden;height:64px}.image-holder{display:inline-block;width:50px}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?url=false!./src/app/components/search/search.component.css\n// module id = 397\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"@-ms-viewport{width:device-width}.visible-lg,.visible-lg-block,.visible-lg-inline,.visible-lg-inline-block,.visible-md,.visible-md-block,.visible-md-inline,.visible-md-inline-block,.visible-sm,.visible-sm-block,.visible-sm-inline,.visible-sm-inline-block,.visible-xs,.visible-xs-block,.visible-xs-inline,.visible-xs-inline-block{display:none!important}@media (max-width:767px){.visible-xs{display:block!important}table.visible-xs{display:table}tr.visible-xs{display:table-row!important}td.visible-xs,th.visible-xs{display:table-cell!important}}@media (max-width:767px){.visible-xs-block{display:block!important}}@media (max-width:767px){.visible-xs-inline{display:inline!important}}@media (max-width:767px){.visible-xs-inline-block{display:inline-block!important}}@media (min-width:768px) and (max-width:991px){.visible-sm{display:block!important}table.visible-sm{display:table}tr.visible-sm{display:table-row!important}td.visible-sm,th.visible-sm{display:table-cell!important}}@media (min-width:768px) and (max-width:991px){.visible-sm-block{display:block!important}}@media (min-width:768px) and (max-width:991px){.visible-sm-inline{display:inline!important}}@media (min-width:768px) and (max-width:991px){.visible-sm-inline-block{display:inline-block!important}}@media (min-width:992px) and (max-width:1199px){.visible-md{display:block!important}table.visible-md{display:table}tr.visible-md{display:table-row!important}td.visible-md,th.visible-md{display:table-cell!important}}@media (min-width:992px) and (max-width:1199px){.visible-md-block{display:block!important}}@media (min-width:992px) and (max-width:1199px){.visible-md-inline{display:inline!important}}@media (min-width:992px) and (max-width:1199px){.visible-md-inline-block{display:inline-block!important}}@media (min-width:1200px){.visible-lg{display:block!important}table.visible-lg{display:table}tr.visible-lg{display:table-row!important}td.visible-lg,th.visible-lg{display:table-cell!important}}@media (min-width:1200px){.visible-lg-block{display:block!important}}@media (min-width:1200px){.visible-lg-inline{display:inline!important}}@media (min-width:1200px){.visible-lg-inline-block{display:inline-block!important}}@media (max-width:767px){.hidden-xs{display:none!important}}@media (min-width:768px) and (max-width:991px){.hidden-sm{display:none!important}}@media (min-width:992px) and (max-width:1199px){.hidden-md{display:none!important}}@media (min-width:1200px){.hidden-lg{display:none!important}}.visible-print{display:none!important}@media print{.visible-print{display:block!important}table.visible-print{display:table}tr.visible-print{display:table-row!important}td.visible-print,th.visible-print{display:table-cell!important}}.visible-print-block{display:none!important}@media print{.visible-print-block{display:block!important}}.visible-print-inline{display:none!important}@media print{.visible-print-inline{display:inline!important}}.visible-print-inline-block{display:none!important}@media print{.visible-print-inline-block{display:inline-block!important}}@media print{.hidden-print{display:none!important}}.container{margin-right:auto;margin-left:auto;padding-left:15px;padding-right:15px}@media (min-width:768px){.container{width:750px}}@media (min-width:992px){.container{width:970px}}@media (min-width:1200px){.container{width:1170px}}.container-fluid{margin-right:auto;margin-left:auto;padding-left:15px;padding-right:15px}.row{margin-left:-15px;margin-right:-15px}.col,.col-lg-1,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-10,.col-lg-11,.col-lg-12,.col-md-1,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-10,.col-md-11,.col-md-12,.col-sm-1,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-10,.col-sm-11,.col-sm-12,.col-xs-1,.col-xs-2,.col-xs-3,.col-xs-4,.col-xs-5,.col-xs-6,.col-xs-7,.col-xs-8,.col-xs-9,.col-xs-10,.col-xs-11,.col-xs-12{position:relative;min-height:1px;padding-left:15px;padding-right:15px}.col,.col-xs-1,.col-xs-2,.col-xs-3,.col-xs-4,.col-xs-5,.col-xs-6,.col-xs-7,.col-xs-8,.col-xs-9,.col-xs-10,.col-xs-11,.col-xs-12{float:left}.col-xs-12{width:100%}.col-xs-11{width:91.66666667%}.col-xs-10{width:83.33333333%}.col-xs-9{width:75%}.col-xs-8{width:66.66666667%}.col-xs-7{width:58.33333333%}.col-xs-6{width:50%}.col-xs-5{width:41.66666667%}.col-xs-4{width:33.33333333%}.col-xs-3{width:25%}.col-xs-2{width:16.66666667%}.col-xs-1{width:8.33333333%}.col-xs-pull-12{right:100%}.col-xs-pull-11{right:91.66666667%}.col-xs-pull-10{right:83.33333333%}.col-xs-pull-9{right:75%}.col-xs-pull-8{right:66.66666667%}.col-xs-pull-7{right:58.33333333%}.col-xs-pull-6{right:50%}.col-xs-pull-5{right:41.66666667%}.col-xs-pull-4{right:33.33333333%}.col-xs-pull-3{right:25%}.col-xs-pull-2{right:16.66666667%}.col-xs-pull-1{right:8.33333333%}.col-xs-pull-0{right:auto}.col-xs-push-12{left:100%}.col-xs-push-11{left:91.66666667%}.col-xs-push-10{left:83.33333333%}.col-xs-push-9{left:75%}.col-xs-push-8{left:66.66666667%}.col-xs-push-7{left:58.33333333%}.col-xs-push-6{left:50%}.col-xs-push-5{left:41.66666667%}.col-xs-push-4{left:33.33333333%}.col-xs-push-3{left:25%}.col-xs-push-2{left:16.66666667%}.col-xs-push-1{left:8.33333333%}.col-xs-push-0{left:auto}.col-xs-offset-12{margin-left:100%}.col-xs-offset-11{margin-left:91.66666667%}.col-xs-offset-10{margin-left:83.33333333%}.col-xs-offset-9{margin-left:75%}.col-xs-offset-8{margin-left:66.66666667%}.col-xs-offset-7{margin-left:58.33333333%}.col-xs-offset-6{margin-left:50%}.col-xs-offset-5{margin-left:41.66666667%}.col-xs-offset-4{margin-left:33.33333333%}.col-xs-offset-3{margin-left:25%}.col-xs-offset-2{margin-left:16.66666667%}.col-xs-offset-1{margin-left:8.33333333%}.col-xs-offset-0{margin-left:0}@media (min-width:768px){.col,.col-sm-1,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-10,.col-sm-11,.col-sm-12{float:left}.col-sm-12{width:100%}.col-sm-11{width:91.66666667%}.col-sm-10{width:83.33333333%}.col-sm-9{width:75%}.col-sm-8{width:66.66666667%}.col-sm-7{width:58.33333333%}.col-sm-6{width:50%}.col-sm-5{width:41.66666667%}.col-sm-4{width:33.33333333%}.col-sm-3{width:25%}.col-sm-2{width:16.66666667%}.col-sm-1{width:8.33333333%}.col-sm-pull-12{right:100%}.col-sm-pull-11{right:91.66666667%}.col-sm-pull-10{right:83.33333333%}.col-sm-pull-9{right:75%}.col-sm-pull-8{right:66.66666667%}.col-sm-pull-7{right:58.33333333%}.col-sm-pull-6{right:50%}.col-sm-pull-5{right:41.66666667%}.col-sm-pull-4{right:33.33333333%}.col-sm-pull-3{right:25%}.col-sm-pull-2{right:16.66666667%}.col-sm-pull-1{right:8.33333333%}.col-sm-pull-0{right:auto}.col-sm-push-12{left:100%}.col-sm-push-11{left:91.66666667%}.col-sm-push-10{left:83.33333333%}.col-sm-push-9{left:75%}.col-sm-push-8{left:66.66666667%}.col-sm-push-7{left:58.33333333%}.col-sm-push-6{left:50%}.col-sm-push-5{left:41.66666667%}.col-sm-push-4{left:33.33333333%}.col-sm-push-3{left:25%}.col-sm-push-2{left:16.66666667%}.col-sm-push-1{left:8.33333333%}.col-sm-push-0{left:auto}.col-sm-offset-12{margin-left:100%}.col-sm-offset-11{margin-left:91.66666667%}.col-sm-offset-10{margin-left:83.33333333%}.col-sm-offset-9{margin-left:75%}.col-sm-offset-8{margin-left:66.66666667%}.col-sm-offset-7{margin-left:58.33333333%}.col-sm-offset-6{margin-left:50%}.col-sm-offset-5{margin-left:41.66666667%}.col-sm-offset-4{margin-left:33.33333333%}.col-sm-offset-3{margin-left:25%}.col-sm-offset-2{margin-left:16.66666667%}.col-sm-offset-1{margin-left:8.33333333%}.col-sm-offset-0{margin-left:0}}@media (min-width:992px){.col,.col-md-1,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-10,.col-md-11,.col-md-12{float:left}.col-md-12{width:100%}.col-md-11{width:91.66666667%}.col-md-10{width:83.33333333%}.col-md-9{width:75%}.col-md-8{width:66.66666667%}.col-md-7{width:58.33333333%}.col-md-6{width:50%}.col-md-5{width:41.66666667%}.col-md-4{width:33.33333333%}.col-md-3{width:25%}.col-md-2{width:16.66666667%}.col-md-1{width:8.33333333%}.col-md-pull-12{right:100%}.col-md-pull-11{right:91.66666667%}.col-md-pull-10{right:83.33333333%}.col-md-pull-9{right:75%}.col-md-pull-8{right:66.66666667%}.col-md-pull-7{right:58.33333333%}.col-md-pull-6{right:50%}.col-md-pull-5{right:41.66666667%}.col-md-pull-4{right:33.33333333%}.col-md-pull-3{right:25%}.col-md-pull-2{right:16.66666667%}.col-md-pull-1{right:8.33333333%}.col-md-pull-0{right:auto}.col-md-push-12{left:100%}.col-md-push-11{left:91.66666667%}.col-md-push-10{left:83.33333333%}.col-md-push-9{left:75%}.col-md-push-8{left:66.66666667%}.col-md-push-7{left:58.33333333%}.col-md-push-6{left:50%}.col-md-push-5{left:41.66666667%}.col-md-push-4{left:33.33333333%}.col-md-push-3{left:25%}.col-md-push-2{left:16.66666667%}.col-md-push-1{left:8.33333333%}.col-md-push-0{left:auto}.col-md-offset-12{margin-left:100%}.col-md-offset-11{margin-left:91.66666667%}.col-md-offset-10{margin-left:83.33333333%}.col-md-offset-9{margin-left:75%}.col-md-offset-8{margin-left:66.66666667%}.col-md-offset-7{margin-left:58.33333333%}.col-md-offset-6{margin-left:50%}.col-md-offset-5{margin-left:41.66666667%}.col-md-offset-4{margin-left:33.33333333%}.col-md-offset-3{margin-left:25%}.col-md-offset-2{margin-left:16.66666667%}.col-md-offset-1{margin-left:8.33333333%}.col-md-offset-0{margin-left:0}}@media (min-width:1200px){.col,.col-lg-1,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-10,.col-lg-11,.col-lg-12{float:left}.col-lg-12{width:100%}.col-lg-11{width:91.66666667%}.col-lg-10{width:83.33333333%}.col-lg-9{width:75%}.col-lg-8{width:66.66666667%}.col-lg-7{width:58.33333333%}.col-lg-6{width:50%}.col-lg-5{width:41.66666667%}.col-lg-4{width:33.33333333%}.col-lg-3{width:25%}.col-lg-2{width:16.66666667%}.col-lg-1{width:8.33333333%}.col-lg-pull-12{right:100%}.col-lg-pull-11{right:91.66666667%}.col-lg-pull-10{right:83.33333333%}.col-lg-pull-9{right:75%}.col-lg-pull-8{right:66.66666667%}.col-lg-pull-7{right:58.33333333%}.col-lg-pull-6{right:50%}.col-lg-pull-5{right:41.66666667%}.col-lg-pull-4{right:33.33333333%}.col-lg-pull-3{right:25%}.col-lg-pull-2{right:16.66666667%}.col-lg-pull-1{right:8.33333333%}.col-lg-pull-0{right:auto}.col-lg-push-12{left:100%}.col-lg-push-11{left:91.66666667%}.col-lg-push-10{left:83.33333333%}.col-lg-push-9{left:75%}.col-lg-push-8{left:66.66666667%}.col-lg-push-7{left:58.33333333%}.col-lg-push-6{left:50%}.col-lg-push-5{left:41.66666667%}.col-lg-push-4{left:33.33333333%}.col-lg-push-3{left:25%}.col-lg-push-2{left:16.66666667%}.col-lg-push-1{left:8.33333333%}.col-lg-push-0{left:auto}.col-lg-offset-12{margin-left:100%}.col-lg-offset-11{margin-left:91.66666667%}.col-lg-offset-10{margin-left:83.33333333%}.col-lg-offset-9{margin-left:75%}.col-lg-offset-8{margin-left:66.66666667%}.col-lg-offset-7{margin-left:58.33333333%}.col-lg-offset-6{margin-left:50%}.col-lg-offset-5{margin-left:41.66666667%}.col-lg-offset-4{margin-left:33.33333333%}.col-lg-offset-3{margin-left:25%}.col-lg-offset-2{margin-left:16.66666667%}.col-lg-offset-1{margin-left:8.33333333%}.col-lg-offset-0{margin-left:0}}.clearfix,.clearfix:after,.clearfix:before,.container-fluid:after,.container-fluid:before,.container:after,.container:before,.row:after,.row:before{content:\\\" \\\";display:table}.clearfix:after,.container-fluid:after,.container:after,.row:after{clear:both}.center-block{display:block;margin-left:auto;margin-right:auto}.pull-right{float:right!important}.pull-left{float:left!important}*,:after,:before{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?url=false!./src/app/grid.css\n// module id = 398\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".mat-elevation-z0{box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}.mat-elevation-z1{box-shadow:0 2px 1px -1px rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 1px 3px 0 rgba(0,0,0,.12)}.mat-elevation-z2{box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-elevation-z3{box-shadow:0 3px 3px -2px rgba(0,0,0,.2),0 3px 4px 0 rgba(0,0,0,.14),0 1px 8px 0 rgba(0,0,0,.12)}.mat-elevation-z4{box-shadow:0 2px 4px -1px rgba(0,0,0,.2),0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12)}.mat-elevation-z5{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 5px 8px 0 rgba(0,0,0,.14),0 1px 14px 0 rgba(0,0,0,.12)}.mat-elevation-z6{box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.mat-elevation-z7{box-shadow:0 4px 5px -2px rgba(0,0,0,.2),0 7px 10px 1px rgba(0,0,0,.14),0 2px 16px 1px rgba(0,0,0,.12)}.mat-elevation-z8{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-elevation-z9{box-shadow:0 5px 6px -3px rgba(0,0,0,.2),0 9px 12px 1px rgba(0,0,0,.14),0 3px 16px 2px rgba(0,0,0,.12)}.mat-elevation-z10{box-shadow:0 6px 6px -3px rgba(0,0,0,.2),0 10px 14px 1px rgba(0,0,0,.14),0 4px 18px 3px rgba(0,0,0,.12)}.mat-elevation-z11{box-shadow:0 6px 7px -4px rgba(0,0,0,.2),0 11px 15px 1px rgba(0,0,0,.14),0 4px 20px 3px rgba(0,0,0,.12)}.mat-elevation-z12{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-elevation-z13{box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 13px 19px 2px rgba(0,0,0,.14),0 5px 24px 4px rgba(0,0,0,.12)}.mat-elevation-z14{box-shadow:0 7px 9px -4px rgba(0,0,0,.2),0 14px 21px 2px rgba(0,0,0,.14),0 5px 26px 4px rgba(0,0,0,.12)}.mat-elevation-z15{box-shadow:0 8px 9px -5px rgba(0,0,0,.2),0 15px 22px 2px rgba(0,0,0,.14),0 6px 28px 5px rgba(0,0,0,.12)}.mat-elevation-z16{box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)}.mat-elevation-z17{box-shadow:0 8px 11px -5px rgba(0,0,0,.2),0 17px 26px 2px rgba(0,0,0,.14),0 6px 32px 5px rgba(0,0,0,.12)}.mat-elevation-z18{box-shadow:0 9px 11px -5px rgba(0,0,0,.2),0 18px 28px 2px rgba(0,0,0,.14),0 7px 34px 6px rgba(0,0,0,.12)}.mat-elevation-z19{box-shadow:0 9px 12px -6px rgba(0,0,0,.2),0 19px 29px 2px rgba(0,0,0,.14),0 7px 36px 6px rgba(0,0,0,.12)}.mat-elevation-z20{box-shadow:0 10px 13px -6px rgba(0,0,0,.2),0 20px 31px 3px rgba(0,0,0,.14),0 8px 38px 7px rgba(0,0,0,.12)}.mat-elevation-z21{box-shadow:0 10px 13px -6px rgba(0,0,0,.2),0 21px 33px 3px rgba(0,0,0,.14),0 8px 40px 7px rgba(0,0,0,.12)}.mat-elevation-z22{box-shadow:0 10px 14px -6px rgba(0,0,0,.2),0 22px 35px 3px rgba(0,0,0,.14),0 8px 42px 7px rgba(0,0,0,.12)}.mat-elevation-z23{box-shadow:0 11px 14px -7px rgba(0,0,0,.2),0 23px 36px 3px rgba(0,0,0,.14),0 9px 44px 8px rgba(0,0,0,.12)}.mat-elevation-z24{box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12)}.mat-ripple{overflow:hidden}.mat-ripple.mat-ripple-unbounded{overflow:visible}.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;background-color:rgba(0,0,0,.1);-webkit-transition:opacity,-webkit-transform 0ms cubic-bezier(0,0,.2,1);transition:opacity,-webkit-transform 0ms cubic-bezier(0,0,.2,1);transition:opacity,transform 0ms cubic-bezier(0,0,.2,1);transition:opacity,transform 0ms cubic-bezier(0,0,.2,1),-webkit-transform 0ms cubic-bezier(0,0,.2,1);-webkit-transform:scale(0);transform:scale(0)}.mat-option{white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;font-size:16px;font-family:Roboto,Helvetica Neue,sans-serif;text-align:start;text-decoration:none;position:relative;cursor:pointer;outline:none}.mat-option[disabled]{cursor:default}.mat-option .mat-icon{margin-right:16px}[dir=rtl] .mat-option .mat-icon{margin-left:16px}.mat-option[aria-disabled=true]{cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.mat-option-ripple{position:absolute;top:0;left:0;bottom:0;right:0}@media screen and (-ms-high-contrast:active){.mat-option-ripple{opacity:.5}}.cdk-visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;text-transform:none;width:1px}.cdk-global-overlay-wrapper,.cdk-overlay-container{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed;z-index:1000}.cdk-global-overlay-wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;position:absolute;z-index:1000}.cdk-overlay-pane{box-sizing:border-box}.cdk-overlay-backdrop,.cdk-overlay-pane{position:absolute;pointer-events:auto;z-index:1000}.cdk-overlay-backdrop{top:0;bottom:0;left:0;right:0;-webkit-transition:opacity .4s cubic-bezier(.25,.8,.25,1);transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.48}.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.6)}.cdk-overlay-transparent-backdrop{background:none}.docs-component-viewer-tabbed-content .docs-component-view-text-content h1,.docs-guide-content h1{display:inline-block;font-size:20px;font-weight:400;padding:5px}.docs-component-viewer-tabbed-content .docs-component-view-text-content h2,.docs-component-viewer-tabbed-content .docs-component-view-text-content h3,.docs-guide-content h2,.docs-guide-content h3{font-size:20px;font-weight:400;margin-bottom:30px;margin-top:80px}.docs-component-viewer-tabbed-content .docs-component-view-text-content h4,.docs-guide-content h4{margin-top:40px}.docs-component-viewer-tabbed-content .docs-component-view-text-content h5,.docs-guide-content h5{font-size:16px}.docs-component-viewer-tabbed-content .docs-component-view-text-content .md-tab-body-wrapper h2,.docs-guide-content .md-tab-body-wrapper h2{margin-top:0}.docs-component-viewer-tabbed-content .docs-component-view-text-content p,.docs-guide-content p{font-size:16px;line-height:28px}.docs-component-viewer-tabbed-content .docs-component-view-text-content a,.docs-guide-content a{text-decoration:none}.docs-component-viewer-tabbed-content .docs-component-view-text-content table,.docs-guide-content table{border-collapse:collapse;border-radius:2px;border-spacing:0;margin:0 0 32px;width:100%}.docs-component-viewer-tabbed-content .docs-component-view-text-content table tbody th,.docs-guide-content table tbody th{max-width:100px;padding:13px 32px;text-align:left}.docs-component-viewer-tabbed-content .docs-component-view-text-content td,.docs-guide-content td{font-weight:400;padding:8px 30px}.docs-component-viewer-tabbed-content .docs-component-view-text-content td p,.docs-guide-content td p{margin:0}.docs-component-viewer-tabbed-content .docs-component-view-text-content th,.docs-guide-content th{font-size:16px;font-weight:400;padding:13px 32px;text-align:left}.mat-option.mat-selected,.mat-option:focus:not(.mat-option-disabled),.mat-option:hover:not(.mat-option-disabled){background:rgba(0,0,0,.04)}.mat-option.mat-selected{color:#00bcd4}.mat-option.mat-active{background:rgba(0,0,0,.04);color:rgba(0,0,0,.87)}.mat-option.mat-option-disabled{color:rgba(0,0,0,.38)}.mat-pseudo-checkbox:after{color:#fafafa}.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-indeterminate{border:none}.mat-pseudo-checkbox-checked.mat-primary,.mat-pseudo-checkbox-indeterminate.mat-primary{background:#00bcd4}.mat-pseudo-checkbox-checked.mat-accent,.mat-pseudo-checkbox-indeterminate.mat-accent{background:#ffc107}.mat-pseudo-checkbox-checked.mat-warn,.mat-pseudo-checkbox-indeterminate.mat-warn{background:#f44336}.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled{background:#b0b0b0}.mat-app-background{background-color:#fafafa}.mat-autocomplete-panel,.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active){background:#fff;color:rgba(0,0,0,.87)}.mat-button.mat-button-focus.mat-primary .mat-button-focus-overlay,.mat-fab.mat-button-focus.mat-primary .mat-button-focus-overlay,.mat-icon-button.mat-button-focus.mat-primary .mat-button-focus-overlay,.mat-mini-fab.mat-button-focus.mat-primary .mat-button-focus-overlay,.mat-raised-button.mat-button-focus.mat-primary .mat-button-focus-overlay{background-color:rgba(0,188,212,.12)}.mat-button.mat-button-focus.mat-accent .mat-button-focus-overlay,.mat-fab.mat-button-focus.mat-accent .mat-button-focus-overlay,.mat-icon-button.mat-button-focus.mat-accent .mat-button-focus-overlay,.mat-mini-fab.mat-button-focus.mat-accent .mat-button-focus-overlay,.mat-raised-button.mat-button-focus.mat-accent .mat-button-focus-overlay{background-color:rgba(255,215,64,.12)}.mat-button.mat-button-focus.mat-warn .mat-button-focus-overlay,.mat-fab.mat-button-focus.mat-warn .mat-button-focus-overlay,.mat-icon-button.mat-button-focus.mat-warn .mat-button-focus-overlay,.mat-mini-fab.mat-button-focus.mat-warn .mat-button-focus-overlay,.mat-raised-button.mat-button-focus.mat-warn .mat-button-focus-overlay{background-color:rgba(244,67,54,.12)}.mat-button,.mat-icon-button{background:transparent}.mat-button.mat-primary,.mat-icon-button.mat-primary{color:#00bcd4}.mat-button.mat-accent,.mat-icon-button.mat-accent{color:#ffd740}.mat-button.mat-warn,.mat-icon-button.mat-warn{color:#f44336}.mat-button.mat-accent[disabled],.mat-button.mat-primary[disabled],.mat-button.mat-warn[disabled],.mat-button[disabled][disabled],.mat-icon-button.mat-accent[disabled],.mat-icon-button.mat-primary[disabled],.mat-icon-button.mat-warn[disabled],.mat-icon-button[disabled][disabled]{color:rgba(0,0,0,.38)}.mat-button:hover.mat-primary .mat-button-focus-overlay,.mat-icon-button:hover.mat-primary .mat-button-focus-overlay{background-color:rgba(0,188,212,.12)}.mat-button:hover.mat-accent .mat-button-focus-overlay,.mat-icon-button:hover.mat-accent .mat-button-focus-overlay{background-color:rgba(255,215,64,.12)}.mat-button:hover.mat-warn .mat-button-focus-overlay,.mat-icon-button:hover.mat-warn .mat-button-focus-overlay{background-color:rgba(244,67,54,.12)}.mat-fab,.mat-mini-fab,.mat-raised-button{color:rgba(0,0,0,.87);background-color:#fff}.mat-fab.mat-primary,.mat-mini-fab.mat-primary,.mat-raised-button.mat-primary{color:#fff}.mat-fab.mat-accent,.mat-mini-fab.mat-accent,.mat-raised-button.mat-accent{color:rgba(0,0,0,.87)}.mat-fab.mat-warn,.mat-mini-fab.mat-warn,.mat-raised-button.mat-warn{color:#fff}.mat-fab.mat-accent[disabled],.mat-fab.mat-primary[disabled],.mat-fab.mat-warn[disabled],.mat-fab[disabled][disabled],.mat-mini-fab.mat-accent[disabled],.mat-mini-fab.mat-primary[disabled],.mat-mini-fab.mat-warn[disabled],.mat-mini-fab[disabled][disabled],.mat-raised-button.mat-accent[disabled],.mat-raised-button.mat-primary[disabled],.mat-raised-button.mat-warn[disabled],.mat-raised-button[disabled][disabled]{color:rgba(0,0,0,.38)}.mat-fab.mat-primary,.mat-mini-fab.mat-primary,.mat-raised-button.mat-primary{background-color:#00bcd4}.mat-fab.mat-accent,.mat-mini-fab.mat-accent,.mat-raised-button.mat-accent{background-color:#ffd740}.mat-fab.mat-warn,.mat-mini-fab.mat-warn,.mat-raised-button.mat-warn{background-color:#f44336}.mat-fab.mat-accent[disabled],.mat-fab.mat-primary[disabled],.mat-fab.mat-warn[disabled],.mat-fab[disabled][disabled],.mat-mini-fab.mat-accent[disabled],.mat-mini-fab.mat-primary[disabled],.mat-mini-fab.mat-warn[disabled],.mat-mini-fab[disabled][disabled],.mat-raised-button.mat-accent[disabled],.mat-raised-button.mat-primary[disabled],.mat-raised-button.mat-warn[disabled],.mat-raised-button[disabled][disabled]{background-color:rgba(0,0,0,.12)}.mat-fab,.mat-mini-fab{background-color:#ffd740;color:rgba(0,0,0,.87)}.mat-button-toggle{color:rgba(0,0,0,.38)}.mat-button-toggle-checked{background-color:#e0e0e0;color:#000}.mat-button-toggle-disabled{background-color:#eee;color:rgba(0,0,0,.38)}.mat-button-toggle-disabled.mat-button-toggle-checked{background-color:#bdbdbd}.mat-card{background:#fff;color:#000}.mat-card-subtitle{color:rgba(0,0,0,.54)}.mat-checkbox-frame{border-color:rgba(0,0,0,.54)}.mat-checkbox-checkmark{fill:#fafafa}.mat-checkbox-checkmark-path{stroke:#fafafa!important}.mat-checkbox-mixedmark{background-color:#fafafa}.mat-checkbox-checked.mat-primary .mat-checkbox-background,.mat-checkbox-indeterminate.mat-primary .mat-checkbox-background{background-color:#00bcd4}.mat-checkbox-checked.mat-accent .mat-checkbox-background,.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background{background-color:#ffc107}.mat-checkbox-checked.mat-warn .mat-checkbox-background,.mat-checkbox-indeterminate.mat-warn .mat-checkbox-background{background-color:#f44336}.mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background,.mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background{background-color:#b0b0b0}.mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame{border-color:#b0b0b0}.mat-checkbox:not(.mat-checkbox-disabled).mat-primary .mat-checkbox-ripple .mat-ripple-element{background-color:rgba(0,188,212,.26)}.mat-checkbox:not(.mat-checkbox-disabled).mat-accent .mat-checkbox-ripple .mat-ripple-element{background-color:rgba(255,215,64,.26)}.mat-checkbox:not(.mat-checkbox-disabled).mat-warn .mat-checkbox-ripple .mat-ripple-element{background-color:rgba(244,67,54,.26)}.mat-chip:not(.mat-basic-chip){background-color:#e0e0e0;color:rgba(0,0,0,.87)}.mat-chip.mat-chip-selected:not(.mat-basic-chip){background-color:gray;color:hsla(0,0%,100%,.87)}.mat-chip.mat-chip-selected:not(.mat-basic-chip).mat-primary{background-color:#00bcd4;color:#fff}.mat-chip.mat-chip-selected:not(.mat-basic-chip).mat-accent{background-color:#ffc107;color:rgba(0,0,0,.87)}.mat-chip.mat-chip-selected:not(.mat-basic-chip).mat-warn{background-color:#f44336;color:#fff}.mat-dialog-container{background:#fff}.mat-icon.mat-primary{color:#00bcd4}.mat-icon.mat-accent{color:#ffd740}.mat-icon.mat-warn{color:#f44336}.mat-input-placeholder{color:rgba(0,0,0,.38)}.mat-input-placeholder.mat-focused{color:#00bcd4}.mat-input-placeholder.mat-focused.mat-accent{color:#ffd740}.mat-input-placeholder.mat-focused.mat-warn{color:#f44336}.mat-input-element:disabled{color:rgba(0,0,0,.38)}.mat-input-placeholder.mat-float.mat-focused .mat-placeholder-required,input.mat-input-element:-webkit-autofill+.mat-input-placeholder .mat-placeholder-required{color:#ffd740}.mat-input-underline{border-color:rgba(0,0,0,.12)}.mat-input-underline .mat-input-ripple{background-color:#00bcd4}.mat-input-underline .mat-input-ripple.mat-accent{background-color:#ffd740}.mat-input-underline .mat-input-ripple.mat-warn{background-color:#f44336}.mat-list .mat-list-item,.mat-nav-list .mat-list-item{color:#000}.mat-list .mat-subheader,.mat-nav-list .mat-subheader{color:rgba(0,0,0,.54)}.mat-divider{border-top-color:rgba(0,0,0,.12)}.mat-nav-list .mat-list-item-content.mat-list-item-focus,.mat-nav-list .mat-list-item-content:hover{background:rgba(0,0,0,.04)}.mat-menu-content{background:#fff}.mat-menu-item{background:transparent;color:rgba(0,0,0,.87)}.mat-menu-item[disabled]{color:rgba(0,0,0,.38)}.mat-menu-item .mat-icon{color:rgba(0,0,0,.54);vertical-align:middle}.mat-menu-item:focus:not([disabled]),.mat-menu-item:hover:not([disabled]){background:rgba(0,0,0,.04)}.mat-progress-bar-background{background:url(\\\"data:image/svg+xml;charset=UTF-8,%3Csvg%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%20x%3D%270px%27%20y%3D%270px%27%20enable-background%3D%27new%200%200%205%202%27%20xml%3Aspace%3D%27preserve%27%20viewBox%3D%270%200%205%202%27%20preserveAspectRatio%3D%27none%20slice%27%3E%3Ccircle%20cx%3D%271%27%20cy%3D%271%27%20r%3D%271%27%20fill%3D%27%23b2ebf2%27%2F%3E%3C%2Fsvg%3E\\\")}.mat-progress-bar-buffer{background-color:#b2ebf2}.mat-progress-bar-fill:after{background-color:#00acc1}.mat-progress-bar.mat-accent .mat-progress-bar-background{background:url(\\\"data:image/svg+xml;charset=UTF-8,%3Csvg%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%20x%3D%270px%27%20y%3D%270px%27%20enable-background%3D%27new%200%200%205%202%27%20xml%3Aspace%3D%27preserve%27%20viewBox%3D%270%200%205%202%27%20preserveAspectRatio%3D%27none%20slice%27%3E%3Ccircle%20cx%3D%271%27%20cy%3D%271%27%20r%3D%271%27%20fill%3D%27%23ffecb3%27%2F%3E%3C%2Fsvg%3E\\\")}.mat-progress-bar.mat-accent .mat-progress-bar-buffer{background-color:#ffecb3}.mat-progress-bar.mat-accent .mat-progress-bar-fill:after{background-color:#ffb300}.mat-progress-bar.mat-warn .mat-progress-bar-background{background:url(\\\"data:image/svg+xml;charset=UTF-8,%3Csvg%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%27%20x%3D%270px%27%20y%3D%270px%27%20enable-background%3D%27new%200%200%205%202%27%20xml%3Aspace%3D%27preserve%27%20viewBox%3D%270%200%205%202%27%20preserveAspectRatio%3D%27none%20slice%27%3E%3Ccircle%20cx%3D%271%27%20cy%3D%271%27%20r%3D%271%27%20fill%3D%27%23ffcdd2%27%2F%3E%3C%2Fsvg%3E\\\")}.mat-progress-bar.mat-warn .mat-progress-bar-buffer{background-color:#ffcdd2}.mat-progress-bar.mat-warn .mat-progress-bar-fill:after{background-color:#e53935}.mat-progress-circle path,.mat-progress-spinner path,.mat-spinner path{stroke:#00acc1}.mat-progress-circle.mat-accent path,.mat-progress-spinner.mat-accent path,.mat-spinner.mat-accent path{stroke:#ffb300}.mat-progress-circle.mat-warn path,.mat-progress-spinner.mat-warn path,.mat-spinner.mat-warn path{stroke:#e53935}.mat-radio-outer-circle{border-color:rgba(0,0,0,.54)}.mat-radio-checked .mat-radio-outer-circle{border-color:#ffd740}.mat-radio-disabled .mat-radio-outer-circle{border-color:rgba(0,0,0,.38)}.mat-radio-inner-circle{background-color:#ffd740}.mat-radio-disabled .mat-radio-inner-circle{background-color:rgba(0,0,0,.38)}.mat-radio-ripple .mat-ripple-element{background-color:rgba(255,215,64,.26)}.mat-radio-disabled .mat-radio-ripple .mat-ripple-element{background-color:rgba(0,0,0,.38)}.mat-select-trigger{color:rgba(0,0,0,.38)}.mat-select:focus:not(.mat-select-disabled) .mat-select-trigger{color:#00bcd4}.mat-select.ng-invalid.ng-touched:not(.mat-select-disabled) .mat-select-trigger{color:#f44336}.mat-select-underline{background-color:rgba(0,0,0,.12)}.mat-select:focus:not(.mat-select-disabled) .mat-select-underline{background-color:#00bcd4}.mat-select.ng-invalid.ng-touched:not(.mat-select-disabled) .mat-select-underline{background-color:#f44336}.mat-select-arrow{color:rgba(0,0,0,.38)}.mat-select:focus:not(.mat-select-disabled) .mat-select-arrow{color:#00bcd4}.mat-select.ng-invalid.ng-touched:not(.mat-select-disabled) .mat-select-arrow{color:#f44336}.mat-select-content,.mat-select-panel-done-animating{background:#fff}.mat-select-value{color:rgba(0,0,0,.87)}.mat-select-disabled .mat-select-value{color:rgba(0,0,0,.38)}.mat-sidenav-container{background-color:#fafafa;color:rgba(0,0,0,.87)}.mat-sidenav{color:rgba(0,0,0,.87)}.mat-sidenav,.mat-sidenav.mat-sidenav-push{background-color:#fff}.mat-sidenav-backdrop.mat-sidenav-shown{background-color:rgba(0,0,0,.6)}.mat-slide-toggle.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb{background-color:#ffc107}.mat-slide-toggle.mat-checked:not(.mat-disabled) .mat-slide-toggle-bar{background-color:rgba(255,193,7,.5)}.mat-slide-toggle.mat-slide-toggle-focused:not(.mat-checked) .mat-ink-ripple{background-color:rgba(0,0,0,.12)}.mat-slide-toggle.mat-slide-toggle-focused .mat-ink-ripple{background-color:rgba(255,193,7,.26)}.mat-slide-toggle.mat-primary.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb{background-color:#00bcd4}.mat-slide-toggle.mat-primary.mat-checked:not(.mat-disabled) .mat-slide-toggle-bar{background-color:rgba(0,188,212,.5)}.mat-slide-toggle.mat-primary.mat-slide-toggle-focused:not(.mat-checked) .mat-ink-ripple{background-color:rgba(0,0,0,.12)}.mat-slide-toggle.mat-primary.mat-slide-toggle-focused .mat-ink-ripple{background-color:rgba(0,188,212,.26)}.mat-slide-toggle.mat-warn.mat-checked:not(.mat-disabled) .mat-slide-toggle-thumb{background-color:#f44336}.mat-slide-toggle.mat-warn.mat-checked:not(.mat-disabled) .mat-slide-toggle-bar{background-color:rgba(244,67,54,.5)}.mat-slide-toggle.mat-warn.mat-slide-toggle-focused:not(.mat-checked) .mat-ink-ripple{background-color:rgba(0,0,0,.12)}.mat-slide-toggle.mat-warn.mat-slide-toggle-focused .mat-ink-ripple{background-color:rgba(244,67,54,.26)}.mat-disabled .mat-slide-toggle-thumb{background-color:#bdbdbd}.mat-disabled .mat-slide-toggle-bar{background-color:rgba(0,0,0,.1)}.mat-slide-toggle-thumb{background-color:#fafafa}.mat-slide-toggle-bar{background-color:rgba(0,0,0,.38)}.mat-slider-track-background{background-color:rgba(0,0,0,.26)}.mat-slider-thumb,.mat-slider-thumb-label,.mat-slider-track-fill{background-color:#ffd740}.mat-slider-thumb-label-text{color:rgba(0,0,0,.87)}.mat-slider-active .mat-slider-track-background,.mat-slider:hover .mat-slider-track-background{background-color:rgba(0,0,0,.38)}.mat-slider-disabled .mat-slider-thumb,.mat-slider-disabled .mat-slider-track-background,.mat-slider-disabled .mat-slider-track-fill,.mat-slider-disabled:hover .mat-slider-track-background{background-color:rgba(0,0,0,.26)}.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label{background-color:#000}.mat-slider-min-value.mat-slider-thumb-label-showing.mat-slider-active .mat-slider-thumb,.mat-slider-min-value.mat-slider-thumb-label-showing.mat-slider-active .mat-slider-thumb-label{background-color:rgba(0,0,0,.26)}.mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb{border-color:rgba(0,0,0,.26);background-color:transparent}.mat-slider-min-value:not(.mat-slider-thumb-label-showing).mat-slider-active .mat-slider-thumb,.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb{border-color:rgba(0,0,0,.38)}.mat-slider-min-value:not(.mat-slider-thumb-label-showing).mat-slider-active.mat-slider-disabled .mat-slider-thumb,.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb{border-color:rgba(0,0,0,.26)}.mat-tab-header,.mat-tab-nav-bar{border-bottom:1px solid #e0e0e0}.mat-tab-group-inverted-header .mat-tab-header,.mat-tab-group-inverted-header .mat-tab-nav-bar{border-top:1px solid #e0e0e0;border-bottom:none}.mat-tab-label:focus{background-color:rgba(178,235,242,.3)}.mat-ink-bar{background-color:#00bcd4}.mat-toolbar{background:#f5f5f5;color:rgba(0,0,0,.87)}.mat-toolbar.mat-primary{background:#00bcd4;color:#fff}.mat-toolbar.mat-accent{background:#ffd740;color:rgba(0,0,0,.87)}.mat-toolbar.mat-warn{background:#f44336;color:#fff}.mat-tooltip{background:rgba(97,97,97,.9)}.docs-app-background{background:md-color((status-bar:#e0e0e0,app-bar:#f5f5f5,background:#fafafa,hover:rgba(0,0,0,.04),card:#fff,dialog:#fff,disabled-button:rgba(0,0,0,.12),raised-button:#fff),background)}.docs-primary-header{background:md-color((50:#e0f7fa,100:#b2ebf2,200:#80deea,300:#4dd0e1,400:#26c6da,500:#00bcd4,600:#00acc1,700:#0097a7,800:#00838f,900:#006064,A100:#84ffff,A200:#18ffff,A400:#00e5ff,A700:#00b8d4,contrast:(50:rgba(0,0,0,.87),100:rgba(0,0,0,.87),200:rgba(0,0,0,.87),300:rgba(0,0,0,.87),400:rgba(0,0,0,.87),500:#fff,600:#fff,700:#fff,800:#fff,900:hsla(0,0%,100%,.87),A100:rgba(0,0,0,.87),A200:rgba(0,0,0,.87),A400:rgba(0,0,0,.87),A700:rgba(0,0,0,.87)),default:#00bcd4,lighter:#b2ebf2,darker:#0097a7,default-contrast:#fff,lighter-contrast:rgba(0,0,0,.87),darker-contrast:#fff,\\\"50-contrast\\\":rgba(0,0,0,.87),\\\"100-contrast\\\":rgba(0,0,0,.87),\\\"200-contrast\\\":rgba(0,0,0,.87),\\\"300-contrast\\\":rgba(0,0,0,.87),\\\"400-contrast\\\":rgba(0,0,0,.87),\\\"500-contrast\\\":#fff,\\\"600-contrast\\\":#fff,\\\"700-contrast\\\":#fff,\\\"800-contrast\\\":#fff,\\\"900-contrast\\\":hsla(0,0%,100%,.87),\\\"A100-contrast\\\":rgba(0,0,0,.87),\\\"A200-contrast\\\":rgba(0,0,0,.87),\\\"A400-contrast\\\":rgba(0,0,0,.87),\\\"A700-contrast\\\":rgba(0,0,0,.87),\\\"contrast-contrast\\\":null))}.docs-footer,.docs-primary-header h1{color:md-color((50:#e0f7fa,100:#b2ebf2,200:#80deea,300:#4dd0e1,400:#26c6da,500:#00bcd4,600:#00acc1,700:#0097a7,800:#00838f,900:#006064,A100:#84ffff,A200:#18ffff,A400:#00e5ff,A700:#00b8d4,contrast:(50:rgba(0,0,0,.87),100:rgba(0,0,0,.87),200:rgba(0,0,0,.87),300:rgba(0,0,0,.87),400:rgba(0,0,0,.87),500:#fff,600:#fff,700:#fff,800:#fff,900:hsla(0,0%,100%,.87),A100:rgba(0,0,0,.87),A200:rgba(0,0,0,.87),A400:rgba(0,0,0,.87),A700:rgba(0,0,0,.87)),default:#00bcd4,lighter:#b2ebf2,darker:#0097a7,default-contrast:#fff,lighter-contrast:rgba(0,0,0,.87),darker-contrast:#fff,\\\"50-contrast\\\":rgba(0,0,0,.87),\\\"100-contrast\\\":rgba(0,0,0,.87),\\\"200-contrast\\\":rgba(0,0,0,.87),\\\"300-contrast\\\":rgba(0,0,0,.87),\\\"400-contrast\\\":rgba(0,0,0,.87),\\\"500-contrast\\\":#fff,\\\"600-contrast\\\":#fff,\\\"700-contrast\\\":#fff,\\\"800-contrast\\\":#fff,\\\"900-contrast\\\":hsla(0,0%,100%,.87),\\\"A100-contrast\\\":rgba(0,0,0,.87),\\\"A200-contrast\\\":rgba(0,0,0,.87),\\\"A400-contrast\\\":rgba(0,0,0,.87),\\\"A700-contrast\\\":rgba(0,0,0,.87),\\\"contrast-contrast\\\":null),default-contrast)}.docs-footer{background:md-color((50:#e0f7fa,100:#b2ebf2,200:#80deea,300:#4dd0e1,400:#26c6da,500:#00bcd4,600:#00acc1,700:#0097a7,800:#00838f,900:#006064,A100:#84ffff,A200:#18ffff,A400:#00e5ff,A700:#00b8d4,contrast:(50:rgba(0,0,0,.87),100:rgba(0,0,0,.87),200:rgba(0,0,0,.87),300:rgba(0,0,0,.87),400:rgba(0,0,0,.87),500:#fff,600:#fff,700:#fff,800:#fff,900:hsla(0,0%,100%,.87),A100:rgba(0,0,0,.87),A200:rgba(0,0,0,.87),A400:rgba(0,0,0,.87),A700:rgba(0,0,0,.87)),default:#00bcd4,lighter:#b2ebf2,darker:#0097a7,default-contrast:#fff,lighter-contrast:rgba(0,0,0,.87),darker-contrast:#fff,\\\"50-contrast\\\":rgba(0,0,0,.87),\\\"100-contrast\\\":rgba(0,0,0,.87),\\\"200-contrast\\\":rgba(0,0,0,.87),\\\"300-contrast\\\":rgba(0,0,0,.87),\\\"400-contrast\\\":rgba(0,0,0,.87),\\\"500-contrast\\\":#fff,\\\"600-contrast\\\":#fff,\\\"700-contrast\\\":#fff,\\\"800-contrast\\\":#fff,\\\"900-contrast\\\":hsla(0,0%,100%,.87),\\\"A100-contrast\\\":rgba(0,0,0,.87),\\\"A200-contrast\\\":rgba(0,0,0,.87),\\\"A400-contrast\\\":rgba(0,0,0,.87),\\\"A700-contrast\\\":rgba(0,0,0,.87),\\\"contrast-contrast\\\":null))}.docs-component-viewer-tabbed-content h1,.docs-guide-content h1{color:#00838f;background:rgba(0,0,0,.03)}.docs-component-viewer-tabbed-content h2,.docs-component-viewer-tabbed-content h3,.docs-component-viewer-tabbed-content h4,.docs-component-viewer-tabbed-content h5,.docs-component-viewer-tabbed-content li,.docs-component-viewer-tabbed-content ol,.docs-component-viewer-tabbed-content p,.docs-guide-content h2,.docs-guide-content h3,.docs-guide-content h4,.docs-guide-content h5,.docs-guide-content li,.docs-guide-content ol,.docs-guide-content p{color:rgba(0,0,0,.54)}.docs-component-viewer-tabbed-content a,.docs-guide-content a{color:#00bcd4}.docs-component-viewer-tabbed-content table,.docs-guide-content table{box-shadow:0 2px 2px rgba(0,0,0,.24),0 0 2px rgba(0,0,0,.12)}.docs-component-viewer-tabbed-content table tbody th,.docs-guide-content table tbody th{border:1px solid rgba(0,0,0,.03)}.docs-component-viewer-tabbed-content td,.docs-guide-content td{color:rgba(0,0,0,.54);border:1px solid rgba(0,0,0,.03)}.docs-component-viewer-tabbed-content th,.docs-guide-content th{color:rgba(0,0,0,.54);background:rgba(0,0,0,.03)}.docs-component-viewer-sidenav h3{background:rgba(0,0,0,.32);color:#fff}.docs-component-viewer-sidenav li{border-color:rgba(0,0,0,.06);color:rgba(0,0,0,.54)}.docs-component-viewer-sidenav li>a{color:rgba(0,0,0,.54)}.docs-component-viewer-sidenav li>a.is-selected,.docs-component-viewer-sidenav li>a:focus,.docs-component-viewer-sidenav li>a:hover{background:#fafafa;color:#00bcd4}app-homepage app-homepage .docs-header-headline{color:#fff}app-homepage .docs-header-start{color:#00bcd4}app-component-viewer,app-component-viewer .mat-tab-label:focus,app-homepage .docs-homepage-row{color:rgba(0,0,0,.54)}.docs-example-source{border-bottom:1px solid rgba(0,0,0,.12)}.docs-component-category-list-card-summary,.docs-component-list-item{color:rgba(0,0,0,.54)}app-navbar{color:#fff}app-navbar .docs-navbar{background:#00bcd4}example-viewer .docs-example-viewer-wrapper{border:1px solid rgba(0,0,0,.03);box-shadow:0 2px 2px rgba(0,0,0,.24),0 0 2px rgba(0,0,0,.12);margin:4px}example-viewer .docs-example-viewer-title{color:rgba(0,0,0,.54);background:rgba(0,0,0,.03)}app-footer .docs-footer-links a{color:#fff}body{font-family:Roboto,Helvetica Neue Light,Helvetica Neue,Helvetica,Arial,Lucida Grande,sans-serif;margin:0}[md-button],[md-raised-button]{text-transform:uppercase}h1,h2{weight:400}pre{white-space:pre-wrap}.docs-primary-header{padding-left:20px}.docs-primary-header h1{font-size:30px;font-weight:300;margin:0;padding:50px}.hljs{display:block;overflow-x:auto;padding:.5em;background:#fdf6e3;color:#657b83}.hljs-comment,.hljs-quote{color:#93a1a1}.hljs-addition,.hljs-keyword,.hljs-selector-tag{color:#859900}.hljs-doctag,.hljs-literal,.hljs-meta .hljs-meta-string,.hljs-number,.hljs-regexp,.hljs-string{color:#2aa198}.hljs-name,.hljs-section,.hljs-selector-class,.hljs-selector-id,.hljs-title{color:#268bd2}.hljs-attr,.hljs-attribute,.hljs-class .hljs-title,.hljs-template-variable,.hljs-type,.hljs-variable{color:#b58900}.hljs-bullet,.hljs-link,.hljs-meta,.hljs-meta .hljs-keyword,.hljs-selector-attr,.hljs-selector-pseudo,.hljs-subst,.hljs-symbol{color:#cb4b16}.hljs-built_in,.hljs-deletion{color:#dc322f}.hljs-formula{background:#eee8d5}.hljs-emphasis{font-style:italic}.hljs-strong{font-weight:700}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?url=false!./src/app/theme.css\n// module id = 399\n// module chunks = 0","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hammerjs/hammer.js\n// module id = 400\n// module chunks = 0","import { NgModule, NgZone, OpaqueToken, Inject, Optional } from '@angular/core';\r\nimport { LIB_KEY, LIB_KEY_SEPARATOR } from './constants/lib';\r\nimport { STORAGE } from './enums/storage';\r\nimport { LocalStorageService, SessionStorageService } from './services/index';\r\nimport { WebStorageHelper } from './helpers/webStorage';\r\nimport { WebstorageConfig } from './interfaces/config';\r\nimport { KeyStorageHelper } from './helpers/keyStorage';\r\nexport * from './interfaces/index';\r\nexport * from './decorators/index';\r\nexport * from './services/index';\r\nexport var WEBSTORAGE_CONFIG = new OpaqueToken('WEBSTORAGE_CONFIG');\r\nvar Ng2Webstorage = (function () {\r\n    function Ng2Webstorage(ngZone, config) {\r\n        this.ngZone = ngZone;\r\n        if (config) {\r\n            KeyStorageHelper.setStorageKeyPrefix(config.prefix);\r\n            KeyStorageHelper.setStorageKeySeparator(config.separator);\r\n        }\r\n        this.initStorageListener();\r\n    }\r\n    Ng2Webstorage.forRoot = function (config) {\r\n        return {\r\n            ngModule: Ng2Webstorage,\r\n            providers: [\r\n                {\r\n                    provide: WEBSTORAGE_CONFIG,\r\n                    useValue: config\r\n                },\r\n                {\r\n                    provide: WebstorageConfig,\r\n                    useFactory: provideConfig,\r\n                    deps: [\r\n                        WEBSTORAGE_CONFIG\r\n                    ]\r\n                }\r\n            ]\r\n        };\r\n    };\r\n    Ng2Webstorage.prototype.initStorageListener = function () {\r\n        var _this = this;\r\n        if (window) {\r\n            window.addEventListener('storage', function (event) { return _this.ngZone.run(function () {\r\n                var storage = window.sessionStorage === event.storageArea ? STORAGE.session : STORAGE.local;\r\n                WebStorageHelper.refresh(storage, event.key);\r\n            }); });\r\n        }\r\n    };\r\n    return Ng2Webstorage;\r\n}());\r\nexport { Ng2Webstorage };\r\nNg2Webstorage.decorators = [\r\n    { type: NgModule, args: [{\r\n                declarations: [],\r\n                providers: [SessionStorageService, LocalStorageService],\r\n                imports: []\r\n            },] },\r\n];\r\n/** @nocollapse */\r\nNg2Webstorage.ctorParameters = function () { return [\r\n    { type: NgZone, },\r\n    { type: WebstorageConfig, decorators: [{ type: Optional }, { type: Inject, args: [WebstorageConfig,] },] },\r\n]; };\r\nexport function provideConfig(config) {\r\n    return new WebstorageConfig(config);\r\n}\r\nexport function configure(_a) {\r\n    var _b = _a === void 0 ? { prefix: LIB_KEY, separator: LIB_KEY_SEPARATOR } : _a, prefix = _b.prefix, separator = _b.separator;\r\n    /*@Deprecation*/\r\n    console.warn('[ng2-webstorage:deprecation] The configure method is deprecated since the v1.5.0, consider to use forRoot instead');\r\n    KeyStorageHelper.setStorageKeyPrefix(prefix);\r\n    KeyStorageHelper.setStorageKeySeparator(separator);\r\n}\r\n//# sourceMappingURL=app.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-webstorage/dist/app.js\n// module id = 401\n// module chunks = 0","import { WebStorageDecorator } from './webStorage';\r\nimport { STORAGE } from '../enums/storage';\r\nexport function LocalStorage(webSKey) {\r\n    return function (targetedClass, raw) {\r\n        WebStorageDecorator(webSKey, STORAGE.local, targetedClass, raw);\r\n    };\r\n}\r\n;\r\n//# sourceMappingURL=localStorage.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-webstorage/dist/decorators/localStorage.js\n// module id = 403\n// module chunks = 0","import { WebStorageDecorator } from './webStorage';\r\nimport { STORAGE } from '../enums/storage';\r\nexport function SessionStorage(webSKey) {\r\n    return function (targetedClass, raw) {\r\n        WebStorageDecorator(webSKey, STORAGE.session, targetedClass, raw);\r\n    };\r\n}\r\n;\r\n//# sourceMappingURL=sessionStorage.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-webstorage/dist/decorators/sessionStorage.js\n// module id = 404\n// module chunks = 0","var MockStorageHelper = (function () {\r\n    function MockStorageHelper() {\r\n    }\r\n    MockStorageHelper.isSecuredField = function (field) {\r\n        return !!~MockStorageHelper.securedFields.indexOf(field);\r\n    };\r\n    MockStorageHelper.getStorage = function (sType) {\r\n        if (!this.mockStorages[sType])\r\n            this.mockStorages[sType] = MockStorageHelper.generateStorage();\r\n        return this.mockStorages[sType];\r\n    };\r\n    MockStorageHelper.generateStorage = function () {\r\n        var storage = {};\r\n        Object.defineProperties(storage, {\r\n            setItem: {\r\n                writable: false,\r\n                enumerable: false,\r\n                configurable: false,\r\n                value: function (key, value) {\r\n                    if (!MockStorageHelper.isSecuredField(key))\r\n                        this[key] = value;\r\n                },\r\n            },\r\n            getItem: {\r\n                writable: false,\r\n                enumerable: false,\r\n                configurable: false,\r\n                value: function (key) {\r\n                    return !MockStorageHelper.isSecuredField(key) ? this[key] || null : null;\r\n                },\r\n            },\r\n            removeItem: {\r\n                writable: false,\r\n                enumerable: false,\r\n                configurable: false,\r\n                value: function (key) {\r\n                    if (!MockStorageHelper.isSecuredField(key))\r\n                        delete this[key];\r\n                },\r\n            },\r\n            length: {\r\n                enumerable: false,\r\n                configurable: false,\r\n                get: function () {\r\n                    return Object.keys(this).length;\r\n                }\r\n            }\r\n        });\r\n        return storage;\r\n    };\r\n    return MockStorageHelper;\r\n}());\r\nexport { MockStorageHelper };\r\nMockStorageHelper.securedFields = ['setItem', 'getItem', 'removeItem', 'length'];\r\nMockStorageHelper.mockStorages = {};\r\n//# sourceMappingURL=mockStorage.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-webstorage/dist/helpers/mockStorage.js\n// module id = 405\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { Injectable } from '@angular/core';\r\nimport { STORAGE } from '../enums/storage';\r\nimport { WebStorageService } from './webStorage';\r\nvar LocalStorageService = (function (_super) {\r\n    __extends(LocalStorageService, _super);\r\n    function LocalStorageService() {\r\n        return _super.call(this, STORAGE.local) || this;\r\n    }\r\n    return LocalStorageService;\r\n}(WebStorageService));\r\nexport { LocalStorageService };\r\nLocalStorageService.decorators = [\r\n    { type: Injectable },\r\n];\r\n/** @nocollapse */\r\nLocalStorageService.ctorParameters = function () { return []; };\r\n//# sourceMappingURL=localStorage.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-webstorage/dist/services/localStorage.js\n// module id = 407\n// module chunks = 0","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { Injectable } from '@angular/core';\r\nimport { STORAGE } from '../enums/storage';\r\nimport { WebStorageService } from './webStorage';\r\nvar SessionStorageService = (function (_super) {\r\n    __extends(SessionStorageService, _super);\r\n    function SessionStorageService() {\r\n        return _super.call(this, STORAGE.session) || this;\r\n    }\r\n    return SessionStorageService;\r\n}(WebStorageService));\r\nexport { SessionStorageService };\r\nSessionStorageService.decorators = [\r\n    { type: Injectable },\r\n];\r\n/** @nocollapse */\r\nSessionStorageService.ctorParameters = function () { return []; };\r\n//# sourceMappingURL=sessionStorage.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-webstorage/dist/services/sessionStorage.js\n// module id = 408\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require(\"@angular/core\");\nvar forms_1 = require(\"@angular/forms\");\nvar common_1 = require(\"@angular/common\");\nvar Rating = Rating_1 = (function () {\n    function Rating() {\n        // -------------------------------------------------------------------------\n        // Inputs\n        // -------------------------------------------------------------------------\n        this.iconClass = \"star-icon\";\n        this.fullIcon = \"★\";\n        this.emptyIcon = \"☆\";\n        this.titles = [];\n        // -------------------------------------------------------------------------\n        // Outputs\n        // -------------------------------------------------------------------------\n        this.onHover = new core_1.EventEmitter();\n        this.onLeave = new core_1.EventEmitter();\n        this.hovered = 0;\n        this.hoveredPercent = undefined;\n        // -------------------------------------------------------------------------\n        // Private Properties\n        // -------------------------------------------------------------------------\n        this._max = 5;\n    }\n    Object.defineProperty(Rating.prototype, \"max\", {\n        get: function () {\n            return this._max;\n        },\n        // -------------------------------------------------------------------------\n        // Input Accessors\n        // -------------------------------------------------------------------------\n        set: function (max) {\n            this._max = max;\n            this.buildRanges();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // -------------------------------------------------------------------------\n    // Implemented from ControlValueAccessor\n    // -------------------------------------------------------------------------\n    Rating.prototype.writeValue = function (value) {\n        /*if (value % 1 !== value) {\n         this.model = Math.round(value);\n         return;\n         }*/\n        this.model = value;\n    };\n    Rating.prototype.registerOnChange = function (fn) {\n        this.onChange = fn;\n    };\n    Rating.prototype.registerOnTouched = function (fn) {\n        this.onTouched = fn;\n    };\n    // -------------------------------------------------------------------------\n    // Implemented from Va..\n    // -------------------------------------------------------------------------\n    Rating.prototype.validate = function (c) {\n        if (this.required && !c.value) {\n            return {\n                required: true\n            };\n        }\n        return null;\n    };\n    // -------------------------------------------------------------------------\n    // Lifecycle callbacks\n    // -------------------------------------------------------------------------\n    Rating.prototype.ngOnInit = function () {\n        this.buildRanges();\n    };\n    // -------------------------------------------------------------------------\n    // Host Bindings\n    // -------------------------------------------------------------------------\n    Rating.prototype.onKeydown = function (event) {\n        if ([37, 38, 39, 40].indexOf(event.which) === -1 || this.hovered)\n            return;\n        event.preventDefault();\n        event.stopPropagation();\n        var increment = this.float ? 0.5 : 1;\n        this.rate(this.model + (event.which === 38 || event.which === 39 ? increment : increment * -1));\n    };\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    Rating.prototype.calculateWidth = function (item) {\n        if (this.hovered > 0) {\n            if (this.hoveredPercent !== undefined && this.hovered === item)\n                return this.hoveredPercent;\n            return this.hovered >= item ? 100 : 0;\n        }\n        return this.model >= item ? 100 : 100 - Math.round((item - this.model) * 10) * 10;\n    };\n    Rating.prototype.setHovered = function (hovered) {\n        if (!this.readonly && !this.disabled) {\n            this.hovered = hovered;\n            this.onHover.emit(hovered);\n        }\n    };\n    Rating.prototype.changeHovered = function (event) {\n        if (!this.float)\n            return;\n        var target = event.target;\n        var relativeX = event.pageX - target.offsetLeft;\n        var percent = Math.round((relativeX * 100 / target.offsetWidth) / 10) * 10;\n        this.hoveredPercent = percent > 50 ? 100 : 50;\n    };\n    Rating.prototype.resetHovered = function () {\n        this.hovered = 0;\n        this.hoveredPercent = undefined;\n        this.onLeave.emit(this.hovered);\n    };\n    Rating.prototype.rate = function (value) {\n        if (!this.readonly && !this.disabled && value >= 0 && value <= this.ratingRange.length) {\n            var newValue = this.hoveredPercent ? (value - 1) + this.hoveredPercent / 100 : value;\n            this.onChange(newValue);\n            this.model = newValue;\n        }\n    };\n    // -------------------------------------------------------------------------\n    // Private Methods\n    // -------------------------------------------------------------------------\n    Rating.prototype.buildRanges = function () {\n        this.ratingRange = this.range(1, this.max);\n    };\n    Rating.prototype.range = function (start, end) {\n        var foo = [];\n        for (var i = start; i <= end; i++) {\n            foo.push(i);\n        }\n        return foo;\n    };\n    return Rating;\n}());\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Object)\n], Rating.prototype, \"iconClass\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Object)\n], Rating.prototype, \"fullIcon\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Object)\n], Rating.prototype, \"emptyIcon\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Boolean)\n], Rating.prototype, \"readonly\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Boolean)\n], Rating.prototype, \"disabled\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Boolean)\n], Rating.prototype, \"required\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Boolean)\n], Rating.prototype, \"float\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Array)\n], Rating.prototype, \"titles\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Number),\n    __metadata(\"design:paramtypes\", [Number])\n], Rating.prototype, \"max\", null);\n__decorate([\n    core_1.Output(),\n    __metadata(\"design:type\", Object)\n], Rating.prototype, \"onHover\", void 0);\n__decorate([\n    core_1.Output(),\n    __metadata(\"design:type\", Object)\n], Rating.prototype, \"onLeave\", void 0);\n__decorate([\n    core_1.HostListener(\"keydown\", [\"$event\"]),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [KeyboardEvent]),\n    __metadata(\"design:returntype\", void 0)\n], Rating.prototype, \"onKeydown\", null);\nRating = Rating_1 = __decorate([\n    core_1.Component({\n        selector: \"rating\",\n        template: \"\\n<span (mouseleave)=\\\"resetHovered()\\\"\\n      class=\\\"rating\\\"\\n      [class.disabled]=\\\"disabled\\\"\\n      [class.readonly]=\\\"readonly\\\"\\n      tabindex=\\\"0\\\"\\n      role=\\\"slider\\\" \\n      aria-valuemin=\\\"0\\\"\\n      [attr.aria-valuemax]=\\\"ratingRange.length\\\" \\n      [attr.aria-valuenow]=\\\"model\\\">\\n    <span *ngFor=\\\"let item of ratingRange; let index = index\\\">\\n        <i (mouseenter)=\\\"setHovered(item)\\\" \\n           (mousemove)=\\\"changeHovered($event)\\\"\\n           (click)=\\\"rate(item)\\\" \\n           [attr.data-icon]=\\\"fullIcon\\\"\\n           class=\\\"{{ iconClass }} half{{ calculateWidth(item) }}\\\"\\n           [title]=\\\"titles[index] || item\\\">{{ emptyIcon }}</i>\\n    </span>\\n</span>\\n\",\n        providers: [\n            { provide: forms_1.NG_VALUE_ACCESSOR, useExisting: core_1.forwardRef(function () { return Rating_1; }), multi: true },\n            { provide: forms_1.NG_VALIDATORS, useExisting: core_1.forwardRef(function () { return Rating_1; }), multi: true },\n        ],\n        styles: [\"\\nspan.rating {\\n    cursor: pointer;\\n    outline: none;\\n}\\nspan.rating.readonly {\\n    cursor: default;\\n}\\nspan.rating.disabled {\\n    cursor: not-allowed;\\n}\\nspan.rating i{\\n    font-style: normal; \\n}\\n.star-icon {\\n    color: #ddd;\\n    font-size: 2em;\\n    position: relative;\\n}\\n.star-icon:before {\\n    color: #FDE16D;\\n    content: attr(data-icon) \\\" \\\";\\n    position: absolute;\\n    left: 0;\\n    overflow: hidden;\\n    width: 0;\\n} \\nspan.rating.disabled .star-icon:before {\\n    color: #ECECEC;\\n    text-shadow: none;\\n}\\n.star-icon.half10:before {\\n    width: 10%;\\n}\\n.star-icon.half20:before {\\n    width: 20%;\\n}\\n.star-icon.half30:before {\\n    width: 30%;\\n}\\n.star-icon.half40:before {\\n    width: 40%;\\n}\\n.star-icon.half50:before {\\n    width: 50%;\\n}\\n.star-icon.half60:before {\\n    width: 60%;\\n}\\n.star-icon.half70:before {\\n    width: 70%;\\n}\\n.star-icon.half80:before {\\n    width: 80%;\\n}\\n.star-icon.half90:before {\\n    width: 90%;\\n}\\n.star-icon.half100:before {\\n    width: 100%;\\n}\\n@-moz-document url-prefix() { /* Firefox Hack */\\n  .star-icon {\\n    font-size: 50px;\\n    line-height: 34px;\\n  }\\n}\\n\"]\n    })\n], Rating);\nexports.Rating = Rating;\nvar RatingModule = (function () {\n    function RatingModule() {\n    }\n    return RatingModule;\n}());\nRatingModule = __decorate([\n    core_1.NgModule({\n        imports: [\n            common_1.CommonModule\n        ],\n        declarations: [\n            Rating,\n        ],\n        exports: [\n            Rating,\n        ],\n    })\n], RatingModule);\nexports.RatingModule = RatingModule;\nvar Rating_1;\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ngx-rating/index.js\n// module id = 409\n// module chunks = 0","module.exports = \"<div \\n  [hidden]=\\\"this.pages.length == 0\\\"\\n  class=\\\"col-md-12 no-paddings home\\\">\\n  <custom-header class=\\\"col-md-12\\\"></custom-header>\\n  <div class=\\\"col-md-12 no-paddings\\\">\\n      <router-outlet></router-outlet>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 410\n// module chunks = 0","module.exports = \"<!-- big-->\\n<md-toolbar *ngIf=\\\"pages.length > 0\\\"  color=\\\"primary\\\" class=\\\"hidden-sm hidden-xs\\\">\\n  <a [routerLink]=\\\"['/']\\\" class=\\\"logo pull-left\\\">\\n    <img \\n      src=\\\"./src/img/logo.png\\\"\\n      alt=\\\"logo\\\"/>\\n  </a>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button md-button [routerLink]=\\\"['']\\\">\\n    {{dictionary.getTexts('homePage')}}\\n  </button>\\n  <ng-template ngFor #categoryObject [ngForOf]=\\\"pages\\\" let-index=\\\"index\\\">\\n    <button \\n      *ngIf=\\\"pages[index].type == 'single' || pages[index].type == 'blog'\\\"\\n      md-button \\n      [routerLink]=\\\"['insurance', pages[index].link]\\\" >\\n      {{pages[index].title[dictionary.language]}}\\n    </button>\\n    <md-select \\n      *ngIf=\\\"pages[index].type == 'multiple'\\\"\\n      [placeholder]=\\\"pages[index].title[dictionary.language]\\\" \\n      [(ngModel)]=\\\"valueCtrl\\\"\\n      (change)=\\\"onLinkSelect($event)\\\"\\n      name=\\\"multiple\\\">\\n      <md-option \\n        *ngFor=\\\"let page of pages[index].sub; let i = index\\\" \\n        [value]=\\\"page.link\\\">\\n        {{getPageByLink(page.link).title[dictionary.language]}}\\n      </md-option>\\n    </md-select>\\n  </ng-template>\\n  <button md-button [routerLink]=\\\"['contacts']\\\">\\n    {{dictionary.getTexts('contactPage')}}\\n  </button>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button md-icon-button (click)=\\\"changeLanguage()\\\">\\n    <image \\n      [src]=\\\"'./src/img/' + dictionary.nextLanguage() + '.png'\\\"\\n      [alt]=\\\"dictionary.language\\\"></image>\\n  </button>\\n</md-toolbar>\\n<!-- supеr small -->\\n<md-toolbar *ngIf=\\\"pages.length > 0\\\"  color=\\\"primary\\\" class=\\\"hidden-lg hidden-md\\\">\\n  <a [routerLink]=\\\"['/']\\\" class=\\\"logo pull-left\\\">\\n    <img \\n      src=\\\"./src/img/logo.png\\\"\\n      alt=\\\"logo\\\"/>\\n  </a>\\n  <button class=\\\"categories-button\\\" md-icon-button [mdMenuTriggerFor]=\\\"menu\\\">\\n    {{dictionary.getTexts('services') | uppercase}}\\n    <md-icon>more_vert</md-icon>\\n  </button>\\n  <md-menu #menu=\\\"mdMenu\\\">\\n    <ng-template ngFor #categoryObject [ngForOf]=\\\"pages\\\" let-index=\\\"index\\\">\\n      <button \\n        *ngIf=\\\"(pages[index].type != 'multiple') && (pages[index].link !== undefined )\\\"\\n        md-menu-item \\n        [routerLink]=\\\"['insurance', pages[index].link]\\\" >\\n        {{pages[index].title[dictionary.language]}}\\n      </button>\\n    </ng-template>\\n  </md-menu>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button  class=\\\"categories-button\\\" md-button [routerLink]=\\\"['contacts']\\\">\\n    {{dictionary.getTexts('contactPage')}}\\n  </button>\\n  <button md-icon-button (click)=\\\"changeLanguage()\\\">\\n    <image \\n      [src]=\\\"'./src/img/' + dictionary.nextLanguage() + '.png'\\\"\\n      [alt]=\\\"dictionary.language\\\"></image>\\n  </button>\\n</md-toolbar>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/basic_components/header/header.component.html\n// module id = 411\n// module chunks = 0","module.exports = \"<img \\n  [src]=\\\"src || blankImage\\\"\\n  [alt]=\\\"alt\\\"/>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/basic_components/image/image.component.html\n// module id = 412\n// module chunks = 0","module.exports = \"<div>\\n  <!-- Needs design for skeleton. Expected div with name and info link view -->\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/basic_components/notification/notification.component.html\n// module id = 413\n// module chunks = 0","module.exports = \"<span class=\\\"{{ priceOptions.class }}\\\">{{ priceOptions.price }} {{ priceOptions.currency }}</span>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/basic_components/price/price.component.html\n// module id = 414\n// module chunks = 0","module.exports = \"<div class=\\\"contacts no-paddings\\\">\\n  <div class=\\\"form-section col-xs-12\\\">\\n    <div class=\\\"alert alert-success\\\" *ngIf=\\\"messageSuccess\\\">\\n      <strong>{{dictionary.getTexts('contactMessageSuccess')}}</strong> {{dictionary.getTexts('contactMessageRecieved')}}\\n    </div>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"messageFail\\\">\\n      <strong>{{dictionary.getTexts('contactMessageFail')}}</strong> {{dictionary.getTexts('contactMessageNotRecieved')}} {{dictionary.getTexts('contactPhone')}}\\n    </div>\\n  </div>\\n  <div class=\\\"phone-section col-xs-12 container\\\">\\n    <div>\\n      <h2>{{dictionary.getTexts('contactPhoneTitle')}}</h2>\\n      <div class=\\\"col-xs-12 col-md-3\\\">\\n        <div class=\\\"col-xs-3\\\">\\n          <img \\n            src=\\\"./src/img/phone-icon.png\\\"\\n            alt=\\\"phone-icon\\\"/>\\n        </div>\\n        <div class=\\\"col-xs-9 contact duo\\\">\\n          <a href=\\\"tel:{{dictionary.getTexts('contactPhone1')}}\\\">{{dictionary.getTexts('contactPhone1')}}</a>\\n          <a href=\\\"tel:{{dictionary.getTexts('contactPhone2')}}\\\">{{dictionary.getTexts('contactPhone2')}}</a>\\n          <a href=\\\"tel:{{dictionary.getTexts('contactPhone3')}}\\\">{{dictionary.getTexts('contactPhone3')}}</a>\\n          <a href=\\\"tel:{{dictionary.getTexts('contactPhone4')}}\\\">{{dictionary.getTexts('contactPhone4')}}</a>\\n          <a href=\\\"tel:{{dictionary.getTexts('contactPhone5')}}\\\">{{dictionary.getTexts('contactPhone5')}}</a>\\n        </div>\\n      </div>\\n      <div class=\\\"col-xs-12 col-md-3\\\">\\n        <div class=\\\"col-xs-3\\\">\\n          <img \\n            src=\\\"./src/img/viber-icon.png\\\"\\n            alt=\\\"viber-icon\\\"/>\\n        </div>\\n        <div class=\\\"col-xs-9 contact\\\">\\n          <div class=\\\"bold\\\">\\n            <a href=\\\"viber://add?number=%{{dictionary.getTexts('contactPhone3')}}&text=hey\\\">{{dictionary.getTexts('contactPhone3')}}</a>\\n            <a href=\\\"viber://add?number=%{{dictionary.getTexts('contactPhone4')}}&text=hey\\\">{{dictionary.getTexts('contactPhone4')}}</a>\\n            <a href=\\\"viber://add?number=%{{dictionary.getTexts('contactPhone5')}}&text=hey\\\">{{dictionary.getTexts('contactPhone5')}}</a>\\n            </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-xs-12 col-md-3\\\">\\n        <div class=\\\"col-xs-3\\\">\\n          <img \\n            src=\\\"./src/img/facebook-icon.png\\\"\\n            alt=\\\"facebook-icon\\\"/>\\n        </div>\\n        <div class=\\\"col-xs-9 contact\\\">\\n          <div class=\\\"bold\\\">\\n            <a target=\\\"_blank\\\" href=\\\"https://www.facebook.com/Ikar-Ins-158552657688661/?fref=ts\\\">Ikar Ins</a>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-xs-12 col-md-3\\\">\\n        <div class=\\\"col-xs-3\\\">\\n          <img \\n            src=\\\"./src/img/skype-icon.png\\\"\\n            alt=\\\"skype-icon\\\"/>\\n        </div>\\n        <div class=\\\"col-xs-9 contact\\\">\\n          <div class=\\\"bold\\\">\\n            <a href=\\\"skype:ikarins?chat\\\">ikarins</a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"map-section col-xs-12 container\\\">\\n      <h2>{{dictionary.getTexts('contactOurAddress')}}</h2>\\n      <h4>{{dictionary.getTexts('contactCoordinateAdress')}}</h4>\\n      <h4 class=\\\"red\\\">{{dictionary.getTexts('contactRules')}}</h4>\\n  </div>\\n  <div class=\\\"map-container col-xs-12 no-paddings\\\">\\n    <agm-map \\n      [zoom]=\\\"mapCoordinates.zoom\\\"\\n      [latitude]=\\\"mapCoordinates.lat\\\" \\n      [longitude]=\\\"mapCoordinates.lng\\\">\\n      <agm-marker \\n        [latitude]=\\\"mapCoordinates.lat\\\" \\n        [longitude]=\\\"mapCoordinates.lng\\\">\\n        <agm-info-window [isOpen]=\\\"true\\\">\\n          <div class=\\\"info-window-container\\\">\\n            <div class=\\\"col-xs-2\\\">\\n              <img \\n                src=\\\"./src/img/logo.png\\\"\\n                alt=\\\"logo\\\"/>\\n            </div>\\n            <div class=\\\"col-xs-10 company\\\">\\n              <div>{{dictionary.getTexts('headerCompany')}}</div>\\n              <div>\\n                <span class=\\\"rating\\\"> \\n                  <span>{{starsCount}} </span>\\n                  <rating [(ngModel)]=\\\"starsCount\\\"\\n                    [readonly]=\\\"true\\\"> \\n                  </rating>\\n                  <span>(493)</span>\\n                </span>\\n              </div>\\n              <div>{{dictionary.getTexts('companyAddress')}}</div>\\n            </div>\\n          </div>\\n        </agm-info-window>\\n      </agm-marker>\\n    </agm-map>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/contacts/contacts.component.html\n// module id = 415\n// module chunks = 0","module.exports = \"<span>a</span>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/details/details.component.html\n// module id = 416\n// module chunks = 0","module.exports = \"<div class=\\\"carousel\\\"></div>\\n<div class=\\\"icons center hidden-sm hidden-xs\\\">\\n  <img \\n    *ngFor=\\\"let icon of icons\\\"\\n    [routerLink]=\\\"['insurance', icon.link]\\\"\\n    [src]=\\\"buildSrc(icon)\\\" \\n    [alt]=\\\"icon.src\\\"\\n    class=\\\"col-sm-12 col-lg-2\\\" />\\n</div>\\n<div class=\\\"icons center hidden-lg hidden-md\\\">\\n  <div>\\n    <img \\n      *ngFor=\\\"let icon of icons\\\"\\n      [routerLink]=\\\"['insurance', icon.link]\\\"\\n      [src]=\\\"buildSrc(icon)\\\" \\n      [alt]=\\\"icon.src\\\"\\n      class=\\\"col-sm-12 col-lg-2\\\" />\\n  </div>\\n</div>\\n<section class=\\\"info\\\">\\n  {{pageInfo}}\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/home/home.component.html\n// module id = 417\n// module chunks = 0","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"pageData.page.title\\\">\\n    <h1 class=\\\"page-title\\\" [innerHTML]=\\\"pageData.page.title[dictionary.language]\\\"></h1>\\n    <div class=\\\"page-content\\\" [innerHTML]=\\\"pageData.page.html[dictionary.language]\\\"></div>\\n    <div class=\\\"sub-pages\\\">\\n        <div class=\\\"sub-page\\\" *ngFor=\\\"let page of pageData.subPages\\\">\\n            <div class=\\\"image-container col-xs-12 col-md-5\\\">\\n                <img [src]=\\\"'./src/img/' + page.image\\\" />\\n            </div>\\n            <h2 [innerHTML]=\\\"page.title[dictionary.language]\\\"></h2>\\n            <p [innerHTML]=\\\"page.html[dictionary.language]\\\"></p>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/page/page.component.html\n// module id = 418\n// module chunks = 0","module.exports = \"page not found\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/page_not_found/page_not_found.component.html\n// module id = 419\n// module chunks = 0","module.exports = \"<md-input-container>\\n  <input type=\\\"text\\\" mdInput [formControl]=\\\"valueCtrl\\\" [mdAutocomplete]=\\\"auto\\\" placeholder=\\\"{{dictionary.getTexts('headerSearchFor')}}\\\">\\n</md-input-container>\\n\\n<md-autocomplete #auto=\\\"mdAutocomplete\\\">\\n  <md-option (onSelect)=\\\"onProductSelect(i)\\\" *ngFor=\\\"let value of filteredValues | async; let i = index\\\" [value]=\\\"value\\\">\\n    <md-grid-list cols=\\\"4\\\" rowHeight=\\\"100px\\\">\\n      <md-grid-tile\\n        [colspan]=\\\"1\\\"\\n        [rowspan]=\\\"1\\\">\\n        <div class=\\\"image-holder\\\">\\n          <image \\n              [src]=\\\"'img/' + filteredImages[i]\\\"\\n              [alt]=\\\"option\\\">\\n          </image>\\n        </div>  \\n      </md-grid-tile>\\n      <md-grid-tile\\n        [colspan]=\\\"3\\\"\\n        [rowspan]=\\\"1\\\">\\n        <div>{{ value }}</div>\\n      </md-grid-tile>\\n    </md-grid-list>\\n  </md-option>\\n</md-autocomplete>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/search/search.component.html\n// module id = 420\n// module chunks = 0","\"use strict\";\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nvar Scheduler = (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\nexports.Scheduler = Scheduler;\n//# sourceMappingURL=Scheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Scheduler.js\n// module id = 424\n// module chunks = 0","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar forkJoin_1 = require('../../observable/forkJoin');\nObservable_1.Observable.forkJoin = forkJoin_1.forkJoin;\n//# sourceMappingURL=forkJoin.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/forkJoin.js\n// module id = 426\n// module chunks = 0","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar fromEvent_1 = require('../../observable/fromEvent');\nObservable_1.Observable.fromEvent = fromEvent_1.fromEvent;\n//# sourceMappingURL=fromEvent.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/fromEvent.js\n// module id = 427\n// module chunks = 0","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar merge_1 = require('../../observable/merge');\nObservable_1.Observable.merge = merge_1.merge;\n//# sourceMappingURL=merge.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/merge.js\n// module id = 428\n// module chunks = 0","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar of_1 = require('../../observable/of');\nObservable_1.Observable.of = of_1.of;\n//# sourceMappingURL=of.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/of.js\n// module id = 429\n// module chunks = 0","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar throw_1 = require('../../observable/throw');\nObservable_1.Observable.throw = throw_1._throw;\n//# sourceMappingURL=throw.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/throw.js\n// module id = 430\n// module chunks = 0","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar auditTime_1 = require('../../operator/auditTime');\nObservable_1.Observable.prototype.auditTime = auditTime_1.auditTime;\n//# sourceMappingURL=auditTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/auditTime.js\n// module id = 431\n// module chunks = 0","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar catch_1 = require('../../operator/catch');\nObservable_1.Observable.prototype.catch = catch_1._catch;\nObservable_1.Observable.prototype._catch = catch_1._catch;\n//# sourceMappingURL=catch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/catch.js\n// module id = 432\n// module chunks = 0","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar do_1 = require('../../operator/do');\nObservable_1.Observable.prototype.do = do_1._do;\nObservable_1.Observable.prototype._do = do_1._do;\n//# sourceMappingURL=do.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/do.js\n// module id = 433\n// module chunks = 0","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar filter_1 = require('../../operator/filter');\nObservable_1.Observable.prototype.filter = filter_1.filter;\n//# sourceMappingURL=filter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/filter.js\n// module id = 434\n// module chunks = 0","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar finally_1 = require('../../operator/finally');\nObservable_1.Observable.prototype.finally = finally_1._finally;\nObservable_1.Observable.prototype._finally = finally_1._finally;\n//# sourceMappingURL=finally.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/finally.js\n// module id = 435\n// module chunks = 0","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar first_1 = require('../../operator/first');\nObservable_1.Observable.prototype.first = first_1.first;\n//# sourceMappingURL=first.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/first.js\n// module id = 436\n// module chunks = 0","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar share_1 = require('../../operator/share');\nObservable_1.Observable.prototype.share = share_1.share;\n//# sourceMappingURL=share.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/share.js\n// module id = 437\n// module chunks = 0","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar startWith_1 = require('../../operator/startWith');\nObservable_1.Observable.prototype.startWith = startWith_1.startWith;\n//# sourceMappingURL=startWith.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/startWith.js\n// module id = 438\n// module chunks = 0","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar switchMap_1 = require('../../operator/switchMap');\nObservable_1.Observable.prototype.switchMap = switchMap_1.switchMap;\n//# sourceMappingURL=switchMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/switchMap.js\n// module id = 439\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ErrorObservable = (function (_super) {\n    __extends(ErrorObservable, _super);\n    function ErrorObservable(error, scheduler) {\n        _super.call(this);\n        this.error = error;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits an error notification.\n     *\n     * <span class=\"informal\">Just emits 'error', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/throw.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the error notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then emit an error.</caption>\n     * var result = Rx.Observable.throw(new Error('oops!')).startWith(7);\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @example <caption>Map and flattens numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x === 13 ?\n     *     Rx.Observable.throw('Thirteens are bad') :\n     *     Rx.Observable.of('a', 'b', 'c')\n     * );\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link of}\n     *\n     * @param {any} error The particular Error to pass to the error notification.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the error notification.\n     * @return {Observable} An error Observable: emits only the error notification\n     * using the given error argument.\n     * @static true\n     * @name throw\n     * @owner Observable\n     */\n    ErrorObservable.create = function (error, scheduler) {\n        return new ErrorObservable(error, scheduler);\n    };\n    ErrorObservable.dispatch = function (arg) {\n        var error = arg.error, subscriber = arg.subscriber;\n        subscriber.error(error);\n    };\n    ErrorObservable.prototype._subscribe = function (subscriber) {\n        var error = this.error;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ErrorObservable.dispatch, 0, {\n                error: error, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.error(error);\n        }\n    };\n    return ErrorObservable;\n}(Observable_1.Observable));\nexports.ErrorObservable = ErrorObservable;\n//# sourceMappingURL=ErrorObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/ErrorObservable.js\n// module id = 442\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar tryCatch_1 = require('../util/tryCatch');\nvar isFunction_1 = require('../util/isFunction');\nvar errorObject_1 = require('../util/errorObject');\nvar Subscription_1 = require('../Subscription');\nvar toString = Object.prototype.toString;\nfunction isNodeStyleEventEmmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isNodeList(sourceObj) {\n    return !!sourceObj && toString.call(sourceObj) === '[object NodeList]';\n}\nfunction isHTMLCollection(sourceObj) {\n    return !!sourceObj && toString.call(sourceObj) === '[object HTMLCollection]';\n}\nfunction isEventTarget(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromEventObservable = (function (_super) {\n    __extends(FromEventObservable, _super);\n    function FromEventObservable(sourceObj, eventName, selector, options) {\n        _super.call(this);\n        this.sourceObj = sourceObj;\n        this.eventName = eventName;\n        this.selector = selector;\n        this.options = options;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Creates an Observable that emits events of a specific type coming from the\n     * given event target.\n     *\n     * <span class=\"informal\">Creates an Observable from DOM events, or Node\n     * EventEmitter events or others.</span>\n     *\n     * <img src=\"./img/fromEvent.png\" width=\"100%\">\n     *\n     * Creates an Observable by attaching an event listener to an \"event target\",\n     * which may be an object with `addEventListener` and `removeEventListener`,\n     * a Node.js EventEmitter, a jQuery style EventEmitter, a NodeList from the\n     * DOM, or an HTMLCollection from the DOM. The event handler is attached when\n     * the output Observable is subscribed, and removed when the Subscription is\n     * unsubscribed.\n     *\n     * @example <caption>Emits clicks happening on the DOM document</caption>\n     * var clicks = Rx.Observable.fromEvent(document, 'click');\n     * clicks.subscribe(x => console.log(x));\n     *\n     * // Results in:\n     * // MouseEvent object logged to console everytime a click\n     * // occurs on the document.\n     *\n     * @see {@link from}\n     * @see {@link fromEventPattern}\n     *\n     * @param {EventTargetLike} target The DOMElement, event target, Node.js\n     * EventEmitter, NodeList or HTMLCollection to attach the event handler to.\n     * @param {string} eventName The event name of interest, being emitted by the\n     * `target`.\n     * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n     * @param {SelectorMethodSignature<T>} [selector] An optional function to\n     * post-process results. It takes the arguments from the event handler and\n     * should return a single value.\n     * @return {Observable<T>}\n     * @static true\n     * @name fromEvent\n     * @owner Observable\n     */\n    FromEventObservable.create = function (target, eventName, options, selector) {\n        if (isFunction_1.isFunction(options)) {\n            selector = options;\n            options = undefined;\n        }\n        return new FromEventObservable(target, eventName, selector, options);\n    };\n    FromEventObservable.setupSubscription = function (sourceObj, eventName, handler, subscriber, options) {\n        var unsubscribe;\n        if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {\n            for (var i = 0, len = sourceObj.length; i < len; i++) {\n                FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n            }\n        }\n        else if (isEventTarget(sourceObj)) {\n            var source_1 = sourceObj;\n            sourceObj.addEventListener(eventName, handler, options);\n            unsubscribe = function () { return source_1.removeEventListener(eventName, handler); };\n        }\n        else if (isJQueryStyleEventEmitter(sourceObj)) {\n            var source_2 = sourceObj;\n            sourceObj.on(eventName, handler);\n            unsubscribe = function () { return source_2.off(eventName, handler); };\n        }\n        else if (isNodeStyleEventEmmitter(sourceObj)) {\n            var source_3 = sourceObj;\n            sourceObj.addListener(eventName, handler);\n            unsubscribe = function () { return source_3.removeListener(eventName, handler); };\n        }\n        else {\n            throw new TypeError('Invalid event target');\n        }\n        subscriber.add(new Subscription_1.Subscription(unsubscribe));\n    };\n    FromEventObservable.prototype._subscribe = function (subscriber) {\n        var sourceObj = this.sourceObj;\n        var eventName = this.eventName;\n        var options = this.options;\n        var selector = this.selector;\n        var handler = selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            var result = tryCatch_1.tryCatch(selector).apply(void 0, args);\n            if (result === errorObject_1.errorObject) {\n                subscriber.error(errorObject_1.errorObject.e);\n            }\n            else {\n                subscriber.next(result);\n            }\n        } : function (e) { return subscriber.next(e); };\n        FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber, options);\n    };\n    return FromEventObservable;\n}(Observable_1.Observable));\nexports.FromEventObservable = FromEventObservable;\n//# sourceMappingURL=FromEventObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/FromEventObservable.js\n// module id = 444\n// module chunks = 0","\"use strict\";\nvar FromEventObservable_1 = require('./FromEventObservable');\nexports.fromEvent = FromEventObservable_1.FromEventObservable.create;\n//# sourceMappingURL=fromEvent.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/fromEvent.js\n// module id = 448\n// module chunks = 0","\"use strict\";\nvar ErrorObservable_1 = require('./ErrorObservable');\nexports._throw = ErrorObservable_1.ErrorObservable.create;\n//# sourceMappingURL=throw.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/throw.js\n// module id = 449\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar async_1 = require('../scheduler/async');\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source values, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * <img src=\"./img/auditTime.png\" width=\"100%\">\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.auditTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nfunction auditTime(duration, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new AuditTimeOperator(duration, scheduler));\n}\nexports.auditTime = auditTime;\nvar AuditTimeOperator = (function () {\n    function AuditTimeOperator(duration, scheduler) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n    }\n    AuditTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new AuditTimeSubscriber(subscriber, this.duration, this.scheduler));\n    };\n    return AuditTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AuditTimeSubscriber = (function (_super) {\n    __extends(AuditTimeSubscriber, _super);\n    function AuditTimeSubscriber(destination, duration, scheduler) {\n        _super.call(this, destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.hasValue = false;\n    }\n    AuditTimeSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, this));\n        }\n    };\n    AuditTimeSubscriber.prototype.clearThrottle = function () {\n        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = null;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    };\n    return AuditTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNext(subscriber) {\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=auditTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/auditTime.js\n// module id = 450\n// module chunks = 0","\"use strict\";\nvar isScheduler_1 = require('../util/isScheduler');\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar mergeAll_1 = require('./mergeAll');\n/* tslint:disable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins this Observable with multiple other Observables by subscribing to them\n * one at a time, starting with the source, and merging their results into the\n * output Observable. Will wait for each Observable to complete before moving\n * on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = timer.concat(sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = timer1.concat(timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {Observable} other An input Observable to concatenate after the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @method concat\n * @owner Observable\n */\nfunction concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return this.lift.call(concatStatic.apply(void 0, [this].concat(observables)));\n}\nexports.concat = concat;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins multiple Observables together by subscribing to them one at a time and\n * merging their results into the output Observable. Will wait for each\n * Observable to complete before moving on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {Observable} input1 An input Observable to concatenate with others.\n * @param {Observable} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nfunction concatStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var scheduler = null;\n    var args = observables;\n    if (isScheduler_1.isScheduler(args[observables.length - 1])) {\n        scheduler = args.pop();\n    }\n    if (scheduler === null && observables.length === 1) {\n        return observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(1));\n}\nexports.concatStatic = concatStatic;\n//# sourceMappingURL=concat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/concat.js\n// module id = 451\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/* tslint:disable:max-line-length */\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @method do\n * @name do\n * @owner Observable\n */\nfunction _do(nextOrObserver, error, complete) {\n    return this.lift(new DoOperator(nextOrObserver, error, complete));\n}\nexports._do = _do;\nvar DoOperator = (function () {\n    function DoOperator(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    DoOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    };\n    return DoOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DoSubscriber = (function (_super) {\n    __extends(DoSubscriber, _super);\n    function DoSubscriber(destination, nextOrObserver, error, complete) {\n        _super.call(this, destination);\n        var safeSubscriber = new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n        safeSubscriber.syncErrorThrowable = true;\n        this.add(safeSubscriber);\n        this.safeSubscriber = safeSubscriber;\n    }\n    DoSubscriber.prototype._next = function (value) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.next(value);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.next(value);\n        }\n    };\n    DoSubscriber.prototype._error = function (err) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.error(err);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.error(err);\n        }\n    };\n    DoSubscriber.prototype._complete = function () {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.complete();\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return DoSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=do.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/do.js\n// module id = 454\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Subscription_1 = require('../Subscription');\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback function to be called when source terminates.\n * @return {Observable} an Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nfunction _finally(callback) {\n    return this.lift(new FinallyOperator(callback));\n}\nexports._finally = _finally;\nvar FinallyOperator = (function () {\n    function FinallyOperator(callback) {\n        this.callback = callback;\n    }\n    FinallyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n    };\n    return FinallyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FinallySubscriber = (function (_super) {\n    __extends(FinallySubscriber, _super);\n    function FinallySubscriber(destination, callback) {\n        _super.call(this, destination);\n        this.add(new Subscription_1.Subscription(callback));\n    }\n    return FinallySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=finally.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/finally.js\n// module id = 456\n// module chunks = 0","\"use strict\";\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar ScalarObservable_1 = require('../observable/ScalarObservable');\nvar EmptyObservable_1 = require('../observable/EmptyObservable');\nvar concat_1 = require('./concat');\nvar isScheduler_1 = require('../util/isScheduler');\n/* tslint:disable:max-line-length */\n/**\n * Returns an Observable that emits the items in a specified Iterable before it begins to emit items emitted by the\n * source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {Values} an Iterable that contains the items you want the modified Observable to emit first.\n * @return {Observable} an Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nfunction startWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i - 0] = arguments[_i];\n    }\n    var scheduler = array[array.length - 1];\n    if (isScheduler_1.isScheduler(scheduler)) {\n        array.pop();\n    }\n    else {\n        scheduler = null;\n    }\n    var len = array.length;\n    if (len === 1) {\n        return concat_1.concatStatic(new ScalarObservable_1.ScalarObservable(array[0], scheduler), this);\n    }\n    else if (len > 1) {\n        return concat_1.concatStatic(new ArrayObservable_1.ArrayObservable(array, scheduler), this);\n    }\n    else {\n        return concat_1.concatStatic(new EmptyObservable_1.EmptyObservable(scheduler), this);\n    }\n}\nexports.startWith = startWith;\n//# sourceMappingURL=startWith.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/startWith.js\n// module id = 462\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/* tslint:disable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): Observable} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nfunction switchMap(project, resultSelector) {\n    return this.lift(new SwitchMapOperator(project, resultSelector));\n}\nexports.switchMap = switchMap;\nvar SwitchMapOperator = (function () {\n    function SwitchMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapSubscriber = (function (_super) {\n    __extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.index = 0;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, result, value, index));\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=switchMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/switchMap.js\n// module id = 463\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('../Subscription');\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription_1.Subscription));\nexports.Action = Action;\n//# sourceMappingURL=Action.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/Action.js\n// module id = 464\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Action_1 = require('./Action');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // clear the interval id\n        return root_1.root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.delay = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n    };\n    return AsyncAction;\n}(Action_1.Action));\nexports.AsyncAction = AsyncAction;\n//# sourceMappingURL=AsyncAction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/AsyncAction.js\n// module id = 465\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Scheduler_1 = require('../Scheduler');\nvar AsyncScheduler = (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler_1.Scheduler));\nexports.AsyncScheduler = AsyncScheduler;\n//# sourceMappingURL=AsyncScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/AsyncScheduler.js\n// module id = 466\n// module chunks = 0","\"use strict\";\nvar AsyncAction_1 = require('./AsyncAction');\nvar AsyncScheduler_1 = require('./AsyncScheduler');\nexports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);\n//# sourceMappingURL=async.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/async.js\n// module id = 467\n// module chunks = 0","\n        var result = require(\"!!../../node_modules/css-loader/index.js?url=false!./app.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 470\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js?url=false!./header.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/basic_components/header/header.component.css\n// module id = 471\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js?url=false!./image.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/basic_components/image/image.component.css\n// module id = 472\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js?url=false!./notification.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/basic_components/notification/notification.component.css\n// module id = 473\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js?url=false!./price.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/basic_components/price/price.component.css\n// module id = 474\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js?url=false!./contacts.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/contacts/contacts.component.css\n// module id = 475\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js?url=false!./details.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/details/details.component.css\n// module id = 476\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js?url=false!./home.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/home/home.component.css\n// module id = 477\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js?url=false!./page.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/page/page.component.css\n// module id = 478\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js?url=false!./page_not_found.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/page_not_found/page_not_found.component.css\n// module id = 479\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js?url=false!./search.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/search/search.component.css\n// module id = 480\n// module chunks = 0","\n        var result = require(\"!!../../node_modules/css-loader/index.js?url=false!./grid.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/grid.css\n// module id = 481\n// module chunks = 0","\n        var result = require(\"!!../../node_modules/css-loader/index.js?url=false!./theme.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/theme.css\n// module id = 482\n// module chunks = 0","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\n\nimport { AppModule } from './app/app.module';\n\nif ( process.env.ENV === 'production' ) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/main.ts"],"sourceRoot":""}